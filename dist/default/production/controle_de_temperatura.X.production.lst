

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Oct 05 23:26:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Version 2.20
    68                           ; Generated 12/02/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4550 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102                           	psect	idataCOMRAM
   103  00419A                     __pidataCOMRAM:
   104                           	callstack 0
   105                           
   106                           ;initializer for _temperaturaMinima
   107  00419A  0000               	dw	0
   108  00419C  41C8               	dw	16840
   109                           
   110                           ;initializer for _temperaturaMaxima
   111  00419E  0000               	dw	0
   112  0041A0  4248               	dw	16968
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _ADCON1	set	4033
   115  0000                     _TRISE	set	3990
   116  0000                     _TRISD	set	3989
   117  0000                     _T0CON	set	4053
   118  0000                     _PORTAbits	set	3968
   119  0000                     _TMR0L	set	4054
   120  0000                     _INTCONbits	set	4082
   121  0000                     _INTCON3bits	set	4080
   122  0000                     _PORTD	set	3971
   123  0000                     _PORTEbits	set	3972
   124                           
   125                           	psect	smallconst
   126  000800                     __psmallconst:
   127                           	callstack 0
   128  000800  00                 	db	0
   129  000801                     STR_2:
   130  000801  43                 	db	67	;'C'
   131  000802  54                 	db	84	;'T'
   132  000803  52                 	db	82	;'R'
   133  000804  4C                 	db	76	;'L'
   134  000805  20                 	db	32
   135  000806  54                 	db	84	;'T'
   136  000807  65                 	db	101	;'e'
   137  000808  6D                 	db	109	;'m'
   138  000809  70                 	db	112	;'p'
   139  00080A  65                 	db	101	;'e'
   140  00080B  72                 	db	114	;'r'
   141  00080C  61                 	db	97	;'a'
   142  00080D  74                 	db	116	;'t'
   143  00080E  75                 	db	117	;'u'
   144  00080F  72                 	db	114	;'r'
   145  000810  61                 	db	97	;'a'
   146  000811  00                 	db	0
   147  000812                     STR_1:
   148  000812  45                 	db	69	;'E'
   149  000813  52                 	db	82	;'R'
   150  000814  52                 	db	82	;'R'
   151  000815  4F                 	db	79	;'O'
   152  000816  20                 	db	32
   153  000817  54                 	db	84	;'T'
   154  000818  65                 	db	101	;'e'
   155  000819  6D                 	db	109	;'m'
   156  00081A  70                 	db	112	;'p'
   157  00081B  65                 	db	101	;'e'
   158  00081C  72                 	db	114	;'r'
   159  00081D  61                 	db	97	;'a'
   160  00081E  74                 	db	116	;'t'
   161  00081F  75                 	db	117	;'u'
   162  000820  72                 	db	114	;'r'
   163  000821  61                 	db	97	;'a'
   164  000822  00                 	db	0
   165  000823                     STR_4:
   166  000823  25                 	db	37
   167  000824  33                 	db	51	;'3'
   168  000825  2E                 	db	46
   169  000826  32                 	db	50	;'2'
   170  000827  66                 	db	102	;'f'
   171  000828  00                 	db	0
   172  000829                     STR_5:
   173  000829  49                 	db	73	;'I'
   174  00082A  4E                 	db	78	;'N'
   175  00082B  46                 	db	70	;'F'
   176  00082C  00                 	db	0
   177  00082D                     STR_9:
   178  00082D  4E                 	db	78	;'N'
   179  00082E  41                 	db	65	;'A'
   180  00082F  4E                 	db	78	;'N'
   181  000830  00                 	db	0
   182  000831                     STR_6:
   183  000831  69                 	db	105	;'i'
   184  000832  6E                 	db	110	;'n'
   185  000833  66                 	db	102	;'f'
   186  000834  00                 	db	0
   187  000835                     STR_10:
   188  000835  6E                 	db	110	;'n'
   189  000836  61                 	db	97	;'a'
   190  000837  6E                 	db	110	;'n'
   191  000838  00                 	db	0
   192  000839                     STR_13:
   193  000839  6C                 	db	108	;'l'
   194  00083A  66                 	db	102	;'f'
   195  00083B  00                 	db	0
   196  00083C  00                 	db	0	; dummy byte at the end
   197  0000                     
   198                           ; #config settings
   199                           
   200                           	psect	cinit
   201  003E34                     __pcinit:
   202                           	callstack 0
   203  003E34                     start_initialization:
   204                           	callstack 0
   205  003E34                     __initialization:
   206                           	callstack 0
   207                           
   208                           ; Initialize objects allocated to COMRAM (8 bytes)
   209                           ; load TBLPTR registers with __pidataCOMRAM
   210  003E34  0E9A               	movlw	low __pidataCOMRAM
   211  003E36  6EF6               	movwf	tblptrl,c
   212  003E38  0E41               	movlw	high __pidataCOMRAM
   213  003E3A  6EF7               	movwf	tblptrh,c
   214  003E3C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   215  003E3E  6EF8               	movwf	tblptru,c
   216  003E40  EE00  F039         	lfsr	0,__pdataCOMRAM
   217  003E44  EE10 F008          	lfsr	1,8
   218  003E48                     copy_data0:
   219  003E48  0009               	tblrd		*+
   220  003E4A  CFF5 FFEE          	movff	tablat,postinc0
   221  003E4E  50E5               	movf	postdec1,w,c
   222  003E50  50E1               	movf	fsr1l,w,c
   223  003E52  E1FA               	bnz	copy_data0
   224                           
   225                           ; Clear objects allocated to BANK1 (80 bytes)
   226  003E54  EE01  F000         	lfsr	0,__pbssBANK1
   227  003E58  0E50               	movlw	80
   228  003E5A                     clear_0:
   229  003E5A  6AEE               	clrf	postinc0,c
   230  003E5C  06E8               	decf	wreg,f,c
   231  003E5E  E1FD               	bnz	clear_0
   232                           
   233                           ; Clear objects allocated to BANK0 (16 bytes)
   234  003E60  EE00  F0EF         	lfsr	0,__pbssBANK0
   235  003E64  0E10               	movlw	16
   236  003E66                     clear_1:
   237  003E66  6AEE               	clrf	postinc0,c
   238  003E68  06E8               	decf	wreg,f,c
   239  003E6A  E1FD               	bnz	clear_1
   240                           
   241                           ; Clear objects allocated to COMRAM (14 bytes)
   242  003E6C  EE00  F02B         	lfsr	0,__pbssCOMRAM
   243  003E70  0E0E               	movlw	14
   244  003E72                     clear_2:
   245  003E72  6AEE               	clrf	postinc0,c
   246  003E74  06E8               	decf	wreg,f,c
   247  003E76  E1FD               	bnz	clear_2
   248  003E78                     end_of_initialization:
   249                           	callstack 0
   250  003E78                     __end_of__initialization:
   251                           	callstack 0
   252  003E78  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253  003E7A  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254  003E7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  003E7E  6EF8               	movwf	tblptru,c
   256  003E80  0100               	movlb	0
   257  003E82  EF5C  F01A         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMRAM
   260  00002B                     __pbssCOMRAM:
   261                           	callstack 0
   262  00002B                     floorf@F527:
   263                           	callstack 0
   264  00002B                     	ds	4
   265  00002F                     ___fpclassifyf@F465:
   266                           	callstack 0
   267  00002F                     	ds	4
   268  000033                     _temperatura:
   269                           	callstack 0
   270  000033                     	ds	4
   271  000037                     _flags:
   272                           	callstack 0
   273  000037                     	ds	2
   274                           
   275                           	psect	dataCOMRAM
   276  000039                     __pdataCOMRAM:
   277                           	callstack 0
   278  000039                     _temperaturaMinima:
   279                           	callstack 0
   280  000039                     	ds	4
   281  00003D                     _temperaturaMaxima:
   282                           	callstack 0
   283  00003D                     	ds	4
   284                           
   285                           	psect	bssBANK0
   286  0000EF                     __pbssBANK0:
   287                           	callstack 0
   288  0000EF                     _nout:
   289                           	callstack 0
   290  0000EF                     	ds	2
   291  0000F1                     _width:
   292                           	callstack 0
   293  0000F1                     	ds	2
   294  0000F3                     _prec:
   295                           	callstack 0
   296  0000F3                     	ds	2
   297  0000F5                     _encerrar:
   298                           	callstack 0
   299  0000F5                     	ds	2
   300  0000F7                     _temperature:
   301                           	callstack 0
   302  0000F7                     	ds	8
   303                           
   304                           	psect	bssBANK1
   305  000100                     __pbssBANK1:
   306                           	callstack 0
   307  000100                     _dbuf:
   308                           	callstack 0
   309  000100                     	ds	80
   310                           
   311                           	psect	cstackBANK1
   312  000150                     __pcstackBANK1:
   313                           	callstack 0
   314  000150                     sprintf@ap:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x0
   318  000150                     	ds	2
   319  000152                     sprintf@f:
   320                           	callstack 0
   321                           
   322                           ; 6 bytes @ 0x2
   323  000152                     	ds	6
   324                           
   325                           	psect	cstackBANK0
   326  000060                     __pcstackBANK0:
   327                           	callstack 0
   328  000060                     ??_atoi:
   329  000060                     ___fladd@signs:
   330                           	callstack 0
   331  000060                     ___flmul@sign:
   332                           	callstack 0
   333  000060                     imprime_lcd@tamanho:
   334                           	callstack 0
   335  000060                     ___fpclassifyf@e:
   336                           	callstack 0
   337  000060                     fputs@s:
   338                           	callstack 0
   339  000060                     _tolower$1102:
   340                           	callstack 0
   341  000060                     ___fldiv@rem:
   342                           	callstack 0
   343                           
   344                           ; 4 bytes @ 0x0
   345  000060                     	ds	1
   346  000061                     ___fladd@aexp:
   347                           	callstack 0
   348  000061                     ___flmul@aexp:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x1
   352  000061                     	ds	1
   353  000062                     ___fladd@bexp:
   354                           	callstack 0
   355  000062                     imprime_lcd@indice:
   356                           	callstack 0
   357  000062                     fputs@fp:
   358                           	callstack 0
   359  000062                     ___flmul@grs:
   360                           	callstack 0
   361  000062                     ___fpclassifyf@u:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x2
   365  000062                     	ds	1
   366  000063                     ___fladd@grs:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x3
   370  000063                     	ds	1
   371  000064                     ?_pad:
   372                           	callstack 0
   373  000064                     ___fldiv@sign:
   374                           	callstack 0
   375  000064                     pad@fp:
   376                           	callstack 0
   377  000064                     atoi@neg:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x4
   381  000064                     	ds	1
   382  000065                     ___fldiv@new_exp:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x5
   386  000065                     	ds	1
   387  000066                     ___flmul@bexp:
   388                           	callstack 0
   389  000066                     pad@buf:
   390                           	callstack 0
   391  000066                     _atoi$1007:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x6
   395  000066                     	ds	1
   396  000067                     ___fldiv@grs:
   397                           	callstack 0
   398  000067                     ___flmul@prod:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x7
   402  000067                     	ds	1
   403  000068                     pad@p:
   404                           	callstack 0
   405  000068                     _atoi$1009:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x8
   409  000068                     	ds	2
   410  00006A                     ??_pad:
   411  00006A                     _atoi$1008:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0xA
   415  00006A                     	ds	1
   416  00006B                     ___fldiv@bexp:
   417                           	callstack 0
   418  00006B                     ___flmul@temp:
   419                           	callstack 0
   420  00006B                     pad@i:
   421                           	callstack 0
   422  00006B                     atoi@n:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0xB
   426  00006B                     	ds	1
   427  00006C                     ___fldiv@aexp:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0xC
   431  00006C                     	ds	1
   432  00006D                     ?___flsub:
   433                           	callstack 0
   434  00006D                     ?_floorf:
   435                           	callstack 0
   436  00006D                     pad@w:
   437                           	callstack 0
   438  00006D                     ___flge@ff1:
   439                           	callstack 0
   440  00006D                     ___flsub@b:
   441                           	callstack 0
   442  00006D                     floorf@x:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0xD
   446  00006D                     	ds	4
   447  000071                     ??_floorf:
   448  000071                     ___flge@ff2:
   449                           	callstack 0
   450  000071                     ___flsub@a:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x11
   454  000071                     	ds	4
   455  000075                     ??___flge:
   456                           
   457                           ; 1 bytes @ 0x15
   458  000075                     	ds	2
   459  000077                     floorf@m:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x17
   463  000077                     	ds	4
   464  00007B                     floorf@e:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x1B
   468  00007B                     	ds	2
   469  00007D                     floorf@u:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x1D
   473  00007D                     	ds	4
   474  000081                     ?_efgtoa:
   475                           	callstack 0
   476  000081                     efgtoa@fp:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x21
   480  000081                     	ds	2
   481  000083                     efgtoa@f:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0x23
   485  000083                     	ds	4
   486  000087                     efgtoa@c:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x27
   490  000087                     	ds	1
   491  000088                     ??_efgtoa:
   492                           
   493                           ; 1 bytes @ 0x28
   494  000088                     	ds	5
   495  00008D                     _efgtoa$942:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x2D
   499  00008D                     	ds	2
   500  00008F                     _efgtoa$943:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x2F
   504  00008F                     	ds	2
   505  000091                     _efgtoa$948:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x31
   509  000091                     	ds	2
   510  000093                     _efgtoa$952:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x33
   514  000093                     	ds	2
   515  000095                     _efgtoa$953:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x35
   519  000095                     	ds	2
   520  000097                     _efgtoa$954:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x37
   524  000097                     	ds	2
   525  000099                     efgtoa@t:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x39
   529  000099                     	ds	2
   530  00009B                     efgtoa@pp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x3B
   534  00009B                     	ds	2
   535  00009D                     efgtoa@ne:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x3D
   539  00009D                     	ds	2
   540  00009F                     efgtoa@m:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x3F
   544  00009F                     	ds	2
   545  0000A1                     efgtoa@ou:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x41
   549  0000A1                     	ds	4
   550  0000A5                     efgtoa@d:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x45
   554  0000A5                     	ds	2
   555  0000A7                     efgtoa@sign:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x47
   559  0000A7                     	ds	2
   560  0000A9                     efgtoa@p:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x49
   564  0000A9                     	ds	2
   565  0000AB                     efgtoa@w:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x4B
   569  0000AB                     	ds	2
   570  0000AD                     efgtoa@nmode:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x4D
   574  0000AD                     	ds	1
   575  0000AE                     efgtoa@mode:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x4E
   579  0000AE                     	ds	1
   580  0000AF                     efgtoa@h:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0x4F
   584  0000AF                     	ds	4
   585  0000B3                     efgtoa@l:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x53
   589  0000B3                     	ds	4
   590  0000B7                     efgtoa@i:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x57
   594  0000B7                     	ds	2
   595  0000B9                     efgtoa@g:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x59
   599  0000B9                     	ds	4
   600  0000BD                     efgtoa@e:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x5D
   604  0000BD                     	ds	2
   605  0000BF                     efgtoa@n:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x5F
   609  0000BF                     	ds	2
   610  0000C1                     efgtoa@u:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x61
   614  0000C1                     	ds	4
   615  0000C5                     ?_vfpfcnvrt:
   616                           	callstack 0
   617  0000C5                     vfpfcnvrt@fp:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x65
   621  0000C5                     	ds	2
   622  0000C7                     vfpfcnvrt@fmt:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x67
   626  0000C7                     	ds	2
   627  0000C9                     vfpfcnvrt@ap:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x69
   631  0000C9                     	ds	2
   632  0000CB                     ??_vfpfcnvrt:
   633                           
   634                           ; 1 bytes @ 0x6B
   635  0000CB                     	ds	4
   636  0000CF                     _vfpfcnvrt$968:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x6F
   640  0000CF                     	ds	2
   641  0000D1                     _vfpfcnvrt$969:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x71
   645  0000D1                     	ds	2
   646  0000D3                     _vfpfcnvrt$973:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x73
   650  0000D3                     	ds	2
   651  0000D5                     vfpfcnvrt@f:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x75
   655  0000D5                     	ds	4
   656  0000D9                     vfpfcnvrt@ct:
   657                           	callstack 0
   658                           
   659                           ; 3 bytes @ 0x79
   660  0000D9                     	ds	3
   661  0000DC                     vfpfcnvrt@c:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x7C
   665  0000DC                     	ds	1
   666  0000DD                     ?_vfprintf:
   667                           	callstack 0
   668  0000DD                     vfprintf@fp:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x7D
   672  0000DD                     	ds	2
   673  0000DF                     vfprintf@fmt:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x7F
   677  0000DF                     	ds	2
   678  0000E1                     vfprintf@ap:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x81
   682  0000E1                     	ds	2
   683  0000E3                     vfprintf@cfmt:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x83
   687  0000E3                     	ds	2
   688  0000E5                     ?_sprintf:
   689                           	callstack 0
   690  0000E5                     sprintf@s:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x85
   694  0000E5                     	ds	2
   695  0000E7                     sprintf@fmt:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x87
   699  0000E7                     	ds	6
   700  0000ED                     ??_main:
   701                           
   702                           ; 1 bytes @ 0x8D
   703  0000ED                     	ds	2
   704                           
   705                           	psect	cstackCOMRAM
   706  000001                     __pcstackCOMRAM:
   707                           	callstack 0
   708  000001                     ?i2_strlen:
   709                           	callstack 0
   710  000001                     ?i2___fladd:
   711                           	callstack 0
   712  000001                     i2comando_lcd@comando:
   713                           	callstack 0
   714  000001                     i2dado_lcd@dado:
   715                           	callstack 0
   716  000001                     i2strlen@s:
   717                           	callstack 0
   718  000001                     i2___flge@ff1:
   719                           	callstack 0
   720  000001                     i2___fladd@b:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x0
   724  000001                     	ds	2
   725  000003                     ??i2_comando_lcd:
   726  000003                     ??i2_dado_lcd:
   727  000003                     i2strlen@a:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x2
   731  000003                     	ds	1
   732  000004                     
   733                           ; 1 bytes @ 0x3
   734  000004                     	ds	1
   735  000005                     i2imprime_lcd@frase:
   736                           	callstack 0
   737  000005                     i2___flge@ff2:
   738                           	callstack 0
   739  000005                     i2___fladd@a:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x4
   743  000005                     	ds	2
   744  000007                     ??i2_imprime_lcd:
   745                           
   746                           ; 1 bytes @ 0x6
   747  000007                     	ds	2
   748  000009                     ??i2___flge:
   749  000009                     ??i2___fladd:
   750                           
   751                           ; 1 bytes @ 0x8
   752  000009                     	ds	1
   753  00000A                     i2imprime_lcd@tamanho:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x9
   757  00000A                     	ds	2
   758  00000C                     i2imprime_lcd@indice:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0xB
   762  00000C                     	ds	1
   763  00000D                     i2___fladd@signs:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0xC
   767  00000D                     	ds	1
   768  00000E                     ??_alerta:
   769  00000E                     i2___fladd@aexp:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0xD
   773  00000E                     	ds	1
   774  00000F                     i2___fladd@bexp:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0xE
   778  00000F                     	ds	1
   779  000010                     i2___fladd@grs:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0xF
   783  000010                     	ds	1
   784  000011                     ?i2___flsub:
   785                           	callstack 0
   786  000011                     i2___flsub@b:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x10
   790  000011                     	ds	4
   791  000015                     i2___flsub@a:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x14
   795  000015                     	ds	4
   796  000019                     ??_isr:
   797  000019                     
   798                           ; 1 bytes @ 0x18
   799  000019                     	ds	6
   800  00001F                     ?_strlen:
   801                           	callstack 0
   802  00001F                     ?___fpclassifyf:
   803                           	callstack 0
   804  00001F                     ?_isupper:
   805                           	callstack 0
   806  00001F                     ?_isdigit:
   807                           	callstack 0
   808  00001F                     ?_strncmp:
   809                           	callstack 0
   810  00001F                     ?_isspace:
   811                           	callstack 0
   812  00001F                     ?___wmul:
   813                           	callstack 0
   814  00001F                     ?___awdiv:
   815                           	callstack 0
   816  00001F                     ?___awmod:
   817                           	callstack 0
   818  00001F                     ?___fladd:
   819                           	callstack 0
   820  00001F                     ?___fldiv:
   821                           	callstack 0
   822  00001F                     ?___flmul:
   823                           	callstack 0
   824  00001F                     ?___flneg:
   825                           	callstack 0
   826  00001F                     ?___fltol:
   827                           	callstack 0
   828  00001F                     comando_lcd@comando:
   829                           	callstack 0
   830  00001F                     dado_lcd@dado:
   831                           	callstack 0
   832  00001F                     ___wmul@multiplier:
   833                           	callstack 0
   834  00001F                     ___awdiv@dividend:
   835                           	callstack 0
   836  00001F                     ___awmod@dividend:
   837                           	callstack 0
   838  00001F                     isdigit@c:
   839                           	callstack 0
   840  00001F                     isspace@c:
   841                           	callstack 0
   842  00001F                     isupper@c:
   843                           	callstack 0
   844  00001F                     fputc@c:
   845                           	callstack 0
   846  00001F                     strcpy@dest:
   847                           	callstack 0
   848  00001F                     strlen@s:
   849                           	callstack 0
   850  00001F                     strncmp@_l:
   851                           	callstack 0
   852  00001F                     ___fleq@ff1:
   853                           	callstack 0
   854  00001F                     ___flneg@f1:
   855                           	callstack 0
   856  00001F                     ___fltol@f1:
   857                           	callstack 0
   858  00001F                     ___fladd@b:
   859                           	callstack 0
   860  00001F                     ___fldiv@b:
   861                           	callstack 0
   862  00001F                     ___flmul@b:
   863                           	callstack 0
   864  00001F                     ___fpclassifyf@x:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x1E
   868  00001F                     	ds	2
   869  000021                     ??_isupper:
   870  000021                     ??_isdigit:
   871  000021                     ??_isspace:
   872  000021                     ??_comando_lcd:
   873  000021                     ??_dado_lcd:
   874  000021                     ___wmul@multiplicand:
   875                           	callstack 0
   876  000021                     ___awdiv@divisor:
   877                           	callstack 0
   878  000021                     ___awmod@divisor:
   879                           	callstack 0
   880  000021                     fputc@fp:
   881                           	callstack 0
   882  000021                     strcpy@src:
   883                           	callstack 0
   884  000021                     strlen@a:
   885                           	callstack 0
   886  000021                     strncmp@_r:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x20
   890  000021                     	ds	1
   891  000022                     
   892                           ; 1 bytes @ 0x21
   893  000022                     	ds	1
   894  000023                     ??_fputc:
   895  000023                     ??___fpclassifyf:
   896  000023                     ??_strcpy:
   897  000023                     ??___fltol:
   898  000023                     ___awdiv@counter:
   899                           	callstack 0
   900  000023                     ___awmod@counter:
   901                           	callstack 0
   902  000023                     imprime_lcd@frase:
   903                           	callstack 0
   904  000023                     ___wmul@product:
   905                           	callstack 0
   906  000023                     strncmp@n:
   907                           	callstack 0
   908  000023                     ___fleq@ff2:
   909                           	callstack 0
   910  000023                     ___fladd@a:
   911                           	callstack 0
   912  000023                     ___fldiv@a:
   913                           	callstack 0
   914  000023                     ___flmul@a:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x22
   918  000023                     	ds	1
   919  000024                     ___awdiv@sign:
   920                           	callstack 0
   921  000024                     ___awmod@sign:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x23
   925  000024                     	ds	1
   926  000025                     ??_strncmp:
   927  000025                     ??_imprime_lcd:
   928  000025                     ?_tolower:
   929                           	callstack 0
   930  000025                     _isspace$1038:
   931                           	callstack 0
   932  000025                     ___awdiv@quotient:
   933                           	callstack 0
   934  000025                     strcpy@s:
   935                           	callstack 0
   936  000025                     tolower@c:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x24
   940  000025                     	ds	1
   941  000026                     ?_atoi:
   942                           	callstack 0
   943  000026                     atoi@s:
   944                           	callstack 0
   945  000026                     strncmp@l:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x25
   949  000026                     	ds	1
   950  000027                     ??___fladd:
   951  000027                     ??___fldiv:
   952  000027                     ??___flmul:
   953  000027                     ??_tolower:
   954  000027                     ??___fleq:
   955  000027                     ___fltol@sign1:
   956                           	callstack 0
   957  000027                     strcpy@d:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x26
   961  000027                     	ds	1
   962  000028                     ___fltol@exp1:
   963                           	callstack 0
   964  000028                     fputs@c:
   965                           	callstack 0
   966  000028                     strncmp@r:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x27
   970  000028                     	ds	1
   971  000029                     fputs@i:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x28
   975  000029                     	ds	2
   976  00002B                     
   977                           ; 1 bytes @ 0x2A
   978 ;;
   979 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   980 ;;
   981 ;; *************** function _main *****************
   982 ;; Defined at:
   983 ;;		line 83 in file "lcd.frase.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  2   80[None  ] int 
   990 ;; Registers used:
   991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   997 ;;      Params:         0       0       0       0       0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0
   999 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1000 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1001 ;;Total ram usage:        2 bytes
  1002 ;; Hardware stack levels required when called: 12
  1003 ;; This function calls:
  1004 ;;		_comando_lcd
  1005 ;;		_imprime_lcd
  1006 ;;		_limpa_lcd
  1007 ;;		_sprintf
  1008 ;; This function is called by:
  1009 ;;		Startup code after reset
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text0
  1014  0034B8                     __ptext0:
  1015                           	callstack 0
  1016  0034B8                     _main:
  1017                           	callstack 19
  1018  0034B8                     
  1019                           ;lcd.frase.c: 84:     PORTAbits.RA4 = 0;
  1020  0034B8  9880               	bcf	128,4,c	;volatile
  1021                           
  1022                           ;lcd.frase.c: 86:     INTCONbits.GIE =1;
  1023  0034BA  8EF2               	bsf	242,7,c	;volatile
  1024                           
  1025                           ;lcd.frase.c: 87:     INTCONbits.TMR0IE = 1;
  1026  0034BC  8AF2               	bsf	242,5,c	;volatile
  1027  0034BE                     
  1028                           ;lcd.frase.c: 89:  T0CON = 0B11000111;
  1029  0034BE  0EC7               	movlw	199
  1030  0034C0  6ED5               	movwf	213,c	;volatile
  1031                           
  1032                           ;lcd.frase.c: 90:     TMR0L = 5;
  1033  0034C2  0E05               	movlw	5
  1034  0034C4  6ED6               	movwf	214,c	;volatile
  1035                           
  1036                           ;lcd.frase.c: 92:     TRISD = 0;
  1037  0034C6  0E00               	movlw	0
  1038  0034C8  6E95               	movwf	149,c	;volatile
  1039                           
  1040                           ;lcd.frase.c: 93:     TRISE = 0;
  1041  0034CA  0E00               	movlw	0
  1042  0034CC  6E96               	movwf	150,c	;volatile
  1043                           
  1044                           ;lcd.frase.c: 94:     ADCON1 = 15;
  1045  0034CE  0E0F               	movlw	15
  1046  0034D0  6EC1               	movwf	193,c	;volatile
  1047  0034D2                     
  1048                           ;lcd.frase.c: 96:     INTCON3bits.INT1IE = 1;
  1049  0034D2  86F0               	bsf	240,3,c	;volatile
  1050  0034D4                     
  1051                           ;lcd.frase.c: 97:     INTCON3bits.INT1IF = 0;
  1052  0034D4  90F0               	bcf	240,0,c	;volatile
  1053  0034D6                     
  1054                           ;lcd.frase.c: 98:     INTCON2bits.INTEDG1 = 1;
  1055  0034D6  8AF1               	bsf	241,5,c	;volatile
  1056  0034D8                     
  1057                           ;lcd.frase.c: 100:     comando_lcd(0b00111100);
  1058  0034D8  0E00               	movlw	0
  1059  0034DA  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1060  0034DC  0E3C               	movlw	60
  1061  0034DE  6E1F               	movwf	comando_lcd@comando^0,c
  1062  0034E0  EC8B  F020         	call	_comando_lcd	;wreg free
  1063  0034E4                     
  1064                           ;lcd.frase.c: 101:     comando_lcd(0b00001100);
  1065  0034E4  0E00               	movlw	0
  1066  0034E6  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1067  0034E8  0E0C               	movlw	12
  1068  0034EA  6E1F               	movwf	comando_lcd@comando^0,c
  1069  0034EC  EC8B  F020         	call	_comando_lcd	;wreg free
  1070  0034F0                     
  1071                           ;lcd.frase.c: 103:     limpa_lcd( );
  1072  0034F0  ECBF  F020         	call	_limpa_lcd	;wreg free
  1073  0034F4                     
  1074                           ;lcd.frase.c: 105:     comando_lcd(128);
  1075  0034F4  0E00               	movlw	0
  1076  0034F6  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1077  0034F8  0E80               	movlw	128
  1078  0034FA  6E1F               	movwf	comando_lcd@comando^0,c
  1079  0034FC  EC8B  F020         	call	_comando_lcd	;wreg free
  1080  003500                     
  1081                           ;lcd.frase.c: 106:     imprime_lcd("CTRL Temperatura");
  1082  003500  0E01               	movlw	low STR_2
  1083  003502  6E23               	movwf	imprime_lcd@frase^0,c
  1084  003504  0E08               	movlw	high STR_2
  1085  003506  6E24               	movwf	(imprime_lcd@frase+1)^0,c
  1086  003508  ECDE  F01D         	call	_imprime_lcd	;wreg free
  1087  00350C                     
  1088                           ;lcd.frase.c: 107:     temperatura = 40.0;
  1089  00350C  0E00               	movlw	0
  1090  00350E  6E33               	movwf	_temperatura^0,c
  1091  003510  0E00               	movlw	0
  1092  003512  6E34               	movwf	(_temperatura+1)^0,c
  1093  003514  0E20               	movlw	32
  1094  003516  6E35               	movwf	(_temperatura+2)^0,c
  1095  003518  0E42               	movlw	66
  1096  00351A  6E36               	movwf	(_temperatura+3)^0,c
  1097  00351C                     l5779:
  1098                           
  1099                           ;lcd.frase.c: 110:         limpa_lcd( );
  1100  00351C  ECBF  F020         	call	_limpa_lcd	;wreg free
  1101  003520                     
  1102                           ;lcd.frase.c: 111:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1103  003520  0E06               	movlw	6
  1104  003522  0100               	movlb	0	; () banked
  1105  003524  6FEE               	movwf	(??_main+1)& (0+255),b
  1106  003526  0E13               	movlw	19
  1107  003528  6FED               	movwf	??_main& (0+255),b
  1108  00352A  0EAD               	movlw	173
  1109  00352C                     u8237:
  1110  00352C  2EE8               	decfsz	wreg,f,c
  1111  00352E  D7FE               	bra	u8237
  1112  003530  2FED               	decfsz	??_main& (0+255),f,b
  1113  003532  D7FC               	bra	u8237
  1114  003534  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1115  003536  D7FA               	bra	u8237
  1116  003538  D000               	nop2	
  1117  00353A                     
  1118                           ;lcd.frase.c: 112:         comando_lcd(128);
  1119  00353A  0E00               	movlw	0
  1120  00353C  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1121  00353E  0E80               	movlw	128
  1122  003540  6E1F               	movwf	comando_lcd@comando^0,c
  1123  003542  EC8B  F020         	call	_comando_lcd	;wreg free
  1124  003546                     
  1125                           ;lcd.frase.c: 113:         imprime_lcd("Temperatura");
  1126  003546  0E06               	movlw	low (STR_2+5)
  1127  003548  6E23               	movwf	imprime_lcd@frase^0,c
  1128  00354A  0E08               	movlw	high (STR_2+5)
  1129  00354C  6E24               	movwf	(imprime_lcd@frase+1)^0,c
  1130  00354E  ECDE  F01D         	call	_imprime_lcd	;wreg free
  1131  003552                     
  1132                           ;lcd.frase.c: 115:         comando_lcd(192);
  1133  003552  0E00               	movlw	0
  1134  003554  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1135  003556  0EC0               	movlw	192
  1136  003558  6E1F               	movwf	comando_lcd@comando^0,c
  1137  00355A  EC8B  F020         	call	_comando_lcd	;wreg free
  1138  00355E                     
  1139                           ;lcd.frase.c: 116:         sprintf(temperature, "%3.2f", temperatura);
  1140  00355E  0EF7               	movlw	low _temperature
  1141  003560  0100               	movlb	0	; () banked
  1142  003562  6FE5               	movwf	sprintf@s& (0+255),b
  1143  003564  0E00               	movlw	high _temperature
  1144  003566  6FE6               	movwf	(sprintf@s+1)& (0+255),b
  1145  003568  0E23               	movlw	low STR_4
  1146  00356A  6FE7               	movwf	sprintf@fmt& (0+255),b
  1147  00356C  0E08               	movlw	high STR_4
  1148  00356E  6FE8               	movwf	(sprintf@fmt+1)& (0+255),b
  1149  003570  C033  F0E9         	movff	_temperatura,?_sprintf+4
  1150  003574  C034  F0EA         	movff	_temperatura+1,?_sprintf+5
  1151  003578  C035  F0EB         	movff	_temperatura+2,?_sprintf+6
  1152  00357C  C036  F0EC         	movff	_temperatura+3,?_sprintf+7
  1153  003580  ECED  F01E         	call	_sprintf	;wreg free
  1154  003584                     
  1155                           ;lcd.frase.c: 117:         imprime_lcd(temperature);
  1156  003584  0EF7               	movlw	low _temperature
  1157  003586  6E23               	movwf	imprime_lcd@frase^0,c
  1158  003588  0E00               	movlw	high _temperature
  1159  00358A  6E24               	movwf	(imprime_lcd@frase+1)^0,c
  1160  00358C  ECDE  F01D         	call	_imprime_lcd	;wreg free
  1161  003590                     
  1162                           ;lcd.frase.c: 118:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1163  003590  0E06               	movlw	6
  1164  003592  0100               	movlb	0	; () banked
  1165  003594  6FEE               	movwf	(??_main+1)& (0+255),b
  1166  003596  0E13               	movlw	19
  1167  003598  6FED               	movwf	??_main& (0+255),b
  1168  00359A  0EAD               	movlw	173
  1169  00359C                     u8247:
  1170  00359C  2EE8               	decfsz	wreg,f,c
  1171  00359E  D7FE               	bra	u8247
  1172  0035A0  2FED               	decfsz	??_main& (0+255),f,b
  1173  0035A2  D7FC               	bra	u8247
  1174  0035A4  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1175  0035A6  D7FA               	bra	u8247
  1176  0035A8  D000               	nop2	
  1177  0035AA  EF8E  F01A         	goto	l5779
  1178  0035AE  EF07  F000         	goto	start
  1179  0035B2                     __end_of_main:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _sprintf *****************
  1183 ;; Defined at:
  1184 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  s               2  133[BANK0 ] PTR unsigned char 
  1187 ;;		 -> temperature(8), 
  1188 ;;  fmt             2  135[BANK0 ] PTR const unsigned char 
  1189 ;;		 -> STR_4(6), 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  f               6    2[BANK1 ] struct _IO_FILE
  1192 ;;  ap              2    0[BANK1 ] PTR void [1]
  1193 ;;		 -> ?_sprintf(2), 
  1194 ;;  ret             2    0        int 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  2  133[BANK0 ] int 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1204 ;;      Params:         0       8       0       0       0       0       0       0       0
  1205 ;;      Locals:         0       0       8       0       0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1207 ;;      Totals:         0       8       8       0       0       0       0       0       0
  1208 ;;Total ram usage:       16 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 11
  1211 ;; This function calls:
  1212 ;;		_vfprintf
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text1
  1219  003DDA                     __ptext1:
  1220                           	callstack 0
  1221  003DDA                     _sprintf:
  1222                           	callstack 19
  1223  003DDA  0EE9               	movlw	low (?_sprintf+4)
  1224  003DDC  0101               	movlb	1	; () banked
  1225  003DDE  6F50               	movwf	sprintf@ap& (0+255),b
  1226  003DE0  0E00               	movlw	high (?_sprintf+4)
  1227  003DE2  6F51               	movwf	(sprintf@ap+1)& (0+255),b
  1228  003DE4  C0E5  F152         	movff	sprintf@s,sprintf@f
  1229  003DE8  C0E6  F153         	movff	sprintf@s+1,sprintf@f+1
  1230  003DEC                     
  1231                           ; BSR set to: 1
  1232  003DEC  0E00               	movlw	0
  1233  003DEE  6F55               	movwf	(sprintf@f+3)& (0+255),b
  1234  003DF0  0E00               	movlw	0
  1235  003DF2  6F54               	movwf	(sprintf@f+2)& (0+255),b
  1236  003DF4                     
  1237                           ; BSR set to: 1
  1238  003DF4  0E00               	movlw	0
  1239  003DF6  6F57               	movwf	(sprintf@f+5)& (0+255),b
  1240  003DF8  0E00               	movlw	0
  1241  003DFA  6F56               	movwf	(sprintf@f+4)& (0+255),b
  1242  003DFC                     
  1243                           ; BSR set to: 1
  1244  003DFC  0E52               	movlw	low sprintf@f
  1245  003DFE  0100               	movlb	0	; () banked
  1246  003E00  6FDD               	movwf	vfprintf@fp& (0+255),b
  1247  003E02  0E01               	movlw	high sprintf@f
  1248  003E04  6FDE               	movwf	(vfprintf@fp+1)& (0+255),b
  1249  003E06  C0E7  F0DF         	movff	sprintf@fmt,vfprintf@fmt
  1250  003E0A  C0E8  F0E0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1251  003E0E  0E50               	movlw	low sprintf@ap
  1252  003E10  6FE1               	movwf	vfprintf@ap& (0+255),b
  1253  003E12  0E01               	movlw	high sprintf@ap
  1254  003E14  6FE2               	movwf	(vfprintf@ap+1)& (0+255),b
  1255  003E16  EC5D  F01E         	call	_vfprintf	;wreg free
  1256  003E1A  0101               	movlb	1	; () banked
  1257  003E1C  5154               	movf	(sprintf@f+2)& (0+255),w,b
  1258  003E1E  0100               	movlb	0	; () banked
  1259  003E20  25E5               	addwf	sprintf@s& (0+255),w,b
  1260  003E22  6ED9               	movwf	fsr2l,c
  1261  003E24  0101               	movlb	1	; () banked
  1262  003E26  5155               	movf	(sprintf@f+3)& (0+255),w,b
  1263  003E28  0100               	movlb	0	; () banked
  1264  003E2A  21E6               	addwfc	(sprintf@s+1)& (0+255),w,b
  1265  003E2C  6EDA               	movwf	fsr2h,c
  1266  003E2E  0E00               	movlw	0
  1267  003E30  6EDF               	movwf	indf2,c
  1268  003E32                     
  1269                           ; BSR set to: 0
  1270  003E32  0012               	return		;funcret
  1271  003E34                     __end_of_sprintf:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _vfprintf *****************
  1275 ;; Defined at:
  1276 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  fp              2  125[BANK0 ] PTR struct _IO_FILE
  1279 ;;		 -> sprintf@f(6), 
  1280 ;;  fmt             2  127[BANK0 ] PTR const unsigned char 
  1281 ;;		 -> STR_4(6), 
  1282 ;;  ap              2  129[BANK0 ] PTR PTR void 
  1283 ;;		 -> sprintf@ap(2), 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  1286 ;;		 -> STR_4(6), 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2  125[BANK0 ] int 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         0       6       0       0       0       0       0       0       0
  1297 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1299 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1300 ;;Total ram usage:        8 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 10
  1303 ;; This function calls:
  1304 ;;		_vfpfcnvrt
  1305 ;; This function is called by:
  1306 ;;		_sprintf
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text2
  1311  003CBA                     __ptext2:
  1312                           	callstack 0
  1313  003CBA                     _vfprintf:
  1314                           	callstack 19
  1315  003CBA                     
  1316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1317  003CBA  C0DF  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  1318  003CBE  C0E0  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1319  003CC2                     
  1320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1321  003CC2  0E00               	movlw	0
  1322  003CC4  0100               	movlb	0	; () banked
  1323  003CC6  6FF0               	movwf	(_nout+1)& (0+255),b
  1324  003CC8  0E00               	movlw	0
  1325  003CCA  6FEF               	movwf	_nout& (0+255),b
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1328  003CCC  EF7B  F01E         	goto	l5733
  1329  003CD0                     l5731:
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1333  003CD0  C0DD  F0C5         	movff	vfprintf@fp,vfpfcnvrt@fp
  1334  003CD4  C0DE  F0C6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1335  003CD8  0EE3               	movlw	low vfprintf@cfmt
  1336  003CDA  6FC7               	movwf	vfpfcnvrt@fmt& (0+255),b
  1337  003CDC  0E00               	movlw	high vfprintf@cfmt
  1338  003CDE  6FC8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1339  003CE0  C0E1  F0C9         	movff	vfprintf@ap,vfpfcnvrt@ap
  1340  003CE4  C0E2  F0CA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1341  003CE8  EC4E  F00A         	call	_vfpfcnvrt	;wreg free
  1342  003CEC  0100               	movlb	0	; () banked
  1343  003CEE  51C5               	movf	?_vfpfcnvrt& (0+255),w,b
  1344  003CF0  27EF               	addwf	_nout& (0+255),f,b
  1345  003CF2  51C6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1346  003CF4  23F0               	addwfc	(_nout+1)& (0+255),f,b
  1347  003CF6                     l5733:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1351  003CF6  C0E3  FFF6         	movff	vfprintf@cfmt,tblptrl
  1352  003CFA  C0E4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1353  003CFE                     	if	0	;tblptru may be non-zero
  1354  003CFE                     	endif
  1355  003CFE                     	if	0	;tblptru may be non-zero
  1356  003CFE                     	endif
  1357  003CFE  0008               	tblrd		*
  1358  003D00  50F5               	movf	tablat,w,c
  1359  003D02  0900               	iorlw	0
  1360  003D04  A4D8               	btfss	status,2,c
  1361  003D06  EF87  F01E         	goto	u8201
  1362  003D0A  EF89  F01E         	goto	u8200
  1363  003D0E                     u8201:
  1364  003D0E  EF68  F01E         	goto	l5731
  1365  003D12                     u8200:
  1366  003D12                     
  1367                           ; BSR set to: 0
  1368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1369  003D12  C0EF  F0DD         	movff	_nout,?_vfprintf
  1370  003D16  C0F0  F0DE         	movff	_nout+1,?_vfprintf+1
  1371  003D1A                     
  1372                           ; BSR set to: 0
  1373  003D1A  0012               	return		;funcret
  1374  003D1C                     __end_of_vfprintf:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _vfpfcnvrt *****************
  1378 ;; Defined at:
  1379 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  1382 ;;		 -> sprintf@f(6), 
  1383 ;;  fmt             2  103[BANK0 ] PTR PTR unsigned char 
  1384 ;;		 -> vfprintf@cfmt(2), 
  1385 ;;  ap              2  105[BANK0 ] PTR PTR void 
  1386 ;;		 -> sprintf@ap(2), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  llu             8    0        unsigned long long 
  1389 ;;  ll              8    0        long long 
  1390 ;;  f               4  117[BANK0 ] long long 
  1391 ;;  ct              3  121[BANK0 ] unsigned char [3]
  1392 ;;  vp              3    0        PTR void 
  1393 ;;  cp              3    0        PTR unsigned char 
  1394 ;;  i               2    0        int 
  1395 ;;  done            2    0        int 
  1396 ;;  c               1  124[BANK0 ] unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2  101[BANK0 ] int 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1406 ;;      Params:         0       6       0       0       0       0       0       0       0
  1407 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1408 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1409 ;;      Totals:         0      24       0       0       0       0       0       0       0
  1410 ;;Total ram usage:       24 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 9
  1413 ;; This function calls:
  1414 ;;		_atoi
  1415 ;;		_efgtoa
  1416 ;;		_fputc
  1417 ;;		_isdigit
  1418 ;;		_isupper
  1419 ;;		_strncmp
  1420 ;;		_tolower
  1421 ;; This function is called by:
  1422 ;;		_vfprintf
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text3
  1427  00149C                     __ptext3:
  1428                           	callstack 0
  1429  00149C                     _vfpfcnvrt:
  1430                           	callstack 19
  1431  00149C                     
  1432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1433  00149C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1434  0014A0  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1435  0014A4  CFDE FFF6          	movff	postinc2,tblptrl
  1436  0014A8  CFDD FFF7          	movff	postdec2,tblptrh
  1437  0014AC                     	if	0	;tblptru may be non-zero
  1438  0014AC                     	endif
  1439  0014AC                     	if	0	;tblptru may be non-zero
  1440  0014AC                     	endif
  1441  0014AC  0008               	tblrd		*
  1442  0014AE  50F5               	movf	tablat,w,c
  1443  0014B0  0A25               	xorlw	37
  1444  0014B2  A4D8               	btfss	status,2,c
  1445  0014B4  EF5E  F00A         	goto	u8011
  1446  0014B8  EF60  F00A         	goto	u8010
  1447  0014BC                     u8011:
  1448  0014BC  EFE8  F00C         	goto	l5713
  1449  0014C0                     u8010:
  1450  0014C0                     
  1451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1452  0014C0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1453  0014C4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1454  0014C8  2ADE               	incf	postinc2,f,c
  1455  0014CA  0E00               	movlw	0
  1456  0014CC  22DD               	addwfc	postdec2,f,c
  1457  0014CE                     
  1458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1459  0014CE  0E00               	movlw	0
  1460  0014D0  0100               	movlb	0	; () banked
  1461  0014D2  6FF2               	movwf	(_width+1)& (0+255),b
  1462  0014D4  0E00               	movlw	0
  1463  0014D6  6FF1               	movwf	_width& (0+255),b
  1464  0014D8  C0F1  F037         	movff	_width,_flags
  1465  0014DC  C0F2  F038         	movff	_width+1,_flags+1
  1466  0014E0                     
  1467                           ; BSR set to: 0
  1468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1469  0014E0  69F3               	setf	_prec& (0+255),b
  1470  0014E2  69F4               	setf	(_prec+1)& (0+255),b
  1471  0014E4                     
  1472                           ; BSR set to: 0
  1473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1474  0014E4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1475  0014E8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1476  0014EC  CFDE FFF6          	movff	postinc2,tblptrl
  1477  0014F0  CFDD FFF7          	movff	postdec2,tblptrh
  1478  0014F4                     	if	0	;tblptru may be non-zero
  1479  0014F4                     	endif
  1480  0014F4                     	if	0	;tblptru may be non-zero
  1481  0014F4                     	endif
  1482  0014F4  0008               	tblrd		*
  1483  0014F6  50F5               	movf	tablat,w,c
  1484  0014F8  0A2A               	xorlw	42
  1485  0014FA  A4D8               	btfss	status,2,c
  1486  0014FC  EF82  F00A         	goto	u8021
  1487  001500  EF84  F00A         	goto	u8020
  1488  001504                     u8021:
  1489  001504  EFAD  F00A         	goto	l5629
  1490  001508                     u8020:
  1491  001508                     
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1494  001508  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1495  00150C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1496  001510  2ADE               	incf	postinc2,f,c
  1497  001512  0E00               	movlw	0
  1498  001514  22DD               	addwfc	postdec2,f,c
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1501  001516  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1502  00151A  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1503  00151E  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  1504  001522  0E02               	movlw	2
  1505  001524  26DE               	addwf	postinc2,f,c
  1506  001526  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  1507  00152A  0E00               	movlw	0
  1508  00152C  22DD               	addwfc	postdec2,f,c
  1509  00152E  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1510  001532  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1511  001536  CFDE F0F1          	movff	postinc2,_width
  1512  00153A  CFDD F0F2          	movff	postdec2,_width+1
  1513  00153E                     
  1514                           ; BSR set to: 0
  1515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1516  00153E  BFF2               	btfsc	(_width+1)& (0+255),7,b
  1517  001540  EFA6  F00A         	goto	u8030
  1518  001544  EFA4  F00A         	goto	u8031
  1519  001548                     u8031:
  1520  001548  EFF1  F00A         	goto	l5639
  1521  00154C                     u8030:
  1522  00154C                     
  1523                           ; BSR set to: 0
  1524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1525  00154C  8037               	bsf	_flags^0,0,c
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1528  00154E  6DF1               	negf	_width& (0+255),b
  1529  001550  1FF2               	comf	(_width+1)& (0+255),f,b
  1530  001552  B0D8               	btfsc	status,0,c
  1531  001554  2BF2               	incf	(_width+1)& (0+255),f,b
  1532  001556  EFF1  F00A         	goto	l5639
  1533  00155A                     l5629:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1537  00155A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1538  00155E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1539  001562  CFDE F026          	movff	postinc2,atoi@s
  1540  001566  CFDD F027          	movff	postdec2,atoi@s+1
  1541  00156A  EC8A  F017         	call	_atoi	;wreg free
  1542  00156E  C026  F0F1         	movff	?_atoi,_width
  1543  001572  C027  F0F2         	movff	?_atoi+1,_width+1
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1546  001576  EFC4  F00A         	goto	l5633
  1547  00157A                     l5631:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1551  00157A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1552  00157E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1553  001582  2ADE               	incf	postinc2,f,c
  1554  001584  0E00               	movlw	0
  1555  001586  22DD               	addwfc	postdec2,f,c
  1556  001588                     l5633:
  1557  001588  0ED0               	movlw	208
  1558  00158A  0100               	movlb	0	; () banked
  1559  00158C  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  1560  00158E  0EFF               	movlw	255
  1561  001590  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1562  001592  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1563  001596  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1564  00159A  CFDE FFF6          	movff	postinc2,tblptrl
  1565  00159E  CFDD FFF7          	movff	postdec2,tblptrh
  1566  0015A2                     	if	0	;tblptru may be non-zero
  1567  0015A2                     	endif
  1568  0015A2                     	if	0	;tblptru may be non-zero
  1569  0015A2                     	endif
  1570  0015A2  0008               	tblrd		*
  1571  0015A4  50F5               	movf	tablat,w,c
  1572  0015A6  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1573  0015A8  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1574  0015AA  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  1575  0015AC  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1576  0015AE  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1577  0015B0  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1578  0015B2  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1579  0015B4  E10A               	bnz	u8040
  1580  0015B6  0E0A               	movlw	10
  1581  0015B8  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1582  0015BA  A0D8               	btfss	status,0,c
  1583  0015BC  EFE2  F00A         	goto	u8041
  1584  0015C0  EFE5  F00A         	goto	u8040
  1585  0015C4                     u8041:
  1586  0015C4  0E01               	movlw	1
  1587  0015C6  EFE6  F00A         	goto	u8050
  1588  0015CA                     u8040:
  1589  0015CA  0E00               	movlw	0
  1590  0015CC                     u8050:
  1591  0015CC  6FCF               	movwf	_vfpfcnvrt$968& (0+255),b
  1592  0015CE  6BD0               	clrf	(_vfpfcnvrt$968+1)& (0+255),b
  1593  0015D0                     
  1594                           ; BSR set to: 0
  1595  0015D0  51CF               	movf	_vfpfcnvrt$968& (0+255),w,b
  1596  0015D2  11D0               	iorwf	(_vfpfcnvrt$968+1)& (0+255),w,b
  1597  0015D4  A4D8               	btfss	status,2,c
  1598  0015D6  EFEF  F00A         	goto	u8061
  1599  0015DA  EFF1  F00A         	goto	u8060
  1600  0015DE                     u8061:
  1601  0015DE  EFBD  F00A         	goto	l5631
  1602  0015E2                     u8060:
  1603  0015E2                     l5639:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1607  0015E2  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1608  0015E6  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1609  0015EA  CFDE FFF6          	movff	postinc2,tblptrl
  1610  0015EE  CFDD FFF7          	movff	postdec2,tblptrh
  1611  0015F2                     	if	0	;tblptru may be non-zero
  1612  0015F2                     	endif
  1613  0015F2                     	if	0	;tblptru may be non-zero
  1614  0015F2                     	endif
  1615  0015F2  0008               	tblrd		*
  1616  0015F4  50F5               	movf	tablat,w,c
  1617  0015F6  0A2E               	xorlw	46
  1618  0015F8  A4D8               	btfss	status,2,c
  1619  0015FA  EF01  F00B         	goto	u8071
  1620  0015FE  EF03  F00B         	goto	u8070
  1621  001602                     u8071:
  1622  001602  EF81  F00B         	goto	l5659
  1623  001606                     u8070:
  1624  001606                     
  1625                           ; BSR set to: 0
  1626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1627  001606  0E00               	movlw	0
  1628  001608  6FF4               	movwf	(_prec+1)& (0+255),b
  1629  00160A  0E00               	movlw	0
  1630  00160C  6FF3               	movwf	_prec& (0+255),b
  1631  00160E                     
  1632                           ; BSR set to: 0
  1633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1634  00160E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1635  001612  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1636  001616  2ADE               	incf	postinc2,f,c
  1637  001618  0E00               	movlw	0
  1638  00161A  22DD               	addwfc	postdec2,f,c
  1639  00161C                     
  1640                           ; BSR set to: 0
  1641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1642  00161C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1643  001620  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1644  001624  CFDE FFF6          	movff	postinc2,tblptrl
  1645  001628  CFDD FFF7          	movff	postdec2,tblptrh
  1646  00162C                     	if	0	;tblptru may be non-zero
  1647  00162C                     	endif
  1648  00162C                     	if	0	;tblptru may be non-zero
  1649  00162C                     	endif
  1650  00162C  0008               	tblrd		*
  1651  00162E  50F5               	movf	tablat,w,c
  1652  001630  0A2A               	xorlw	42
  1653  001632  A4D8               	btfss	status,2,c
  1654  001634  EF1E  F00B         	goto	u8081
  1655  001638  EF20  F00B         	goto	u8080
  1656  00163C                     u8081:
  1657  00163C  EF3D  F00B         	goto	l5649
  1658  001640                     u8080:
  1659  001640                     
  1660                           ; BSR set to: 0
  1661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1662  001640  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1663  001644  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1664  001648  2ADE               	incf	postinc2,f,c
  1665  00164A  0E00               	movlw	0
  1666  00164C  22DD               	addwfc	postdec2,f,c
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1669  00164E  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1670  001652  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1671  001656  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  1672  00165A  0E02               	movlw	2
  1673  00165C  26DE               	addwf	postinc2,f,c
  1674  00165E  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  1675  001662  0E00               	movlw	0
  1676  001664  22DD               	addwfc	postdec2,f,c
  1677  001666  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1678  00166A  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1679  00166E  CFDE F0F3          	movff	postinc2,_prec
  1680  001672  CFDD F0F4          	movff	postdec2,_prec+1
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1683  001676  EF81  F00B         	goto	l5659
  1684  00167A                     l5649:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1688  00167A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1689  00167E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1690  001682  CFDE F026          	movff	postinc2,atoi@s
  1691  001686  CFDD F027          	movff	postdec2,atoi@s+1
  1692  00168A  EC8A  F017         	call	_atoi	;wreg free
  1693  00168E  C026  F0F3         	movff	?_atoi,_prec
  1694  001692  C027  F0F4         	movff	?_atoi+1,_prec+1
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1697  001696  EF54  F00B         	goto	l5653
  1698  00169A                     l5651:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1702  00169A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1703  00169E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1704  0016A2  2ADE               	incf	postinc2,f,c
  1705  0016A4  0E00               	movlw	0
  1706  0016A6  22DD               	addwfc	postdec2,f,c
  1707  0016A8                     l5653:
  1708  0016A8  0ED0               	movlw	208
  1709  0016AA  0100               	movlb	0	; () banked
  1710  0016AC  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  1711  0016AE  0EFF               	movlw	255
  1712  0016B0  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1713  0016B2  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1714  0016B6  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1715  0016BA  CFDE FFF6          	movff	postinc2,tblptrl
  1716  0016BE  CFDD FFF7          	movff	postdec2,tblptrh
  1717  0016C2                     	if	0	;tblptru may be non-zero
  1718  0016C2                     	endif
  1719  0016C2                     	if	0	;tblptru may be non-zero
  1720  0016C2                     	endif
  1721  0016C2  0008               	tblrd		*
  1722  0016C4  50F5               	movf	tablat,w,c
  1723  0016C6  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1724  0016C8  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1725  0016CA  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  1726  0016CC  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1727  0016CE  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1728  0016D0  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1729  0016D2  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1730  0016D4  E10A               	bnz	u8090
  1731  0016D6  0E0A               	movlw	10
  1732  0016D8  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1733  0016DA  A0D8               	btfss	status,0,c
  1734  0016DC  EF72  F00B         	goto	u8091
  1735  0016E0  EF75  F00B         	goto	u8090
  1736  0016E4                     u8091:
  1737  0016E4  0E01               	movlw	1
  1738  0016E6  EF76  F00B         	goto	u8100
  1739  0016EA                     u8090:
  1740  0016EA  0E00               	movlw	0
  1741  0016EC                     u8100:
  1742  0016EC  6FD1               	movwf	_vfpfcnvrt$969& (0+255),b
  1743  0016EE  6BD2               	clrf	(_vfpfcnvrt$969+1)& (0+255),b
  1744  0016F0                     
  1745                           ; BSR set to: 0
  1746  0016F0  51D1               	movf	_vfpfcnvrt$969& (0+255),w,b
  1747  0016F2  11D2               	iorwf	(_vfpfcnvrt$969+1)& (0+255),w,b
  1748  0016F4  A4D8               	btfss	status,2,c
  1749  0016F6  EF7F  F00B         	goto	u8111
  1750  0016FA  EF81  F00B         	goto	u8110
  1751  0016FE                     u8111:
  1752  0016FE  EF4D  F00B         	goto	l5651
  1753  001702                     u8110:
  1754  001702                     l5659:
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1758  001702  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1759  001706  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1760  00170A  CFDE FFF6          	movff	postinc2,tblptrl
  1761  00170E  CFDD FFF7          	movff	postdec2,tblptrh
  1762  001712                     	if	0	;tblptru may be non-zero
  1763  001712                     	endif
  1764  001712                     	if	0	;tblptru may be non-zero
  1765  001712                     	endif
  1766  001712  0008               	tblrd		*
  1767  001714  50F5               	movf	tablat,w,c
  1768  001716  6E25               	movwf	tolower@c^0,c
  1769  001718  6A26               	clrf	(tolower@c+1)^0,c
  1770  00171A  EC8E  F01E         	call	_tolower	;wreg free
  1771  00171E  5025               	movf	?_tolower^0,w,c
  1772  001720  0100               	movlb	0	; () banked
  1773  001722  6FD9               	movwf	vfpfcnvrt@ct& (0+255),b
  1774  001724                     
  1775                           ; BSR set to: 0
  1776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1777  001724  51D9               	movf	vfpfcnvrt@ct& (0+255),w,b
  1778  001726  B4D8               	btfsc	status,2,c
  1779  001728  EF98  F00B         	goto	u8121
  1780  00172C  EF9A  F00B         	goto	u8120
  1781  001730                     u8121:
  1782  001730  EFD4  F00B         	goto	l5669
  1783  001734                     u8120:
  1784  001734                     
  1785                           ; BSR set to: 0
  1786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1787  001734  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1788  001738  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1789  00173C  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  1790  001740  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  1791  001744  0E01               	movlw	1
  1792  001746  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  1793  001748  0E00               	movlw	0
  1794  00174A  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1795  00174C  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1796  001750  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1797  001754                     	if	0	;tblptru may be non-zero
  1798  001754                     	endif
  1799  001754                     	if	0	;tblptru may be non-zero
  1800  001754                     	endif
  1801  001754  0008               	tblrd		*
  1802  001756  50F5               	movf	tablat,w,c
  1803  001758  6E25               	movwf	tolower@c^0,c
  1804  00175A  6A26               	clrf	(tolower@c+1)^0,c
  1805  00175C  EC8E  F01E         	call	_tolower	;wreg free
  1806  001760  5025               	movf	?_tolower^0,w,c
  1807  001762  0100               	movlb	0	; () banked
  1808  001764  6FDA               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1809  001766                     
  1810                           ; BSR set to: 0
  1811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1812  001766  51DA               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1813  001768  B4D8               	btfsc	status,2,c
  1814  00176A  EFB9  F00B         	goto	u8131
  1815  00176E  EFBB  F00B         	goto	u8130
  1816  001772                     u8131:
  1817  001772  EFD4  F00B         	goto	l5669
  1818  001776                     u8130:
  1819  001776                     
  1820                           ; BSR set to: 0
  1821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1822  001776  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1823  00177A  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1824  00177E  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  1825  001782  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  1826  001786  0E02               	movlw	2
  1827  001788  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  1828  00178A  0E00               	movlw	0
  1829  00178C  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1830  00178E  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1831  001792  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1832  001796                     	if	0	;tblptru may be non-zero
  1833  001796                     	endif
  1834  001796                     	if	0	;tblptru may be non-zero
  1835  001796                     	endif
  1836  001796  0008               	tblrd		*
  1837  001798  50F5               	movf	tablat,w,c
  1838  00179A  6E25               	movwf	tolower@c^0,c
  1839  00179C  6A26               	clrf	(tolower@c+1)^0,c
  1840  00179E  EC8E  F01E         	call	_tolower	;wreg free
  1841  0017A2  5025               	movf	?_tolower^0,w,c
  1842  0017A4  0100               	movlb	0	; () banked
  1843  0017A6  6FDB               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1844  0017A8                     l5669:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1848  0017A8  0E66               	movlw	102
  1849  0017AA  19D9               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1850  0017AC  A4D8               	btfss	status,2,c
  1851  0017AE  EFDB  F00B         	goto	u8141
  1852  0017B2  EFDD  F00B         	goto	u8140
  1853  0017B6                     u8141:
  1854  0017B6  EF1D  F00C         	goto	l5681
  1855  0017BA                     u8140:
  1856  0017BA                     
  1857                           ; BSR set to: 0
  1858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1859  0017BA  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1860  0017BE  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1861  0017C2  CFDE FFF6          	movff	postinc2,tblptrl
  1862  0017C6  CFDD FFF7          	movff	postdec2,tblptrh
  1863  0017CA                     	if	0	;tblptru may be non-zero
  1864  0017CA                     	endif
  1865  0017CA                     	if	0	;tblptru may be non-zero
  1866  0017CA                     	endif
  1867  0017CA  0008               	tblrd		*
  1868  0017CC  CFF5 F0DC          	movff	tablat,vfpfcnvrt@c
  1869  0017D0                     
  1870                           ; BSR set to: 0
  1871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1872  0017D0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1873  0017D4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1874  0017D8  2ADE               	incf	postinc2,f,c
  1875  0017DA  0E00               	movlw	0
  1876  0017DC  22DD               	addwfc	postdec2,f,c
  1877  0017DE                     
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1880  0017DE  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1881  0017E2  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1882  0017E6  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  1883  0017EA  0E04               	movlw	4
  1884  0017EC  26DE               	addwf	postinc2,f,c
  1885  0017EE  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  1886  0017F2  0E00               	movlw	0
  1887  0017F4  22DD               	addwfc	postdec2,f,c
  1888  0017F6  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1889  0017FA  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1890  0017FE  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f
  1891  001802  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+1
  1892  001806  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+2
  1893  00180A  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+3
  1894  00180E                     l5677:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1898  00180E  C0C5  F081         	movff	vfpfcnvrt@fp,efgtoa@fp
  1899  001812  C0C6  F082         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1900  001816  C0D5  F083         	movff	vfpfcnvrt@f,efgtoa@f
  1901  00181A  C0D6  F084         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1902  00181E  C0D7  F085         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1903  001822  C0D8  F086         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1904  001826  C0DC  F087         	movff	vfpfcnvrt@c,efgtoa@c
  1905  00182A  EC1F  F004         	call	_efgtoa	;wreg free
  1906  00182E  C081  F0C5         	movff	?_efgtoa,?_vfpfcnvrt
  1907  001832  C082  F0C6         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1908  001836  EF03  F00D         	goto	l931
  1909  00183A                     l5681:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1913  00183A  0ED9               	movlw	low vfpfcnvrt@ct
  1914  00183C  6E1F               	movwf	strncmp@_l^0,c
  1915  00183E  0E00               	movlw	high vfpfcnvrt@ct
  1916  001840  6E20               	movwf	(strncmp@_l+1)^0,c
  1917  001842  0E39               	movlw	low STR_13
  1918  001844  6E21               	movwf	strncmp@_r^0,c
  1919  001846  0E08               	movlw	high STR_13
  1920  001848  6E22               	movwf	(strncmp@_r+1)^0,c
  1921  00184A  0E00               	movlw	0
  1922  00184C  6E24               	movwf	(strncmp@n+1)^0,c
  1923  00184E  0E02               	movlw	2
  1924  001850  6E23               	movwf	strncmp@n^0,c
  1925  001852  ECD9  F01A         	call	_strncmp	;wreg free
  1926  001856  501F               	movf	?_strncmp^0,w,c
  1927  001858  1020               	iorwf	(?_strncmp+1)^0,w,c
  1928  00185A  A4D8               	btfss	status,2,c
  1929  00185C  EF32  F00C         	goto	u8151
  1930  001860  EF34  F00C         	goto	u8150
  1931  001864                     u8151:
  1932  001864  EFB0  F00C         	goto	l5697
  1933  001868                     u8150:
  1934  001868                     
  1935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1936  001868  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1937  00186C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1938  001870  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  1939  001874  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  1940  001878  0E01               	movlw	1
  1941  00187A  0100               	movlb	0	; () banked
  1942  00187C  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  1943  00187E  0E00               	movlw	0
  1944  001880  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1945  001882  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1946  001886  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1947  00188A                     	if	0	;tblptru may be non-zero
  1948  00188A                     	endif
  1949  00188A                     	if	0	;tblptru may be non-zero
  1950  00188A                     	endif
  1951  00188A  0008               	tblrd		*
  1952  00188C  CFF5 F0DC          	movff	tablat,vfpfcnvrt@c
  1953  001890  0EBF               	movlw	191
  1954  001892  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  1955  001894  0EFF               	movlw	255
  1956  001896  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1957  001898  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1958  00189C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1959  0018A0  CFDE FFF6          	movff	postinc2,tblptrl
  1960  0018A4  CFDD FFF7          	movff	postdec2,tblptrh
  1961  0018A8                     	if	0	;tblptru may be non-zero
  1962  0018A8                     	endif
  1963  0018A8                     	if	0	;tblptru may be non-zero
  1964  0018A8                     	endif
  1965  0018A8  0008               	tblrd		*
  1966  0018AA  50F5               	movf	tablat,w,c
  1967  0018AC  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1968  0018AE  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1969  0018B0  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  1970  0018B2  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1971  0018B4  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1972  0018B6  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1973  0018B8  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1974  0018BA  E10A               	bnz	u8160
  1975  0018BC  0E1A               	movlw	26
  1976  0018BE  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1977  0018C0  A0D8               	btfss	status,0,c
  1978  0018C2  EF65  F00C         	goto	u8161
  1979  0018C6  EF68  F00C         	goto	u8160
  1980  0018CA                     u8161:
  1981  0018CA  0E01               	movlw	1
  1982  0018CC  EF69  F00C         	goto	u8170
  1983  0018D0                     u8160:
  1984  0018D0  0E00               	movlw	0
  1985  0018D2                     u8170:
  1986  0018D2  6FD3               	movwf	_vfpfcnvrt$973& (0+255),b
  1987  0018D4  6BD4               	clrf	(_vfpfcnvrt$973+1)& (0+255),b
  1988  0018D6                     
  1989                           ; BSR set to: 0
  1990  0018D6  51D3               	movf	_vfpfcnvrt$973& (0+255),w,b
  1991  0018D8  11D4               	iorwf	(_vfpfcnvrt$973+1)& (0+255),w,b
  1992  0018DA  B4D8               	btfsc	status,2,c
  1993  0018DC  EF72  F00C         	goto	u8181
  1994  0018E0  EF74  F00C         	goto	u8180
  1995  0018E4                     u8181:
  1996  0018E4  EF8E  F00C         	goto	l5691
  1997  0018E8                     u8180:
  1998  0018E8                     
  1999                           ; BSR set to: 0
  2000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2001  0018E8  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2002  0018EC  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2003  0018F0  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2004  0018F4  0E04               	movlw	4
  2005  0018F6  26DE               	addwf	postinc2,f,c
  2006  0018F8  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2007  0018FC  0E00               	movlw	0
  2008  0018FE  22DD               	addwfc	postdec2,f,c
  2009  001900  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2010  001904  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2011  001908  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f
  2012  00190C  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+1
  2013  001910  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+2
  2014  001914  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+3
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2017  001918  EFA6  F00C         	goto	l938
  2018  00191C                     l5691:
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2022  00191C  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2023  001920  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2024  001924  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2025  001928  0E04               	movlw	4
  2026  00192A  26DE               	addwf	postinc2,f,c
  2027  00192C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2028  001930  0E00               	movlw	0
  2029  001932  22DD               	addwfc	postdec2,f,c
  2030  001934  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2031  001938  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2032  00193C  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f
  2033  001940  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+1
  2034  001944  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+2
  2035  001948  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+3
  2036  00194C                     l938:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2040  00194C  0E02               	movlw	2
  2041  00194E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2042  001952  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2043  001956  26DE               	addwf	postinc2,f,c
  2044  001958  0E00               	movlw	0
  2045  00195A  22DD               	addwfc	postdec2,f,c
  2046  00195C  EF07  F00C         	goto	l5677
  2047  001960                     l5697:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2050  001960  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2051  001964  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2052  001968  CFDE FFF6          	movff	postinc2,tblptrl
  2053  00196C  CFDD FFF7          	movff	postdec2,tblptrh
  2054  001970                     	if	0	;tblptru may be non-zero
  2055  001970                     	endif
  2056  001970                     	if	0	;tblptru may be non-zero
  2057  001970                     	endif
  2058  001970  0008               	tblrd		*
  2059  001972  50F5               	movf	tablat,w,c
  2060  001974  0A25               	xorlw	37
  2061  001976  A4D8               	btfss	status,2,c
  2062  001978  EFC0  F00C         	goto	u8191
  2063  00197C  EFC2  F00C         	goto	u8190
  2064  001980                     u8191:
  2065  001980  EFDA  F00C         	goto	l5707
  2066  001984                     u8190:
  2067  001984                     
  2068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2069  001984  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2070  001988  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2071  00198C  2ADE               	incf	postinc2,f,c
  2072  00198E  0E00               	movlw	0
  2073  001990  22DD               	addwfc	postdec2,f,c
  2074  001992                     
  2075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2076  001992  0E00               	movlw	0
  2077  001994  6E20               	movwf	(fputc@c+1)^0,c
  2078  001996  0E25               	movlw	37
  2079  001998  6E1F               	movwf	fputc@c^0,c
  2080  00199A  C0C5  F021         	movff	vfpfcnvrt@fp,fputc@fp
  2081  00199E  C0C6  F022         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2082  0019A2  ECAD  F01B         	call	_fputc	;wreg free
  2083  0019A6                     l5703:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2086  0019A6  0E00               	movlw	0
  2087  0019A8  0100               	movlb	0	; () banked
  2088  0019AA  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2089  0019AC  0E01               	movlw	1
  2090  0019AE  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2091  0019B0  EF03  F00D         	goto	l931
  2092  0019B4                     l5707:
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2095  0019B4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2096  0019B8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2097  0019BC  2ADE               	incf	postinc2,f,c
  2098  0019BE  0E00               	movlw	0
  2099  0019C0  22DD               	addwfc	postdec2,f,c
  2100  0019C2                     
  2101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2102  0019C2  0E00               	movlw	0
  2103  0019C4  0100               	movlb	0	; () banked
  2104  0019C6  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2105  0019C8  0E00               	movlw	0
  2106  0019CA  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2107  0019CC  EF03  F00D         	goto	l931
  2108  0019D0                     l5713:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2111  0019D0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2112  0019D4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2113  0019D8  CFDE FFF6          	movff	postinc2,tblptrl
  2114  0019DC  CFDD FFF7          	movff	postdec2,tblptrh
  2115  0019E0                     	if	0	;tblptru may be non-zero
  2116  0019E0                     	endif
  2117  0019E0                     	if	0	;tblptru may be non-zero
  2118  0019E0                     	endif
  2119  0019E0  0008               	tblrd		*
  2120  0019E2  50F5               	movf	tablat,w,c
  2121  0019E4  6E1F               	movwf	fputc@c^0,c
  2122  0019E6  6A20               	clrf	(fputc@c+1)^0,c
  2123  0019E8  C0C5  F021         	movff	vfpfcnvrt@fp,fputc@fp
  2124  0019EC  C0C6  F022         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2125  0019F0  ECAD  F01B         	call	_fputc	;wreg free
  2126  0019F4                     
  2127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2128  0019F4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2129  0019F8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2130  0019FC  2ADE               	incf	postinc2,f,c
  2131  0019FE  0E00               	movlw	0
  2132  001A00  22DD               	addwfc	postdec2,f,c
  2133  001A02  EFD3  F00C         	goto	l5703
  2134  001A06                     l931:
  2135  001A06  0012               	return		;funcret
  2136  001A08                     __end_of_vfpfcnvrt:
  2137                           	callstack 0
  2138                           
  2139 ;; *************** function _strncmp *****************
  2140 ;; Defined at:
  2141 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  _l              2   30[COMRAM] PTR const unsigned char 
  2144 ;;		 -> vfpfcnvrt@ct(3), 
  2145 ;;  _r              2   32[COMRAM] PTR const unsigned char 
  2146 ;;		 -> STR_15(3), 
  2147 ;;  n               2   34[COMRAM] unsigned int 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  r               2   39[COMRAM] PTR const unsigned char 
  2150 ;;		 -> STR_15(3), 
  2151 ;;  l               2   37[COMRAM] PTR const unsigned char 
  2152 ;;		 -> vfpfcnvrt@ct(3), 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2   30[COMRAM] int 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2162 ;;      Params:         6       0       0       0       0       0       0       0       0
  2163 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2164 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2165 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2166 ;;Total ram usage:       11 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 4
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_vfpfcnvrt
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text4
  2177  0035B2                     __ptext4:
  2178                           	callstack 0
  2179  0035B2                     _strncmp:
  2180                           	callstack 23
  2181  0035B2  C01F  F026         	movff	strncmp@_l,strncmp@l
  2182  0035B6  C020  F027         	movff	strncmp@_l+1,strncmp@l+1
  2183  0035BA  C021  F028         	movff	strncmp@_r,strncmp@r
  2184  0035BE  C022  F029         	movff	strncmp@_r+1,strncmp@r+1
  2185  0035C2  0623               	decf	strncmp@n^0,f,c
  2186  0035C4  A0D8               	btfss	status,0,c
  2187  0035C6  0624               	decf	(strncmp@n+1)^0,f,c
  2188  0035C8  2823               	incf	strncmp@n^0,w,c
  2189  0035CA  E106               	bnz	u7961
  2190  0035CC  2824               	incf	(strncmp@n+1)^0,w,c
  2191  0035CE  A4D8               	btfss	status,2,c
  2192  0035D0  EFEC  F01A         	goto	u7961
  2193  0035D4  EFEE  F01A         	goto	u7960
  2194  0035D8                     u7961:
  2195  0035D8  EFFB  F01A         	goto	l5601
  2196  0035DC                     u7960:
  2197  0035DC  0E00               	movlw	0
  2198  0035DE  6E20               	movwf	(?_strncmp+1)^0,c
  2199  0035E0  0E00               	movlw	0
  2200  0035E2  6E1F               	movwf	?_strncmp^0,c
  2201  0035E4  EF43  F01B         	goto	l1059
  2202  0035E8                     l5599:
  2203  0035E8  4A26               	infsnz	strncmp@l^0,f,c
  2204  0035EA  2A27               	incf	(strncmp@l+1)^0,f,c
  2205  0035EC  4A28               	infsnz	strncmp@r^0,f,c
  2206  0035EE  2A29               	incf	(strncmp@r+1)^0,f,c
  2207  0035F0  0623               	decf	strncmp@n^0,f,c
  2208  0035F2  A0D8               	btfss	status,0,c
  2209  0035F4  0624               	decf	(strncmp@n+1)^0,f,c
  2210  0035F6                     l5601:
  2211  0035F6  C026  FFD9         	movff	strncmp@l,fsr2l
  2212  0035FA  C027  FFDA         	movff	strncmp@l+1,fsr2h
  2213  0035FE  50DF               	movf	indf2,w,c
  2214  003600  B4D8               	btfsc	status,2,c
  2215  003602  EF05  F01B         	goto	u7971
  2216  003606  EF07  F01B         	goto	u7970
  2217  00360A                     u7971:
  2218  00360A  EF32  F01B         	goto	l5609
  2219  00360E                     u7970:
  2220  00360E  C028  FFF6         	movff	strncmp@r,tblptrl
  2221  003612  C029  FFF7         	movff	strncmp@r+1,tblptrh
  2222  003616                     	if	0	;tblptru may be non-zero
  2223  003616                     	endif
  2224  003616                     	if	0	;tblptru may be non-zero
  2225  003616                     	endif
  2226  003616  0008               	tblrd		*
  2227  003618  50F5               	movf	tablat,w,c
  2228  00361A  0900               	iorlw	0
  2229  00361C  B4D8               	btfsc	status,2,c
  2230  00361E  EF13  F01B         	goto	u7981
  2231  003622  EF15  F01B         	goto	u7980
  2232  003626                     u7981:
  2233  003626  EF32  F01B         	goto	l5609
  2234  00362A                     u7980:
  2235  00362A  5023               	movf	strncmp@n^0,w,c
  2236  00362C  1024               	iorwf	(strncmp@n+1)^0,w,c
  2237  00362E  B4D8               	btfsc	status,2,c
  2238  003630  EF1C  F01B         	goto	u7991
  2239  003634  EF1E  F01B         	goto	u7990
  2240  003638                     u7991:
  2241  003638  EF32  F01B         	goto	l5609
  2242  00363C                     u7990:
  2243  00363C  C026  FFD9         	movff	strncmp@l,fsr2l
  2244  003640  C027  FFDA         	movff	strncmp@l+1,fsr2h
  2245  003644  50DF               	movf	indf2,w,c
  2246  003646  6E25               	movwf	??_strncmp^0,c
  2247  003648  C028  FFF6         	movff	strncmp@r,tblptrl
  2248  00364C  C029  FFF7         	movff	strncmp@r+1,tblptrh
  2249  003650                     	if	0	;tblptru may be non-zero
  2250  003650                     	endif
  2251  003650                     	if	0	;tblptru may be non-zero
  2252  003650                     	endif
  2253  003650  0008               	tblrd		*
  2254  003652  50F5               	movf	tablat,w,c
  2255  003654  1825               	xorwf	??_strncmp^0,w,c
  2256  003656  B4D8               	btfsc	status,2,c
  2257  003658  EF30  F01B         	goto	u8001
  2258  00365C  EF32  F01B         	goto	u8000
  2259  003660                     u8001:
  2260  003660  EFF4  F01A         	goto	l5599
  2261  003664                     u8000:
  2262  003664                     l5609:
  2263  003664  C026  FFD9         	movff	strncmp@l,fsr2l
  2264  003668  C027  FFDA         	movff	strncmp@l+1,fsr2h
  2265  00366C  50DF               	movf	indf2,w,c
  2266  00366E  6E25               	movwf	??_strncmp^0,c
  2267  003670  C028  FFF6         	movff	strncmp@r,tblptrl
  2268  003674  C029  FFF7         	movff	strncmp@r+1,tblptrh
  2269  003678                     	if	0	;tblptru may be non-zero
  2270  003678                     	endif
  2271  003678                     	if	0	;tblptru may be non-zero
  2272  003678                     	endif
  2273  003678  0008               	tblrd		*
  2274  00367A  50F5               	movf	tablat,w,c
  2275  00367C  5C25               	subwf	??_strncmp^0,w,c
  2276  00367E  6E1F               	movwf	?_strncmp^0,c
  2277  003680  6A20               	clrf	(?_strncmp+1)^0,c
  2278  003682  A0D8               	btfss	status,0,c
  2279  003684  0620               	decf	(?_strncmp+1)^0,f,c
  2280  003686                     l1059:
  2281  003686  0012               	return		;funcret
  2282  003688                     __end_of_strncmp:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _efgtoa *****************
  2286 ;; Defined at:
  2287 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  fp              2   33[BANK0 ] PTR struct _IO_FILE
  2290 ;;		 -> sprintf@f(6), 
  2291 ;;  f               4   35[BANK0 ] PTR struct _IO_FILE
  2292 ;;  c               1   39[BANK0 ] unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  u               4   97[BANK0 ] unsigned char 
  2295 ;;  g               4   89[BANK0 ] unsigned char 
  2296 ;;  l               4   83[BANK0 ] unsigned char 
  2297 ;;  h               4   79[BANK0 ] unsigned char 
  2298 ;;  ou              4   65[BANK0 ] unsigned char 
  2299 ;;  n               2   95[BANK0 ] int 
  2300 ;;  e               2   93[BANK0 ] int 
  2301 ;;  i               2   87[BANK0 ] int 
  2302 ;;  w               2   75[BANK0 ] int 
  2303 ;;  p               2   73[BANK0 ] int 
  2304 ;;  sign            2   71[BANK0 ] int 
  2305 ;;  d               2   69[BANK0 ] int 
  2306 ;;  m               2   63[BANK0 ] int 
  2307 ;;  ne              2   61[BANK0 ] int 
  2308 ;;  pp              2   59[BANK0 ] int 
  2309 ;;  t               2   57[BANK0 ] int 
  2310 ;;  mode            1   78[BANK0 ] unsigned char 
  2311 ;;  nmode           1   77[BANK0 ] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  2   33[BANK0 ] int 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2321 ;;      Params:         0       7       0       0       0       0       0       0       0
  2322 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2323 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2324 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2325 ;;Total ram usage:       68 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 8
  2328 ;; This function calls:
  2329 ;;		___awdiv
  2330 ;;		___awmod
  2331 ;;		___fladd
  2332 ;;		___fldiv
  2333 ;;		___fleq
  2334 ;;		___flge
  2335 ;;		___flmul
  2336 ;;		___flneg
  2337 ;;		___flsub
  2338 ;;		___fltol
  2339 ;;		___fpclassifyf
  2340 ;;		_floorf
  2341 ;;		_isupper
  2342 ;;		_pad
  2343 ;;		_strcpy
  2344 ;;		_tolower
  2345 ;; This function is called by:
  2346 ;;		_vfpfcnvrt
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text5
  2351  00083E                     __ptext5:
  2352                           	callstack 0
  2353  00083E                     _efgtoa:
  2354                           	callstack 19
  2355  00083E                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2357  00083E  0E00               	movlw	0
  2358  000840  0100               	movlb	0	; () banked
  2359  000842  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  2360  000844  0E00               	movlw	0
  2361  000846  6FA7               	movwf	efgtoa@sign& (0+255),b
  2362  000848                     
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2365  000848  C083  F0B9         	movff	efgtoa@f,efgtoa@g
  2366  00084C  C084  F0BA         	movff	efgtoa@f+1,efgtoa@g+1
  2367  000850  C085  F0BB         	movff	efgtoa@f+2,efgtoa@g+2
  2368  000854  C086  F0BC         	movff	efgtoa@f+3,efgtoa@g+3
  2369  000858                     
  2370                           ; BSR set to: 0
  2371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2372  000858  BFBC               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2373  00085A  EF33  F004         	goto	u7350
  2374  00085E  EF31  F004         	goto	u7351
  2375  000862                     u7351:
  2376  000862  EF49  F004         	goto	l5251
  2377  000866                     u7350:
  2378  000866                     
  2379                           ; BSR set to: 0
  2380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2381  000866  0E00               	movlw	0
  2382  000868  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  2383  00086A  0E01               	movlw	1
  2384  00086C  6FA7               	movwf	efgtoa@sign& (0+255),b
  2385  00086E                     
  2386                           ; BSR set to: 0
  2387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2388  00086E  C0B9  F01F         	movff	efgtoa@g,___flneg@f1
  2389  000872  C0BA  F020         	movff	efgtoa@g+1,___flneg@f1+1
  2390  000876  C0BB  F021         	movff	efgtoa@g+2,___flneg@f1+2
  2391  00087A  C0BC  F022         	movff	efgtoa@g+3,___flneg@f1+3
  2392  00087E  EC40  F020         	call	___flneg	;wreg free
  2393  000882  C01F  F0B9         	movff	?___flneg,efgtoa@g
  2394  000886  C020  F0BA         	movff	?___flneg+1,efgtoa@g+1
  2395  00088A  C021  F0BB         	movff	?___flneg+2,efgtoa@g+2
  2396  00088E  C022  F0BC         	movff	?___flneg+3,efgtoa@g+3
  2397  000892                     l5251:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2400  000892  0E00               	movlw	0
  2401  000894  0100               	movlb	0	; () banked
  2402  000896  6FC0               	movwf	(efgtoa@n+1)& (0+255),b
  2403  000898  0E00               	movlw	0
  2404  00089A  6FBF               	movwf	efgtoa@n& (0+255),b
  2405  00089C                     
  2406                           ; BSR set to: 0
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2408  00089C  C0F1  F0AB         	movff	_width,efgtoa@w
  2409  0008A0  C0F2  F0AC         	movff	_width+1,efgtoa@w+1
  2410  0008A4                     
  2411                           ; BSR set to: 0
  2412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2413  0008A4  51A7               	movf	efgtoa@sign& (0+255),w,b
  2414  0008A6  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2415  0008A8  A4D8               	btfss	status,2,c
  2416  0008AA  EF59  F004         	goto	u7361
  2417  0008AE  EF5B  F004         	goto	u7360
  2418  0008B2                     u7361:
  2419  0008B2  EF62  F004         	goto	l5259
  2420  0008B6                     u7360:
  2421  0008B6                     
  2422                           ; BSR set to: 0
  2423  0008B6  A437               	btfss	_flags^0,2,c
  2424  0008B8  EF60  F004         	goto	u7371
  2425  0008BC  EF62  F004         	goto	u7370
  2426  0008C0                     u7371:
  2427  0008C0  EF7C  F004         	goto	l5271
  2428  0008C4                     u7370:
  2429  0008C4                     l5259:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2433  0008C4  51A7               	movf	efgtoa@sign& (0+255),w,b
  2434  0008C6  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2435  0008C8  A4D8               	btfss	status,2,c
  2436  0008CA  EF69  F004         	goto	u7381
  2437  0008CE  EF6B  F004         	goto	u7380
  2438  0008D2                     u7381:
  2439  0008D2  EF71  F004         	goto	l5263
  2440  0008D6                     u7380:
  2441  0008D6                     
  2442                           ; BSR set to: 0
  2443  0008D6  0E00               	movlw	0
  2444  0008D8  6F8E               	movwf	(_efgtoa$942+1)& (0+255),b
  2445  0008DA  0E2B               	movlw	43
  2446  0008DC  6F8D               	movwf	_efgtoa$942& (0+255),b
  2447  0008DE  EF75  F004         	goto	l5265
  2448  0008E2                     l5263:
  2449                           
  2450                           ; BSR set to: 0
  2451  0008E2  0E00               	movlw	0
  2452  0008E4  6F8E               	movwf	(_efgtoa$942+1)& (0+255),b
  2453  0008E6  0E2D               	movlw	45
  2454  0008E8  6F8D               	movwf	_efgtoa$942& (0+255),b
  2455  0008EA                     l5265:
  2456                           
  2457                           ; BSR set to: 0
  2458  0008EA  C08D  F100         	movff	_efgtoa$942,_dbuf
  2459  0008EE                     
  2460                           ; BSR set to: 0
  2461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2462  0008EE  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  2463  0008F0  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  2464  0008F2                     
  2465                           ; BSR set to: 0
  2466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2467  0008F2  07AB               	decf	efgtoa@w& (0+255),f,b
  2468  0008F4  A0D8               	btfss	status,0,c
  2469  0008F6  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  2470  0008F8                     l5271:
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2474  0008F8  C0B9  F01F         	movff	efgtoa@g,___fpclassifyf@x
  2475  0008FC  C0BA  F020         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2476  000900  C0BB  F021         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2477  000904  C0BC  F022         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2478  000908  ECDC  F019         	call	___fpclassifyf	;wreg free
  2479  00090C  041F               	decf	?___fpclassifyf^0,w,c
  2480  00090E  1020               	iorwf	(?___fpclassifyf+1)^0,w,c
  2481  000910  A4D8               	btfss	status,2,c
  2482  000912  EF8D  F004         	goto	u7391
  2483  000916  EF8F  F004         	goto	u7390
  2484  00091A                     u7391:
  2485  00091A  EFE7  F004         	goto	l5289
  2486  00091E                     u7390:
  2487  00091E  0EBF               	movlw	191
  2488  000920  0100               	movlb	0	; () banked
  2489  000922  6F88               	movwf	??_efgtoa& (0+255),b
  2490  000924  0EFF               	movlw	255
  2491  000926  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  2492  000928  5187               	movf	efgtoa@c& (0+255),w,b
  2493  00092A  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  2494  00092C  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  2495  00092E  5188               	movf	??_efgtoa& (0+255),w,b
  2496  000930  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  2497  000932  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  2498  000934  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2499  000936  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  2500  000938  E10A               	bnz	u7400
  2501  00093A  0E1A               	movlw	26
  2502  00093C  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  2503  00093E  A0D8               	btfss	status,0,c
  2504  000940  EFA4  F004         	goto	u7401
  2505  000944  EFA7  F004         	goto	u7400
  2506  000948                     u7401:
  2507  000948  0E01               	movlw	1
  2508  00094A  EFA8  F004         	goto	u7410
  2509  00094E                     u7400:
  2510  00094E  0E00               	movlw	0
  2511  000950                     u7410:
  2512  000950  6F8F               	movwf	_efgtoa$943& (0+255),b
  2513  000952  6B90               	clrf	(_efgtoa$943+1)& (0+255),b
  2514  000954                     
  2515                           ; BSR set to: 0
  2516  000954  518F               	movf	_efgtoa$943& (0+255),w,b
  2517  000956  1190               	iorwf	(_efgtoa$943+1)& (0+255),w,b
  2518  000958  B4D8               	btfsc	status,2,c
  2519  00095A  EFB1  F004         	goto	u7421
  2520  00095E  EFB3  F004         	goto	u7420
  2521  000962                     u7421:
  2522  000962  EFC1  F004         	goto	l5281
  2523  000966                     u7420:
  2524  000966                     
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2527  000966  0E00               	movlw	low _dbuf
  2528  000968  25BF               	addwf	efgtoa@n& (0+255),w,b
  2529  00096A  6E1F               	movwf	strcpy@dest^0,c
  2530  00096C  0E01               	movlw	high _dbuf
  2531  00096E  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2532  000970  6E20               	movwf	(strcpy@dest+1)^0,c
  2533  000972  0E29               	movlw	low STR_5
  2534  000974  6E21               	movwf	strcpy@src^0,c
  2535  000976  0E08               	movlw	high STR_5
  2536  000978  6E22               	movwf	(strcpy@src+1)^0,c
  2537  00097A  ECBF  F01E         	call	_strcpy	;wreg free
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2540  00097E  EFCD  F004         	goto	l5283
  2541  000982                     l5281:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2545  000982  0E00               	movlw	low _dbuf
  2546  000984  25BF               	addwf	efgtoa@n& (0+255),w,b
  2547  000986  6E1F               	movwf	strcpy@dest^0,c
  2548  000988  0E01               	movlw	high _dbuf
  2549  00098A  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2550  00098C  6E20               	movwf	(strcpy@dest+1)^0,c
  2551  00098E  0E31               	movlw	low STR_6
  2552  000990  6E21               	movwf	strcpy@src^0,c
  2553  000992  0E08               	movlw	high STR_6
  2554  000994  6E22               	movwf	(strcpy@src+1)^0,c
  2555  000996  ECBF  F01E         	call	_strcpy	;wreg free
  2556  00099A                     l5283:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2559  00099A  0100               	movlb	0	; () banked
  2560  00099C  0EFD               	movlw	253
  2561  00099E  27AB               	addwf	efgtoa@w& (0+255),f,b
  2562  0009A0  0EFF               	movlw	255
  2563  0009A2  23AC               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2564  0009A4                     l5285:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2567  0009A4  C081  F064         	movff	efgtoa@fp,pad@fp
  2568  0009A8  C082  F065         	movff	efgtoa@fp+1,pad@fp+1
  2569  0009AC  0E00               	movlw	low _dbuf
  2570  0009AE  0100               	movlb	0	; () banked
  2571  0009B0  6F66               	movwf	pad@buf& (0+255),b
  2572  0009B2  0E01               	movlw	high _dbuf
  2573  0009B4  6F67               	movwf	(pad@buf+1)& (0+255),b
  2574  0009B6  C0AB  F068         	movff	efgtoa@w,pad@p
  2575  0009BA  C0AC  F069         	movff	efgtoa@w+1,pad@p+1
  2576  0009BE  EC12  F01C         	call	_pad	;wreg free
  2577  0009C2  C064  F081         	movff	?_pad,?_efgtoa
  2578  0009C6  C065  F082         	movff	?_pad+1,?_efgtoa+1
  2579  0009CA  EF4D  F00A         	goto	l829
  2580  0009CE                     l5289:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2583  0009CE  C0B9  F01F         	movff	efgtoa@g,___fpclassifyf@x
  2584  0009D2  C0BA  F020         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2585  0009D6  C0BB  F021         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2586  0009DA  C0BC  F022         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2587  0009DE  ECDC  F019         	call	___fpclassifyf	;wreg free
  2588  0009E2  501F               	movf	?___fpclassifyf^0,w,c
  2589  0009E4  1020               	iorwf	(?___fpclassifyf+1)^0,w,c
  2590  0009E6  A4D8               	btfss	status,2,c
  2591  0009E8  EFF8  F004         	goto	u7431
  2592  0009EC  EFFA  F004         	goto	u7430
  2593  0009F0                     u7431:
  2594  0009F0  EF3A  F005         	goto	l5307
  2595  0009F4                     u7430:
  2596  0009F4  0EBF               	movlw	191
  2597  0009F6  0100               	movlb	0	; () banked
  2598  0009F8  6F88               	movwf	??_efgtoa& (0+255),b
  2599  0009FA  0EFF               	movlw	255
  2600  0009FC  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  2601  0009FE  5187               	movf	efgtoa@c& (0+255),w,b
  2602  000A00  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  2603  000A02  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  2604  000A04  5188               	movf	??_efgtoa& (0+255),w,b
  2605  000A06  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  2606  000A08  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  2607  000A0A  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2608  000A0C  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  2609  000A0E  E10A               	bnz	u7440
  2610  000A10  0E1A               	movlw	26
  2611  000A12  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  2612  000A14  A0D8               	btfss	status,0,c
  2613  000A16  EF0F  F005         	goto	u7441
  2614  000A1A  EF12  F005         	goto	u7440
  2615  000A1E                     u7441:
  2616  000A1E  0E01               	movlw	1
  2617  000A20  EF13  F005         	goto	u7450
  2618  000A24                     u7440:
  2619  000A24  0E00               	movlw	0
  2620  000A26                     u7450:
  2621  000A26  6F91               	movwf	_efgtoa$948& (0+255),b
  2622  000A28  6B92               	clrf	(_efgtoa$948+1)& (0+255),b
  2623  000A2A                     
  2624                           ; BSR set to: 0
  2625  000A2A  5191               	movf	_efgtoa$948& (0+255),w,b
  2626  000A2C  1192               	iorwf	(_efgtoa$948+1)& (0+255),w,b
  2627  000A2E  B4D8               	btfsc	status,2,c
  2628  000A30  EF1C  F005         	goto	u7461
  2629  000A34  EF1E  F005         	goto	u7460
  2630  000A38                     u7461:
  2631  000A38  EF2C  F005         	goto	l5299
  2632  000A3C                     u7460:
  2633  000A3C                     
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2636  000A3C  0E00               	movlw	low _dbuf
  2637  000A3E  25BF               	addwf	efgtoa@n& (0+255),w,b
  2638  000A40  6E1F               	movwf	strcpy@dest^0,c
  2639  000A42  0E01               	movlw	high _dbuf
  2640  000A44  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2641  000A46  6E20               	movwf	(strcpy@dest+1)^0,c
  2642  000A48  0E2D               	movlw	low STR_9
  2643  000A4A  6E21               	movwf	strcpy@src^0,c
  2644  000A4C  0E08               	movlw	high STR_9
  2645  000A4E  6E22               	movwf	(strcpy@src+1)^0,c
  2646  000A50  ECBF  F01E         	call	_strcpy	;wreg free
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2649  000A54  EFCD  F004         	goto	l5283
  2650  000A58                     l5299:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2654  000A58  0E00               	movlw	low _dbuf
  2655  000A5A  25BF               	addwf	efgtoa@n& (0+255),w,b
  2656  000A5C  6E1F               	movwf	strcpy@dest^0,c
  2657  000A5E  0E01               	movlw	high _dbuf
  2658  000A60  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2659  000A62  6E20               	movwf	(strcpy@dest+1)^0,c
  2660  000A64  0E35               	movlw	low STR_10
  2661  000A66  6E21               	movwf	strcpy@src^0,c
  2662  000A68  0E08               	movlw	high STR_10
  2663  000A6A  6E22               	movwf	(strcpy@src+1)^0,c
  2664  000A6C  ECBF  F01E         	call	_strcpy	;wreg free
  2665  000A70  EFCD  F004         	goto	l5283
  2666  000A74                     l5307:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2669  000A74  0E00               	movlw	0
  2670  000A76  0100               	movlb	0	; () banked
  2671  000A78  6FC1               	movwf	efgtoa@u& (0+255),b
  2672  000A7A  0E00               	movlw	0
  2673  000A7C  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  2674  000A7E  0E80               	movlw	128
  2675  000A80  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  2676  000A82  0E3F               	movlw	63
  2677  000A84  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2680  000A86  0E00               	movlw	0
  2681  000A88  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  2682  000A8A  0E00               	movlw	0
  2683  000A8C  6FBD               	movwf	efgtoa@e& (0+255),b
  2684  000A8E                     
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2687  000A8E  C0B9  F01F         	movff	efgtoa@g,___fleq@ff1
  2688  000A92  C0BA  F020         	movff	efgtoa@g+1,___fleq@ff1+1
  2689  000A96  C0BB  F021         	movff	efgtoa@g+2,___fleq@ff1+2
  2690  000A9A  C0BC  F022         	movff	efgtoa@g+3,___fleq@ff1+3
  2691  000A9E  0E00               	movlw	0
  2692  000AA0  6E23               	movwf	___fleq@ff2^0,c
  2693  000AA2  0E00               	movlw	0
  2694  000AA4  6E24               	movwf	(___fleq@ff2+1)^0,c
  2695  000AA6  0E00               	movlw	0
  2696  000AA8  6E25               	movwf	(___fleq@ff2+2)^0,c
  2697  000AAA  0E00               	movlw	0
  2698  000AAC  6E26               	movwf	(___fleq@ff2+3)^0,c
  2699  000AAE  EC89  F01D         	call	___fleq	;wreg free
  2700  000AB2  B0D8               	btfsc	status,0,c
  2701  000AB4  EF5E  F005         	goto	u7471
  2702  000AB8  EF60  F005         	goto	u7470
  2703  000ABC                     u7471:
  2704  000ABC  EFE5  F005         	goto	l5325
  2705  000AC0                     u7470:
  2706  000AC0  EF7F  F005         	goto	l5317
  2707  000AC4                     l5313:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2711  000AC4  C0C1  F01F         	movff	efgtoa@u,___flmul@b
  2712  000AC8  C0C2  F020         	movff	efgtoa@u+1,___flmul@b+1
  2713  000ACC  C0C3  F021         	movff	efgtoa@u+2,___flmul@b+2
  2714  000AD0  C0C4  F022         	movff	efgtoa@u+3,___flmul@b+3
  2715  000AD4  0E00               	movlw	0
  2716  000AD6  6E23               	movwf	___flmul@a^0,c
  2717  000AD8  0E00               	movlw	0
  2718  000ADA  6E24               	movwf	(___flmul@a+1)^0,c
  2719  000ADC  0E20               	movlw	32
  2720  000ADE  6E25               	movwf	(___flmul@a+2)^0,c
  2721  000AE0  0E41               	movlw	65
  2722  000AE2  6E26               	movwf	(___flmul@a+3)^0,c
  2723  000AE4  ECC5  F011         	call	___flmul	;wreg free
  2724  000AE8  C01F  F0C1         	movff	?___flmul,efgtoa@u
  2725  000AEC  C020  F0C2         	movff	?___flmul+1,efgtoa@u+1
  2726  000AF0  C021  F0C3         	movff	?___flmul+2,efgtoa@u+2
  2727  000AF4  C022  F0C4         	movff	?___flmul+3,efgtoa@u+3
  2728  000AF8                     
  2729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2730  000AF8  0100               	movlb	0	; () banked
  2731  000AFA  4BBD               	infsnz	efgtoa@e& (0+255),f,b
  2732  000AFC  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  2733  000AFE                     l5317:
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2736  000AFE  C0B9  F06D         	movff	efgtoa@g,___flge@ff1
  2737  000B02  C0BA  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  2738  000B06  C0BB  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  2739  000B0A  C0BC  F070         	movff	efgtoa@g+3,___flge@ff1+3
  2740  000B0E  0E00               	movlw	0
  2741  000B10  6E23               	movwf	___flmul@a^0,c
  2742  000B12  0E00               	movlw	0
  2743  000B14  6E24               	movwf	(___flmul@a+1)^0,c
  2744  000B16  0E20               	movlw	32
  2745  000B18  6E25               	movwf	(___flmul@a+2)^0,c
  2746  000B1A  0E41               	movlw	65
  2747  000B1C  6E26               	movwf	(___flmul@a+3)^0,c
  2748  000B1E  C0C1  F01F         	movff	efgtoa@u,___flmul@b
  2749  000B22  C0C2  F020         	movff	efgtoa@u+1,___flmul@b+1
  2750  000B26  C0C3  F021         	movff	efgtoa@u+2,___flmul@b+2
  2751  000B2A  C0C4  F022         	movff	efgtoa@u+3,___flmul@b+3
  2752  000B2E  ECC5  F011         	call	___flmul	;wreg free
  2753  000B32  C01F  F071         	movff	?___flmul,___flge@ff2
  2754  000B36  C020  F072         	movff	?___flmul+1,___flge@ff2+1
  2755  000B3A  C021  F073         	movff	?___flmul+2,___flge@ff2+2
  2756  000B3E  C022  F074         	movff	?___flmul+3,___flge@ff2+3
  2757  000B42  ECD7  F018         	call	___flge	;wreg free
  2758  000B46  0100               	movlb	0	; () banked
  2759  000B48  B0D8               	btfsc	status,0,c
  2760  000B4A  EFA9  F005         	goto	u7481
  2761  000B4E  EFAB  F005         	goto	u7480
  2762  000B52                     u7481:
  2763  000B52  EF62  F005         	goto	l5313
  2764  000B56                     u7480:
  2765  000B56  EFCB  F005         	goto	l5323
  2766  000B5A                     l5319:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2770  000B5A  C0C1  F01F         	movff	efgtoa@u,___fldiv@b
  2771  000B5E  C0C2  F020         	movff	efgtoa@u+1,___fldiv@b+1
  2772  000B62  C0C3  F021         	movff	efgtoa@u+2,___fldiv@b+2
  2773  000B66  C0C4  F022         	movff	efgtoa@u+3,___fldiv@b+3
  2774  000B6A  0E00               	movlw	0
  2775  000B6C  6E23               	movwf	___fldiv@a^0,c
  2776  000B6E  0E00               	movlw	0
  2777  000B70  6E24               	movwf	(___fldiv@a+1)^0,c
  2778  000B72  0E20               	movlw	32
  2779  000B74  6E25               	movwf	(___fldiv@a+2)^0,c
  2780  000B76  0E41               	movlw	65
  2781  000B78  6E26               	movwf	(___fldiv@a+3)^0,c
  2782  000B7A  ECDB  F013         	call	___fldiv	;wreg free
  2783  000B7E  C01F  F0C1         	movff	?___fldiv,efgtoa@u
  2784  000B82  C020  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  2785  000B86  C021  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  2786  000B8A  C022  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  2787  000B8E                     
  2788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2789  000B8E  0100               	movlb	0	; () banked
  2790  000B90  07BD               	decf	efgtoa@e& (0+255),f,b
  2791  000B92  A0D8               	btfss	status,0,c
  2792  000B94  07BE               	decf	(efgtoa@e+1)& (0+255),f,b
  2793  000B96                     l5323:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2797  000B96  C0B9  F06D         	movff	efgtoa@g,___flge@ff1
  2798  000B9A  C0BA  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  2799  000B9E  C0BB  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  2800  000BA2  C0BC  F070         	movff	efgtoa@g+3,___flge@ff1+3
  2801  000BA6  C0C1  F071         	movff	efgtoa@u,___flge@ff2
  2802  000BAA  C0C2  F072         	movff	efgtoa@u+1,___flge@ff2+1
  2803  000BAE  C0C3  F073         	movff	efgtoa@u+2,___flge@ff2+2
  2804  000BB2  C0C4  F074         	movff	efgtoa@u+3,___flge@ff2+3
  2805  000BB6  ECD7  F018         	call	___flge	;wreg free
  2806  000BBA  0100               	movlb	0	; () banked
  2807  000BBC  A0D8               	btfss	status,0,c
  2808  000BBE  EFE3  F005         	goto	u7491
  2809  000BC2  EFE5  F005         	goto	u7490
  2810  000BC6                     u7491:
  2811  000BC6  EFAD  F005         	goto	l5319
  2812  000BCA                     u7490:
  2813  000BCA                     l5325:
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2816  000BCA  C087  F025         	movff	efgtoa@c,tolower@c
  2817  000BCE  6A26               	clrf	(tolower@c+1)^0,c
  2818  000BD0  EC8E  F01E         	call	_tolower	;wreg free
  2819  000BD4  5025               	movf	?_tolower^0,w,c
  2820  000BD6  0100               	movlb	0	; () banked
  2821  000BD8  6FAE               	movwf	efgtoa@mode& (0+255),b
  2822  000BDA                     
  2823                           ; BSR set to: 0
  2824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2825  000BDA  C0AE  F0AD         	movff	efgtoa@mode,efgtoa@nmode
  2826  000BDE                     
  2827                           ; BSR set to: 0
  2828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2829  000BDE  0E67               	movlw	103
  2830  000BE0  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  2831  000BE2  A4D8               	btfss	status,2,c
  2832  000BE4  EFF6  F005         	goto	u7501
  2833  000BE8  EFF8  F005         	goto	u7500
  2834  000BEC                     u7501:
  2835  000BEC  EF1E  F006         	goto	l5339
  2836  000BF0                     u7500:
  2837  000BF0                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2840  000BF0  51F3               	movf	_prec& (0+255),w,b
  2841  000BF2  11F4               	iorwf	(_prec+1)& (0+255),w,b
  2842  000BF4  A4D8               	btfss	status,2,c
  2843  000BF6  EFFF  F005         	goto	u7511
  2844  000BFA  EF01  F006         	goto	u7510
  2845  000BFE                     u7511:
  2846  000BFE  EF05  F006         	goto	l5335
  2847  000C02                     u7510:
  2848  000C02                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2851  000C02  0E00               	movlw	0
  2852  000C04  6FF4               	movwf	(_prec+1)& (0+255),b
  2853  000C06  0E01               	movlw	1
  2854  000C08  6FF3               	movwf	_prec& (0+255),b
  2855  000C0A                     l5335:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2859  000C0A  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  2860  000C0C  EF12  F006         	goto	u7520
  2861  000C10  51F4               	movf	(_prec+1)& (0+255),w,b
  2862  000C12  E106               	bnz	u7521
  2863  000C14  05F3               	decf	_prec& (0+255),w,b
  2864  000C16  B0D8               	btfsc	status,0,c
  2865  000C18  EF10  F006         	goto	u7521
  2866  000C1C  EF12  F006         	goto	u7520
  2867  000C20                     u7521:
  2868  000C20  EF18  F006         	goto	l847
  2869  000C24                     u7520:
  2870  000C24                     l5337:
  2871                           
  2872                           ; BSR set to: 0
  2873  000C24  0E00               	movlw	0
  2874  000C26  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  2875  000C28  0E06               	movlw	6
  2876  000C2A  6FA9               	movwf	efgtoa@p& (0+255),b
  2877  000C2C  EF27  F006         	goto	l5345
  2878  000C30                     l847:
  2879                           
  2880                           ; BSR set to: 0
  2881  000C30  C0F3  F0A9         	movff	_prec,efgtoa@p
  2882  000C34  C0F4  F0AA         	movff	_prec+1,efgtoa@p+1
  2883  000C38  EF27  F006         	goto	l5345
  2884  000C3C                     l5339:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2888  000C3C  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  2889  000C3E  EF23  F006         	goto	u7531
  2890  000C42  EF25  F006         	goto	u7530
  2891  000C46                     u7531:
  2892  000C46  EF12  F006         	goto	l5337
  2893  000C4A                     u7530:
  2894  000C4A  EF18  F006         	goto	l847
  2895  000C4E                     l5345:
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2899  000C4E  0E67               	movlw	103
  2900  000C50  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  2901  000C52  A4D8               	btfss	status,2,c
  2902  000C54  EF2E  F006         	goto	u7541
  2903  000C58  EF30  F006         	goto	u7540
  2904  000C5C                     u7541:
  2905  000C5C  EF5F  F006         	goto	l5355
  2906  000C60                     u7540:
  2907  000C60                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2910  000C60  AFBE               	btfss	(efgtoa@e+1)& (0+255),7,b
  2911  000C62  EF3E  F006         	goto	u7550
  2912  000C66  0EFC               	movlw	252
  2913  000C68  5DBD               	subwf	efgtoa@e& (0+255),w,b
  2914  000C6A  0EFF               	movlw	255
  2915  000C6C  59BE               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2916  000C6E  A0D8               	btfss	status,0,c
  2917  000C70  EF3C  F006         	goto	u7551
  2918  000C74  EF3E  F006         	goto	u7550
  2919  000C78                     u7551:
  2920  000C78  EF5D  F006         	goto	l5353
  2921  000C7C                     u7550:
  2922  000C7C                     
  2923                           ; BSR set to: 0
  2924  000C7C  0EFF               	movlw	255
  2925  000C7E  6F88               	movwf	??_efgtoa& (0+255),b
  2926  000C80  0EFF               	movlw	255
  2927  000C82  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  2928  000C84  C0A9  F08A         	movff	efgtoa@p,??_efgtoa+2
  2929  000C88  C0AA  F08B         	movff	efgtoa@p+1,??_efgtoa+3
  2930  000C8C  5188               	movf	??_efgtoa& (0+255),w,b
  2931  000C8E  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  2932  000C90  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  2933  000C92  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2934  000C94  51BD               	movf	efgtoa@e& (0+255),w,b
  2935  000C96  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  2936  000C98  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  2937  000C9A  0A80               	xorlw	128
  2938  000C9C  6F8C               	movwf	(??_efgtoa+4)& (0+255),b
  2939  000C9E  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  2940  000CA0  0A80               	xorlw	128
  2941  000CA2  598C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2942  000CA4  A0D8               	btfss	status,0,c
  2943  000CA6  EF57  F006         	goto	u7561
  2944  000CAA  EF59  F006         	goto	u7560
  2945  000CAE                     u7561:
  2946  000CAE  EF5D  F006         	goto	l5353
  2947  000CB2                     u7560:
  2948  000CB2                     
  2949                           ; BSR set to: 0
  2950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2951  000CB2  0E66               	movlw	102
  2952  000CB4  6FAD               	movwf	efgtoa@nmode& (0+255),b
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2955  000CB6  EF5F  F006         	goto	l5355
  2956  000CBA                     l5353:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2960  000CBA  0E65               	movlw	101
  2961  000CBC  6FAD               	movwf	efgtoa@nmode& (0+255),b
  2962  000CBE                     l5355:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2966  000CBE  C0A9  F09F         	movff	efgtoa@p,efgtoa@m
  2967  000CC2  C0AA  F0A0         	movff	efgtoa@p+1,efgtoa@m+1
  2968  000CC6                     
  2969                           ; BSR set to: 0
  2970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2971  000CC6  0E67               	movlw	103
  2972  000CC8  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  2973  000CCA  A4D8               	btfss	status,2,c
  2974  000CCC  EF6A  F006         	goto	u7571
  2975  000CD0  EF6C  F006         	goto	u7570
  2976  000CD4                     u7571:
  2977  000CD4  EF7C  F006         	goto	l5363
  2978  000CD8                     u7570:
  2979  000CD8                     
  2980                           ; BSR set to: 0
  2981  000CD8  0E66               	movlw	102
  2982  000CDA  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  2983  000CDC  A4D8               	btfss	status,2,c
  2984  000CDE  EF73  F006         	goto	u7581
  2985  000CE2  EF75  F006         	goto	u7580
  2986  000CE6                     u7581:
  2987  000CE6  EF7E  F006         	goto	l5365
  2988  000CEA                     u7580:
  2989  000CEA                     
  2990                           ; BSR set to: 0
  2991  000CEA  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2992  000CEC  EF7C  F006         	goto	u7590
  2993  000CF0  EF7A  F006         	goto	u7591
  2994  000CF4                     u7591:
  2995  000CF4  EF7E  F006         	goto	l5365
  2996  000CF8                     u7590:
  2997  000CF8                     l5363:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3001  000CF8  4B9F               	infsnz	efgtoa@m& (0+255),f,b
  3002  000CFA  2BA0               	incf	(efgtoa@m+1)& (0+255),f,b
  3003  000CFC                     l5365:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3007  000CFC  0E66               	movlw	102
  3008  000CFE  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3009  000D00  A4D8               	btfss	status,2,c
  3010  000D02  EF85  F006         	goto	u7601
  3011  000D06  EF87  F006         	goto	u7600
  3012  000D0A                     u7601:
  3013  000D0A  EFA7  F006         	goto	l5375
  3014  000D0E                     u7600:
  3015  000D0E                     
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3018  000D0E  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3019  000D10  EF8E  F006         	goto	u7610
  3020  000D14  EF8C  F006         	goto	u7611
  3021  000D18                     u7611:
  3022  000D18  EF9A  F006         	goto	l5371
  3023  000D1C                     u7610:
  3024  000D1C                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3027  000D1C  0E00               	movlw	0
  3028  000D1E  6FC1               	movwf	efgtoa@u& (0+255),b
  3029  000D20  0E00               	movlw	0
  3030  000D22  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  3031  000D24  0E80               	movlw	128
  3032  000D26  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  3033  000D28  0E3F               	movlw	63
  3034  000D2A  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3037  000D2C  0E00               	movlw	0
  3038  000D2E  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  3039  000D30  0E00               	movlw	0
  3040  000D32  6FBD               	movwf	efgtoa@e& (0+255),b
  3041  000D34                     l5371:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3045  000D34  0E67               	movlw	103
  3046  000D36  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3047  000D38  B4D8               	btfsc	status,2,c
  3048  000D3A  EFA1  F006         	goto	u7621
  3049  000D3E  EFA3  F006         	goto	u7620
  3050  000D42                     u7621:
  3051  000D42  EFA7  F006         	goto	l5375
  3052  000D46                     u7620:
  3053  000D46                     
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3056  000D46  51BD               	movf	efgtoa@e& (0+255),w,b
  3057  000D48  279F               	addwf	efgtoa@m& (0+255),f,b
  3058  000D4A  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  3059  000D4C  23A0               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3060  000D4E                     l5375:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3064  000D4E  0E00               	movlw	0
  3065  000D50  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3066  000D52  0E00               	movlw	0
  3067  000D54  6FB7               	movwf	efgtoa@i& (0+255),b
  3068  000D56                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3071  000D56  C0B9  F0AF         	movff	efgtoa@g,efgtoa@h
  3072  000D5A  C0BA  F0B0         	movff	efgtoa@g+1,efgtoa@h+1
  3073  000D5E  C0BB  F0B1         	movff	efgtoa@g+2,efgtoa@h+2
  3074  000D62  C0BC  F0B2         	movff	efgtoa@g+3,efgtoa@h+3
  3075  000D66                     
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3078  000D66  C0C1  F0A1         	movff	efgtoa@u,efgtoa@ou
  3079  000D6A  C0C2  F0A2         	movff	efgtoa@u+1,efgtoa@ou+1
  3080  000D6E  C0C3  F0A3         	movff	efgtoa@u+2,efgtoa@ou+2
  3081  000D72  C0C4  F0A4         	movff	efgtoa@u+3,efgtoa@ou+3
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3084  000D76  EF38  F007         	goto	l5389
  3085  000D7A                     l5381:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3089  000D7A  C0AF  F01F         	movff	efgtoa@h,___fldiv@b
  3090  000D7E  C0B0  F020         	movff	efgtoa@h+1,___fldiv@b+1
  3091  000D82  C0B1  F021         	movff	efgtoa@h+2,___fldiv@b+2
  3092  000D86  C0B2  F022         	movff	efgtoa@h+3,___fldiv@b+3
  3093  000D8A  C0C1  F023         	movff	efgtoa@u,___fldiv@a
  3094  000D8E  C0C2  F024         	movff	efgtoa@u+1,___fldiv@a+1
  3095  000D92  C0C3  F025         	movff	efgtoa@u+2,___fldiv@a+2
  3096  000D96  C0C4  F026         	movff	efgtoa@u+3,___fldiv@a+3
  3097  000D9A  ECDB  F013         	call	___fldiv	;wreg free
  3098  000D9E  C01F  F06D         	movff	?___fldiv,floorf@x
  3099  000DA2  C020  F06E         	movff	?___fldiv+1,floorf@x+1
  3100  000DA6  C021  F06F         	movff	?___fldiv+2,floorf@x+2
  3101  000DAA  C022  F070         	movff	?___fldiv+3,floorf@x+3
  3102  000DAE  ECA9  F015         	call	_floorf	;wreg free
  3103  000DB2  C06D  F0B3         	movff	?_floorf,efgtoa@l
  3104  000DB6  C06E  F0B4         	movff	?_floorf+1,efgtoa@l+1
  3105  000DBA  C06F  F0B5         	movff	?_floorf+2,efgtoa@l+2
  3106  000DBE  C070  F0B6         	movff	?_floorf+3,efgtoa@l+3
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3109  000DC2  C0B3  F01F         	movff	efgtoa@l,___fltol@f1
  3110  000DC6  C0B4  F020         	movff	efgtoa@l+1,___fltol@f1+1
  3111  000DCA  C0B5  F021         	movff	efgtoa@l+2,___fltol@f1+2
  3112  000DCE  C0B6  F022         	movff	efgtoa@l+3,___fltol@f1+3
  3113  000DD2  EC54  F018         	call	___fltol	;wreg free
  3114  000DD6  C01F  F0A5         	movff	?___fltol,efgtoa@d
  3115  000DDA  C020  F0A6         	movff	?___fltol+1,efgtoa@d+1
  3116  000DDE                     
  3117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3118  000DDE  C0AF  F06D         	movff	efgtoa@h,___flsub@b
  3119  000DE2  C0B0  F06E         	movff	efgtoa@h+1,___flsub@b+1
  3120  000DE6  C0B1  F06F         	movff	efgtoa@h+2,___flsub@b+2
  3121  000DEA  C0B2  F070         	movff	efgtoa@h+3,___flsub@b+3
  3122  000DEE  C0C1  F023         	movff	efgtoa@u,___flmul@a
  3123  000DF2  C0C2  F024         	movff	efgtoa@u+1,___flmul@a+1
  3124  000DF6  C0C3  F025         	movff	efgtoa@u+2,___flmul@a+2
  3125  000DFA  C0C4  F026         	movff	efgtoa@u+3,___flmul@a+3
  3126  000DFE  C0B3  F01F         	movff	efgtoa@l,___flmul@b
  3127  000E02  C0B4  F020         	movff	efgtoa@l+1,___flmul@b+1
  3128  000E06  C0B5  F021         	movff	efgtoa@l+2,___flmul@b+2
  3129  000E0A  C0B6  F022         	movff	efgtoa@l+3,___flmul@b+3
  3130  000E0E  ECC5  F011         	call	___flmul	;wreg free
  3131  000E12  C01F  F071         	movff	?___flmul,___flsub@a
  3132  000E16  C020  F072         	movff	?___flmul+1,___flsub@a+1
  3133  000E1A  C021  F073         	movff	?___flmul+2,___flsub@a+2
  3134  000E1E  C022  F074         	movff	?___flmul+3,___flsub@a+3
  3135  000E22  ECBA  F01F         	call	___flsub	;wreg free
  3136  000E26  C06D  F0AF         	movff	?___flsub,efgtoa@h
  3137  000E2A  C06E  F0B0         	movff	?___flsub+1,efgtoa@h+1
  3138  000E2E  C06F  F0B1         	movff	?___flsub+2,efgtoa@h+2
  3139  000E32  C070  F0B2         	movff	?___flsub+3,efgtoa@h+3
  3140  000E36                     
  3141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3142  000E36  C0C1  F01F         	movff	efgtoa@u,___fldiv@b
  3143  000E3A  C0C2  F020         	movff	efgtoa@u+1,___fldiv@b+1
  3144  000E3E  C0C3  F021         	movff	efgtoa@u+2,___fldiv@b+2
  3145  000E42  C0C4  F022         	movff	efgtoa@u+3,___fldiv@b+3
  3146  000E46  0E00               	movlw	0
  3147  000E48  6E23               	movwf	___fldiv@a^0,c
  3148  000E4A  0E00               	movlw	0
  3149  000E4C  6E24               	movwf	(___fldiv@a+1)^0,c
  3150  000E4E  0E20               	movlw	32
  3151  000E50  6E25               	movwf	(___fldiv@a+2)^0,c
  3152  000E52  0E41               	movlw	65
  3153  000E54  6E26               	movwf	(___fldiv@a+3)^0,c
  3154  000E56  ECDB  F013         	call	___fldiv	;wreg free
  3155  000E5A  C01F  F0C1         	movff	?___fldiv,efgtoa@u
  3156  000E5E  C020  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3157  000E62  C021  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3158  000E66  C022  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3159  000E6A                     
  3160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3161  000E6A  0100               	movlb	0	; () banked
  3162  000E6C  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  3163  000E6E  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  3164  000E70                     l5389:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3168  000E70  519F               	movf	efgtoa@m& (0+255),w,b
  3169  000E72  5DB7               	subwf	efgtoa@i& (0+255),w,b
  3170  000E74  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  3171  000E76  0A80               	xorlw	128
  3172  000E78  6F88               	movwf	??_efgtoa& (0+255),b
  3173  000E7A  51A0               	movf	(efgtoa@m+1)& (0+255),w,b
  3174  000E7C  0A80               	xorlw	128
  3175  000E7E  5988               	subwfb	??_efgtoa& (0+255),w,b
  3176  000E80  A0D8               	btfss	status,0,c
  3177  000E82  EF45  F007         	goto	u7631
  3178  000E86  EF47  F007         	goto	u7630
  3179  000E8A                     u7631:
  3180  000E8A  EFBD  F006         	goto	l5381
  3181  000E8E                     u7630:
  3182  000E8E                     
  3183                           ; BSR set to: 0
  3184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3185  000E8E  C0C1  F01F         	movff	efgtoa@u,___flmul@b
  3186  000E92  C0C2  F020         	movff	efgtoa@u+1,___flmul@b+1
  3187  000E96  C0C3  F021         	movff	efgtoa@u+2,___flmul@b+2
  3188  000E9A  C0C4  F022         	movff	efgtoa@u+3,___flmul@b+3
  3189  000E9E  0E00               	movlw	0
  3190  000EA0  6E23               	movwf	___flmul@a^0,c
  3191  000EA2  0E00               	movlw	0
  3192  000EA4  6E24               	movwf	(___flmul@a+1)^0,c
  3193  000EA6  0EA0               	movlw	160
  3194  000EA8  6E25               	movwf	(___flmul@a+2)^0,c
  3195  000EAA  0E40               	movlw	64
  3196  000EAC  6E26               	movwf	(___flmul@a+3)^0,c
  3197  000EAE  ECC5  F011         	call	___flmul	;wreg free
  3198  000EB2  C01F  F0B3         	movff	?___flmul,efgtoa@l
  3199  000EB6  C020  F0B4         	movff	?___flmul+1,efgtoa@l+1
  3200  000EBA  C021  F0B5         	movff	?___flmul+2,efgtoa@l+2
  3201  000EBE  C022  F0B6         	movff	?___flmul+3,efgtoa@l+3
  3202  000EC2                     
  3203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3204  000EC2  C0AF  F06D         	movff	efgtoa@h,___flge@ff1
  3205  000EC6  C0B0  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  3206  000ECA  C0B1  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  3207  000ECE  C0B2  F070         	movff	efgtoa@h+3,___flge@ff1+3
  3208  000ED2  C0B3  F071         	movff	efgtoa@l,___flge@ff2
  3209  000ED6  C0B4  F072         	movff	efgtoa@l+1,___flge@ff2+1
  3210  000EDA  C0B5  F073         	movff	efgtoa@l+2,___flge@ff2+2
  3211  000EDE  C0B6  F074         	movff	efgtoa@l+3,___flge@ff2+3
  3212  000EE2  ECD7  F018         	call	___flge	;wreg free
  3213  000EE6  0100               	movlb	0	; () banked
  3214  000EE8  B0D8               	btfsc	status,0,c
  3215  000EEA  EF79  F007         	goto	u7641
  3216  000EEE  EF7B  F007         	goto	u7640
  3217  000EF2                     u7641:
  3218  000EF2  EF85  F007         	goto	l5397
  3219  000EF6                     u7640:
  3220  000EF6                     
  3221                           ; BSR set to: 0
  3222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3223  000EF6  0E00               	movlw	0
  3224  000EF8  6FB3               	movwf	efgtoa@l& (0+255),b
  3225  000EFA  0E00               	movlw	0
  3226  000EFC  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3227  000EFE  0E00               	movlw	0
  3228  000F00  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3229  000F02  0E00               	movlw	0
  3230  000F04  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3233  000F06  EFAE  F007         	goto	l5403
  3234  000F0A                     l5397:
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3238  000F0A  C0AF  F01F         	movff	efgtoa@h,___fleq@ff1
  3239  000F0E  C0B0  F020         	movff	efgtoa@h+1,___fleq@ff1+1
  3240  000F12  C0B1  F021         	movff	efgtoa@h+2,___fleq@ff1+2
  3241  000F16  C0B2  F022         	movff	efgtoa@h+3,___fleq@ff1+3
  3242  000F1A  C0B3  F023         	movff	efgtoa@l,___fleq@ff2
  3243  000F1E  C0B4  F024         	movff	efgtoa@l+1,___fleq@ff2+1
  3244  000F22  C0B5  F025         	movff	efgtoa@l+2,___fleq@ff2+2
  3245  000F26  C0B6  F026         	movff	efgtoa@l+3,___fleq@ff2+3
  3246  000F2A  EC89  F01D         	call	___fleq	;wreg free
  3247  000F2E  A0D8               	btfss	status,0,c
  3248  000F30  EF9C  F007         	goto	u7651
  3249  000F34  EF9E  F007         	goto	u7650
  3250  000F38                     u7651:
  3251  000F38  EFAE  F007         	goto	l5403
  3252  000F3C                     u7650:
  3253  000F3C  0100               	movlb	0	; () banked
  3254  000F3E  B1A5               	btfsc	efgtoa@d& (0+255),0,b
  3255  000F40  EFA4  F007         	goto	u7661
  3256  000F44  EFA6  F007         	goto	u7660
  3257  000F48                     u7661:
  3258  000F48  EFAE  F007         	goto	l5403
  3259  000F4C                     u7660:
  3260  000F4C                     
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3263  000F4C  0E00               	movlw	0
  3264  000F4E  6FB3               	movwf	efgtoa@l& (0+255),b
  3265  000F50  0E00               	movlw	0
  3266  000F52  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3267  000F54  0E00               	movlw	0
  3268  000F56  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3269  000F58  0E00               	movlw	0
  3270  000F5A  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3271  000F5C                     l5403:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3274  000F5C  C0B9  F01F         	movff	efgtoa@g,___fladd@b
  3275  000F60  C0BA  F020         	movff	efgtoa@g+1,___fladd@b+1
  3276  000F64  C0BB  F021         	movff	efgtoa@g+2,___fladd@b+2
  3277  000F68  C0BC  F022         	movff	efgtoa@g+3,___fladd@b+3
  3278  000F6C  C0B3  F023         	movff	efgtoa@l,___fladd@a
  3279  000F70  C0B4  F024         	movff	efgtoa@l+1,___fladd@a+1
  3280  000F74  C0B5  F025         	movff	efgtoa@l+2,___fladd@a+2
  3281  000F78  C0B6  F026         	movff	efgtoa@l+3,___fladd@a+3
  3282  000F7C  EC04  F00D         	call	___fladd	;wreg free
  3283  000F80  C01F  F0AF         	movff	?___fladd,efgtoa@h
  3284  000F84  C020  F0B0         	movff	?___fladd+1,efgtoa@h+1
  3285  000F88  C021  F0B1         	movff	?___fladd+2,efgtoa@h+2
  3286  000F8C  C022  F0B2         	movff	?___fladd+3,efgtoa@h+3
  3287  000F90                     
  3288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3289  000F90  C0AF  F06D         	movff	efgtoa@h,___flge@ff1
  3290  000F94  C0B0  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  3291  000F98  C0B1  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  3292  000F9C  C0B2  F070         	movff	efgtoa@h+3,___flge@ff1+3
  3293  000FA0  0E00               	movlw	0
  3294  000FA2  6E23               	movwf	___flmul@a^0,c
  3295  000FA4  0E00               	movlw	0
  3296  000FA6  6E24               	movwf	(___flmul@a+1)^0,c
  3297  000FA8  0E20               	movlw	32
  3298  000FAA  6E25               	movwf	(___flmul@a+2)^0,c
  3299  000FAC  0E41               	movlw	65
  3300  000FAE  6E26               	movwf	(___flmul@a+3)^0,c
  3301  000FB0  C0A1  F01F         	movff	efgtoa@ou,___flmul@b
  3302  000FB4  C0A2  F020         	movff	efgtoa@ou+1,___flmul@b+1
  3303  000FB8  C0A3  F021         	movff	efgtoa@ou+2,___flmul@b+2
  3304  000FBC  C0A4  F022         	movff	efgtoa@ou+3,___flmul@b+3
  3305  000FC0  ECC5  F011         	call	___flmul	;wreg free
  3306  000FC4  C01F  F071         	movff	?___flmul,___flge@ff2
  3307  000FC8  C020  F072         	movff	?___flmul+1,___flge@ff2+1
  3308  000FCC  C021  F073         	movff	?___flmul+2,___flge@ff2+2
  3309  000FD0  C022  F074         	movff	?___flmul+3,___flge@ff2+3
  3310  000FD4  ECD7  F018         	call	___flge	;wreg free
  3311  000FD8  0100               	movlb	0	; () banked
  3312  000FDA  A0D8               	btfss	status,0,c
  3313  000FDC  EFF2  F007         	goto	u7671
  3314  000FE0  EFF4  F007         	goto	u7670
  3315  000FE4                     u7671:
  3316  000FE4  EF1C  F008         	goto	l5415
  3317  000FE8                     u7670:
  3318  000FE8                     
  3319                           ; BSR set to: 0
  3320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3321  000FE8  4BBD               	infsnz	efgtoa@e& (0+255),f,b
  3322  000FEA  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  3323  000FEC                     
  3324                           ; BSR set to: 0
  3325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3326  000FEC  C0A1  F01F         	movff	efgtoa@ou,___flmul@b
  3327  000FF0  C0A2  F020         	movff	efgtoa@ou+1,___flmul@b+1
  3328  000FF4  C0A3  F021         	movff	efgtoa@ou+2,___flmul@b+2
  3329  000FF8  C0A4  F022         	movff	efgtoa@ou+3,___flmul@b+3
  3330  000FFC  0E00               	movlw	0
  3331  000FFE  6E23               	movwf	___flmul@a^0,c
  3332  001000  0E00               	movlw	0
  3333  001002  6E24               	movwf	(___flmul@a+1)^0,c
  3334  001004  0E20               	movlw	32
  3335  001006  6E25               	movwf	(___flmul@a+2)^0,c
  3336  001008  0E41               	movlw	65
  3337  00100A  6E26               	movwf	(___flmul@a+3)^0,c
  3338  00100C  ECC5  F011         	call	___flmul	;wreg free
  3339  001010  C01F  F0A1         	movff	?___flmul,efgtoa@ou
  3340  001014  C020  F0A2         	movff	?___flmul+1,efgtoa@ou+1
  3341  001018  C021  F0A3         	movff	?___flmul+2,efgtoa@ou+2
  3342  00101C  C022  F0A4         	movff	?___flmul+3,efgtoa@ou+3
  3343  001020                     
  3344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3345  001020  0E66               	movlw	102
  3346  001022  0100               	movlb	0	; () banked
  3347  001024  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3348  001026  A4D8               	btfss	status,2,c
  3349  001028  EF18  F008         	goto	u7681
  3350  00102C  EF1A  F008         	goto	u7680
  3351  001030                     u7681:
  3352  001030  EF1C  F008         	goto	l5415
  3353  001034                     u7680:
  3354  001034                     
  3355                           ; BSR set to: 0
  3356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3357  001034  4B9F               	infsnz	efgtoa@m& (0+255),f,b
  3358  001036  2BA0               	incf	(efgtoa@m+1)& (0+255),f,b
  3359  001038                     l5415:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3363  001038  C0A1  F0C1         	movff	efgtoa@ou,efgtoa@u
  3364  00103C  C0A2  F0C2         	movff	efgtoa@ou+1,efgtoa@u+1
  3365  001040  C0A3  F0C3         	movff	efgtoa@ou+2,efgtoa@u+2
  3366  001044  C0A4  F0C4         	movff	efgtoa@ou+3,efgtoa@u+3
  3367  001048                     
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3370  001048  0E65               	movlw	101
  3371  00104A  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3372  00104C  B4D8               	btfsc	status,2,c
  3373  00104E  EF2B  F008         	goto	u7691
  3374  001052  EF2D  F008         	goto	u7690
  3375  001056                     u7691:
  3376  001056  EF33  F008         	goto	l5421
  3377  00105A                     u7690:
  3378  00105A                     
  3379                           ; BSR set to: 0
  3380  00105A  C0BD  F09D         	movff	efgtoa@e,efgtoa@ne
  3381  00105E  C0BE  F09E         	movff	efgtoa@e+1,efgtoa@ne+1
  3382  001062  EF37  F008         	goto	l875
  3383  001066                     l5421:
  3384                           
  3385                           ; BSR set to: 0
  3386  001066  0E00               	movlw	0
  3387  001068  6F9E               	movwf	(efgtoa@ne+1)& (0+255),b
  3388  00106A  0E00               	movlw	0
  3389  00106C  6F9D               	movwf	efgtoa@ne& (0+255),b
  3390  00106E                     l875:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3394  00106E  0E00               	movlw	0
  3395  001070  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  3396  001072  0E00               	movlw	0
  3397  001074  6F9B               	movwf	efgtoa@pp& (0+255),b
  3398                           
  3399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3400  001076  0E00               	movlw	0
  3401  001078  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  3402  00107A  0E00               	movlw	0
  3403  00107C  6F99               	movwf	efgtoa@t& (0+255),b
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3406  00107E  0E00               	movlw	0
  3407  001080  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3408  001082  0E00               	movlw	0
  3409  001084  6FB7               	movwf	efgtoa@i& (0+255),b
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3412  001086  EF33  F009         	goto	l5471
  3413  00108A                     l5423:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3417  00108A  C0AF  F01F         	movff	efgtoa@h,___fldiv@b
  3418  00108E  C0B0  F020         	movff	efgtoa@h+1,___fldiv@b+1
  3419  001092  C0B1  F021         	movff	efgtoa@h+2,___fldiv@b+2
  3420  001096  C0B2  F022         	movff	efgtoa@h+3,___fldiv@b+3
  3421  00109A  C0C1  F023         	movff	efgtoa@u,___fldiv@a
  3422  00109E  C0C2  F024         	movff	efgtoa@u+1,___fldiv@a+1
  3423  0010A2  C0C3  F025         	movff	efgtoa@u+2,___fldiv@a+2
  3424  0010A6  C0C4  F026         	movff	efgtoa@u+3,___fldiv@a+3
  3425  0010AA  ECDB  F013         	call	___fldiv	;wreg free
  3426  0010AE  C01F  F06D         	movff	?___fldiv,floorf@x
  3427  0010B2  C020  F06E         	movff	?___fldiv+1,floorf@x+1
  3428  0010B6  C021  F06F         	movff	?___fldiv+2,floorf@x+2
  3429  0010BA  C022  F070         	movff	?___fldiv+3,floorf@x+3
  3430  0010BE  ECA9  F015         	call	_floorf	;wreg free
  3431  0010C2  C06D  F0B3         	movff	?_floorf,efgtoa@l
  3432  0010C6  C06E  F0B4         	movff	?_floorf+1,efgtoa@l+1
  3433  0010CA  C06F  F0B5         	movff	?_floorf+2,efgtoa@l+2
  3434  0010CE  C070  F0B6         	movff	?_floorf+3,efgtoa@l+3
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3437  0010D2  C0B3  F01F         	movff	efgtoa@l,___fltol@f1
  3438  0010D6  C0B4  F020         	movff	efgtoa@l+1,___fltol@f1+1
  3439  0010DA  C0B5  F021         	movff	efgtoa@l+2,___fltol@f1+2
  3440  0010DE  C0B6  F022         	movff	efgtoa@l+3,___fltol@f1+3
  3441  0010E2  EC54  F018         	call	___fltol	;wreg free
  3442  0010E6  C01F  F0A5         	movff	?___fltol,efgtoa@d
  3443  0010EA  C020  F0A6         	movff	?___fltol+1,efgtoa@d+1
  3444  0010EE                     
  3445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3446  0010EE  B837               	btfsc	_flags^0,4,c
  3447  0010F0  EF7C  F008         	goto	u7701
  3448  0010F4  EF7E  F008         	goto	u7700
  3449  0010F8                     u7701:
  3450  0010F8  EF9C  F008         	goto	l5435
  3451  0010FC                     u7700:
  3452  0010FC  0100               	movlb	0	; () banked
  3453  0010FE  51A5               	movf	efgtoa@d& (0+255),w,b
  3454  001100  11A6               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3455  001102  A4D8               	btfss	status,2,c
  3456  001104  EF86  F008         	goto	u7711
  3457  001108  EF88  F008         	goto	u7710
  3458  00110C                     u7711:
  3459  00110C  EF9C  F008         	goto	l5435
  3460  001110                     u7710:
  3461  001110                     
  3462                           ; BSR set to: 0
  3463  001110  0E67               	movlw	103
  3464  001112  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3465  001114  A4D8               	btfss	status,2,c
  3466  001116  EF8F  F008         	goto	u7721
  3467  00111A  EF91  F008         	goto	u7720
  3468  00111E                     u7721:
  3469  00111E  EF9C  F008         	goto	l5435
  3470  001122                     u7720:
  3471  001122                     
  3472                           ; BSR set to: 0
  3473  001122  BF9E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3474  001124  EF98  F008         	goto	u7730
  3475  001128  EF96  F008         	goto	u7731
  3476  00112C                     u7731:
  3477  00112C  EF9C  F008         	goto	l5435
  3478  001130                     u7730:
  3479  001130                     
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3482  001130  4B99               	infsnz	efgtoa@t& (0+255),f,b
  3483  001132  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3486  001134  EFE7  F008         	goto	l5463
  3487  001138                     l5435:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3490  001138  0100               	movlb	0	; () banked
  3491  00113A  519B               	movf	efgtoa@pp& (0+255),w,b
  3492  00113C  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3493  00113E  A4D8               	btfss	status,2,c
  3494  001140  EFA4  F008         	goto	u7741
  3495  001144  EFA6  F008         	goto	u7740
  3496  001148                     u7741:
  3497  001148  EFD0  F008         	goto	l5455
  3498  00114C                     u7740:
  3499  00114C                     
  3500                           ; BSR set to: 0
  3501  00114C  BF9E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3502  00114E  EFAD  F008         	goto	u7750
  3503  001152  EFAB  F008         	goto	u7751
  3504  001156                     u7751:
  3505  001156  EFD0  F008         	goto	l5455
  3506  00115A                     u7750:
  3507  00115A                     
  3508                           ; BSR set to: 0
  3509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3510  00115A  0E00               	movlw	low _dbuf
  3511  00115C  25BF               	addwf	efgtoa@n& (0+255),w,b
  3512  00115E  6ED9               	movwf	fsr2l,c
  3513  001160  0E01               	movlw	high _dbuf
  3514  001162  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3515  001164  6EDA               	movwf	fsr2h,c
  3516  001166  0E2E               	movlw	46
  3517  001168  6EDF               	movwf	indf2,c
  3518  00116A                     
  3519                           ; BSR set to: 0
  3520  00116A  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3521  00116C  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3522  00116E                     
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3525  00116E  07AB               	decf	efgtoa@w& (0+255),f,b
  3526  001170  A0D8               	btfss	status,0,c
  3527  001172  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3528  001174                     
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3531  001174  0E00               	movlw	0
  3532  001176  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  3533  001178  0E01               	movlw	1
  3534  00117A  6F9B               	movwf	efgtoa@pp& (0+255),b
  3535  00117C  EFD0  F008         	goto	l5455
  3536  001180                     l5447:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3540  001180  0E00               	movlw	low _dbuf
  3541  001182  25BF               	addwf	efgtoa@n& (0+255),w,b
  3542  001184  6ED9               	movwf	fsr2l,c
  3543  001186  0E01               	movlw	high _dbuf
  3544  001188  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3545  00118A  6EDA               	movwf	fsr2h,c
  3546  00118C  0E30               	movlw	48
  3547  00118E  6EDF               	movwf	indf2,c
  3548  001190                     
  3549                           ; BSR set to: 0
  3550  001190  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3551  001192  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3552  001194                     
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3555  001194  07AB               	decf	efgtoa@w& (0+255),f,b
  3556  001196  A0D8               	btfss	status,0,c
  3557  001198  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3558  00119A                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3561  00119A  0799               	decf	efgtoa@t& (0+255),f,b
  3562  00119C  A0D8               	btfss	status,0,c
  3563  00119E  079A               	decf	(efgtoa@t+1)& (0+255),f,b
  3564  0011A0                     l5455:
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3568  0011A0  5199               	movf	efgtoa@t& (0+255),w,b
  3569  0011A2  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3570  0011A4  A4D8               	btfss	status,2,c
  3571  0011A6  EFD7  F008         	goto	u7761
  3572  0011AA  EFD9  F008         	goto	u7760
  3573  0011AE                     u7761:
  3574  0011AE  EFC0  F008         	goto	l5447
  3575  0011B2                     u7760:
  3576  0011B2                     
  3577                           ; BSR set to: 0
  3578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3579  0011B2  0E00               	movlw	low _dbuf
  3580  0011B4  25BF               	addwf	efgtoa@n& (0+255),w,b
  3581  0011B6  6ED9               	movwf	fsr2l,c
  3582  0011B8  0E01               	movlw	high _dbuf
  3583  0011BA  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3584  0011BC  6EDA               	movwf	fsr2h,c
  3585  0011BE  51A5               	movf	efgtoa@d& (0+255),w,b
  3586  0011C0  0F30               	addlw	48
  3587  0011C2  6EDF               	movwf	indf2,c
  3588  0011C4                     
  3589                           ; BSR set to: 0
  3590  0011C4  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3591  0011C6  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3592  0011C8                     
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3595  0011C8  07AB               	decf	efgtoa@w& (0+255),f,b
  3596  0011CA  A0D8               	btfss	status,0,c
  3597  0011CC  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3598  0011CE                     l5463:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3602  0011CE  C0AF  F06D         	movff	efgtoa@h,___flsub@b
  3603  0011D2  C0B0  F06E         	movff	efgtoa@h+1,___flsub@b+1
  3604  0011D6  C0B1  F06F         	movff	efgtoa@h+2,___flsub@b+2
  3605  0011DA  C0B2  F070         	movff	efgtoa@h+3,___flsub@b+3
  3606  0011DE  C0C1  F023         	movff	efgtoa@u,___flmul@a
  3607  0011E2  C0C2  F024         	movff	efgtoa@u+1,___flmul@a+1
  3608  0011E6  C0C3  F025         	movff	efgtoa@u+2,___flmul@a+2
  3609  0011EA  C0C4  F026         	movff	efgtoa@u+3,___flmul@a+3
  3610  0011EE  C0B3  F01F         	movff	efgtoa@l,___flmul@b
  3611  0011F2  C0B4  F020         	movff	efgtoa@l+1,___flmul@b+1
  3612  0011F6  C0B5  F021         	movff	efgtoa@l+2,___flmul@b+2
  3613  0011FA  C0B6  F022         	movff	efgtoa@l+3,___flmul@b+3
  3614  0011FE  ECC5  F011         	call	___flmul	;wreg free
  3615  001202  C01F  F071         	movff	?___flmul,___flsub@a
  3616  001206  C020  F072         	movff	?___flmul+1,___flsub@a+1
  3617  00120A  C021  F073         	movff	?___flmul+2,___flsub@a+2
  3618  00120E  C022  F074         	movff	?___flmul+3,___flsub@a+3
  3619  001212  ECBA  F01F         	call	___flsub	;wreg free
  3620  001216  C06D  F0AF         	movff	?___flsub,efgtoa@h
  3621  00121A  C06E  F0B0         	movff	?___flsub+1,efgtoa@h+1
  3622  00121E  C06F  F0B1         	movff	?___flsub+2,efgtoa@h+2
  3623  001222  C070  F0B2         	movff	?___flsub+3,efgtoa@h+3
  3624  001226                     
  3625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3626  001226  C0C1  F01F         	movff	efgtoa@u,___fldiv@b
  3627  00122A  C0C2  F020         	movff	efgtoa@u+1,___fldiv@b+1
  3628  00122E  C0C3  F021         	movff	efgtoa@u+2,___fldiv@b+2
  3629  001232  C0C4  F022         	movff	efgtoa@u+3,___fldiv@b+3
  3630  001236  0E00               	movlw	0
  3631  001238  6E23               	movwf	___fldiv@a^0,c
  3632  00123A  0E00               	movlw	0
  3633  00123C  6E24               	movwf	(___fldiv@a+1)^0,c
  3634  00123E  0E20               	movlw	32
  3635  001240  6E25               	movwf	(___fldiv@a+2)^0,c
  3636  001242  0E41               	movlw	65
  3637  001244  6E26               	movwf	(___fldiv@a+3)^0,c
  3638  001246  ECDB  F013         	call	___fldiv	;wreg free
  3639  00124A  C01F  F0C1         	movff	?___fldiv,efgtoa@u
  3640  00124E  C020  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3641  001252  C021  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3642  001256  C022  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3643  00125A                     
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3645  00125A  0100               	movlb	0	; () banked
  3646  00125C  079D               	decf	efgtoa@ne& (0+255),f,b
  3647  00125E  A0D8               	btfss	status,0,c
  3648  001260  079E               	decf	(efgtoa@ne+1)& (0+255),f,b
  3649  001262                     
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3652  001262  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  3653  001264  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  3654  001266                     l5471:
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3658  001266  519F               	movf	efgtoa@m& (0+255),w,b
  3659  001268  5DB7               	subwf	efgtoa@i& (0+255),w,b
  3660  00126A  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  3661  00126C  0A80               	xorlw	128
  3662  00126E  6F88               	movwf	??_efgtoa& (0+255),b
  3663  001270  51A0               	movf	(efgtoa@m+1)& (0+255),w,b
  3664  001272  0A80               	xorlw	128
  3665  001274  5988               	subwfb	??_efgtoa& (0+255),w,b
  3666  001276  B0D8               	btfsc	status,0,c
  3667  001278  EF40  F009         	goto	u7771
  3668  00127C  EF42  F009         	goto	u7770
  3669  001280                     u7771:
  3670  001280  EF50  F009         	goto	l5475
  3671  001284                     u7770:
  3672  001284                     
  3673                           ; BSR set to: 0
  3674  001284  BFC0               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3675  001286  EF4E  F009         	goto	u7781
  3676  00128A  51C0               	movf	(efgtoa@n+1)& (0+255),w,b
  3677  00128C  E109               	bnz	u7780
  3678  00128E  0E4B               	movlw	75
  3679  001290  5DBF               	subwf	efgtoa@n& (0+255),w,b
  3680  001292  A0D8               	btfss	status,0,c
  3681  001294  EF4E  F009         	goto	u7781
  3682  001298  EF50  F009         	goto	u7780
  3683  00129C                     u7781:
  3684  00129C  EF45  F008         	goto	l5423
  3685  0012A0                     u7780:
  3686  0012A0                     l5475:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3690  0012A0  519B               	movf	efgtoa@pp& (0+255),w,b
  3691  0012A2  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3692  0012A4  A4D8               	btfss	status,2,c
  3693  0012A6  EF57  F009         	goto	u7791
  3694  0012AA  EF59  F009         	goto	u7790
  3695  0012AE                     u7791:
  3696  0012AE  EF6A  F009         	goto	l5483
  3697  0012B2                     u7790:
  3698  0012B2                     
  3699                           ; BSR set to: 0
  3700  0012B2  A837               	btfss	_flags^0,4,c
  3701  0012B4  EF5E  F009         	goto	u7801
  3702  0012B8  EF60  F009         	goto	u7800
  3703  0012BC                     u7801:
  3704  0012BC  EF6A  F009         	goto	l5483
  3705  0012C0                     u7800:
  3706  0012C0                     
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3709  0012C0  0E00               	movlw	low _dbuf
  3710  0012C2  25BF               	addwf	efgtoa@n& (0+255),w,b
  3711  0012C4  6ED9               	movwf	fsr2l,c
  3712  0012C6  0E01               	movlw	high _dbuf
  3713  0012C8  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3714  0012CA  6EDA               	movwf	fsr2h,c
  3715  0012CC  0E2E               	movlw	46
  3716  0012CE  6EDF               	movwf	indf2,c
  3717  0012D0                     
  3718                           ; BSR set to: 0
  3719  0012D0  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3720  0012D2  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3721  0012D4                     l5483:
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3725  0012D4  0E00               	movlw	low _dbuf
  3726  0012D6  25BF               	addwf	efgtoa@n& (0+255),w,b
  3727  0012D8  6ED9               	movwf	fsr2l,c
  3728  0012DA  0E01               	movlw	high _dbuf
  3729  0012DC  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3730  0012DE  6EDA               	movwf	fsr2h,c
  3731  0012E0  0E00               	movlw	0
  3732  0012E2  6EDF               	movwf	indf2,c
  3733  0012E4                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3736  0012E4  0E65               	movlw	101
  3737  0012E6  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3738  0012E8  A4D8               	btfss	status,2,c
  3739  0012EA  EF79  F009         	goto	u7811
  3740  0012EE  EF7B  F009         	goto	u7810
  3741  0012F2                     u7811:
  3742  0012F2  EFD2  F004         	goto	l5285
  3743  0012F6                     u7810:
  3744  0012F6                     
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3747  0012F6  0E00               	movlw	0
  3748  0012F8  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3749  0012FA  0E4F               	movlw	79
  3750  0012FC  6FB7               	movwf	efgtoa@i& (0+255),b
  3751  0012FE                     
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3754  0012FE  0E00               	movlw	low _dbuf
  3755  001300  25B7               	addwf	efgtoa@i& (0+255),w,b
  3756  001302  6ED9               	movwf	fsr2l,c
  3757  001304  0E01               	movlw	high _dbuf
  3758  001306  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3759  001308  6EDA               	movwf	fsr2h,c
  3760  00130A  0E00               	movlw	0
  3761  00130C  6EDF               	movwf	indf2,c
  3762  00130E                     
  3763                           ; BSR set to: 0
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3765  00130E  0E00               	movlw	0
  3766  001310  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  3767  001312  0E00               	movlw	0
  3768  001314  6FA7               	movwf	efgtoa@sign& (0+255),b
  3769  001316                     
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3772  001316  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3773  001318  EF92  F009         	goto	u7820
  3774  00131C  EF90  F009         	goto	u7821
  3775  001320                     u7821:
  3776  001320  EF9A  F009         	goto	l5499
  3777  001324                     u7820:
  3778  001324                     
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3781  001324  0E00               	movlw	0
  3782  001326  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  3783  001328  0E01               	movlw	1
  3784  00132A  6FA7               	movwf	efgtoa@sign& (0+255),b
  3785  00132C                     
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3788  00132C  6DBD               	negf	efgtoa@e& (0+255),b
  3789  00132E  1FBE               	comf	(efgtoa@e+1)& (0+255),f,b
  3790  001330  B0D8               	btfsc	status,0,c
  3791  001332  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  3792  001334                     l5499:
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3796  001334  0E00               	movlw	0
  3797  001336  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  3798  001338  0E02               	movlw	2
  3799  00133A  6FA9               	movwf	efgtoa@p& (0+255),b
  3800                           
  3801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3802  00133C  EFCB  F009         	goto	l5511
  3803  001340                     l5501:
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3807  001340  07B7               	decf	efgtoa@i& (0+255),f,b
  3808  001342  A0D8               	btfss	status,0,c
  3809  001344  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  3810  001346                     
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3813  001346  0E00               	movlw	low _dbuf
  3814  001348  25B7               	addwf	efgtoa@i& (0+255),w,b
  3815  00134A  6ED9               	movwf	fsr2l,c
  3816  00134C  0E01               	movlw	high _dbuf
  3817  00134E  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3818  001350  6EDA               	movwf	fsr2h,c
  3819  001352  C0BD  F01F         	movff	efgtoa@e,___awmod@dividend
  3820  001356  C0BE  F020         	movff	efgtoa@e+1,___awmod@dividend+1
  3821  00135A  0E00               	movlw	0
  3822  00135C  6E22               	movwf	(___awmod@divisor+1)^0,c
  3823  00135E  0E0A               	movlw	10
  3824  001360  6E21               	movwf	___awmod@divisor^0,c
  3825  001362  EC31  F01D         	call	___awmod	;wreg free
  3826  001366  501F               	movf	?___awmod^0,w,c
  3827  001368  0F30               	addlw	48
  3828  00136A  6EDF               	movwf	indf2,c
  3829  00136C                     
  3830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3831  00136C  C0BD  F01F         	movff	efgtoa@e,___awdiv@dividend
  3832  001370  C0BE  F020         	movff	efgtoa@e+1,___awdiv@dividend+1
  3833  001374  0E00               	movlw	0
  3834  001376  6E22               	movwf	(___awdiv@divisor+1)^0,c
  3835  001378  0E0A               	movlw	10
  3836  00137A  6E21               	movwf	___awdiv@divisor^0,c
  3837  00137C  EC76  F01C         	call	___awdiv	;wreg free
  3838  001380  C01F  F0BD         	movff	?___awdiv,efgtoa@e
  3839  001384  C020  F0BE         	movff	?___awdiv+1,efgtoa@e+1
  3840  001388                     
  3841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3842  001388  0100               	movlb	0	; () banked
  3843  00138A  07A9               	decf	efgtoa@p& (0+255),f,b
  3844  00138C  A0D8               	btfss	status,0,c
  3845  00138E  07AA               	decf	(efgtoa@p+1)& (0+255),f,b
  3846  001390                     
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3849  001390  07AB               	decf	efgtoa@w& (0+255),f,b
  3850  001392  A0D8               	btfss	status,0,c
  3851  001394  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3852  001396                     l5511:
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3856  001396  51BD               	movf	efgtoa@e& (0+255),w,b
  3857  001398  11BE               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3858  00139A  A4D8               	btfss	status,2,c
  3859  00139C  EFD2  F009         	goto	u7831
  3860  0013A0  EFD4  F009         	goto	u7830
  3861  0013A4                     u7831:
  3862  0013A4  EFA0  F009         	goto	l5501
  3863  0013A8                     u7830:
  3864  0013A8                     
  3865                           ; BSR set to: 0
  3866  0013A8  BFAA               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3867  0013AA  EFE1  F009         	goto	u7840
  3868  0013AE  51AA               	movf	(efgtoa@p+1)& (0+255),w,b
  3869  0013B0  E106               	bnz	u7841
  3870  0013B2  05A9               	decf	efgtoa@p& (0+255),w,b
  3871  0013B4  B0D8               	btfsc	status,0,c
  3872  0013B6  EFDF  F009         	goto	u7841
  3873  0013BA  EFE1  F009         	goto	u7840
  3874  0013BE                     u7841:
  3875  0013BE  EFA0  F009         	goto	l5501
  3876  0013C2                     u7840:
  3877  0013C2                     
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  3880  0013C2  07B7               	decf	efgtoa@i& (0+255),f,b
  3881  0013C4  A0D8               	btfss	status,0,c
  3882  0013C6  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  3883  0013C8                     
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3886  0013C8  51A7               	movf	efgtoa@sign& (0+255),w,b
  3887  0013CA  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3888  0013CC  A4D8               	btfss	status,2,c
  3889  0013CE  EFEB  F009         	goto	u7851
  3890  0013D2  EFED  F009         	goto	u7850
  3891  0013D6                     u7851:
  3892  0013D6  EFF3  F009         	goto	l5521
  3893  0013DA                     u7850:
  3894  0013DA                     
  3895                           ; BSR set to: 0
  3896  0013DA  0E00               	movlw	0
  3897  0013DC  6F94               	movwf	(_efgtoa$952+1)& (0+255),b
  3898  0013DE  0E2B               	movlw	43
  3899  0013E0  6F93               	movwf	_efgtoa$952& (0+255),b
  3900  0013E2  EFF7  F009         	goto	l5523
  3901  0013E6                     l5521:
  3902                           
  3903                           ; BSR set to: 0
  3904  0013E6  0E00               	movlw	0
  3905  0013E8  6F94               	movwf	(_efgtoa$952+1)& (0+255),b
  3906  0013EA  0E2D               	movlw	45
  3907  0013EC  6F93               	movwf	_efgtoa$952& (0+255),b
  3908  0013EE                     l5523:
  3909                           
  3910                           ; BSR set to: 0
  3911  0013EE  0E00               	movlw	low _dbuf
  3912  0013F0  25B7               	addwf	efgtoa@i& (0+255),w,b
  3913  0013F2  6ED9               	movwf	fsr2l,c
  3914  0013F4  0E01               	movlw	high _dbuf
  3915  0013F6  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3916  0013F8  6EDA               	movwf	fsr2h,c
  3917  0013FA  C093  FFDF         	movff	_efgtoa$952,indf2
  3918  0013FE                     
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  3921  0013FE  07AB               	decf	efgtoa@w& (0+255),f,b
  3922  001400  A0D8               	btfss	status,0,c
  3923  001402  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3924  001404                     
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3927  001404  07B7               	decf	efgtoa@i& (0+255),f,b
  3928  001406  A0D8               	btfss	status,0,c
  3929  001408  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  3930  00140A                     
  3931                           ; BSR set to: 0
  3932  00140A  0EBF               	movlw	191
  3933  00140C  6F88               	movwf	??_efgtoa& (0+255),b
  3934  00140E  0EFF               	movlw	255
  3935  001410  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3936  001412  5187               	movf	efgtoa@c& (0+255),w,b
  3937  001414  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  3938  001416  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  3939  001418  5188               	movf	??_efgtoa& (0+255),w,b
  3940  00141A  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3941  00141C  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3942  00141E  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3943  001420  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3944  001422  E10A               	bnz	u7860
  3945  001424  0E1A               	movlw	26
  3946  001426  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3947  001428  A0D8               	btfss	status,0,c
  3948  00142A  EF19  F00A         	goto	u7861
  3949  00142E  EF1C  F00A         	goto	u7860
  3950  001432                     u7861:
  3951  001432  0E01               	movlw	1
  3952  001434  EF1D  F00A         	goto	u7870
  3953  001438                     u7860:
  3954  001438  0E00               	movlw	0
  3955  00143A                     u7870:
  3956  00143A  6F97               	movwf	_efgtoa$954& (0+255),b
  3957  00143C  6B98               	clrf	(_efgtoa$954+1)& (0+255),b
  3958  00143E                     
  3959                           ; BSR set to: 0
  3960  00143E  5197               	movf	_efgtoa$954& (0+255),w,b
  3961  001440  1198               	iorwf	(_efgtoa$954+1)& (0+255),w,b
  3962  001442  A4D8               	btfss	status,2,c
  3963  001444  EF26  F00A         	goto	u7881
  3964  001448  EF28  F00A         	goto	u7880
  3965  00144C                     u7881:
  3966  00144C  EF2E  F00A         	goto	l5537
  3967  001450                     u7880:
  3968  001450                     
  3969                           ; BSR set to: 0
  3970  001450  0E00               	movlw	0
  3971  001452  6F96               	movwf	(_efgtoa$953+1)& (0+255),b
  3972  001454  0E65               	movlw	101
  3973  001456  6F95               	movwf	_efgtoa$953& (0+255),b
  3974  001458  EF32  F00A         	goto	l5539
  3975  00145C                     l5537:
  3976                           
  3977                           ; BSR set to: 0
  3978  00145C  0E00               	movlw	0
  3979  00145E  6F96               	movwf	(_efgtoa$953+1)& (0+255),b
  3980  001460  0E45               	movlw	69
  3981  001462  6F95               	movwf	_efgtoa$953& (0+255),b
  3982  001464                     l5539:
  3983                           
  3984                           ; BSR set to: 0
  3985  001464  0E00               	movlw	low _dbuf
  3986  001466  25B7               	addwf	efgtoa@i& (0+255),w,b
  3987  001468  6ED9               	movwf	fsr2l,c
  3988  00146A  0E01               	movlw	high _dbuf
  3989  00146C  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3990  00146E  6EDA               	movwf	fsr2h,c
  3991  001470  C095  FFDF         	movff	_efgtoa$953,indf2
  3992  001474                     
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  3995  001474  07AB               	decf	efgtoa@w& (0+255),f,b
  3996  001476  A0D8               	btfss	status,0,c
  3997  001478  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3998  00147A                     
  3999                           ; BSR set to: 0
  4000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4001  00147A  0E00               	movlw	low _dbuf
  4002  00147C  25BF               	addwf	efgtoa@n& (0+255),w,b
  4003  00147E  6E1F               	movwf	strcpy@dest^0,c
  4004  001480  0E01               	movlw	high _dbuf
  4005  001482  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4006  001484  6E20               	movwf	(strcpy@dest+1)^0,c
  4007  001486  0E00               	movlw	low _dbuf
  4008  001488  25B7               	addwf	efgtoa@i& (0+255),w,b
  4009  00148A  6E21               	movwf	strcpy@src^0,c
  4010  00148C  0E01               	movlw	high _dbuf
  4011  00148E  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4012  001490  6E22               	movwf	(strcpy@src+1)^0,c
  4013  001492  ECBF  F01E         	call	_strcpy	;wreg free
  4014  001496  EFD2  F004         	goto	l5285
  4015  00149A                     l829:
  4016  00149A  0012               	return		;funcret
  4017  00149C                     __end_of_efgtoa:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _tolower *****************
  4021 ;; Defined at:
  4022 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  c               2   36[COMRAM] int 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  2   36[COMRAM] int 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4036 ;;      Params:         2       0       0       0       0       0       0       0       0
  4037 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4038 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4039 ;;      Totals:         6       2       0       0       0       0       0       0       0
  4040 ;;Total ram usage:        8 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 5
  4043 ;; This function calls:
  4044 ;;		_isupper
  4045 ;; This function is called by:
  4046 ;;		_efgtoa
  4047 ;;		_vfpfcnvrt
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text6
  4052  003D1C                     __ptext6:
  4053                           	callstack 0
  4054  003D1C                     _tolower:
  4055                           	callstack 22
  4056  003D1C  0EBF               	movlw	191
  4057  003D1E  6E27               	movwf	??_tolower^0,c
  4058  003D20  0EFF               	movlw	255
  4059  003D22  6E28               	movwf	(??_tolower+1)^0,c
  4060  003D24  C025  F029         	movff	tolower@c,??_tolower+2
  4061  003D28  C026  F02A         	movff	tolower@c+1,??_tolower+3
  4062  003D2C  5027               	movf	??_tolower^0,w,c
  4063  003D2E  2629               	addwf	(??_tolower+2)^0,f,c
  4064  003D30  5028               	movf	(??_tolower+1)^0,w,c
  4065  003D32  222A               	addwfc	(??_tolower+3)^0,f,c
  4066  003D34  502A               	movf	(??_tolower+3)^0,w,c
  4067  003D36  E10A               	bnz	u7180
  4068  003D38  0E1A               	movlw	26
  4069  003D3A  5C29               	subwf	(??_tolower+2)^0,w,c
  4070  003D3C  A0D8               	btfss	status,0,c
  4071  003D3E  EFA3  F01E         	goto	u7181
  4072  003D42  EFA6  F01E         	goto	u7180
  4073  003D46                     u7181:
  4074  003D46  0E01               	movlw	1
  4075  003D48  EFA7  F01E         	goto	u7190
  4076  003D4C                     u7180:
  4077  003D4C  0E00               	movlw	0
  4078  003D4E                     u7190:
  4079  003D4E  0100               	movlb	0	; () banked
  4080  003D50  6F60               	movwf	_tolower$1102& (0+255),b
  4081  003D52  6B61               	clrf	(_tolower$1102+1)& (0+255),b
  4082  003D54                     
  4083                           ; BSR set to: 0
  4084  003D54  5160               	movf	_tolower$1102& (0+255),w,b
  4085  003D56  1161               	iorwf	(_tolower$1102+1)& (0+255),w,b
  4086  003D58  B4D8               	btfsc	status,2,c
  4087  003D5A  EFB1  F01E         	goto	u7201
  4088  003D5E  EFB3  F01E         	goto	u7200
  4089  003D62                     u7201:
  4090  003D62  EFBA  F01E         	goto	l1069
  4091  003D66                     u7200:
  4092  003D66                     
  4093                           ; BSR set to: 0
  4094  003D66  0E20               	movlw	32
  4095  003D68  1025               	iorwf	tolower@c^0,w,c
  4096  003D6A  6E25               	movwf	?_tolower^0,c
  4097  003D6C  5026               	movf	(tolower@c+1)^0,w,c
  4098  003D6E  6E26               	movwf	(?_tolower+1)^0,c
  4099  003D70  EFBE  F01E         	goto	l1074
  4100  003D74                     l1069:
  4101                           
  4102                           ; BSR set to: 0
  4103  003D74  C025  F025         	movff	tolower@c,?_tolower
  4104  003D78  C026  F026         	movff	tolower@c+1,?_tolower+1
  4105  003D7C                     l1074:
  4106                           
  4107                           ; BSR set to: 0
  4108  003D7C  0012               	return		;funcret
  4109  003D7E                     __end_of_tolower:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _isupper *****************
  4113 ;; Defined at:
  4114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  c               2   30[COMRAM] int 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2   30[COMRAM] int 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4128 ;;      Params:         2       0       0       0       0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4130 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4131 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4132 ;;Total ram usage:        6 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 4
  4135 ;; This function calls:
  4136 ;;		Nothing
  4137 ;; This function is called by:
  4138 ;;		_efgtoa
  4139 ;;		_vfpfcnvrt
  4140 ;;		_tolower
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text7
  4145  004048                     __ptext7:
  4146                           	callstack 0
  4147  004048                     _isupper:
  4148                           	callstack 22
  4149  004048  0EBF               	movlw	191
  4150  00404A  6E21               	movwf	??_isupper^0,c
  4151  00404C  0EFF               	movlw	255
  4152  00404E  6E22               	movwf	(??_isupper+1)^0,c
  4153  004050  C01F  F023         	movff	isupper@c,??_isupper+2
  4154  004054  C020  F024         	movff	isupper@c+1,??_isupper+3
  4155  004058  5021               	movf	??_isupper^0,w,c
  4156  00405A  2623               	addwf	(??_isupper+2)^0,f,c
  4157  00405C  5022               	movf	(??_isupper+1)^0,w,c
  4158  00405E  2224               	addwfc	(??_isupper+3)^0,f,c
  4159  004060  5024               	movf	(??_isupper+3)^0,w,c
  4160  004062  E10A               	bnz	u6330
  4161  004064  0E1A               	movlw	26
  4162  004066  5C23               	subwf	(??_isupper+2)^0,w,c
  4163  004068  A0D8               	btfss	status,0,c
  4164  00406A  EF39  F020         	goto	u6331
  4165  00406E  EF3C  F020         	goto	u6330
  4166  004072                     u6331:
  4167  004072  0E01               	movlw	1
  4168  004074  EF3D  F020         	goto	u6340
  4169  004078                     u6330:
  4170  004078  0E00               	movlw	0
  4171  00407A                     u6340:
  4172  00407A  6E1F               	movwf	?_isupper^0,c
  4173  00407C  6A20               	clrf	(?_isupper+1)^0,c
  4174  00407E  0012               	return		;funcret
  4175  004080                     __end_of_isupper:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _strcpy *****************
  4179 ;; Defined at:
  4180 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  dest            2   30[COMRAM] PTR unsigned char 
  4183 ;;		 -> dbuf(80), 
  4184 ;;  src             2   32[COMRAM] PTR const unsigned char 
  4185 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4186 ;;		 -> dbuf(80), 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  d               2   38[COMRAM] PTR unsigned char 
  4189 ;;		 -> dbuf(80), 
  4190 ;;  s               2   36[COMRAM] PTR const unsigned char 
  4191 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4192 ;;		 -> dbuf(80), 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2   30[COMRAM] PTR unsigned char 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4202 ;;      Params:         4       0       0       0       0       0       0       0       0
  4203 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4204 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4205 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4206 ;;Total ram usage:       10 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 4
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_efgtoa
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text8
  4217  003D7E                     __ptext8:
  4218                           	callstack 0
  4219  003D7E                     _strcpy:
  4220                           	callstack 22
  4221  003D7E  C021  F025         	movff	strcpy@src,strcpy@s
  4222  003D82  C022  F026         	movff	strcpy@src+1,strcpy@s+1
  4223  003D86  C01F  F027         	movff	strcpy@dest,strcpy@d
  4224  003D8A  C020  F028         	movff	strcpy@dest+1,strcpy@d+1
  4225  003D8E                     l5185:
  4226  003D8E  5025               	movf	strcpy@s^0,w,c
  4227  003D90  6E23               	movwf	??_strcpy^0,c
  4228  003D92  5026               	movf	(strcpy@s+1)^0,w,c
  4229  003D94  6E24               	movwf	(??_strcpy+1)^0,c
  4230  003D96  4A25               	infsnz	strcpy@s^0,f,c
  4231  003D98  2A26               	incf	(strcpy@s+1)^0,f,c
  4232  003D9A  C023  FFF6         	movff	??_strcpy,tblptrl
  4233  003D9E  C024  FFF7         	movff	??_strcpy+1,tblptrh
  4234  003DA2  6AF8               	clrf	tblptru,c
  4235  003DA4  C027  FFD9         	movff	strcpy@d,fsr2l
  4236  003DA8  C028  FFDA         	movff	strcpy@d+1,fsr2h
  4237  003DAC  4A27               	infsnz	strcpy@d^0,f,c
  4238  003DAE  2A28               	incf	(strcpy@d+1)^0,f,c
  4239  003DB0  0E07               	movlw	(high __ramtop+-1)
  4240  003DB2  64F7               	cpfsgt	tblptrh,c
  4241  003DB4  D003               	bra	u7167
  4242  003DB6  0008               	tblrd		*
  4243  003DB8  50F5               	movf	tablat,w,c
  4244  003DBA  D005               	bra	u7160
  4245  003DBC                     u7167:
  4246  003DBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4247  003DC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4248  003DC4  50E7               	movf	indf1,w,c
  4249  003DC6                     u7160:
  4250  003DC6  6EDF               	movwf	indf2,c
  4251  003DC8  50DF               	movf	indf2,w,c
  4252  003DCA  A4D8               	btfss	status,2,c
  4253  003DCC  EFEA  F01E         	goto	u7171
  4254  003DD0  EFEC  F01E         	goto	u7170
  4255  003DD4                     u7171:
  4256  003DD4  EFC7  F01E         	goto	l5185
  4257  003DD8                     u7170:
  4258  003DD8  0012               	return		;funcret
  4259  003DDA                     __end_of_strcpy:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function _pad *****************
  4263 ;; Defined at:
  4264 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  4267 ;;		 -> sprintf@f(6), 
  4268 ;;  buf             2    6[BANK0 ] PTR unsigned char 
  4269 ;;		 -> dbuf(80), 
  4270 ;;  p               2    8[BANK0 ] int 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  w               2   13[BANK0 ] int 
  4273 ;;  i               2   11[BANK0 ] int 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  2    4[BANK0 ] int 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4283 ;;      Params:         0       6       0       0       0       0       0       0       0
  4284 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4285 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4286 ;;      Totals:         0      11       0       0       0       0       0       0       0
  4287 ;;Total ram usage:       11 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 7
  4290 ;; This function calls:
  4291 ;;		_fputc
  4292 ;;		_fputs
  4293 ;;		_strlen
  4294 ;; This function is called by:
  4295 ;;		_efgtoa
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text9
  4300  003824                     __ptext9:
  4301                           	callstack 0
  4302  003824                     _pad:
  4303                           	callstack 19
  4304  003824                     
  4305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4306  003824  A037               	btfss	_flags^0,0,c
  4307  003826  EF17  F01C         	goto	u7051
  4308  00382A  EF19  F01C         	goto	u7050
  4309  00382E                     u7051:
  4310  00382E  EF23  F01C         	goto	l5143
  4311  003832                     u7050:
  4312  003832                     
  4313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4314  003832  C066  F060         	movff	pad@buf,fputs@s
  4315  003836  C067  F061         	movff	pad@buf+1,fputs@s+1
  4316  00383A  C064  F062         	movff	pad@fp,fputs@fp
  4317  00383E  C065  F063         	movff	pad@fp+1,fputs@fp+1
  4318  003842  ECDE  F01F         	call	_fputs	;wreg free
  4319  003846                     l5143:
  4320                           
  4321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4322  003846  0100               	movlb	0	; () banked
  4323  003848  BF69               	btfsc	(pad@p+1)& (0+255),7,b
  4324  00384A  EF29  F01C         	goto	u7061
  4325  00384E  EF2B  F01C         	goto	u7060
  4326  003852                     u7061:
  4327  003852  EF31  F01C         	goto	l5147
  4328  003856                     u7060:
  4329  003856                     
  4330                           ; BSR set to: 0
  4331  003856  C068  F06D         	movff	pad@p,pad@w
  4332  00385A  C069  F06E         	movff	pad@p+1,pad@w+1
  4333  00385E  EF35  F01C         	goto	l806
  4334  003862                     l5147:
  4335                           
  4336                           ; BSR set to: 0
  4337  003862  0E00               	movlw	0
  4338  003864  6F6E               	movwf	(pad@w+1)& (0+255),b
  4339  003866  0E00               	movlw	0
  4340  003868  6F6D               	movwf	pad@w& (0+255),b
  4341  00386A                     l806:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4345  00386A  0E00               	movlw	0
  4346  00386C  6F6C               	movwf	(pad@i+1)& (0+255),b
  4347  00386E  0E00               	movlw	0
  4348  003870  6F6B               	movwf	pad@i& (0+255),b
  4349                           
  4350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4351  003872  EF48  F01C         	goto	l5153
  4352  003876                     l5149:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4356  003876  0E00               	movlw	0
  4357  003878  6E20               	movwf	(fputc@c+1)^0,c
  4358  00387A  0E20               	movlw	32
  4359  00387C  6E1F               	movwf	fputc@c^0,c
  4360  00387E  C064  F021         	movff	pad@fp,fputc@fp
  4361  003882  C065  F022         	movff	pad@fp+1,fputc@fp+1
  4362  003886  ECAD  F01B         	call	_fputc	;wreg free
  4363  00388A                     
  4364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4365  00388A  0100               	movlb	0	; () banked
  4366  00388C  4B6B               	infsnz	pad@i& (0+255),f,b
  4367  00388E  2B6C               	incf	(pad@i+1)& (0+255),f,b
  4368  003890                     l5153:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4372  003890  516D               	movf	pad@w& (0+255),w,b
  4373  003892  5D6B               	subwf	pad@i& (0+255),w,b
  4374  003894  516C               	movf	(pad@i+1)& (0+255),w,b
  4375  003896  0A80               	xorlw	128
  4376  003898  6F6A               	movwf	??_pad& (0+255),b
  4377  00389A  516E               	movf	(pad@w+1)& (0+255),w,b
  4378  00389C  0A80               	xorlw	128
  4379  00389E  596A               	subwfb	??_pad& (0+255),w,b
  4380  0038A0  A0D8               	btfss	status,0,c
  4381  0038A2  EF55  F01C         	goto	u7071
  4382  0038A6  EF57  F01C         	goto	u7070
  4383  0038AA                     u7071:
  4384  0038AA  EF3B  F01C         	goto	l5149
  4385  0038AE                     u7070:
  4386  0038AE                     
  4387                           ; BSR set to: 0
  4388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4389  0038AE  B037               	btfsc	_flags^0,0,c
  4390  0038B0  EF5C  F01C         	goto	u7081
  4391  0038B4  EF5E  F01C         	goto	u7080
  4392  0038B8                     u7081:
  4393  0038B8  EF68  F01C         	goto	l5157
  4394  0038BC                     u7080:
  4395  0038BC                     
  4396                           ; BSR set to: 0
  4397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4398  0038BC  C066  F060         	movff	pad@buf,fputs@s
  4399  0038C0  C067  F061         	movff	pad@buf+1,fputs@s+1
  4400  0038C4  C064  F062         	movff	pad@fp,fputs@fp
  4401  0038C8  C065  F063         	movff	pad@fp+1,fputs@fp+1
  4402  0038CC  ECDE  F01F         	call	_fputs	;wreg free
  4403  0038D0                     l5157:
  4404                           
  4405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4406  0038D0  C066  F01F         	movff	pad@buf,strlen@s
  4407  0038D4  C067  F020         	movff	pad@buf+1,strlen@s+1
  4408  0038D8  EC6C  F01F         	call	_strlen	;wreg free
  4409  0038DC  0100               	movlb	0	; () banked
  4410  0038DE  516D               	movf	pad@w& (0+255),w,b
  4411  0038E0  241F               	addwf	?_strlen^0,w,c
  4412  0038E2  6F64               	movwf	?_pad& (0+255),b
  4413  0038E4  516E               	movf	(pad@w+1)& (0+255),w,b
  4414  0038E6  2020               	addwfc	(?_strlen+1)^0,w,c
  4415  0038E8  6F65               	movwf	(?_pad+1)& (0+255),b
  4416  0038EA                     
  4417                           ; BSR set to: 0
  4418  0038EA  0012               	return		;funcret
  4419  0038EC                     __end_of_pad:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _fputs *****************
  4423 ;; Defined at:
  4424 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4427 ;;		 -> dbuf(80), 
  4428 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4429 ;;		 -> sprintf@f(6), 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  i               2   40[COMRAM] int 
  4432 ;;  c               1   39[COMRAM] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  2    0[BANK0 ] int 
  4435 ;; Registers used:
  4436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4442 ;;      Params:         0       4       0       0       0       0       0       0       0
  4443 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4445 ;;      Totals:         3       4       0       0       0       0       0       0       0
  4446 ;;Total ram usage:        7 bytes
  4447 ;; Hardware stack levels used: 1
  4448 ;; Hardware stack levels required when called: 6
  4449 ;; This function calls:
  4450 ;;		_fputc
  4451 ;; This function is called by:
  4452 ;;		_pad
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text10
  4457  003FBC                     __ptext10:
  4458                           	callstack 0
  4459  003FBC                     _fputs:
  4460                           	callstack 19
  4461  003FBC  0E00               	movlw	0
  4462  003FBE  6E2A               	movwf	(fputs@i+1)^0,c
  4463  003FC0  0E00               	movlw	0
  4464  003FC2  6E29               	movwf	fputs@i^0,c
  4465  003FC4  EFEF  F01F         	goto	l4683
  4466  003FC8                     l4679:
  4467                           
  4468                           ; BSR set to: 0
  4469  003FC8  C028  F01F         	movff	fputs@c,fputc@c
  4470  003FCC  6A20               	clrf	(fputc@c+1)^0,c
  4471  003FCE  C062  F021         	movff	fputs@fp,fputc@fp
  4472  003FD2  C063  F022         	movff	fputs@fp+1,fputc@fp+1
  4473  003FD6  ECAD  F01B         	call	_fputc	;wreg free
  4474  003FDA  4A29               	infsnz	fputs@i^0,f,c
  4475  003FDC  2A2A               	incf	(fputs@i+1)^0,f,c
  4476  003FDE                     l4683:
  4477  003FDE  5029               	movf	fputs@i^0,w,c
  4478  003FE0  0100               	movlb	0	; () banked
  4479  003FE2  2560               	addwf	fputs@s& (0+255),w,b
  4480  003FE4  6ED9               	movwf	fsr2l,c
  4481  003FE6  502A               	movf	(fputs@i+1)^0,w,c
  4482  003FE8  2161               	addwfc	(fputs@s+1)& (0+255),w,b
  4483  003FEA  6EDA               	movwf	fsr2h,c
  4484  003FEC  50DF               	movf	indf2,w,c
  4485  003FEE  6E28               	movwf	fputs@c^0,c
  4486  003FF0  5028               	movf	fputs@c^0,w,c
  4487  003FF2  A4D8               	btfss	status,2,c
  4488  003FF4  EFFE  F01F         	goto	u6321
  4489  003FF8  EF00  F020         	goto	u6320
  4490  003FFC                     u6321:
  4491  003FFC  EFE4  F01F         	goto	l4679
  4492  004000                     u6320:
  4493  004000                     
  4494                           ; BSR set to: 0
  4495  004000  0012               	return		;funcret
  4496  004002                     __end_of_fputs:
  4497                           	callstack 0
  4498                           
  4499 ;; *************** function _fputc *****************
  4500 ;; Defined at:
  4501 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  c               2   30[COMRAM] int 
  4504 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  4505 ;;		 -> sprintf@f(6), 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  2   30[COMRAM] int 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4517 ;;      Params:         4       0       0       0       0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4519 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4520 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4521 ;;Total ram usage:        9 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 5
  4524 ;; This function calls:
  4525 ;;		_putch
  4526 ;; This function is called by:
  4527 ;;		_pad
  4528 ;;		_vfpfcnvrt
  4529 ;;		_fputs
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text11
  4534  00375A                     __ptext11:
  4535                           	callstack 0
  4536  00375A                     _fputc:
  4537                           	callstack 22
  4538  00375A  5021               	movf	fputc@fp^0,w,c
  4539  00375C  1022               	iorwf	(fputc@fp+1)^0,w,c
  4540  00375E  B4D8               	btfsc	status,2,c
  4541  003760  EFB4  F01B         	goto	u5871
  4542  003764  EFB6  F01B         	goto	u5870
  4543  003768                     u5871:
  4544  003768  EFBF  F01B         	goto	l4455
  4545  00376C                     u5870:
  4546  00376C  5021               	movf	fputc@fp^0,w,c
  4547  00376E  1022               	iorwf	(fputc@fp+1)^0,w,c
  4548  003770  A4D8               	btfss	status,2,c
  4549  003772  EFBD  F01B         	goto	u5881
  4550  003776  EFBF  F01B         	goto	u5880
  4551  00377A                     u5881:
  4552  00377A  EFC4  F01B         	goto	l4457
  4553  00377E                     u5880:
  4554  00377E                     l4455:
  4555  00377E  501F               	movf	fputc@c^0,w,c
  4556  003780  ECD1  F020         	call	_putch
  4557  003784  EF11  F01C         	goto	l1032
  4558  003788                     l4457:
  4559  003788  EE20 F004          	lfsr	2,4
  4560  00378C  5021               	movf	fputc@fp^0,w,c
  4561  00378E  26D9               	addwf	fsr2l,f,c
  4562  003790  5022               	movf	(fputc@fp+1)^0,w,c
  4563  003792  22DA               	addwfc	fsr2h,f,c
  4564  003794  50DE               	movf	postinc2,w,c
  4565  003796  10DE               	iorwf	postinc2,w,c
  4566  003798  B4D8               	btfsc	status,2,c
  4567  00379A  EFD1  F01B         	goto	u5891
  4568  00379E  EFD3  F01B         	goto	u5890
  4569  0037A2                     u5891:
  4570  0037A2  EFEE  F01B         	goto	l4461
  4571  0037A6                     u5890:
  4572  0037A6  EE20 F004          	lfsr	2,4
  4573  0037AA  5021               	movf	fputc@fp^0,w,c
  4574  0037AC  26D9               	addwf	fsr2l,f,c
  4575  0037AE  5022               	movf	(fputc@fp+1)^0,w,c
  4576  0037B0  22DA               	addwfc	fsr2h,f,c
  4577  0037B2  EE10 F002          	lfsr	1,2
  4578  0037B6  5021               	movf	fputc@fp^0,w,c
  4579  0037B8  26E1               	addwf	fsr1l,f,c
  4580  0037BA  5022               	movf	(fputc@fp+1)^0,w,c
  4581  0037BC  22E2               	addwfc	fsr1h,f,c
  4582  0037BE  50DE               	movf	postinc2,w,c
  4583  0037C0  5CE6               	subwf	postinc1,w,c
  4584  0037C2  50E6               	movf	postinc1,w,c
  4585  0037C4  0A80               	xorlw	128
  4586  0037C6  6E27               	movwf	(??_fputc+4)^0,c
  4587  0037C8  50DE               	movf	postinc2,w,c
  4588  0037CA  0A80               	xorlw	128
  4589  0037CC  5827               	subwfb	(??_fputc+4)^0,w,c
  4590  0037CE  B0D8               	btfsc	status,0,c
  4591  0037D0  EFEC  F01B         	goto	u5901
  4592  0037D4  EFEE  F01B         	goto	u5900
  4593  0037D8                     u5901:
  4594  0037D8  EF11  F01C         	goto	l1032
  4595  0037DC                     u5900:
  4596  0037DC                     l4461:
  4597  0037DC  EE20 F002          	lfsr	2,2
  4598  0037E0  5021               	movf	fputc@fp^0,w,c
  4599  0037E2  26D9               	addwf	fsr2l,f,c
  4600  0037E4  5022               	movf	(fputc@fp+1)^0,w,c
  4601  0037E6  22DA               	addwfc	fsr2h,f,c
  4602  0037E8  CFDE F023          	movff	postinc2,??_fputc
  4603  0037EC  CFDD F024          	movff	postdec2,??_fputc+1
  4604  0037F0  C021  FFD9         	movff	fputc@fp,fsr2l
  4605  0037F4  C022  FFDA         	movff	fputc@fp+1,fsr2h
  4606  0037F8  CFDE F025          	movff	postinc2,??_fputc+2
  4607  0037FC  CFDD F026          	movff	postdec2,??_fputc+3
  4608  003800  5023               	movf	??_fputc^0,w,c
  4609  003802  2425               	addwf	(??_fputc+2)^0,w,c
  4610  003804  6ED9               	movwf	fsr2l,c
  4611  003806  5024               	movf	(??_fputc+1)^0,w,c
  4612  003808  2026               	addwfc	(??_fputc+3)^0,w,c
  4613  00380A  6EDA               	movwf	fsr2h,c
  4614  00380C  C01F  FFDF         	movff	fputc@c,indf2
  4615  003810  EE20 F002          	lfsr	2,2
  4616  003814  5021               	movf	fputc@fp^0,w,c
  4617  003816  26D9               	addwf	fsr2l,f,c
  4618  003818  5022               	movf	(fputc@fp+1)^0,w,c
  4619  00381A  22DA               	addwfc	fsr2h,f,c
  4620  00381C  2ADE               	incf	postinc2,f,c
  4621  00381E  0E00               	movlw	0
  4622  003820  22DD               	addwfc	postdec2,f,c
  4623  003822                     l1032:
  4624  003822  0012               	return		;funcret
  4625  003824                     __end_of_fputc:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _putch *****************
  4629 ;; Defined at:
  4630 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  c               1    wreg     unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  c               1    0[COMRAM] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4644 ;;      Params:         0       0       0       0       0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4647 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4648 ;;Total ram usage:        0 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; Hardware stack levels required when called: 4
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_fputc
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text12
  4659  0041A2                     __ptext12:
  4660                           	callstack 0
  4661  0041A2                     _putch:
  4662                           	callstack 22
  4663  0041A2  0012               	return		;funcret
  4664  0041A4                     __end_of_putch:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _floorf *****************
  4668 ;; Defined at:
  4669 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  x               4   13[BANK0 ] float 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  u               4   29[BANK0 ] struct .
  4674 ;;  m               4   23[BANK0 ] unsigned long 
  4675 ;;  e               2   27[BANK0 ] int 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  4   13[BANK0 ] float 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4685 ;;      Params:         0       4       0       0       0       0       0       0       0
  4686 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4687 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4688 ;;      Totals:         0      20       0       0       0       0       0       0       0
  4689 ;;Total ram usage:       20 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 4
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_efgtoa
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text13
  4700  002B52                     __ptext13:
  4701                           	callstack 0
  4702  002B52                     _floorf:
  4703                           	callstack 22
  4704  002B52  C02B  F07D         	movff	floorf@F527,floorf@u
  4705  002B56  C02C  F07E         	movff	floorf@F527+1,floorf@u+1
  4706  002B5A  C02D  F07F         	movff	floorf@F527+2,floorf@u+2
  4707  002B5E  C02E  F080         	movff	floorf@F527+3,floorf@u+3
  4708  002B62  C06D  F07D         	movff	floorf@x,floorf@u
  4709  002B66  C06E  F07E         	movff	floorf@x+1,floorf@u+1
  4710  002B6A  C06F  F07F         	movff	floorf@x+2,floorf@u+2
  4711  002B6E  C070  F080         	movff	floorf@x+3,floorf@u+3
  4712  002B72  0E81               	movlw	129
  4713  002B74  0100               	movlb	0	; () banked
  4714  002B76  6F71               	movwf	??_floorf& (0+255),b
  4715  002B78  0EFF               	movlw	255
  4716  002B7A  6F72               	movwf	(??_floorf+1)& (0+255),b
  4717  002B7C  C07D  F073         	movff	floorf@u,??_floorf+2
  4718  002B80  C07E  F074         	movff	floorf@u+1,??_floorf+3
  4719  002B84  C07F  F075         	movff	floorf@u+2,??_floorf+4
  4720  002B88  C080  F076         	movff	floorf@u+3,??_floorf+5
  4721  002B8C  0E18               	movlw	24
  4722  002B8E  EFCE  F015         	goto	u7210
  4723  002B92                     u7215:
  4724  002B92  90D8               	bcf	status,0,c
  4725  002B94  3376               	rrcf	(??_floorf+5)& (0+255),f,b
  4726  002B96  3375               	rrcf	(??_floorf+4)& (0+255),f,b
  4727  002B98  3374               	rrcf	(??_floorf+3)& (0+255),f,b
  4728  002B9A  3373               	rrcf	(??_floorf+2)& (0+255),f,b
  4729  002B9C                     u7210:
  4730  002B9C  2EE8               	decfsz	wreg,f,c
  4731  002B9E  EFC9  F015         	goto	u7215
  4732  002BA2  5173               	movf	(??_floorf+2)& (0+255),w,b
  4733  002BA4  2571               	addwf	??_floorf& (0+255),w,b
  4734  002BA6  6F7B               	movwf	floorf@e& (0+255),b
  4735  002BA8  0E00               	movlw	0
  4736  002BAA  2172               	addwfc	(??_floorf+1)& (0+255),w,b
  4737  002BAC  6F7C               	movwf	(floorf@e+1)& (0+255),b
  4738  002BAE  BF7C               	btfsc	(floorf@e+1)& (0+255),7,b
  4739  002BB0  EFE3  F015         	goto	u7221
  4740  002BB4  517C               	movf	(floorf@e+1)& (0+255),w,b
  4741  002BB6  E109               	bnz	u7220
  4742  002BB8  0E17               	movlw	23
  4743  002BBA  5D7B               	subwf	floorf@e& (0+255),w,b
  4744  002BBC  A0D8               	btfss	status,0,c
  4745  002BBE  EFE3  F015         	goto	u7221
  4746  002BC2  EFE5  F015         	goto	u7220
  4747  002BC6                     u7221:
  4748  002BC6  EFEF  F015         	goto	l5203
  4749  002BCA                     u7220:
  4750  002BCA                     l5201:
  4751                           
  4752                           ; BSR set to: 0
  4753  002BCA  C06D  F06D         	movff	floorf@x,?_floorf
  4754  002BCE  C06E  F06E         	movff	floorf@x+1,?_floorf+1
  4755  002BD2  C06F  F06F         	movff	floorf@x+2,?_floorf+2
  4756  002BD6  C070  F070         	movff	floorf@x+3,?_floorf+3
  4757  002BDA  EFB3  F016         	goto	l993
  4758  002BDE                     l5203:
  4759                           
  4760                           ; BSR set to: 0
  4761  002BDE  BF7C               	btfsc	(floorf@e+1)& (0+255),7,b
  4762  002BE0  EFF4  F015         	goto	u7231
  4763  002BE4  EFF6  F015         	goto	u7230
  4764  002BE8                     u7231:
  4765  002BE8  EF67  F016         	goto	l5213
  4766  002BEC                     u7230:
  4767  002BEC                     
  4768                           ; BSR set to: 0
  4769  002BEC  C07B  F071         	movff	floorf@e,??_floorf
  4770  002BF0  0EFF               	movlw	255
  4771  002BF2  6F72               	movwf	(??_floorf+1)& (0+255),b
  4772  002BF4  0EFF               	movlw	255
  4773  002BF6  6F73               	movwf	(??_floorf+2)& (0+255),b
  4774  002BF8  0E7F               	movlw	127
  4775  002BFA  6F74               	movwf	(??_floorf+3)& (0+255),b
  4776  002BFC  0E00               	movlw	0
  4777  002BFE  6F75               	movwf	(??_floorf+4)& (0+255),b
  4778  002C00                     u7245:
  4779  002C00  6771               	tstfsz	??_floorf& (0+255),b
  4780  002C02  EF05  F016         	goto	u7246
  4781  002C06  EF0D  F016         	goto	u7247
  4782  002C0A                     u7246:
  4783  002C0A  3575               	rlcf	(??_floorf+4)& (0+255),w,b
  4784  002C0C  3375               	rrcf	(??_floorf+4)& (0+255),f,b
  4785  002C0E  3374               	rrcf	(??_floorf+3)& (0+255),f,b
  4786  002C10  3373               	rrcf	(??_floorf+2)& (0+255),f,b
  4787  002C12  3372               	rrcf	(??_floorf+1)& (0+255),f,b
  4788  002C14  2F71               	decfsz	??_floorf& (0+255),f,b
  4789  002C16  EF00  F016         	goto	u7245
  4790  002C1A                     u7247:
  4791  002C1A  C072  F077         	movff	??_floorf+1,floorf@m
  4792  002C1E  C073  F078         	movff	??_floorf+2,floorf@m+1
  4793  002C22  C074  F079         	movff	??_floorf+3,floorf@m+2
  4794  002C26  C075  F07A         	movff	??_floorf+4,floorf@m+3
  4795  002C2A  0100               	movlb	0	; () banked
  4796  002C2C  5177               	movf	floorf@m& (0+255),w,b
  4797  002C2E  157D               	andwf	floorf@u& (0+255),w,b
  4798  002C30  6F71               	movwf	??_floorf& (0+255),b
  4799  002C32  5178               	movf	(floorf@m+1)& (0+255),w,b
  4800  002C34  157E               	andwf	(floorf@u+1)& (0+255),w,b
  4801  002C36  6F72               	movwf	(??_floorf+1)& (0+255),b
  4802  002C38  5179               	movf	(floorf@m+2)& (0+255),w,b
  4803  002C3A  157F               	andwf	(floorf@u+2)& (0+255),w,b
  4804  002C3C  6F73               	movwf	(??_floorf+2)& (0+255),b
  4805  002C3E  517A               	movf	(floorf@m+3)& (0+255),w,b
  4806  002C40  1580               	andwf	(floorf@u+3)& (0+255),w,b
  4807  002C42  6F74               	movwf	(??_floorf+3)& (0+255),b
  4808  002C44  5171               	movf	??_floorf& (0+255),w,b
  4809  002C46  1172               	iorwf	(??_floorf+1)& (0+255),w,b
  4810  002C48  1173               	iorwf	(??_floorf+2)& (0+255),w,b
  4811  002C4A  1174               	iorwf	(??_floorf+3)& (0+255),w,b
  4812  002C4C  A4D8               	btfss	status,2,c
  4813  002C4E  EF2B  F016         	goto	u7251
  4814  002C52  EF2D  F016         	goto	u7250
  4815  002C56                     u7251:
  4816  002C56  EF2F  F016         	goto	l5209
  4817  002C5A                     u7250:
  4818  002C5A  EFE5  F015         	goto	l5201
  4819  002C5E                     l5209:
  4820                           
  4821                           ; BSR set to: 0
  4822  002C5E  C07D  F071         	movff	floorf@u,??_floorf
  4823  002C62  C07E  F072         	movff	floorf@u+1,??_floorf+1
  4824  002C66  C07F  F073         	movff	floorf@u+2,??_floorf+2
  4825  002C6A  C080  F074         	movff	floorf@u+3,??_floorf+3
  4826  002C6E  0E20               	movlw	32
  4827  002C70  EF3F  F016         	goto	u7260
  4828  002C74                     u7265:
  4829  002C74  90D8               	bcf	status,0,c
  4830  002C76  3374               	rrcf	(??_floorf+3)& (0+255),f,b
  4831  002C78  3373               	rrcf	(??_floorf+2)& (0+255),f,b
  4832  002C7A  3372               	rrcf	(??_floorf+1)& (0+255),f,b
  4833  002C7C  3371               	rrcf	??_floorf& (0+255),f,b
  4834  002C7E                     u7260:
  4835  002C7E  2EE8               	decfsz	wreg,f,c
  4836  002C80  EF3A  F016         	goto	u7265
  4837  002C84  5171               	movf	??_floorf& (0+255),w,b
  4838  002C86  1172               	iorwf	(??_floorf+1)& (0+255),w,b
  4839  002C88  1173               	iorwf	(??_floorf+2)& (0+255),w,b
  4840  002C8A  1174               	iorwf	(??_floorf+3)& (0+255),w,b
  4841  002C8C  B4D8               	btfsc	status,2,c
  4842  002C8E  EF4B  F016         	goto	u7271
  4843  002C92  EF4D  F016         	goto	u7270
  4844  002C96                     u7271:
  4845  002C96  EF55  F016         	goto	l996
  4846  002C9A                     u7270:
  4847  002C9A                     
  4848                           ; BSR set to: 0
  4849  002C9A  5177               	movf	floorf@m& (0+255),w,b
  4850  002C9C  277D               	addwf	floorf@u& (0+255),f,b
  4851  002C9E  5178               	movf	(floorf@m+1)& (0+255),w,b
  4852  002CA0  237E               	addwfc	(floorf@u+1)& (0+255),f,b
  4853  002CA2  5179               	movf	(floorf@m+2)& (0+255),w,b
  4854  002CA4  237F               	addwfc	(floorf@u+2)& (0+255),f,b
  4855  002CA6  517A               	movf	(floorf@m+3)& (0+255),w,b
  4856  002CA8  2380               	addwfc	(floorf@u+3)& (0+255),f,b
  4857  002CAA                     l996:
  4858                           
  4859                           ; BSR set to: 0
  4860  002CAA  1D77               	comf	floorf@m& (0+255),w,b
  4861  002CAC  6F71               	movwf	??_floorf& (0+255),b
  4862  002CAE  1D78               	comf	(floorf@m+1)& (0+255),w,b
  4863  002CB0  6F72               	movwf	(??_floorf+1)& (0+255),b
  4864  002CB2  1D79               	comf	(floorf@m+2)& (0+255),w,b
  4865  002CB4  6F73               	movwf	(??_floorf+2)& (0+255),b
  4866  002CB6  1D7A               	comf	(floorf@m+3)& (0+255),w,b
  4867  002CB8  6F74               	movwf	(??_floorf+3)& (0+255),b
  4868  002CBA  5171               	movf	??_floorf& (0+255),w,b
  4869  002CBC  177D               	andwf	floorf@u& (0+255),f,b
  4870  002CBE  5172               	movf	(??_floorf+1)& (0+255),w,b
  4871  002CC0  177E               	andwf	(floorf@u+1)& (0+255),f,b
  4872  002CC2  5173               	movf	(??_floorf+2)& (0+255),w,b
  4873  002CC4  177F               	andwf	(floorf@u+2)& (0+255),f,b
  4874  002CC6  5174               	movf	(??_floorf+3)& (0+255),w,b
  4875  002CC8  1780               	andwf	(floorf@u+3)& (0+255),f,b
  4876  002CCA  EFAB  F016         	goto	l5221
  4877  002CCE                     l5213:
  4878                           
  4879                           ; BSR set to: 0
  4880  002CCE  C07D  F071         	movff	floorf@u,??_floorf
  4881  002CD2  C07E  F072         	movff	floorf@u+1,??_floorf+1
  4882  002CD6  C07F  F073         	movff	floorf@u+2,??_floorf+2
  4883  002CDA  C080  F074         	movff	floorf@u+3,??_floorf+3
  4884  002CDE  0E20               	movlw	32
  4885  002CE0  EF77  F016         	goto	u7280
  4886  002CE4                     u7285:
  4887  002CE4  90D8               	bcf	status,0,c
  4888  002CE6  3374               	rrcf	(??_floorf+3)& (0+255),f,b
  4889  002CE8  3373               	rrcf	(??_floorf+2)& (0+255),f,b
  4890  002CEA  3372               	rrcf	(??_floorf+1)& (0+255),f,b
  4891  002CEC  3371               	rrcf	??_floorf& (0+255),f,b
  4892  002CEE                     u7280:
  4893  002CEE  2EE8               	decfsz	wreg,f,c
  4894  002CF0  EF72  F016         	goto	u7285
  4895  002CF4  5171               	movf	??_floorf& (0+255),w,b
  4896  002CF6  1172               	iorwf	(??_floorf+1)& (0+255),w,b
  4897  002CF8  1173               	iorwf	(??_floorf+2)& (0+255),w,b
  4898  002CFA  1174               	iorwf	(??_floorf+3)& (0+255),w,b
  4899  002CFC  A4D8               	btfss	status,2,c
  4900  002CFE  EF83  F016         	goto	u7291
  4901  002D02  EF85  F016         	goto	u7290
  4902  002D06                     u7291:
  4903  002D06  EF8F  F016         	goto	l5217
  4904  002D0A                     u7290:
  4905  002D0A                     
  4906                           ; BSR set to: 0
  4907  002D0A  0E00               	movlw	0
  4908  002D0C  6F7D               	movwf	floorf@u& (0+255),b
  4909  002D0E  0E00               	movlw	0
  4910  002D10  6F7E               	movwf	(floorf@u+1)& (0+255),b
  4911  002D12  0E00               	movlw	0
  4912  002D14  6F7F               	movwf	(floorf@u+2)& (0+255),b
  4913  002D16  0E00               	movlw	0
  4914  002D18  6F80               	movwf	(floorf@u+3)& (0+255),b
  4915  002D1A  EFAB  F016         	goto	l5221
  4916  002D1E                     l5217:
  4917                           
  4918                           ; BSR set to: 0
  4919  002D1E  90D8               	bcf	status,0,c
  4920  002D20  357D               	rlcf	floorf@u& (0+255),w,b
  4921  002D22  6F71               	movwf	??_floorf& (0+255),b
  4922  002D24  357E               	rlcf	(floorf@u+1)& (0+255),w,b
  4923  002D26  6F72               	movwf	(??_floorf+1)& (0+255),b
  4924  002D28  357F               	rlcf	(floorf@u+2)& (0+255),w,b
  4925  002D2A  6F73               	movwf	(??_floorf+2)& (0+255),b
  4926  002D2C  3580               	rlcf	(floorf@u+3)& (0+255),w,b
  4927  002D2E  6F74               	movwf	(??_floorf+3)& (0+255),b
  4928  002D30  5171               	movf	??_floorf& (0+255),w,b
  4929  002D32  1172               	iorwf	(??_floorf+1)& (0+255),w,b
  4930  002D34  1173               	iorwf	(??_floorf+2)& (0+255),w,b
  4931  002D36  1174               	iorwf	(??_floorf+3)& (0+255),w,b
  4932  002D38  B4D8               	btfsc	status,2,c
  4933  002D3A  EFA1  F016         	goto	u7301
  4934  002D3E  EFA3  F016         	goto	u7300
  4935  002D42                     u7301:
  4936  002D42  EFAB  F016         	goto	l5221
  4937  002D46                     u7300:
  4938  002D46                     
  4939                           ; BSR set to: 0
  4940  002D46  0E00               	movlw	0
  4941  002D48  6F7D               	movwf	floorf@u& (0+255),b
  4942  002D4A  0E00               	movlw	0
  4943  002D4C  6F7E               	movwf	(floorf@u+1)& (0+255),b
  4944  002D4E  0E80               	movlw	128
  4945  002D50  6F7F               	movwf	(floorf@u+2)& (0+255),b
  4946  002D52  0EBF               	movlw	191
  4947  002D54  6F80               	movwf	(floorf@u+3)& (0+255),b
  4948  002D56                     l5221:
  4949                           
  4950                           ; BSR set to: 0
  4951  002D56  C07D  F06D         	movff	floorf@u,?_floorf
  4952  002D5A  C07E  F06E         	movff	floorf@u+1,?_floorf+1
  4953  002D5E  C07F  F06F         	movff	floorf@u+2,?_floorf+2
  4954  002D62  C080  F070         	movff	floorf@u+3,?_floorf+3
  4955  002D66                     l993:
  4956                           
  4957                           ; BSR set to: 0
  4958  002D66  0012               	return		;funcret
  4959  002D68                     __end_of_floorf:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function ___fpclassifyf *****************
  4963 ;; Defined at:
  4964 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  x               4   30[COMRAM] float 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  u               4    2[BANK0 ] struct .
  4969 ;;  e               2    0[BANK0 ] int 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  2   30[COMRAM] int 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4979 ;;      Params:         4       0       0       0       0       0       0       0       0
  4980 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4981 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4982 ;;      Totals:         8       6       0       0       0       0       0       0       0
  4983 ;;Total ram usage:       14 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 4
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_efgtoa
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text14
  4994  0033B8                     __ptext14:
  4995                           	callstack 0
  4996  0033B8                     ___fpclassifyf:
  4997                           	callstack 22
  4998  0033B8  C02F  F062         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4999  0033BC  C030  F063         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5000  0033C0  C031  F064         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5001  0033C4  C032  F065         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5002  0033C8  C01F  F062         	movff	___fpclassifyf@x,___fpclassifyf@u
  5003  0033CC  C020  F063         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5004  0033D0  C021  F064         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5005  0033D4  C022  F065         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5006  0033D8  C062  F023         	movff	___fpclassifyf@u,??___fpclassifyf
  5007  0033DC  C063  F024         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5008  0033E0  C064  F025         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5009  0033E4  C065  F026         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5010  0033E8  0E18               	movlw	24
  5011  0033EA  EFFC  F019         	goto	u7090
  5012  0033EE                     u7095:
  5013  0033EE  90D8               	bcf	status,0,c
  5014  0033F0  3226               	rrcf	(??___fpclassifyf+3)^0,f,c
  5015  0033F2  3225               	rrcf	(??___fpclassifyf+2)^0,f,c
  5016  0033F4  3224               	rrcf	(??___fpclassifyf+1)^0,f,c
  5017  0033F6  3223               	rrcf	??___fpclassifyf^0,f,c
  5018  0033F8                     u7090:
  5019  0033F8  2EE8               	decfsz	wreg,f,c
  5020  0033FA  EFF7  F019         	goto	u7095
  5021  0033FE  5023               	movf	??___fpclassifyf^0,w,c
  5022  003400  0100               	movlb	0	; () banked
  5023  003402  6F60               	movwf	___fpclassifyf@e& (0+255),b
  5024  003404  6B61               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5025  003406  5160               	movf	___fpclassifyf@e& (0+255),w,b
  5026  003408  1161               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5027  00340A  A4D8               	btfss	status,2,c
  5028  00340C  EF0A  F01A         	goto	u7101
  5029  003410  EF0C  F01A         	goto	u7100
  5030  003414                     u7101:
  5031  003414  EF2C  F01A         	goto	l5173
  5032  003418                     u7100:
  5033  003418                     
  5034                           ; BSR set to: 0
  5035  003418  90D8               	bcf	status,0,c
  5036  00341A  3562               	rlcf	___fpclassifyf@u& (0+255),w,b
  5037  00341C  6E23               	movwf	??___fpclassifyf^0,c
  5038  00341E  3563               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5039  003420  6E24               	movwf	(??___fpclassifyf+1)^0,c
  5040  003422  3564               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5041  003424  6E25               	movwf	(??___fpclassifyf+2)^0,c
  5042  003426  3565               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5043  003428  6E26               	movwf	(??___fpclassifyf+3)^0,c
  5044  00342A  5023               	movf	??___fpclassifyf^0,w,c
  5045  00342C  1024               	iorwf	(??___fpclassifyf+1)^0,w,c
  5046  00342E  1025               	iorwf	(??___fpclassifyf+2)^0,w,c
  5047  003430  1026               	iorwf	(??___fpclassifyf+3)^0,w,c
  5048  003432  A4D8               	btfss	status,2,c
  5049  003434  EF1E  F01A         	goto	u7111
  5050  003438  EF20  F01A         	goto	u7110
  5051  00343C                     u7111:
  5052  00343C  EF26  F01A         	goto	l5169
  5053  003440                     u7110:
  5054  003440                     
  5055                           ; BSR set to: 0
  5056  003440  0E00               	movlw	0
  5057  003442  6E20               	movwf	(?___fpclassifyf+1)^0,c
  5058  003444  0E02               	movlw	2
  5059  003446  6E1F               	movwf	?___fpclassifyf^0,c
  5060  003448  EF5B  F01A         	goto	l955
  5061  00344C                     l5169:
  5062                           
  5063                           ; BSR set to: 0
  5064  00344C  0E00               	movlw	0
  5065  00344E  6E20               	movwf	(?___fpclassifyf+1)^0,c
  5066  003450  0E03               	movlw	3
  5067  003452  6E1F               	movwf	?___fpclassifyf^0,c
  5068  003454  EF5B  F01A         	goto	l955
  5069  003458                     l5173:
  5070                           
  5071                           ; BSR set to: 0
  5072  003458  2960               	incf	___fpclassifyf@e& (0+255),w,b
  5073  00345A  1161               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5074  00345C  A4D8               	btfss	status,2,c
  5075  00345E  EF33  F01A         	goto	u7121
  5076  003462  EF35  F01A         	goto	u7120
  5077  003466                     u7121:
  5078  003466  EF57  F01A         	goto	l5179
  5079  00346A                     u7120:
  5080  00346A                     
  5081                           ; BSR set to: 0
  5082  00346A  C062  F023         	movff	___fpclassifyf@u,??___fpclassifyf
  5083  00346E  C063  F024         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5084  003472  C064  F025         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5085  003476  C065  F026         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5086  00347A  0E09               	movlw	9
  5087  00347C                     u7135:
  5088  00347C  90D8               	bcf	status,0,c
  5089  00347E  3623               	rlcf	??___fpclassifyf^0,f,c
  5090  003480  3624               	rlcf	(??___fpclassifyf+1)^0,f,c
  5091  003482  3625               	rlcf	(??___fpclassifyf+2)^0,f,c
  5092  003484  3626               	rlcf	(??___fpclassifyf+3)^0,f,c
  5093  003486  2EE8               	decfsz	wreg,f,c
  5094  003488  EF3E  F01A         	goto	u7135
  5095  00348C  5023               	movf	??___fpclassifyf^0,w,c
  5096  00348E  1024               	iorwf	(??___fpclassifyf+1)^0,w,c
  5097  003490  1025               	iorwf	(??___fpclassifyf+2)^0,w,c
  5098  003492  1026               	iorwf	(??___fpclassifyf+3)^0,w,c
  5099  003494  B4D8               	btfsc	status,2,c
  5100  003496  EF4F  F01A         	goto	u7141
  5101  00349A  EF52  F01A         	goto	u7140
  5102  00349E                     u7141:
  5103  00349E  0E01               	movlw	1
  5104  0034A0  EF53  F01A         	goto	u7150
  5105  0034A4                     u7140:
  5106  0034A4  0E00               	movlw	0
  5107  0034A6                     u7150:
  5108  0034A6  6E1F               	movwf	?___fpclassifyf^0,c
  5109  0034A8  6A20               	clrf	(?___fpclassifyf+1)^0,c
  5110  0034AA  EF5B  F01A         	goto	l955
  5111  0034AE                     l5179:
  5112                           
  5113                           ; BSR set to: 0
  5114  0034AE  0E00               	movlw	0
  5115  0034B0  6E20               	movwf	(?___fpclassifyf+1)^0,c
  5116  0034B2  0E04               	movlw	4
  5117  0034B4  6E1F               	movwf	?___fpclassifyf^0,c
  5118  0034B6                     l955:
  5119                           
  5120                           ; BSR set to: 0
  5121  0034B6  0012               	return		;funcret
  5122  0034B8                     __end_of___fpclassifyf:
  5123                           	callstack 0
  5124                           
  5125 ;; *************** function ___fltol *****************
  5126 ;; Defined at:
  5127 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  f1              4   30[COMRAM] int 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  exp1            1   39[COMRAM] unsigned char 
  5132 ;;  sign1           1   38[COMRAM] unsigned char 
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  4   30[COMRAM] long 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5142 ;;      Params:         4       0       0       0       0       0       0       0       0
  5143 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5144 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5145 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5146 ;;Total ram usage:       10 bytes
  5147 ;; Hardware stack levels used: 1
  5148 ;; Hardware stack levels required when called: 4
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_efgtoa
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text15
  5157  0030A8                     __ptext15:
  5158                           	callstack 0
  5159  0030A8                     ___fltol:
  5160                           	callstack 22
  5161  0030A8  3421               	rlcf	(___fltol@f1+2)^0,w,c
  5162  0030AA  3422               	rlcf	(___fltol@f1+3)^0,w,c
  5163  0030AC  6E28               	movwf	___fltol@exp1^0,c
  5164  0030AE  5028               	movf	___fltol@exp1^0,w,c
  5165  0030B0  A4D8               	btfss	status,2,c
  5166  0030B2  EF5D  F018         	goto	u6981
  5167  0030B6  EF5F  F018         	goto	u6980
  5168  0030BA                     u6981:
  5169  0030BA  EF69  F018         	goto	l5101
  5170  0030BE                     u6980:
  5171  0030BE                     l5097:
  5172  0030BE  0E00               	movlw	0
  5173  0030C0  6E1F               	movwf	?___fltol^0,c
  5174  0030C2  0E00               	movlw	0
  5175  0030C4  6E20               	movwf	(?___fltol+1)^0,c
  5176  0030C6  0E00               	movlw	0
  5177  0030C8  6E21               	movwf	(?___fltol+2)^0,c
  5178  0030CA  0E00               	movlw	0
  5179  0030CC  6E22               	movwf	(?___fltol+3)^0,c
  5180  0030CE  EFD6  F018         	goto	l384
  5181  0030D2                     l5101:
  5182  0030D2  C01F  F023         	movff	___fltol@f1,??___fltol
  5183  0030D6  C020  F024         	movff	___fltol@f1+1,??___fltol+1
  5184  0030DA  C021  F025         	movff	___fltol@f1+2,??___fltol+2
  5185  0030DE  C022  F026         	movff	___fltol@f1+3,??___fltol+3
  5186  0030E2  0E20               	movlw	32
  5187  0030E4  EF79  F018         	goto	u6990
  5188  0030E8                     u6995:
  5189  0030E8  90D8               	bcf	status,0,c
  5190  0030EA  3226               	rrcf	(??___fltol+3)^0,f,c
  5191  0030EC  3225               	rrcf	(??___fltol+2)^0,f,c
  5192  0030EE  3224               	rrcf	(??___fltol+1)^0,f,c
  5193  0030F0  3223               	rrcf	??___fltol^0,f,c
  5194  0030F2                     u6990:
  5195  0030F2  2EE8               	decfsz	wreg,f,c
  5196  0030F4  EF74  F018         	goto	u6995
  5197  0030F8  5023               	movf	??___fltol^0,w,c
  5198  0030FA  6E27               	movwf	___fltol@sign1^0,c
  5199  0030FC  8E21               	bsf	(___fltol@f1+2)^0,7,c
  5200  0030FE  0EFF               	movlw	255
  5201  003100  161F               	andwf	___fltol@f1^0,f,c
  5202  003102  0EFF               	movlw	255
  5203  003104  1620               	andwf	(___fltol@f1+1)^0,f,c
  5204  003106  0EFF               	movlw	255
  5205  003108  1621               	andwf	(___fltol@f1+2)^0,f,c
  5206  00310A  0E00               	movlw	0
  5207  00310C  1622               	andwf	(___fltol@f1+3)^0,f,c
  5208  00310E  0E96               	movlw	150
  5209  003110  5E28               	subwf	___fltol@exp1^0,f,c
  5210  003112  BE28               	btfsc	___fltol@exp1^0,7,c
  5211  003114  EF90  F018         	goto	u7000
  5212  003118  EF8E  F018         	goto	u7001
  5213  00311C                     u7001:
  5214  00311C  EFA6  F018         	goto	l5121
  5215  003120                     u7000:
  5216  003120  5028               	movf	___fltol@exp1^0,w,c
  5217  003122  0A80               	xorlw	128
  5218  003124  0F97               	addlw	151
  5219  003126  B0D8               	btfsc	status,0,c
  5220  003128  EF98  F018         	goto	u7011
  5221  00312C  EF9A  F018         	goto	u7010
  5222  003130                     u7011:
  5223  003130  EF9C  F018         	goto	l5117
  5224  003134                     u7010:
  5225  003134  EF5F  F018         	goto	l5097
  5226  003138                     l5117:
  5227  003138  90D8               	bcf	status,0,c
  5228  00313A  3222               	rrcf	(___fltol@f1+3)^0,f,c
  5229  00313C  3221               	rrcf	(___fltol@f1+2)^0,f,c
  5230  00313E  3220               	rrcf	(___fltol@f1+1)^0,f,c
  5231  003140  321F               	rrcf	___fltol@f1^0,f,c
  5232  003142  3E28               	incfsz	___fltol@exp1^0,f,c
  5233  003144  EF9C  F018         	goto	l5117
  5234  003148  EFBE  F018         	goto	l5131
  5235  00314C                     l5121:
  5236  00314C  0E1F               	movlw	31
  5237  00314E  6428               	cpfsgt	___fltol@exp1^0,c
  5238  003150  EFAC  F018         	goto	u7021
  5239  003154  EFAE  F018         	goto	u7020
  5240  003158                     u7021:
  5241  003158  EFB6  F018         	goto	l5129
  5242  00315C                     u7020:
  5243  00315C  EF5F  F018         	goto	l5097
  5244  003160                     l5127:
  5245  003160  90D8               	bcf	status,0,c
  5246  003162  361F               	rlcf	___fltol@f1^0,f,c
  5247  003164  3620               	rlcf	(___fltol@f1+1)^0,f,c
  5248  003166  3621               	rlcf	(___fltol@f1+2)^0,f,c
  5249  003168  3622               	rlcf	(___fltol@f1+3)^0,f,c
  5250  00316A  0628               	decf	___fltol@exp1^0,f,c
  5251  00316C                     l5129:
  5252  00316C  5028               	movf	___fltol@exp1^0,w,c
  5253  00316E  A4D8               	btfss	status,2,c
  5254  003170  EFBC  F018         	goto	u7031
  5255  003174  EFBE  F018         	goto	u7030
  5256  003178                     u7031:
  5257  003178  EFB0  F018         	goto	l5127
  5258  00317C                     u7030:
  5259  00317C                     l5131:
  5260  00317C  5027               	movf	___fltol@sign1^0,w,c
  5261  00317E  B4D8               	btfsc	status,2,c
  5262  003180  EFC4  F018         	goto	u7041
  5263  003184  EFC6  F018         	goto	u7040
  5264  003188                     u7041:
  5265  003188  EFCE  F018         	goto	l5135
  5266  00318C                     u7040:
  5267  00318C  1E22               	comf	(___fltol@f1+3)^0,f,c
  5268  00318E  1E21               	comf	(___fltol@f1+2)^0,f,c
  5269  003190  1E20               	comf	(___fltol@f1+1)^0,f,c
  5270  003192  6C1F               	negf	___fltol@f1^0,c
  5271  003194  0E00               	movlw	0
  5272  003196  2220               	addwfc	(___fltol@f1+1)^0,f,c
  5273  003198  2221               	addwfc	(___fltol@f1+2)^0,f,c
  5274  00319A  2222               	addwfc	(___fltol@f1+3)^0,f,c
  5275  00319C                     l5135:
  5276  00319C  C01F  F01F         	movff	___fltol@f1,?___fltol
  5277  0031A0  C020  F020         	movff	___fltol@f1+1,?___fltol+1
  5278  0031A4  C021  F021         	movff	___fltol@f1+2,?___fltol+2
  5279  0031A8  C022  F022         	movff	___fltol@f1+3,?___fltol+3
  5280  0031AC                     l384:
  5281  0031AC  0012               	return		;funcret
  5282  0031AE                     __end_of___fltol:
  5283                           	callstack 0
  5284                           
  5285 ;; *************** function ___flsub *****************
  5286 ;; Defined at:
  5287 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  b               4   13[BANK0 ] long 
  5290 ;;  a               4   17[BANK0 ] long 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  4   13[BANK0 ] long 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5302 ;;      Params:         0       8       0       0       0       0       0       0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5305 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5306 ;;Total ram usage:        8 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; Hardware stack levels required when called: 5
  5309 ;; This function calls:
  5310 ;;		___fladd
  5311 ;; This function is called by:
  5312 ;;		_efgtoa
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text16
  5317  003F74                     __ptext16:
  5318                           	callstack 0
  5319  003F74                     ___flsub:
  5320                           	callstack 21
  5321  003F74  0E00               	movlw	0
  5322  003F76  0100               	movlb	0	; () banked
  5323  003F78  1B71               	xorwf	___flsub@a& (0+255),f,b
  5324  003F7A  0E00               	movlw	0
  5325  003F7C  1B72               	xorwf	(___flsub@a+1)& (0+255),f,b
  5326  003F7E  0E00               	movlw	0
  5327  003F80  1B73               	xorwf	(___flsub@a+2)& (0+255),f,b
  5328  003F82  0E80               	movlw	128
  5329  003F84  1B74               	xorwf	(___flsub@a+3)& (0+255),f,b
  5330  003F86                     
  5331                           ; BSR set to: 0
  5332  003F86  C06D  F01F         	movff	___flsub@b,___fladd@b
  5333  003F8A  C06E  F020         	movff	___flsub@b+1,___fladd@b+1
  5334  003F8E  C06F  F021         	movff	___flsub@b+2,___fladd@b+2
  5335  003F92  C070  F022         	movff	___flsub@b+3,___fladd@b+3
  5336  003F96  C071  F023         	movff	___flsub@a,___fladd@a
  5337  003F9A  C072  F024         	movff	___flsub@a+1,___fladd@a+1
  5338  003F9E  C073  F025         	movff	___flsub@a+2,___fladd@a+2
  5339  003FA2  C074  F026         	movff	___flsub@a+3,___fladd@a+3
  5340  003FA6  EC04  F00D         	call	___fladd	;wreg free
  5341  003FAA  C01F  F06D         	movff	?___fladd,?___flsub
  5342  003FAE  C020  F06E         	movff	?___fladd+1,?___flsub+1
  5343  003FB2  C021  F06F         	movff	?___fladd+2,?___flsub+2
  5344  003FB6  C022  F070         	movff	?___fladd+3,?___flsub+3
  5345  003FBA  0012               	return		;funcret
  5346  003FBC                     __end_of___flsub:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function ___fladd *****************
  5350 ;; Defined at:
  5351 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  b               4   30[COMRAM] long 
  5354 ;;  a               4   34[COMRAM] long 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  grs             1    3[BANK0 ] unsigned char 
  5357 ;;  bexp            1    2[BANK0 ] unsigned char 
  5358 ;;  aexp            1    1[BANK0 ] unsigned char 
  5359 ;;  signs           1    0[BANK0 ] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  4   30[COMRAM] unsigned char 
  5362 ;; Registers used:
  5363 ;;		wreg, status,2, status,0
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5369 ;;      Params:         8       0       0       0       0       0       0       0       0
  5370 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5371 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5372 ;;      Totals:        12       4       0       0       0       0       0       0       0
  5373 ;;Total ram usage:       16 bytes
  5374 ;; Hardware stack levels used: 1
  5375 ;; Hardware stack levels required when called: 4
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		___flsub
  5380 ;;		_efgtoa
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text17
  5385  001A08                     __ptext17:
  5386                           	callstack 0
  5387  001A08                     ___fladd:
  5388                           	callstack 21
  5389  001A08  5022               	movf	(___fladd@b+3)^0,w,c
  5390  001A0A  0B80               	andlw	128
  5391  001A0C  0100               	movlb	0	; () banked
  5392  001A0E  6F60               	movwf	___fladd@signs& (0+255),b
  5393  001A10  5022               	movf	(___fladd@b+3)^0,w,c
  5394  001A12  2422               	addwf	(___fladd@b+3)^0,w,c
  5395  001A14  6F62               	movwf	___fladd@bexp& (0+255),b
  5396  001A16                     
  5397                           ; BSR set to: 0
  5398  001A16  AE21               	btfss	(___fladd@b+2)^0,7,c
  5399  001A18  EF10  F00D         	goto	u5931
  5400  001A1C  EF12  F00D         	goto	u5930
  5401  001A20                     u5931:
  5402  001A20  EF13  F00D         	goto	l4481
  5403  001A24                     u5930:
  5404  001A24                     
  5405                           ; BSR set to: 0
  5406  001A24  8162               	bsf	___fladd@bexp& (0+255),0,b
  5407  001A26                     l4481:
  5408                           
  5409                           ; BSR set to: 0
  5410  001A26  5162               	movf	___fladd@bexp& (0+255),w,b
  5411  001A28  B4D8               	btfsc	status,2,c
  5412  001A2A  EF19  F00D         	goto	u5941
  5413  001A2E  EF1B  F00D         	goto	u5940
  5414  001A32                     u5941:
  5415  001A32  EF30  F00D         	goto	l4491
  5416  001A36                     u5940:
  5417  001A36                     
  5418                           ; BSR set to: 0
  5419  001A36  2962               	incf	___fladd@bexp& (0+255),w,b
  5420  001A38  A4D8               	btfss	status,2,c
  5421  001A3A  EF21  F00D         	goto	u5951
  5422  001A3E  EF23  F00D         	goto	u5950
  5423  001A42                     u5951:
  5424  001A42  EF2B  F00D         	goto	l4487
  5425  001A46                     u5950:
  5426  001A46                     
  5427                           ; BSR set to: 0
  5428  001A46  0E00               	movlw	0
  5429  001A48  6E1F               	movwf	___fladd@b^0,c
  5430  001A4A  0E00               	movlw	0
  5431  001A4C  6E20               	movwf	(___fladd@b+1)^0,c
  5432  001A4E  0E00               	movlw	0
  5433  001A50  6E21               	movwf	(___fladd@b+2)^0,c
  5434  001A52  0E00               	movlw	0
  5435  001A54  6E22               	movwf	(___fladd@b+3)^0,c
  5436  001A56                     l4487:
  5437                           
  5438                           ; BSR set to: 0
  5439  001A56  8E21               	bsf	(___fladd@b+2)^0,7,c
  5440  001A58                     
  5441                           ; BSR set to: 0
  5442  001A58  0E00               	movlw	0
  5443  001A5A  6E22               	movwf	(___fladd@b+3)^0,c
  5444  001A5C  EF38  F00D         	goto	l4493
  5445  001A60                     l4491:
  5446                           
  5447                           ; BSR set to: 0
  5448  001A60  0E00               	movlw	0
  5449  001A62  6E1F               	movwf	___fladd@b^0,c
  5450  001A64  0E00               	movlw	0
  5451  001A66  6E20               	movwf	(___fladd@b+1)^0,c
  5452  001A68  0E00               	movlw	0
  5453  001A6A  6E21               	movwf	(___fladd@b+2)^0,c
  5454  001A6C  0E00               	movlw	0
  5455  001A6E  6E22               	movwf	(___fladd@b+3)^0,c
  5456  001A70                     l4493:
  5457                           
  5458                           ; BSR set to: 0
  5459  001A70  5026               	movf	(___fladd@a+3)^0,w,c
  5460  001A72  0B80               	andlw	128
  5461  001A74  6F61               	movwf	___fladd@aexp& (0+255),b
  5462  001A76                     
  5463                           ; BSR set to: 0
  5464  001A76  5160               	movf	___fladd@signs& (0+255),w,b
  5465  001A78  1961               	xorwf	___fladd@aexp& (0+255),w,b
  5466  001A7A  B4D8               	btfsc	status,2,c
  5467  001A7C  EF42  F00D         	goto	u5961
  5468  001A80  EF44  F00D         	goto	u5960
  5469  001A84                     u5961:
  5470  001A84  EF45  F00D         	goto	l4499
  5471  001A88                     u5960:
  5472  001A88                     
  5473                           ; BSR set to: 0
  5474  001A88  8D60               	bsf	___fladd@signs& (0+255),6,b
  5475  001A8A                     l4499:
  5476                           
  5477                           ; BSR set to: 0
  5478  001A8A  5026               	movf	(___fladd@a+3)^0,w,c
  5479  001A8C  2426               	addwf	(___fladd@a+3)^0,w,c
  5480  001A8E  6F61               	movwf	___fladd@aexp& (0+255),b
  5481  001A90                     
  5482                           ; BSR set to: 0
  5483  001A90  AE25               	btfss	(___fladd@a+2)^0,7,c
  5484  001A92  EF4D  F00D         	goto	u5971
  5485  001A96  EF4F  F00D         	goto	u5970
  5486  001A9A                     u5971:
  5487  001A9A  EF50  F00D         	goto	l4505
  5488  001A9E                     u5970:
  5489  001A9E                     
  5490                           ; BSR set to: 0
  5491  001A9E  8161               	bsf	___fladd@aexp& (0+255),0,b
  5492  001AA0                     l4505:
  5493                           
  5494                           ; BSR set to: 0
  5495  001AA0  5161               	movf	___fladd@aexp& (0+255),w,b
  5496  001AA2  B4D8               	btfsc	status,2,c
  5497  001AA4  EF56  F00D         	goto	u5981
  5498  001AA8  EF58  F00D         	goto	u5980
  5499  001AAC                     u5981:
  5500  001AAC  EF6D  F00D         	goto	l4515
  5501  001AB0                     u5980:
  5502  001AB0                     
  5503                           ; BSR set to: 0
  5504  001AB0  2961               	incf	___fladd@aexp& (0+255),w,b
  5505  001AB2  A4D8               	btfss	status,2,c
  5506  001AB4  EF5E  F00D         	goto	u5991
  5507  001AB8  EF60  F00D         	goto	u5990
  5508  001ABC                     u5991:
  5509  001ABC  EF68  F00D         	goto	l4511
  5510  001AC0                     u5990:
  5511  001AC0                     
  5512                           ; BSR set to: 0
  5513  001AC0  0E00               	movlw	0
  5514  001AC2  6E23               	movwf	___fladd@a^0,c
  5515  001AC4  0E00               	movlw	0
  5516  001AC6  6E24               	movwf	(___fladd@a+1)^0,c
  5517  001AC8  0E00               	movlw	0
  5518  001ACA  6E25               	movwf	(___fladd@a+2)^0,c
  5519  001ACC  0E00               	movlw	0
  5520  001ACE  6E26               	movwf	(___fladd@a+3)^0,c
  5521  001AD0                     l4511:
  5522                           
  5523                           ; BSR set to: 0
  5524  001AD0  8E25               	bsf	(___fladd@a+2)^0,7,c
  5525  001AD2                     
  5526                           ; BSR set to: 0
  5527  001AD2  0E00               	movlw	0
  5528  001AD4  6E26               	movwf	(___fladd@a+3)^0,c
  5529  001AD6  EF75  F00D         	goto	l4517
  5530  001ADA                     l4515:
  5531                           
  5532                           ; BSR set to: 0
  5533  001ADA  0E00               	movlw	0
  5534  001ADC  6E23               	movwf	___fladd@a^0,c
  5535  001ADE  0E00               	movlw	0
  5536  001AE0  6E24               	movwf	(___fladd@a+1)^0,c
  5537  001AE2  0E00               	movlw	0
  5538  001AE4  6E25               	movwf	(___fladd@a+2)^0,c
  5539  001AE6  0E00               	movlw	0
  5540  001AE8  6E26               	movwf	(___fladd@a+3)^0,c
  5541  001AEA                     l4517:
  5542                           
  5543                           ; BSR set to: 0
  5544  001AEA  5162               	movf	___fladd@bexp& (0+255),w,b
  5545  001AEC  5D61               	subwf	___fladd@aexp& (0+255),w,b
  5546  001AEE  B0D8               	btfsc	status,0,c
  5547  001AF0  EF7C  F00D         	goto	u6001
  5548  001AF4  EF7E  F00D         	goto	u6000
  5549  001AF8                     u6001:
  5550  001AF8  EFA5  F00D         	goto	l4553
  5551  001AFC                     u6000:
  5552  001AFC                     
  5553                           ; BSR set to: 0
  5554  001AFC  AD60               	btfss	___fladd@signs& (0+255),6,b
  5555  001AFE  EF83  F00D         	goto	u6011
  5556  001B02  EF85  F00D         	goto	u6010
  5557  001B06                     u6011:
  5558  001B06  EF87  F00D         	goto	l4523
  5559  001B0A                     u6010:
  5560  001B0A                     
  5561                           ; BSR set to: 0
  5562  001B0A  0E80               	movlw	128
  5563  001B0C  1B60               	xorwf	___fladd@signs& (0+255),f,b
  5564  001B0E                     l4523:
  5565                           
  5566                           ; BSR set to: 0
  5567  001B0E  C062  F063         	movff	___fladd@bexp,___fladd@grs
  5568  001B12                     
  5569                           ; BSR set to: 0
  5570  001B12  C061  F062         	movff	___fladd@aexp,___fladd@bexp
  5571  001B16                     
  5572                           ; BSR set to: 0
  5573  001B16  C063  F061         	movff	___fladd@grs,___fladd@aexp
  5574  001B1A                     
  5575                           ; BSR set to: 0
  5576  001B1A  C01F  F063         	movff	___fladd@b,___fladd@grs
  5577  001B1E                     
  5578                           ; BSR set to: 0
  5579  001B1E  C023  F01F         	movff	___fladd@a,___fladd@b
  5580  001B22                     
  5581                           ; BSR set to: 0
  5582  001B22  C063  F023         	movff	___fladd@grs,___fladd@a
  5583  001B26                     
  5584                           ; BSR set to: 0
  5585  001B26  C020  F063         	movff	___fladd@b+1,___fladd@grs
  5586  001B2A                     
  5587                           ; BSR set to: 0
  5588  001B2A  C024  F020         	movff	___fladd@a+1,___fladd@b+1
  5589  001B2E                     
  5590                           ; BSR set to: 0
  5591  001B2E  C063  F024         	movff	___fladd@grs,___fladd@a+1
  5592  001B32                     
  5593                           ; BSR set to: 0
  5594  001B32  C021  F063         	movff	___fladd@b+2,___fladd@grs
  5595  001B36                     
  5596                           ; BSR set to: 0
  5597  001B36  C025  F021         	movff	___fladd@a+2,___fladd@b+2
  5598  001B3A                     
  5599                           ; BSR set to: 0
  5600  001B3A  C063  F025         	movff	___fladd@grs,___fladd@a+2
  5601  001B3E                     
  5602                           ; BSR set to: 0
  5603  001B3E  C022  F063         	movff	___fladd@b+3,___fladd@grs
  5604  001B42                     
  5605                           ; BSR set to: 0
  5606  001B42  C026  F022         	movff	___fladd@a+3,___fladd@b+3
  5607  001B46                     
  5608                           ; BSR set to: 0
  5609  001B46  C063  F026         	movff	___fladd@grs,___fladd@a+3
  5610  001B4A                     l4553:
  5611                           
  5612                           ; BSR set to: 0
  5613  001B4A  0E00               	movlw	0
  5614  001B4C  6F63               	movwf	___fladd@grs& (0+255),b
  5615  001B4E                     
  5616                           ; BSR set to: 0
  5617  001B4E  5162               	movf	___fladd@bexp& (0+255),w,b
  5618  001B50  C061  F027         	movff	___fladd@aexp,??___fladd
  5619  001B54  6A28               	clrf	(??___fladd+1)^0,c
  5620  001B56  5E27               	subwf	??___fladd^0,f,c
  5621  001B58  0E00               	movlw	0
  5622  001B5A  5A28               	subwfb	(??___fladd+1)^0,f,c
  5623  001B5C  BE28               	btfsc	(??___fladd+1)^0,7,c
  5624  001B5E  EFBA  F00D         	goto	u6021
  5625  001B62  5028               	movf	(??___fladd+1)^0,w,c
  5626  001B64  E109               	bnz	u6020
  5627  001B66  0E1A               	movlw	26
  5628  001B68  5C27               	subwf	??___fladd^0,w,c
  5629  001B6A  A0D8               	btfss	status,0,c
  5630  001B6C  EFBA  F00D         	goto	u6021
  5631  001B70  EFBC  F00D         	goto	u6020
  5632  001B74                     u6021:
  5633  001B74  EFF3  F00D         	goto	l616
  5634  001B78                     u6020:
  5635  001B78                     
  5636                           ; BSR set to: 0
  5637  001B78  501F               	movf	___fladd@b^0,w,c
  5638  001B7A  1020               	iorwf	(___fladd@b+1)^0,w,c
  5639  001B7C  1021               	iorwf	(___fladd@b+2)^0,w,c
  5640  001B7E  1022               	iorwf	(___fladd@b+3)^0,w,c
  5641  001B80  A4D8               	btfss	status,2,c
  5642  001B82  EFC5  F00D         	goto	u6031
  5643  001B86  EFC8  F00D         	goto	u6030
  5644  001B8A                     u6031:
  5645  001B8A  0E01               	movlw	1
  5646  001B8C  EFC9  F00D         	goto	u6040
  5647  001B90                     u6030:
  5648  001B90  0E00               	movlw	0
  5649  001B92                     u6040:
  5650  001B92  6F63               	movwf	___fladd@grs& (0+255),b
  5651  001B94                     
  5652                           ; BSR set to: 0
  5653  001B94  0E00               	movlw	0
  5654  001B96  6E1F               	movwf	___fladd@b^0,c
  5655  001B98  0E00               	movlw	0
  5656  001B9A  6E20               	movwf	(___fladd@b+1)^0,c
  5657  001B9C  0E00               	movlw	0
  5658  001B9E  6E21               	movwf	(___fladd@b+2)^0,c
  5659  001BA0  0E00               	movlw	0
  5660  001BA2  6E22               	movwf	(___fladd@b+3)^0,c
  5661  001BA4                     
  5662                           ; BSR set to: 0
  5663  001BA4  C061  F062         	movff	___fladd@aexp,___fladd@bexp
  5664  001BA8  EFFC  F00D         	goto	l615
  5665  001BAC                     l617:
  5666                           
  5667                           ; BSR set to: 0
  5668  001BAC  A163               	btfss	___fladd@grs& (0+255),0,b
  5669  001BAE  EFDB  F00D         	goto	u6051
  5670  001BB2  EFDD  F00D         	goto	u6050
  5671  001BB6                     u6051:
  5672  001BB6  EFE3  F00D         	goto	l4565
  5673  001BBA                     u6050:
  5674  001BBA                     
  5675                           ; BSR set to: 0
  5676  001BBA  90D8               	bcf	status,0,c
  5677  001BBC  3163               	rrcf	___fladd@grs& (0+255),w,b
  5678  001BBE  0901               	iorlw	1
  5679  001BC0  6F63               	movwf	___fladd@grs& (0+255),b
  5680  001BC2  EFE5  F00D         	goto	l4567
  5681  001BC6                     l4565:
  5682                           
  5683                           ; BSR set to: 0
  5684  001BC6  90D8               	bcf	status,0,c
  5685  001BC8  3363               	rrcf	___fladd@grs& (0+255),f,b
  5686  001BCA                     l4567:
  5687                           
  5688                           ; BSR set to: 0
  5689  001BCA  A01F               	btfss	___fladd@b^0,0,c
  5690  001BCC  EFEA  F00D         	goto	u6061
  5691  001BD0  EFEC  F00D         	goto	u6060
  5692  001BD4                     u6061:
  5693  001BD4  EFED  F00D         	goto	l4571
  5694  001BD8                     u6060:
  5695  001BD8                     
  5696                           ; BSR set to: 0
  5697  001BD8  8F63               	bsf	___fladd@grs& (0+255),7,b
  5698  001BDA                     l4571:
  5699                           
  5700                           ; BSR set to: 0
  5701  001BDA  3422               	rlcf	(___fladd@b+3)^0,w,c
  5702  001BDC  3222               	rrcf	(___fladd@b+3)^0,f,c
  5703  001BDE  3221               	rrcf	(___fladd@b+2)^0,f,c
  5704  001BE0  3220               	rrcf	(___fladd@b+1)^0,f,c
  5705  001BE2  321F               	rrcf	___fladd@b^0,f,c
  5706  001BE4                     
  5707                           ; BSR set to: 0
  5708  001BE4  2B62               	incf	___fladd@bexp& (0+255),f,b
  5709  001BE6                     l616:
  5710                           
  5711                           ; BSR set to: 0
  5712  001BE6  5161               	movf	___fladd@aexp& (0+255),w,b
  5713  001BE8  5D62               	subwf	___fladd@bexp& (0+255),w,b
  5714  001BEA  A0D8               	btfss	status,0,c
  5715  001BEC  EFFA  F00D         	goto	u6071
  5716  001BF0  EFFC  F00D         	goto	u6070
  5717  001BF4                     u6071:
  5718  001BF4  EFD6  F00D         	goto	l617
  5719  001BF8                     u6070:
  5720  001BF8                     l615:
  5721                           
  5722                           ; BSR set to: 0
  5723  001BF8  BD60               	btfsc	___fladd@signs& (0+255),6,b
  5724  001BFA  EF01  F00E         	goto	u6081
  5725  001BFE  EF03  F00E         	goto	u6080
  5726  001C02                     u6081:
  5727  001C02  EF43  F00E         	goto	l4599
  5728  001C06                     u6080:
  5729  001C06                     
  5730                           ; BSR set to: 0
  5731  001C06  5162               	movf	___fladd@bexp& (0+255),w,b
  5732  001C08  A4D8               	btfss	status,2,c
  5733  001C0A  EF09  F00E         	goto	u6091
  5734  001C0E  EF0B  F00E         	goto	u6090
  5735  001C12                     u6091:
  5736  001C12  EF15  F00E         	goto	l4581
  5737  001C16                     u6090:
  5738  001C16                     
  5739                           ; BSR set to: 0
  5740  001C16  0E00               	movlw	0
  5741  001C18  6E1F               	movwf	?___fladd^0,c
  5742  001C1A  0E00               	movlw	0
  5743  001C1C  6E20               	movwf	(?___fladd+1)^0,c
  5744  001C1E  0E00               	movlw	0
  5745  001C20  6E21               	movwf	(?___fladd+2)^0,c
  5746  001C22  0E00               	movlw	0
  5747  001C24  6E22               	movwf	(?___fladd+3)^0,c
  5748  001C26  EF64  F00F         	goto	l624
  5749  001C2A                     l4581:
  5750                           
  5751                           ; BSR set to: 0
  5752  001C2A  5023               	movf	___fladd@a^0,w,c
  5753  001C2C  261F               	addwf	___fladd@b^0,f,c
  5754  001C2E  5024               	movf	(___fladd@a+1)^0,w,c
  5755  001C30  2220               	addwfc	(___fladd@b+1)^0,f,c
  5756  001C32  5025               	movf	(___fladd@a+2)^0,w,c
  5757  001C34  2221               	addwfc	(___fladd@b+2)^0,f,c
  5758  001C36  5026               	movf	(___fladd@a+3)^0,w,c
  5759  001C38  2222               	addwfc	(___fladd@b+3)^0,f,c
  5760  001C3A                     
  5761                           ; BSR set to: 0
  5762  001C3A  A022               	btfss	(___fladd@b+3)^0,0,c
  5763  001C3C  EF22  F00E         	goto	u6101
  5764  001C40  EF24  F00E         	goto	u6100
  5765  001C44                     u6101:
  5766  001C44  EFD0  F00E         	goto	l4635
  5767  001C48                     u6100:
  5768  001C48                     
  5769                           ; BSR set to: 0
  5770  001C48  A163               	btfss	___fladd@grs& (0+255),0,b
  5771  001C4A  EF29  F00E         	goto	u6111
  5772  001C4E  EF2B  F00E         	goto	u6110
  5773  001C52                     u6111:
  5774  001C52  EF31  F00E         	goto	l4589
  5775  001C56                     u6110:
  5776  001C56                     
  5777                           ; BSR set to: 0
  5778  001C56  90D8               	bcf	status,0,c
  5779  001C58  3163               	rrcf	___fladd@grs& (0+255),w,b
  5780  001C5A  0901               	iorlw	1
  5781  001C5C  6F63               	movwf	___fladd@grs& (0+255),b
  5782  001C5E  EF33  F00E         	goto	l4591
  5783  001C62                     l4589:
  5784                           
  5785                           ; BSR set to: 0
  5786  001C62  90D8               	bcf	status,0,c
  5787  001C64  3363               	rrcf	___fladd@grs& (0+255),f,b
  5788  001C66                     l4591:
  5789                           
  5790                           ; BSR set to: 0
  5791  001C66  A01F               	btfss	___fladd@b^0,0,c
  5792  001C68  EF38  F00E         	goto	u6121
  5793  001C6C  EF3A  F00E         	goto	u6120
  5794  001C70                     u6121:
  5795  001C70  EF3B  F00E         	goto	l4595
  5796  001C74                     u6120:
  5797  001C74                     
  5798                           ; BSR set to: 0
  5799  001C74  8F63               	bsf	___fladd@grs& (0+255),7,b
  5800  001C76                     l4595:
  5801                           
  5802                           ; BSR set to: 0
  5803  001C76  3422               	rlcf	(___fladd@b+3)^0,w,c
  5804  001C78  3222               	rrcf	(___fladd@b+3)^0,f,c
  5805  001C7A  3221               	rrcf	(___fladd@b+2)^0,f,c
  5806  001C7C  3220               	rrcf	(___fladd@b+1)^0,f,c
  5807  001C7E  321F               	rrcf	___fladd@b^0,f,c
  5808  001C80                     
  5809                           ; BSR set to: 0
  5810  001C80  2B62               	incf	___fladd@bexp& (0+255),f,b
  5811  001C82  EFD0  F00E         	goto	l4635
  5812  001C86                     l4599:
  5813                           
  5814                           ; BSR set to: 0
  5815  001C86  5023               	movf	___fladd@a^0,w,c
  5816  001C88  5C1F               	subwf	___fladd@b^0,w,c
  5817  001C8A  5024               	movf	(___fladd@a+1)^0,w,c
  5818  001C8C  5820               	subwfb	(___fladd@b+1)^0,w,c
  5819  001C8E  5025               	movf	(___fladd@a+2)^0,w,c
  5820  001C90  5821               	subwfb	(___fladd@b+2)^0,w,c
  5821  001C92  5022               	movf	(___fladd@b+3)^0,w,c
  5822  001C94  0A80               	xorlw	128
  5823  001C96  6E27               	movwf	??___fladd^0,c
  5824  001C98  5026               	movf	(___fladd@a+3)^0,w,c
  5825  001C9A  0A80               	xorlw	128
  5826  001C9C  5827               	subwfb	??___fladd^0,w,c
  5827  001C9E  B0D8               	btfsc	status,0,c
  5828  001CA0  EF54  F00E         	goto	u6131
  5829  001CA4  EF56  F00E         	goto	u6130
  5830  001CA8                     u6131:
  5831  001CA8  EF81  F00E         	goto	l4609
  5832  001CAC                     u6130:
  5833  001CAC                     
  5834                           ; BSR set to: 0
  5835  001CAC  501F               	movf	___fladd@b^0,w,c
  5836  001CAE  5C23               	subwf	___fladd@a^0,w,c
  5837  001CB0  6E27               	movwf	??___fladd^0,c
  5838  001CB2  5020               	movf	(___fladd@b+1)^0,w,c
  5839  001CB4  5824               	subwfb	(___fladd@a+1)^0,w,c
  5840  001CB6  6E28               	movwf	(??___fladd+1)^0,c
  5841  001CB8  5021               	movf	(___fladd@b+2)^0,w,c
  5842  001CBA  5825               	subwfb	(___fladd@a+2)^0,w,c
  5843  001CBC  6E29               	movwf	(??___fladd+2)^0,c
  5844  001CBE  5022               	movf	(___fladd@b+3)^0,w,c
  5845  001CC0  5826               	subwfb	(___fladd@a+3)^0,w,c
  5846  001CC2  6E2A               	movwf	(??___fladd+3)^0,c
  5847  001CC4  0EFF               	movlw	255
  5848  001CC6  2427               	addwf	??___fladd^0,w,c
  5849  001CC8  6E1F               	movwf	___fladd@b^0,c
  5850  001CCA  0EFF               	movlw	255
  5851  001CCC  2028               	addwfc	(??___fladd+1)^0,w,c
  5852  001CCE  6E20               	movwf	(___fladd@b+1)^0,c
  5853  001CD0  0EFF               	movlw	255
  5854  001CD2  2029               	addwfc	(??___fladd+2)^0,w,c
  5855  001CD4  6E21               	movwf	(___fladd@b+2)^0,c
  5856  001CD6  0EFF               	movlw	255
  5857  001CD8  202A               	addwfc	(??___fladd+3)^0,w,c
  5858  001CDA  6E22               	movwf	(___fladd@b+3)^0,c
  5859  001CDC  0E80               	movlw	128
  5860  001CDE  1B60               	xorwf	___fladd@signs& (0+255),f,b
  5861  001CE0                     
  5862                           ; BSR set to: 0
  5863  001CE0  6D63               	negf	___fladd@grs& (0+255),b
  5864  001CE2                     
  5865                           ; BSR set to: 0
  5866  001CE2  5163               	movf	___fladd@grs& (0+255),w,b
  5867  001CE4  A4D8               	btfss	status,2,c
  5868  001CE6  EF77  F00E         	goto	u6141
  5869  001CEA  EF79  F00E         	goto	u6140
  5870  001CEE                     u6141:
  5871  001CEE  EF89  F00E         	goto	l632
  5872  001CF2                     u6140:
  5873  001CF2                     
  5874                           ; BSR set to: 0
  5875  001CF2  0E01               	movlw	1
  5876  001CF4  261F               	addwf	___fladd@b^0,f,c
  5877  001CF6  0E00               	movlw	0
  5878  001CF8  2220               	addwfc	(___fladd@b+1)^0,f,c
  5879  001CFA  2221               	addwfc	(___fladd@b+2)^0,f,c
  5880  001CFC  2222               	addwfc	(___fladd@b+3)^0,f,c
  5881  001CFE  EF89  F00E         	goto	l632
  5882  001D02                     l4609:
  5883                           
  5884                           ; BSR set to: 0
  5885  001D02  5023               	movf	___fladd@a^0,w,c
  5886  001D04  5E1F               	subwf	___fladd@b^0,f,c
  5887  001D06  5024               	movf	(___fladd@a+1)^0,w,c
  5888  001D08  5A20               	subwfb	(___fladd@b+1)^0,f,c
  5889  001D0A  5025               	movf	(___fladd@a+2)^0,w,c
  5890  001D0C  5A21               	subwfb	(___fladd@b+2)^0,f,c
  5891  001D0E  5026               	movf	(___fladd@a+3)^0,w,c
  5892  001D10  5A22               	subwfb	(___fladd@b+3)^0,f,c
  5893  001D12                     l632:
  5894                           
  5895                           ; BSR set to: 0
  5896  001D12  501F               	movf	___fladd@b^0,w,c
  5897  001D14  1020               	iorwf	(___fladd@b+1)^0,w,c
  5898  001D16  1021               	iorwf	(___fladd@b+2)^0,w,c
  5899  001D18  1022               	iorwf	(___fladd@b+3)^0,w,c
  5900  001D1A  A4D8               	btfss	status,2,c
  5901  001D1C  EF92  F00E         	goto	u6151
  5902  001D20  EF94  F00E         	goto	u6150
  5903  001D24                     u6151:
  5904  001D24  EFC9  F00E         	goto	l4633
  5905  001D28                     u6150:
  5906  001D28                     
  5907                           ; BSR set to: 0
  5908  001D28  5163               	movf	___fladd@grs& (0+255),w,b
  5909  001D2A  A4D8               	btfss	status,2,c
  5910  001D2C  EF9A  F00E         	goto	u6161
  5911  001D30  EF9C  F00E         	goto	u6160
  5912  001D34                     u6161:
  5913  001D34  EFC9  F00E         	goto	l4633
  5914  001D38                     u6160:
  5915  001D38                     
  5916                           ; BSR set to: 0
  5917  001D38  0E00               	movlw	0
  5918  001D3A  6E1F               	movwf	?___fladd^0,c
  5919  001D3C  0E00               	movlw	0
  5920  001D3E  6E20               	movwf	(?___fladd+1)^0,c
  5921  001D40  0E00               	movlw	0
  5922  001D42  6E21               	movwf	(?___fladd+2)^0,c
  5923  001D44  0E00               	movlw	0
  5924  001D46  6E22               	movwf	(?___fladd+3)^0,c
  5925  001D48  EF64  F00F         	goto	l624
  5926  001D4C                     l4617:
  5927                           
  5928                           ; BSR set to: 0
  5929  001D4C  90D8               	bcf	status,0,c
  5930  001D4E  361F               	rlcf	___fladd@b^0,f,c
  5931  001D50  3620               	rlcf	(___fladd@b+1)^0,f,c
  5932  001D52  3621               	rlcf	(___fladd@b+2)^0,f,c
  5933  001D54  3622               	rlcf	(___fladd@b+3)^0,f,c
  5934  001D56                     
  5935                           ; BSR set to: 0
  5936  001D56  AF63               	btfss	___fladd@grs& (0+255),7,b
  5937  001D58  EFB0  F00E         	goto	u6171
  5938  001D5C  EFB2  F00E         	goto	u6170
  5939  001D60                     u6171:
  5940  001D60  EFB3  F00E         	goto	l4623
  5941  001D64                     u6170:
  5942  001D64                     
  5943                           ; BSR set to: 0
  5944  001D64  801F               	bsf	___fladd@b^0,0,c
  5945  001D66                     l4623:
  5946                           
  5947                           ; BSR set to: 0
  5948  001D66  A163               	btfss	___fladd@grs& (0+255),0,b
  5949  001D68  EFB8  F00E         	goto	u6181
  5950  001D6C  EFBA  F00E         	goto	u6180
  5951  001D70                     u6181:
  5952  001D70  EFBE  F00E         	goto	l4627
  5953  001D74                     u6180:
  5954  001D74                     
  5955                           ; BSR set to: 0
  5956  001D74  80D8               	bsf	status,0,c
  5957  001D76  3763               	rlcf	___fladd@grs& (0+255),f,b
  5958  001D78  EFC0  F00E         	goto	l4629
  5959  001D7C                     l4627:
  5960                           
  5961                           ; BSR set to: 0
  5962  001D7C  90D8               	bcf	status,0,c
  5963  001D7E  3763               	rlcf	___fladd@grs& (0+255),f,b
  5964  001D80                     l4629:
  5965                           
  5966                           ; BSR set to: 0
  5967  001D80  5162               	movf	___fladd@bexp& (0+255),w,b
  5968  001D82  B4D8               	btfsc	status,2,c
  5969  001D84  EFC6  F00E         	goto	u6191
  5970  001D88  EFC8  F00E         	goto	u6190
  5971  001D8C                     u6191:
  5972  001D8C  EFC9  F00E         	goto	l4633
  5973  001D90                     u6190:
  5974  001D90                     
  5975                           ; BSR set to: 0
  5976  001D90  0762               	decf	___fladd@bexp& (0+255),f,b
  5977  001D92                     l4633:
  5978                           
  5979                           ; BSR set to: 0
  5980  001D92  AE21               	btfss	(___fladd@b+2)^0,7,c
  5981  001D94  EFCE  F00E         	goto	u6201
  5982  001D98  EFD0  F00E         	goto	u6200
  5983  001D9C                     u6201:
  5984  001D9C  EFA6  F00E         	goto	l4617
  5985  001DA0                     u6200:
  5986  001DA0                     l4635:
  5987                           
  5988                           ; BSR set to: 0
  5989  001DA0  0E00               	movlw	0
  5990  001DA2  6F61               	movwf	___fladd@aexp& (0+255),b
  5991  001DA4                     
  5992                           ; BSR set to: 0
  5993  001DA4  AF63               	btfss	___fladd@grs& (0+255),7,b
  5994  001DA6  EFD7  F00E         	goto	u6211
  5995  001DAA  EFD9  F00E         	goto	u6210
  5996  001DAE                     u6211:
  5997  001DAE  EFF1  F00E         	goto	l641
  5998  001DB2                     u6210:
  5999  001DB2                     
  6000                           ; BSR set to: 0
  6001  001DB2  C063  F027         	movff	___fladd@grs,??___fladd
  6002  001DB6  0E7F               	movlw	127
  6003  001DB8  1627               	andwf	??___fladd^0,f,c
  6004  001DBA  B4D8               	btfsc	status,2,c
  6005  001DBC  EFE2  F00E         	goto	u6221
  6006  001DC0  EFE4  F00E         	goto	u6220
  6007  001DC4                     u6221:
  6008  001DC4  EFE8  F00E         	goto	l642
  6009  001DC8                     u6220:
  6010  001DC8                     l4641:
  6011                           
  6012                           ; BSR set to: 0
  6013  001DC8  0E01               	movlw	1
  6014  001DCA  6F61               	movwf	___fladd@aexp& (0+255),b
  6015  001DCC  EFF1  F00E         	goto	l641
  6016  001DD0                     l642:
  6017                           
  6018                           ; BSR set to: 0
  6019  001DD0  A01F               	btfss	___fladd@b^0,0,c
  6020  001DD2  EFED  F00E         	goto	u6231
  6021  001DD6  EFEF  F00E         	goto	u6230
  6022  001DDA                     u6231:
  6023  001DDA  EFF1  F00E         	goto	l641
  6024  001DDE                     u6230:
  6025  001DDE  EFE4  F00E         	goto	l4641
  6026  001DE2                     l641:
  6027                           
  6028                           ; BSR set to: 0
  6029  001DE2  5161               	movf	___fladd@aexp& (0+255),w,b
  6030  001DE4  B4D8               	btfsc	status,2,c
  6031  001DE6  EFF7  F00E         	goto	u6241
  6032  001DEA  EFF9  F00E         	goto	u6240
  6033  001DEE                     u6241:
  6034  001DEE  EF24  F00F         	goto	l4653
  6035  001DF2                     u6240:
  6036  001DF2                     
  6037                           ; BSR set to: 0
  6038  001DF2  0E01               	movlw	1
  6039  001DF4  261F               	addwf	___fladd@b^0,f,c
  6040  001DF6  0E00               	movlw	0
  6041  001DF8  2220               	addwfc	(___fladd@b+1)^0,f,c
  6042  001DFA  2221               	addwfc	(___fladd@b+2)^0,f,c
  6043  001DFC  2222               	addwfc	(___fladd@b+3)^0,f,c
  6044  001DFE                     
  6045                           ; BSR set to: 0
  6046  001DFE  A022               	btfss	(___fladd@b+3)^0,0,c
  6047  001E00  EF04  F00F         	goto	u6251
  6048  001E04  EF06  F00F         	goto	u6250
  6049  001E08                     u6251:
  6050  001E08  EF24  F00F         	goto	l4653
  6051  001E0C                     u6250:
  6052  001E0C                     
  6053                           ; BSR set to: 0
  6054  001E0C  C01F  F027         	movff	___fladd@b,??___fladd
  6055  001E10  C020  F028         	movff	___fladd@b+1,??___fladd+1
  6056  001E14  C021  F029         	movff	___fladd@b+2,??___fladd+2
  6057  001E18  C022  F02A         	movff	___fladd@b+3,??___fladd+3
  6058  001E1C  342A               	rlcf	(??___fladd+3)^0,w,c
  6059  001E1E  322A               	rrcf	(??___fladd+3)^0,f,c
  6060  001E20  3229               	rrcf	(??___fladd+2)^0,f,c
  6061  001E22  3228               	rrcf	(??___fladd+1)^0,f,c
  6062  001E24  3227               	rrcf	??___fladd^0,f,c
  6063  001E26  C027  F01F         	movff	??___fladd,___fladd@b
  6064  001E2A  C028  F020         	movff	??___fladd+1,___fladd@b+1
  6065  001E2E  C029  F021         	movff	??___fladd+2,___fladd@b+2
  6066  001E32  C02A  F022         	movff	??___fladd+3,___fladd@b+3
  6067  001E36  2962               	incf	___fladd@bexp& (0+255),w,b
  6068  001E38  B4D8               	btfsc	status,2,c
  6069  001E3A  EF21  F00F         	goto	u6261
  6070  001E3E  EF23  F00F         	goto	u6260
  6071  001E42                     u6261:
  6072  001E42  EF24  F00F         	goto	l4653
  6073  001E46                     u6260:
  6074  001E46                     
  6075                           ; BSR set to: 0
  6076  001E46  2B62               	incf	___fladd@bexp& (0+255),f,b
  6077  001E48                     l4653:
  6078                           
  6079                           ; BSR set to: 0
  6080  001E48  2962               	incf	___fladd@bexp& (0+255),w,b
  6081  001E4A  B4D8               	btfsc	status,2,c
  6082  001E4C  EF2A  F00F         	goto	u6271
  6083  001E50  EF2C  F00F         	goto	u6270
  6084  001E54                     u6271:
  6085  001E54  EF34  F00F         	goto	l4657
  6086  001E58                     u6270:
  6087  001E58                     
  6088                           ; BSR set to: 0
  6089  001E58  5162               	movf	___fladd@bexp& (0+255),w,b
  6090  001E5A  A4D8               	btfss	status,2,c
  6091  001E5C  EF32  F00F         	goto	u6281
  6092  001E60  EF34  F00F         	goto	u6280
  6093  001E64                     u6281:
  6094  001E64  EF46  F00F         	goto	l4661
  6095  001E68                     u6280:
  6096  001E68                     l4657:
  6097                           
  6098                           ; BSR set to: 0
  6099  001E68  0E00               	movlw	0
  6100  001E6A  6E1F               	movwf	___fladd@b^0,c
  6101  001E6C  0E00               	movlw	0
  6102  001E6E  6E20               	movwf	(___fladd@b+1)^0,c
  6103  001E70  0E00               	movlw	0
  6104  001E72  6E21               	movwf	(___fladd@b+2)^0,c
  6105  001E74  0E00               	movlw	0
  6106  001E76  6E22               	movwf	(___fladd@b+3)^0,c
  6107  001E78  5162               	movf	___fladd@bexp& (0+255),w,b
  6108  001E7A  A4D8               	btfss	status,2,c
  6109  001E7C  EF42  F00F         	goto	u6291
  6110  001E80  EF44  F00F         	goto	u6290
  6111  001E84                     u6291:
  6112  001E84  EF46  F00F         	goto	l4661
  6113  001E88                     u6290:
  6114  001E88                     
  6115                           ; BSR set to: 0
  6116  001E88  0E00               	movlw	0
  6117  001E8A  6F60               	movwf	___fladd@signs& (0+255),b
  6118  001E8C                     l4661:
  6119                           
  6120                           ; BSR set to: 0
  6121  001E8C  A162               	btfss	___fladd@bexp& (0+255),0,b
  6122  001E8E  EF4B  F00F         	goto	u6301
  6123  001E92  EF4D  F00F         	goto	u6300
  6124  001E96                     u6301:
  6125  001E96  EF50  F00F         	goto	l4665
  6126  001E9A                     u6300:
  6127  001E9A                     
  6128                           ; BSR set to: 0
  6129  001E9A  8E21               	bsf	(___fladd@b+2)^0,7,c
  6130  001E9C  EF51  F00F         	goto	l4667
  6131  001EA0                     l4665:
  6132                           
  6133                           ; BSR set to: 0
  6134  001EA0  9E21               	bcf	(___fladd@b+2)^0,7,c
  6135  001EA2                     l4667:
  6136                           
  6137                           ; BSR set to: 0
  6138  001EA2  90D8               	bcf	status,0,c
  6139  001EA4  3162               	rrcf	___fladd@bexp& (0+255),w,b
  6140  001EA6  6E22               	movwf	(___fladd@b+3)^0,c
  6141  001EA8                     
  6142                           ; BSR set to: 0
  6143  001EA8  AF60               	btfss	___fladd@signs& (0+255),7,b
  6144  001EAA  EF59  F00F         	goto	u6311
  6145  001EAE  EF5B  F00F         	goto	u6310
  6146  001EB2                     u6311:
  6147  001EB2  EF5C  F00F         	goto	l4673
  6148  001EB6                     u6310:
  6149  001EB6                     
  6150                           ; BSR set to: 0
  6151  001EB6  8E22               	bsf	(___fladd@b+3)^0,7,c
  6152  001EB8                     l4673:
  6153                           
  6154                           ; BSR set to: 0
  6155  001EB8  C01F  F01F         	movff	___fladd@b,?___fladd
  6156  001EBC  C020  F020         	movff	___fladd@b+1,?___fladd+1
  6157  001EC0  C021  F021         	movff	___fladd@b+2,?___fladd+2
  6158  001EC4  C022  F022         	movff	___fladd@b+3,?___fladd+3
  6159  001EC8                     l624:
  6160                           
  6161                           ; BSR set to: 0
  6162  001EC8  0012               	return		;funcret
  6163  001ECA                     __end_of___fladd:
  6164                           	callstack 0
  6165                           
  6166 ;; *************** function ___flneg *****************
  6167 ;; Defined at:
  6168 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  f1              4   30[COMRAM] unsigned char 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  4   30[COMRAM] unsigned char 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6182 ;;      Params:         4       0       0       0       0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6185 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6186 ;;Total ram usage:        4 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 4
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_efgtoa
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text18
  6197  004080                     __ptext18:
  6198                           	callstack 0
  6199  004080                     ___flneg:
  6200                           	callstack 22
  6201  004080  501F               	movf	___flneg@f1^0,w,c
  6202  004082  1020               	iorwf	(___flneg@f1+1)^0,w,c
  6203  004084  1021               	iorwf	(___flneg@f1+2)^0,w,c
  6204  004086  1022               	iorwf	(___flneg@f1+3)^0,w,c
  6205  004088  B4D8               	btfsc	status,2,c
  6206  00408A  EF49  F020         	goto	u6971
  6207  00408E  EF4B  F020         	goto	u6970
  6208  004092                     u6971:
  6209  004092  EF53  F020         	goto	l5091
  6210  004096                     u6970:
  6211  004096  0E00               	movlw	0
  6212  004098  1A1F               	xorwf	___flneg@f1^0,f,c
  6213  00409A  0E00               	movlw	0
  6214  00409C  1A20               	xorwf	(___flneg@f1+1)^0,f,c
  6215  00409E  0E00               	movlw	0
  6216  0040A0  1A21               	xorwf	(___flneg@f1+2)^0,f,c
  6217  0040A2  0E80               	movlw	128
  6218  0040A4  1A22               	xorwf	(___flneg@f1+3)^0,f,c
  6219  0040A6                     l5091:
  6220  0040A6  C01F  F01F         	movff	___flneg@f1,?___flneg
  6221  0040AA  C020  F020         	movff	___flneg@f1+1,?___flneg+1
  6222  0040AE  C021  F021         	movff	___flneg@f1+2,?___flneg+2
  6223  0040B2  C022  F022         	movff	___flneg@f1+3,?___flneg+3
  6224  0040B6  0012               	return		;funcret
  6225  0040B8                     __end_of___flneg:
  6226                           	callstack 0
  6227                           
  6228 ;; *************** function ___flmul *****************
  6229 ;; Defined at:
  6230 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  b               4   30[COMRAM] unsigned char 
  6233 ;;  a               4   34[COMRAM] unsigned char 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  prod            4    7[BANK0 ] struct .
  6236 ;;  grs             4    2[BANK0 ] unsigned long 
  6237 ;;  temp            2   11[BANK0 ] struct .
  6238 ;;  bexp            1    6[BANK0 ] unsigned char 
  6239 ;;  aexp            1    1[BANK0 ] unsigned char 
  6240 ;;  sign            1    0[BANK0 ] unsigned char 
  6241 ;; Return value:  Size  Location     Type
  6242 ;;                  4   30[COMRAM] unsigned char 
  6243 ;; Registers used:
  6244 ;;		wreg, status,2, status,0, prodl, prodh
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6250 ;;      Params:         8       0       0       0       0       0       0       0       0
  6251 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6252 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6253 ;;      Totals:        12      13       0       0       0       0       0       0       0
  6254 ;;Total ram usage:       25 bytes
  6255 ;; Hardware stack levels used: 1
  6256 ;; Hardware stack levels required when called: 4
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_efgtoa
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text19
  6265  00238A                     __ptext19:
  6266                           	callstack 0
  6267  00238A                     ___flmul:
  6268                           	callstack 22
  6269  00238A  5022               	movf	(___flmul@b+3)^0,w,c
  6270  00238C  0B80               	andlw	128
  6271  00238E  0100               	movlb	0	; () banked
  6272  002390  6F60               	movwf	___flmul@sign& (0+255),b
  6273  002392  5022               	movf	(___flmul@b+3)^0,w,c
  6274  002394  2422               	addwf	(___flmul@b+3)^0,w,c
  6275  002396  6F66               	movwf	___flmul@bexp& (0+255),b
  6276  002398                     
  6277                           ; BSR set to: 0
  6278  002398  AE21               	btfss	(___flmul@b+2)^0,7,c
  6279  00239A  EFD1  F011         	goto	u6581
  6280  00239E  EFD3  F011         	goto	u6580
  6281  0023A2                     u6581:
  6282  0023A2  EFD4  F011         	goto	l4839
  6283  0023A6                     u6580:
  6284  0023A6                     
  6285                           ; BSR set to: 0
  6286  0023A6  8166               	bsf	___flmul@bexp& (0+255),0,b
  6287  0023A8                     l4839:
  6288                           
  6289                           ; BSR set to: 0
  6290  0023A8  5166               	movf	___flmul@bexp& (0+255),w,b
  6291  0023AA  B4D8               	btfsc	status,2,c
  6292  0023AC  EFDA  F011         	goto	u6591
  6293  0023B0  EFDC  F011         	goto	u6590
  6294  0023B4                     u6591:
  6295  0023B4  EFEF  F011         	goto	l4847
  6296  0023B8                     u6590:
  6297  0023B8                     
  6298                           ; BSR set to: 0
  6299  0023B8  2966               	incf	___flmul@bexp& (0+255),w,b
  6300  0023BA  A4D8               	btfss	status,2,c
  6301  0023BC  EFE2  F011         	goto	u6601
  6302  0023C0  EFE4  F011         	goto	u6600
  6303  0023C4                     u6601:
  6304  0023C4  EFEC  F011         	goto	l4845
  6305  0023C8                     u6600:
  6306  0023C8                     
  6307                           ; BSR set to: 0
  6308  0023C8  0E00               	movlw	0
  6309  0023CA  6E1F               	movwf	___flmul@b^0,c
  6310  0023CC  0E00               	movlw	0
  6311  0023CE  6E20               	movwf	(___flmul@b+1)^0,c
  6312  0023D0  0E00               	movlw	0
  6313  0023D2  6E21               	movwf	(___flmul@b+2)^0,c
  6314  0023D4  0E00               	movlw	0
  6315  0023D6  6E22               	movwf	(___flmul@b+3)^0,c
  6316  0023D8                     l4845:
  6317                           
  6318                           ; BSR set to: 0
  6319  0023D8  8E21               	bsf	(___flmul@b+2)^0,7,c
  6320  0023DA  EFF7  F011         	goto	l4849
  6321  0023DE                     l4847:
  6322                           
  6323                           ; BSR set to: 0
  6324  0023DE  0E00               	movlw	0
  6325  0023E0  6E1F               	movwf	___flmul@b^0,c
  6326  0023E2  0E00               	movlw	0
  6327  0023E4  6E20               	movwf	(___flmul@b+1)^0,c
  6328  0023E6  0E00               	movlw	0
  6329  0023E8  6E21               	movwf	(___flmul@b+2)^0,c
  6330  0023EA  0E00               	movlw	0
  6331  0023EC  6E22               	movwf	(___flmul@b+3)^0,c
  6332  0023EE                     l4849:
  6333                           
  6334                           ; BSR set to: 0
  6335  0023EE  5026               	movf	(___flmul@a+3)^0,w,c
  6336  0023F0  0B80               	andlw	128
  6337  0023F2  1B60               	xorwf	___flmul@sign& (0+255),f,b
  6338  0023F4                     
  6339                           ; BSR set to: 0
  6340  0023F4  5026               	movf	(___flmul@a+3)^0,w,c
  6341  0023F6  2426               	addwf	(___flmul@a+3)^0,w,c
  6342  0023F8  6F61               	movwf	___flmul@aexp& (0+255),b
  6343  0023FA                     
  6344                           ; BSR set to: 0
  6345  0023FA  AE25               	btfss	(___flmul@a+2)^0,7,c
  6346  0023FC  EF02  F012         	goto	u6611
  6347  002400  EF04  F012         	goto	u6610
  6348  002404                     u6611:
  6349  002404  EF05  F012         	goto	l4857
  6350  002408                     u6610:
  6351  002408                     
  6352                           ; BSR set to: 0
  6353  002408  8161               	bsf	___flmul@aexp& (0+255),0,b
  6354  00240A                     l4857:
  6355                           
  6356                           ; BSR set to: 0
  6357  00240A  5161               	movf	___flmul@aexp& (0+255),w,b
  6358  00240C  B4D8               	btfsc	status,2,c
  6359  00240E  EF0B  F012         	goto	u6621
  6360  002412  EF0D  F012         	goto	u6620
  6361  002416                     u6621:
  6362  002416  EF20  F012         	goto	l4865
  6363  00241A                     u6620:
  6364  00241A                     
  6365                           ; BSR set to: 0
  6366  00241A  2961               	incf	___flmul@aexp& (0+255),w,b
  6367  00241C  A4D8               	btfss	status,2,c
  6368  00241E  EF13  F012         	goto	u6631
  6369  002422  EF15  F012         	goto	u6630
  6370  002426                     u6631:
  6371  002426  EF1D  F012         	goto	l4863
  6372  00242A                     u6630:
  6373  00242A                     
  6374                           ; BSR set to: 0
  6375  00242A  0E00               	movlw	0
  6376  00242C  6E23               	movwf	___flmul@a^0,c
  6377  00242E  0E00               	movlw	0
  6378  002430  6E24               	movwf	(___flmul@a+1)^0,c
  6379  002432  0E00               	movlw	0
  6380  002434  6E25               	movwf	(___flmul@a+2)^0,c
  6381  002436  0E00               	movlw	0
  6382  002438  6E26               	movwf	(___flmul@a+3)^0,c
  6383  00243A                     l4863:
  6384                           
  6385                           ; BSR set to: 0
  6386  00243A  8E25               	bsf	(___flmul@a+2)^0,7,c
  6387  00243C  EF28  F012         	goto	l701
  6388  002440                     l4865:
  6389                           
  6390                           ; BSR set to: 0
  6391  002440  0E00               	movlw	0
  6392  002442  6E23               	movwf	___flmul@a^0,c
  6393  002444  0E00               	movlw	0
  6394  002446  6E24               	movwf	(___flmul@a+1)^0,c
  6395  002448  0E00               	movlw	0
  6396  00244A  6E25               	movwf	(___flmul@a+2)^0,c
  6397  00244C  0E00               	movlw	0
  6398  00244E  6E26               	movwf	(___flmul@a+3)^0,c
  6399  002450                     l701:
  6400                           
  6401                           ; BSR set to: 0
  6402  002450  5161               	movf	___flmul@aexp& (0+255),w,b
  6403  002452  B4D8               	btfsc	status,2,c
  6404  002454  EF2E  F012         	goto	u6641
  6405  002458  EF30  F012         	goto	u6640
  6406  00245C                     u6641:
  6407  00245C  EF38  F012         	goto	l4869
  6408  002460                     u6640:
  6409  002460                     
  6410                           ; BSR set to: 0
  6411  002460  5166               	movf	___flmul@bexp& (0+255),w,b
  6412  002462  A4D8               	btfss	status,2,c
  6413  002464  EF36  F012         	goto	u6651
  6414  002468  EF38  F012         	goto	u6650
  6415  00246C                     u6651:
  6416  00246C  EF42  F012         	goto	l4873
  6417  002470                     u6650:
  6418  002470                     l4869:
  6419                           
  6420                           ; BSR set to: 0
  6421  002470  0E00               	movlw	0
  6422  002472  6E1F               	movwf	?___flmul^0,c
  6423  002474  0E00               	movlw	0
  6424  002476  6E20               	movwf	(?___flmul+1)^0,c
  6425  002478  0E00               	movlw	0
  6426  00247A  6E21               	movwf	(?___flmul+2)^0,c
  6427  00247C  0E00               	movlw	0
  6428  00247E  6E22               	movwf	(?___flmul+3)^0,c
  6429  002480  EFDA  F013         	goto	l705
  6430  002484                     l4873:
  6431                           
  6432                           ; BSR set to: 0
  6433  002484  5025               	movf	(___flmul@a+2)^0,w,c
  6434  002486  021F               	mulwf	___flmul@b^0,c
  6435  002488  CFF3 F06B          	movff	prodl,___flmul@temp
  6436  00248C  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6437  002490                     
  6438                           ; BSR set to: 0
  6439  002490  516B               	movf	___flmul@temp& (0+255),w,b
  6440  002492  6F62               	movwf	___flmul@grs& (0+255),b
  6441  002494  6B63               	clrf	(___flmul@grs+1)& (0+255),b
  6442  002496  6B64               	clrf	(___flmul@grs+2)& (0+255),b
  6443  002498  6B65               	clrf	(___flmul@grs+3)& (0+255),b
  6444  00249A                     
  6445                           ; BSR set to: 0
  6446  00249A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6447  00249C  6F67               	movwf	___flmul@prod& (0+255),b
  6448  00249E  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  6449  0024A0  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  6450  0024A2  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  6451  0024A4  5024               	movf	(___flmul@a+1)^0,w,c
  6452  0024A6  0220               	mulwf	(___flmul@b+1)^0,c
  6453  0024A8  CFF3 F06B          	movff	prodl,___flmul@temp
  6454  0024AC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6455  0024B0                     
  6456                           ; BSR set to: 0
  6457  0024B0  516B               	movf	___flmul@temp& (0+255),w,b
  6458  0024B2  2762               	addwf	___flmul@grs& (0+255),f,b
  6459  0024B4  0E00               	movlw	0
  6460  0024B6  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6461  0024B8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6462  0024BA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6463  0024BC                     
  6464                           ; BSR set to: 0
  6465  0024BC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6466  0024BE  2767               	addwf	___flmul@prod& (0+255),f,b
  6467  0024C0  0E00               	movlw	0
  6468  0024C2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6469  0024C4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6470  0024C6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6471  0024C8  5023               	movf	___flmul@a^0,w,c
  6472  0024CA  0221               	mulwf	(___flmul@b+2)^0,c
  6473  0024CC  CFF3 F06B          	movff	prodl,___flmul@temp
  6474  0024D0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6475  0024D4                     
  6476                           ; BSR set to: 0
  6477  0024D4  516B               	movf	___flmul@temp& (0+255),w,b
  6478  0024D6  2762               	addwf	___flmul@grs& (0+255),f,b
  6479  0024D8  0E00               	movlw	0
  6480  0024DA  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6481  0024DC  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6482  0024DE  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6483  0024E0                     
  6484                           ; BSR set to: 0
  6485  0024E0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6486  0024E2  2767               	addwf	___flmul@prod& (0+255),f,b
  6487  0024E4  0E00               	movlw	0
  6488  0024E6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6489  0024E8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6490  0024EA  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6491  0024EC                     
  6492                           ; BSR set to: 0
  6493  0024EC  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6494  0024F0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6495  0024F4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6496  0024F8  6B62               	clrf	___flmul@grs& (0+255),b
  6497  0024FA                     
  6498                           ; BSR set to: 0
  6499  0024FA  5023               	movf	___flmul@a^0,w,c
  6500  0024FC  0220               	mulwf	(___flmul@b+1)^0,c
  6501  0024FE  CFF3 F06B          	movff	prodl,___flmul@temp
  6502  002502  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6503  002506                     
  6504                           ; BSR set to: 0
  6505  002506  516B               	movf	___flmul@temp& (0+255),w,b
  6506  002508  2762               	addwf	___flmul@grs& (0+255),f,b
  6507  00250A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6508  00250C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6509  00250E  0E00               	movlw	0
  6510  002510  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6511  002512  0E00               	movlw	0
  6512  002514  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6513  002516                     
  6514                           ; BSR set to: 0
  6515  002516  5024               	movf	(___flmul@a+1)^0,w,c
  6516  002518  021F               	mulwf	___flmul@b^0,c
  6517  00251A  CFF3 F06B          	movff	prodl,___flmul@temp
  6518  00251E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6519  002522                     
  6520                           ; BSR set to: 0
  6521  002522  516B               	movf	___flmul@temp& (0+255),w,b
  6522  002524  2762               	addwf	___flmul@grs& (0+255),f,b
  6523  002526  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6524  002528  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6525  00252A  0E00               	movlw	0
  6526  00252C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6527  00252E  0E00               	movlw	0
  6528  002530  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6529  002532                     
  6530                           ; BSR set to: 0
  6531  002532  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6532  002536  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6533  00253A  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6534  00253E  6B62               	clrf	___flmul@grs& (0+255),b
  6535  002540  5023               	movf	___flmul@a^0,w,c
  6536  002542  021F               	mulwf	___flmul@b^0,c
  6537  002544  CFF3 F06B          	movff	prodl,___flmul@temp
  6538  002548  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6539  00254C                     
  6540                           ; BSR set to: 0
  6541  00254C  516B               	movf	___flmul@temp& (0+255),w,b
  6542  00254E  2762               	addwf	___flmul@grs& (0+255),f,b
  6543  002550  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6544  002552  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6545  002554  0E00               	movlw	0
  6546  002556  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6547  002558  0E00               	movlw	0
  6548  00255A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6549  00255C                     
  6550                           ; BSR set to: 0
  6551  00255C  5025               	movf	(___flmul@a+2)^0,w,c
  6552  00255E  0220               	mulwf	(___flmul@b+1)^0,c
  6553  002560  CFF3 F06B          	movff	prodl,___flmul@temp
  6554  002564  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6555  002568  516B               	movf	___flmul@temp& (0+255),w,b
  6556  00256A  2767               	addwf	___flmul@prod& (0+255),f,b
  6557  00256C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6558  00256E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6559  002570  0E00               	movlw	0
  6560  002572  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6561  002574  0E00               	movlw	0
  6562  002576  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6563  002578                     
  6564                           ; BSR set to: 0
  6565  002578  5024               	movf	(___flmul@a+1)^0,w,c
  6566  00257A  0221               	mulwf	(___flmul@b+2)^0,c
  6567  00257C  CFF3 F06B          	movff	prodl,___flmul@temp
  6568  002580  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6569  002584                     
  6570                           ; BSR set to: 0
  6571  002584  516B               	movf	___flmul@temp& (0+255),w,b
  6572  002586  2767               	addwf	___flmul@prod& (0+255),f,b
  6573  002588  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6574  00258A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6575  00258C  0E00               	movlw	0
  6576  00258E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6577  002590  0E00               	movlw	0
  6578  002592  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6579  002594  5025               	movf	(___flmul@a+2)^0,w,c
  6580  002596  0221               	mulwf	(___flmul@b+2)^0,c
  6581  002598  CFF3 F06B          	movff	prodl,___flmul@temp
  6582  00259C  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6583  0025A0                     
  6584                           ; BSR set to: 0
  6585  0025A0  516B               	movf	___flmul@temp& (0+255),w,b
  6586  0025A2  6E27               	movwf	??___flmul^0,c
  6587  0025A4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6588  0025A6  6E28               	movwf	(??___flmul+1)^0,c
  6589  0025A8  6A29               	clrf	(??___flmul+2)^0,c
  6590  0025AA  6A2A               	clrf	(??___flmul+3)^0,c
  6591  0025AC  C029  F02A         	movff	??___flmul+2,??___flmul+3
  6592  0025B0  C028  F029         	movff	??___flmul+1,??___flmul+2
  6593  0025B4  C027  F028         	movff	??___flmul,??___flmul+1
  6594  0025B8  6A27               	clrf	??___flmul^0,c
  6595  0025BA  5027               	movf	??___flmul^0,w,c
  6596  0025BC  2767               	addwf	___flmul@prod& (0+255),f,b
  6597  0025BE  5028               	movf	(??___flmul+1)^0,w,c
  6598  0025C0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6599  0025C2  5029               	movf	(??___flmul+2)^0,w,c
  6600  0025C4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6601  0025C6  502A               	movf	(??___flmul+3)^0,w,c
  6602  0025C8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6603  0025CA                     
  6604                           ; BSR set to: 0
  6605  0025CA  C062  F027         	movff	___flmul@grs,??___flmul
  6606  0025CE  C063  F028         	movff	___flmul@grs+1,??___flmul+1
  6607  0025D2  C064  F029         	movff	___flmul@grs+2,??___flmul+2
  6608  0025D6  C065  F02A         	movff	___flmul@grs+3,??___flmul+3
  6609  0025DA  0E19               	movlw	25
  6610  0025DC  EFF5  F012         	goto	u6660
  6611  0025E0                     u6665:
  6612  0025E0  90D8               	bcf	status,0,c
  6613  0025E2  322A               	rrcf	(??___flmul+3)^0,f,c
  6614  0025E4  3229               	rrcf	(??___flmul+2)^0,f,c
  6615  0025E6  3228               	rrcf	(??___flmul+1)^0,f,c
  6616  0025E8  3227               	rrcf	??___flmul^0,f,c
  6617  0025EA                     u6660:
  6618  0025EA  2EE8               	decfsz	wreg,f,c
  6619  0025EC  EFF0  F012         	goto	u6665
  6620  0025F0  5027               	movf	??___flmul^0,w,c
  6621  0025F2  2767               	addwf	___flmul@prod& (0+255),f,b
  6622  0025F4  5028               	movf	(??___flmul+1)^0,w,c
  6623  0025F6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6624  0025F8  5029               	movf	(??___flmul+2)^0,w,c
  6625  0025FA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6626  0025FC  502A               	movf	(??___flmul+3)^0,w,c
  6627  0025FE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6628  002600                     
  6629                           ; BSR set to: 0
  6630  002600  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6631  002604  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6632  002608  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6633  00260C  6B62               	clrf	___flmul@grs& (0+255),b
  6634  00260E                     
  6635                           ; BSR set to: 0
  6636  00260E  5161               	movf	___flmul@aexp& (0+255),w,b
  6637  002610  C066  F027         	movff	___flmul@bexp,??___flmul
  6638  002614  6A28               	clrf	(??___flmul+1)^0,c
  6639  002616  2627               	addwf	??___flmul^0,f,c
  6640  002618  0E00               	movlw	0
  6641  00261A  2228               	addwfc	(??___flmul+1)^0,f,c
  6642  00261C  0E82               	movlw	130
  6643  00261E  2427               	addwf	??___flmul^0,w,c
  6644  002620  6F6B               	movwf	___flmul@temp& (0+255),b
  6645  002622  0EFF               	movlw	255
  6646  002624  2028               	addwfc	(??___flmul+1)^0,w,c
  6647  002626  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  6648  002628  EF2B  F013         	goto	l4921
  6649  00262C                     l4915:
  6650                           
  6651                           ; BSR set to: 0
  6652  00262C  90D8               	bcf	status,0,c
  6653  00262E  3767               	rlcf	___flmul@prod& (0+255),f,b
  6654  002630  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6655  002632  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6656  002634  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6657  002636                     
  6658                           ; BSR set to: 0
  6659  002636  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  6660  002638  EF20  F013         	goto	u6671
  6661  00263C  EF22  F013         	goto	u6670
  6662  002640                     u6671:
  6663  002640  EF23  F013         	goto	l708
  6664  002644                     u6670:
  6665  002644                     
  6666                           ; BSR set to: 0
  6667  002644  8167               	bsf	___flmul@prod& (0+255),0,b
  6668  002646                     l708:
  6669                           
  6670                           ; BSR set to: 0
  6671  002646  90D8               	bcf	status,0,c
  6672  002648  3762               	rlcf	___flmul@grs& (0+255),f,b
  6673  00264A  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6674  00264C  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6675  00264E  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6676  002650  076B               	decf	___flmul@temp& (0+255),f,b
  6677  002652  A0D8               	btfss	status,0,c
  6678  002654  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  6679  002656                     l4921:
  6680                           
  6681                           ; BSR set to: 0
  6682  002656  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  6683  002658  EF30  F013         	goto	u6681
  6684  00265C  EF32  F013         	goto	u6680
  6685  002660                     u6681:
  6686  002660  EF16  F013         	goto	l4915
  6687  002664                     u6680:
  6688  002664                     
  6689                           ; BSR set to: 0
  6690  002664  0E00               	movlw	0
  6691  002666  6F61               	movwf	___flmul@aexp& (0+255),b
  6692  002668                     
  6693                           ; BSR set to: 0
  6694  002668  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  6695  00266A  EF39  F013         	goto	u6691
  6696  00266E  EF3B  F013         	goto	u6690
  6697  002672                     u6691:
  6698  002672  EF5F  F013         	goto	l710
  6699  002676                     u6690:
  6700  002676                     
  6701                           ; BSR set to: 0
  6702  002676  0EFF               	movlw	255
  6703  002678  1562               	andwf	___flmul@grs& (0+255),w,b
  6704  00267A  6E27               	movwf	??___flmul^0,c
  6705  00267C  0EFF               	movlw	255
  6706  00267E  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
  6707  002680  6E28               	movwf	(??___flmul+1)^0,c
  6708  002682  0EFF               	movlw	255
  6709  002684  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
  6710  002686  6E29               	movwf	(??___flmul+2)^0,c
  6711  002688  0E7F               	movlw	127
  6712  00268A  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
  6713  00268C  6E2A               	movwf	(??___flmul+3)^0,c
  6714  00268E  5027               	movf	??___flmul^0,w,c
  6715  002690  1028               	iorwf	(??___flmul+1)^0,w,c
  6716  002692  1029               	iorwf	(??___flmul+2)^0,w,c
  6717  002694  102A               	iorwf	(??___flmul+3)^0,w,c
  6718  002696  B4D8               	btfsc	status,2,c
  6719  002698  EF50  F013         	goto	u6701
  6720  00269C  EF52  F013         	goto	u6700
  6721  0026A0                     u6701:
  6722  0026A0  EF56  F013         	goto	l711
  6723  0026A4                     u6700:
  6724  0026A4                     l4929:
  6725                           
  6726                           ; BSR set to: 0
  6727  0026A4  0E01               	movlw	1
  6728  0026A6  6F61               	movwf	___flmul@aexp& (0+255),b
  6729  0026A8  EF5F  F013         	goto	l710
  6730  0026AC                     l711:
  6731                           
  6732                           ; BSR set to: 0
  6733  0026AC  A167               	btfss	___flmul@prod& (0+255),0,b
  6734  0026AE  EF5B  F013         	goto	u6711
  6735  0026B2  EF5D  F013         	goto	u6710
  6736  0026B6                     u6711:
  6737  0026B6  EF5F  F013         	goto	l710
  6738  0026BA                     u6710:
  6739  0026BA  EF52  F013         	goto	l4929
  6740  0026BE                     l710:
  6741                           
  6742                           ; BSR set to: 0
  6743  0026BE  5161               	movf	___flmul@aexp& (0+255),w,b
  6744  0026C0  B4D8               	btfsc	status,2,c
  6745  0026C2  EF65  F013         	goto	u6721
  6746  0026C6  EF67  F013         	goto	u6720
  6747  0026CA                     u6721:
  6748  0026CA  EF8B  F013         	goto	l4941
  6749  0026CE                     u6720:
  6750  0026CE                     
  6751                           ; BSR set to: 0
  6752  0026CE  0E01               	movlw	1
  6753  0026D0  2767               	addwf	___flmul@prod& (0+255),f,b
  6754  0026D2  0E00               	movlw	0
  6755  0026D4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6756  0026D6  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6757  0026D8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6758  0026DA                     
  6759                           ; BSR set to: 0
  6760  0026DA  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  6761  0026DC  EF72  F013         	goto	u6731
  6762  0026E0  EF74  F013         	goto	u6730
  6763  0026E4                     u6731:
  6764  0026E4  EF8B  F013         	goto	l4941
  6765  0026E8                     u6730:
  6766  0026E8                     
  6767                           ; BSR set to: 0
  6768  0026E8  C067  F027         	movff	___flmul@prod,??___flmul
  6769  0026EC  C068  F028         	movff	___flmul@prod+1,??___flmul+1
  6770  0026F0  C069  F029         	movff	___flmul@prod+2,??___flmul+2
  6771  0026F4  C06A  F02A         	movff	___flmul@prod+3,??___flmul+3
  6772  0026F8  342A               	rlcf	(??___flmul+3)^0,w,c
  6773  0026FA  322A               	rrcf	(??___flmul+3)^0,f,c
  6774  0026FC  3229               	rrcf	(??___flmul+2)^0,f,c
  6775  0026FE  3228               	rrcf	(??___flmul+1)^0,f,c
  6776  002700  3227               	rrcf	??___flmul^0,f,c
  6777  002702  C027  F067         	movff	??___flmul,___flmul@prod
  6778  002706  C028  F068         	movff	??___flmul+1,___flmul@prod+1
  6779  00270A  C029  F069         	movff	??___flmul+2,___flmul@prod+2
  6780  00270E  C02A  F06A         	movff	??___flmul+3,___flmul@prod+3
  6781  002712                     
  6782                           ; BSR set to: 0
  6783  002712  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  6784  002714  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  6785  002716                     l4941:
  6786                           
  6787                           ; BSR set to: 0
  6788  002716  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6789  002718  EF96  F013         	goto	u6741
  6790  00271C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6791  00271E  E108               	bnz	u6740
  6792  002720  296B               	incf	___flmul@temp& (0+255),w,b
  6793  002722  A0D8               	btfss	status,0,c
  6794  002724  EF96  F013         	goto	u6741
  6795  002728  EF98  F013         	goto	u6740
  6796  00272C                     u6741:
  6797  00272C  EFA2  F013         	goto	l4945
  6798  002730                     u6740:
  6799  002730                     
  6800                           ; BSR set to: 0
  6801  002730  0E00               	movlw	0
  6802  002732  6F67               	movwf	___flmul@prod& (0+255),b
  6803  002734  0E00               	movlw	0
  6804  002736  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  6805  002738  0E80               	movlw	128
  6806  00273A  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  6807  00273C  0E7F               	movlw	127
  6808  00273E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6809  002740  EFD0  F013         	goto	l4957
  6810  002744                     l4945:
  6811                           
  6812                           ; BSR set to: 0
  6813  002744  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6814  002746  EFAF  F013         	goto	u6750
  6815  00274A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6816  00274C  E106               	bnz	u6751
  6817  00274E  056B               	decf	___flmul@temp& (0+255),w,b
  6818  002750  B0D8               	btfsc	status,0,c
  6819  002752  EFAD  F013         	goto	u6751
  6820  002756  EFAF  F013         	goto	u6750
  6821  00275A                     u6751:
  6822  00275A  EFBB  F013         	goto	l718
  6823  00275E                     u6750:
  6824  00275E                     
  6825                           ; BSR set to: 0
  6826  00275E  0E00               	movlw	0
  6827  002760  6F67               	movwf	___flmul@prod& (0+255),b
  6828  002762  0E00               	movlw	0
  6829  002764  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  6830  002766  0E00               	movlw	0
  6831  002768  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  6832  00276A  0E00               	movlw	0
  6833  00276C  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6834  00276E  0E00               	movlw	0
  6835  002770  6F60               	movwf	___flmul@sign& (0+255),b
  6836  002772  EFD0  F013         	goto	l4957
  6837  002776                     l718:
  6838                           
  6839                           ; BSR set to: 0
  6840  002776  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  6841  00277A                     
  6842                           ; BSR set to: 0
  6843  00277A  0EFF               	movlw	255
  6844  00277C  1767               	andwf	___flmul@prod& (0+255),f,b
  6845  00277E  0EFF               	movlw	255
  6846  002780  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  6847  002782  0E7F               	movlw	127
  6848  002784  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  6849  002786  0E00               	movlw	0
  6850  002788  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  6851  00278A                     
  6852                           ; BSR set to: 0
  6853  00278A  A166               	btfss	___flmul@bexp& (0+255),0,b
  6854  00278C  EFCA  F013         	goto	u6761
  6855  002790  EFCC  F013         	goto	u6760
  6856  002794                     u6761:
  6857  002794  EFCD  F013         	goto	l4955
  6858  002798                     u6760:
  6859  002798                     
  6860                           ; BSR set to: 0
  6861  002798  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  6862  00279A                     l4955:
  6863                           
  6864                           ; BSR set to: 0
  6865  00279A  90D8               	bcf	status,0,c
  6866  00279C  3166               	rrcf	___flmul@bexp& (0+255),w,b
  6867  00279E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6868  0027A0                     l4957:
  6869                           
  6870                           ; BSR set to: 0
  6871  0027A0  5160               	movf	___flmul@sign& (0+255),w,b
  6872  0027A2  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6873  0027A4                     
  6874                           ; BSR set to: 0
  6875  0027A4  C067  F01F         	movff	___flmul@prod,?___flmul
  6876  0027A8  C068  F020         	movff	___flmul@prod+1,?___flmul+1
  6877  0027AC  C069  F021         	movff	___flmul@prod+2,?___flmul+2
  6878  0027B0  C06A  F022         	movff	___flmul@prod+3,?___flmul+3
  6879  0027B4                     l705:
  6880                           
  6881                           ; BSR set to: 0
  6882  0027B4  0012               	return		;funcret
  6883  0027B6                     __end_of___flmul:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function ___flge *****************
  6887 ;; Defined at:
  6888 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  ff1             4   13[BANK0 ] unsigned char 
  6891 ;;  ff2             4   17[BANK0 ] unsigned char 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;		None
  6894 ;; Return value:  Size  Location     Type
  6895 ;;		None               void
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, status,0
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6903 ;;      Params:         0       8       0       0       0       0       0       0       0
  6904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6905 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6906 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6907 ;;Total ram usage:       12 bytes
  6908 ;; Hardware stack levels used: 1
  6909 ;; Hardware stack levels required when called: 4
  6910 ;; This function calls:
  6911 ;;		Nothing
  6912 ;; This function is called by:
  6913 ;;		_efgtoa
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           	psect	text20
  6918  0031AE                     __ptext20:
  6919                           	callstack 0
  6920  0031AE                     ___flge:
  6921                           	callstack 22
  6922  0031AE  0E00               	movlw	0
  6923  0031B0  0100               	movlb	0	; () banked
  6924  0031B2  156D               	andwf	___flge@ff1& (0+255),w,b
  6925  0031B4  6F75               	movwf	??___flge& (0+255),b
  6926  0031B6  0E00               	movlw	0
  6927  0031B8  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  6928  0031BA  6F76               	movwf	(??___flge+1)& (0+255),b
  6929  0031BC  0E80               	movlw	128
  6930  0031BE  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  6931  0031C0  6F77               	movwf	(??___flge+2)& (0+255),b
  6932  0031C2  0E7F               	movlw	127
  6933  0031C4  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  6934  0031C6  6F78               	movwf	(??___flge+3)& (0+255),b
  6935  0031C8  5175               	movf	??___flge& (0+255),w,b
  6936  0031CA  1176               	iorwf	(??___flge+1)& (0+255),w,b
  6937  0031CC  1177               	iorwf	(??___flge+2)& (0+255),w,b
  6938  0031CE  1178               	iorwf	(??___flge+3)& (0+255),w,b
  6939  0031D0  A4D8               	btfss	status,2,c
  6940  0031D2  EFED  F018         	goto	u6921
  6941  0031D6  EFEF  F018         	goto	u6920
  6942  0031DA                     u6921:
  6943  0031DA  EFF7  F018         	goto	l5069
  6944  0031DE                     u6920:
  6945  0031DE                     
  6946                           ; BSR set to: 0
  6947  0031DE  0E00               	movlw	0
  6948  0031E0  6F6D               	movwf	___flge@ff1& (0+255),b
  6949  0031E2  0E00               	movlw	0
  6950  0031E4  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  6951  0031E6  0E00               	movlw	0
  6952  0031E8  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  6953  0031EA  0E00               	movlw	0
  6954  0031EC  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  6955  0031EE                     l5069:
  6956                           
  6957                           ; BSR set to: 0
  6958  0031EE  0E00               	movlw	0
  6959  0031F0  1571               	andwf	___flge@ff2& (0+255),w,b
  6960  0031F2  6F75               	movwf	??___flge& (0+255),b
  6961  0031F4  0E00               	movlw	0
  6962  0031F6  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  6963  0031F8  6F76               	movwf	(??___flge+1)& (0+255),b
  6964  0031FA  0E80               	movlw	128
  6965  0031FC  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  6966  0031FE  6F77               	movwf	(??___flge+2)& (0+255),b
  6967  003200  0E7F               	movlw	127
  6968  003202  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  6969  003204  6F78               	movwf	(??___flge+3)& (0+255),b
  6970  003206  5175               	movf	??___flge& (0+255),w,b
  6971  003208  1176               	iorwf	(??___flge+1)& (0+255),w,b
  6972  00320A  1177               	iorwf	(??___flge+2)& (0+255),w,b
  6973  00320C  1178               	iorwf	(??___flge+3)& (0+255),w,b
  6974  00320E  A4D8               	btfss	status,2,c
  6975  003210  EF0C  F019         	goto	u6931
  6976  003214  EF0E  F019         	goto	u6930
  6977  003218                     u6931:
  6978  003218  EF16  F019         	goto	l5073
  6979  00321C                     u6930:
  6980  00321C                     
  6981                           ; BSR set to: 0
  6982  00321C  0E00               	movlw	0
  6983  00321E  6F71               	movwf	___flge@ff2& (0+255),b
  6984  003220  0E00               	movlw	0
  6985  003222  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  6986  003224  0E00               	movlw	0
  6987  003226  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  6988  003228  0E00               	movlw	0
  6989  00322A  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  6990  00322C                     l5073:
  6991                           
  6992                           ; BSR set to: 0
  6993  00322C  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  6994  00322E  EF1B  F019         	goto	u6941
  6995  003232  EF1D  F019         	goto	u6940
  6996  003236                     u6941:
  6997  003236  EF26  F019         	goto	l5077
  6998  00323A                     u6940:
  6999  00323A                     
  7000                           ; BSR set to: 0
  7001  00323A  6D6D               	negf	___flge@ff1& (0+255),b
  7002  00323C  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  7003  00323E  B0D8               	btfsc	status,0,c
  7004  003240  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  7005  003242  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  7006  003244  B0D8               	btfsc	status,0,c
  7007  003246  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  7008  003248  0E80               	movlw	128
  7009  00324A  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7010  00324C                     l5077:
  7011                           
  7012                           ; BSR set to: 0
  7013  00324C  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  7014  00324E  EF2B  F019         	goto	u6951
  7015  003252  EF2D  F019         	goto	u6950
  7016  003256                     u6951:
  7017  003256  EF36  F019         	goto	l352
  7018  00325A                     u6950:
  7019  00325A                     
  7020                           ; BSR set to: 0
  7021  00325A  6D71               	negf	___flge@ff2& (0+255),b
  7022  00325C  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  7023  00325E  B0D8               	btfsc	status,0,c
  7024  003260  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  7025  003262  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  7026  003264  B0D8               	btfsc	status,0,c
  7027  003266  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  7028  003268  0E80               	movlw	128
  7029  00326A  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7030  00326C                     l352:
  7031                           
  7032                           ; BSR set to: 0
  7033  00326C  0E00               	movlw	0
  7034  00326E  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  7035  003270  0E00               	movlw	0
  7036  003272  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7037  003274  0E00               	movlw	0
  7038  003276  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7039  003278  0E80               	movlw	128
  7040  00327A  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7041  00327C  0E00               	movlw	0
  7042  00327E  1B71               	xorwf	___flge@ff2& (0+255),f,b
  7043  003280  0E00               	movlw	0
  7044  003282  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7045  003284  0E00               	movlw	0
  7046  003286  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7047  003288  0E80               	movlw	128
  7048  00328A  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7049  00328C  5171               	movf	___flge@ff2& (0+255),w,b
  7050  00328E  5D6D               	subwf	___flge@ff1& (0+255),w,b
  7051  003290  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  7052  003292  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7053  003294  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  7054  003296  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7055  003298  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  7056  00329A  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7057  00329C  B0D8               	btfsc	status,0,c
  7058  00329E  EF53  F019         	goto	u6961
  7059  0032A2  EF55  F019         	goto	u6960
  7060  0032A6                     u6961:
  7061  0032A6  EF58  F019         	goto	l5083
  7062  0032AA                     u6960:
  7063  0032AA                     
  7064                           ; BSR set to: 0
  7065  0032AA  90D8               	bcf	status,0,c
  7066  0032AC  EF59  F019         	goto	l357
  7067  0032B0                     l5083:
  7068                           
  7069                           ; BSR set to: 0
  7070  0032B0  80D8               	bsf	status,0,c
  7071  0032B2                     l357:
  7072                           
  7073                           ; BSR set to: 0
  7074  0032B2  0012               	return		;funcret
  7075  0032B4                     __end_of___flge:
  7076                           	callstack 0
  7077                           
  7078 ;; *************** function ___fleq *****************
  7079 ;; Defined at:
  7080 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  ff1             4   30[COMRAM] unsigned char 
  7083 ;;  ff2             4   34[COMRAM] unsigned char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;		None
  7086 ;; Return value:  Size  Location     Type
  7087 ;;		None               void
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7095 ;;      Params:         8       0       0       0       0       0       0       0       0
  7096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7097 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7098 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7099 ;;Total ram usage:       12 bytes
  7100 ;; Hardware stack levels used: 1
  7101 ;; Hardware stack levels required when called: 4
  7102 ;; This function calls:
  7103 ;;		Nothing
  7104 ;; This function is called by:
  7105 ;;		_efgtoa
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           	psect	text21
  7110  003B12                     __ptext21:
  7111                           	callstack 0
  7112  003B12                     ___fleq:
  7113                           	callstack 22
  7114  003B12  0E00               	movlw	0
  7115  003B14  141F               	andwf	___fleq@ff1^0,w,c
  7116  003B16  6E27               	movwf	??___fleq^0,c
  7117  003B18  0E00               	movlw	0
  7118  003B1A  1420               	andwf	(___fleq@ff1+1)^0,w,c
  7119  003B1C  6E28               	movwf	(??___fleq+1)^0,c
  7120  003B1E  0E80               	movlw	128
  7121  003B20  1421               	andwf	(___fleq@ff1+2)^0,w,c
  7122  003B22  6E29               	movwf	(??___fleq+2)^0,c
  7123  003B24  0E7F               	movlw	127
  7124  003B26  1422               	andwf	(___fleq@ff1+3)^0,w,c
  7125  003B28  6E2A               	movwf	(??___fleq+3)^0,c
  7126  003B2A  5027               	movf	??___fleq^0,w,c
  7127  003B2C  1028               	iorwf	(??___fleq+1)^0,w,c
  7128  003B2E  1029               	iorwf	(??___fleq+2)^0,w,c
  7129  003B30  102A               	iorwf	(??___fleq+3)^0,w,c
  7130  003B32  A4D8               	btfss	status,2,c
  7131  003B34  EF9E  F01D         	goto	u6891
  7132  003B38  EFA0  F01D         	goto	u6890
  7133  003B3C                     u6891:
  7134  003B3C  EFA8  F01D         	goto	l5053
  7135  003B40                     u6890:
  7136  003B40  0E00               	movlw	0
  7137  003B42  6E1F               	movwf	___fleq@ff1^0,c
  7138  003B44  0E00               	movlw	0
  7139  003B46  6E20               	movwf	(___fleq@ff1+1)^0,c
  7140  003B48  0E00               	movlw	0
  7141  003B4A  6E21               	movwf	(___fleq@ff1+2)^0,c
  7142  003B4C  0E00               	movlw	0
  7143  003B4E  6E22               	movwf	(___fleq@ff1+3)^0,c
  7144  003B50                     l5053:
  7145  003B50  0E00               	movlw	0
  7146  003B52  1423               	andwf	___fleq@ff2^0,w,c
  7147  003B54  6E27               	movwf	??___fleq^0,c
  7148  003B56  0E00               	movlw	0
  7149  003B58  1424               	andwf	(___fleq@ff2+1)^0,w,c
  7150  003B5A  6E28               	movwf	(??___fleq+1)^0,c
  7151  003B5C  0E80               	movlw	128
  7152  003B5E  1425               	andwf	(___fleq@ff2+2)^0,w,c
  7153  003B60  6E29               	movwf	(??___fleq+2)^0,c
  7154  003B62  0E7F               	movlw	127
  7155  003B64  1426               	andwf	(___fleq@ff2+3)^0,w,c
  7156  003B66  6E2A               	movwf	(??___fleq+3)^0,c
  7157  003B68  5027               	movf	??___fleq^0,w,c
  7158  003B6A  1028               	iorwf	(??___fleq+1)^0,w,c
  7159  003B6C  1029               	iorwf	(??___fleq+2)^0,w,c
  7160  003B6E  102A               	iorwf	(??___fleq+3)^0,w,c
  7161  003B70  A4D8               	btfss	status,2,c
  7162  003B72  EFBD  F01D         	goto	u6901
  7163  003B76  EFBF  F01D         	goto	u6900
  7164  003B7A                     u6901:
  7165  003B7A  EFC7  F01D         	goto	l5057
  7166  003B7E                     u6900:
  7167  003B7E  0E00               	movlw	0
  7168  003B80  6E23               	movwf	___fleq@ff2^0,c
  7169  003B82  0E00               	movlw	0
  7170  003B84  6E24               	movwf	(___fleq@ff2+1)^0,c
  7171  003B86  0E00               	movlw	0
  7172  003B88  6E25               	movwf	(___fleq@ff2+2)^0,c
  7173  003B8A  0E00               	movlw	0
  7174  003B8C  6E26               	movwf	(___fleq@ff2+3)^0,c
  7175  003B8E                     l5057:
  7176  003B8E  5023               	movf	___fleq@ff2^0,w,c
  7177  003B90  181F               	xorwf	___fleq@ff1^0,w,c
  7178  003B92  E10F               	bnz	u6910
  7179  003B94  5024               	movf	(___fleq@ff2+1)^0,w,c
  7180  003B96  1820               	xorwf	(___fleq@ff1+1)^0,w,c
  7181  003B98  E10C               	bnz	u6910
  7182  003B9A  5025               	movf	(___fleq@ff2+2)^0,w,c
  7183  003B9C  1821               	xorwf	(___fleq@ff1+2)^0,w,c
  7184  003B9E  E109               	bnz	u6910
  7185  003BA0  5026               	movf	(___fleq@ff2+3)^0,w,c
  7186  003BA2  1822               	xorwf	(___fleq@ff1+3)^0,w,c
  7187  003BA4  B4D8               	btfsc	status,2,c
  7188  003BA6  EFD7  F01D         	goto	u6911
  7189  003BAA  EFD9  F01D         	goto	u6910
  7190  003BAE                     u6911:
  7191  003BAE  EFDC  F01D         	goto	l5061
  7192  003BB2                     u6910:
  7193  003BB2  90D8               	bcf	status,0,c
  7194  003BB4  EFDD  F01D         	goto	l346
  7195  003BB8                     l5061:
  7196  003BB8  80D8               	bsf	status,0,c
  7197  003BBA                     l346:
  7198  003BBA  0012               	return		;funcret
  7199  003BBC                     __end_of___fleq:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function ___fldiv *****************
  7203 ;; Defined at:
  7204 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  b               4   30[COMRAM] unsigned char 
  7207 ;;  a               4   34[COMRAM] unsigned char 
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;  grs             4    7[BANK0 ] unsigned long 
  7210 ;;  rem             4    0[BANK0 ] unsigned long 
  7211 ;;  new_exp         2    5[BANK0 ] short 
  7212 ;;  aexp            1   12[BANK0 ] unsigned char 
  7213 ;;  bexp            1   11[BANK0 ] unsigned char 
  7214 ;;  sign            1    4[BANK0 ] unsigned char 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  4   30[COMRAM] unsigned char 
  7217 ;; Registers used:
  7218 ;;		wreg, status,2, status,0
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7224 ;;      Params:         8       0       0       0       0       0       0       0       0
  7225 ;;      Locals:         0      13       0       0       0       0       0       0       0
  7226 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7227 ;;      Totals:        12      13       0       0       0       0       0       0       0
  7228 ;;Total ram usage:       25 bytes
  7229 ;; Hardware stack levels used: 1
  7230 ;; Hardware stack levels required when called: 4
  7231 ;; This function calls:
  7232 ;;		Nothing
  7233 ;; This function is called by:
  7234 ;;		_efgtoa
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text22
  7239  0027B6                     __ptext22:
  7240                           	callstack 0
  7241  0027B6                     ___fldiv:
  7242                           	callstack 22
  7243  0027B6  5022               	movf	(___fldiv@b+3)^0,w,c
  7244  0027B8  0B80               	andlw	128
  7245  0027BA  0100               	movlb	0	; () banked
  7246  0027BC  6F64               	movwf	___fldiv@sign& (0+255),b
  7247  0027BE  5022               	movf	(___fldiv@b+3)^0,w,c
  7248  0027C0  2422               	addwf	(___fldiv@b+3)^0,w,c
  7249  0027C2  6F6B               	movwf	___fldiv@bexp& (0+255),b
  7250  0027C4                     
  7251                           ; BSR set to: 0
  7252  0027C4  AE21               	btfss	(___fldiv@b+2)^0,7,c
  7253  0027C6  EFE7  F013         	goto	u6351
  7254  0027CA  EFE9  F013         	goto	u6350
  7255  0027CE                     u6351:
  7256  0027CE  EFEA  F013         	goto	l4701
  7257  0027D2                     u6350:
  7258  0027D2                     
  7259                           ; BSR set to: 0
  7260  0027D2  816B               	bsf	___fldiv@bexp& (0+255),0,b
  7261  0027D4                     l4701:
  7262                           
  7263                           ; BSR set to: 0
  7264  0027D4  516B               	movf	___fldiv@bexp& (0+255),w,b
  7265  0027D6  B4D8               	btfsc	status,2,c
  7266  0027D8  EFF0  F013         	goto	u6361
  7267  0027DC  EFF2  F013         	goto	u6360
  7268  0027E0                     u6361:
  7269  0027E0  EF07  F014         	goto	l4711
  7270  0027E4                     u6360:
  7271  0027E4                     
  7272                           ; BSR set to: 0
  7273  0027E4  296B               	incf	___fldiv@bexp& (0+255),w,b
  7274  0027E6  A4D8               	btfss	status,2,c
  7275  0027E8  EFF8  F013         	goto	u6371
  7276  0027EC  EFFA  F013         	goto	u6370
  7277  0027F0                     u6371:
  7278  0027F0  EF02  F014         	goto	l4707
  7279  0027F4                     u6370:
  7280  0027F4                     
  7281                           ; BSR set to: 0
  7282  0027F4  0E00               	movlw	0
  7283  0027F6  6E1F               	movwf	___fldiv@b^0,c
  7284  0027F8  0E00               	movlw	0
  7285  0027FA  6E20               	movwf	(___fldiv@b+1)^0,c
  7286  0027FC  0E00               	movlw	0
  7287  0027FE  6E21               	movwf	(___fldiv@b+2)^0,c
  7288  002800  0E00               	movlw	0
  7289  002802  6E22               	movwf	(___fldiv@b+3)^0,c
  7290  002804                     l4707:
  7291                           
  7292                           ; BSR set to: 0
  7293  002804  8E21               	bsf	(___fldiv@b+2)^0,7,c
  7294  002806                     
  7295                           ; BSR set to: 0
  7296  002806  0E00               	movlw	0
  7297  002808  6E22               	movwf	(___fldiv@b+3)^0,c
  7298  00280A  EF0F  F014         	goto	l4713
  7299  00280E                     l4711:
  7300                           
  7301                           ; BSR set to: 0
  7302  00280E  0E00               	movlw	0
  7303  002810  6E1F               	movwf	___fldiv@b^0,c
  7304  002812  0E00               	movlw	0
  7305  002814  6E20               	movwf	(___fldiv@b+1)^0,c
  7306  002816  0E00               	movlw	0
  7307  002818  6E21               	movwf	(___fldiv@b+2)^0,c
  7308  00281A  0E00               	movlw	0
  7309  00281C  6E22               	movwf	(___fldiv@b+3)^0,c
  7310  00281E                     l4713:
  7311                           
  7312                           ; BSR set to: 0
  7313  00281E  5026               	movf	(___fldiv@a+3)^0,w,c
  7314  002820  0B80               	andlw	128
  7315  002822  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  7316  002824                     
  7317                           ; BSR set to: 0
  7318  002824  5026               	movf	(___fldiv@a+3)^0,w,c
  7319  002826  2426               	addwf	(___fldiv@a+3)^0,w,c
  7320  002828  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7321  00282A                     
  7322                           ; BSR set to: 0
  7323  00282A  AE25               	btfss	(___fldiv@a+2)^0,7,c
  7324  00282C  EF1A  F014         	goto	u6381
  7325  002830  EF1C  F014         	goto	u6380
  7326  002834                     u6381:
  7327  002834  EF1D  F014         	goto	l4721
  7328  002838                     u6380:
  7329  002838                     
  7330                           ; BSR set to: 0
  7331  002838  816C               	bsf	___fldiv@aexp& (0+255),0,b
  7332  00283A                     l4721:
  7333                           
  7334                           ; BSR set to: 0
  7335  00283A  516C               	movf	___fldiv@aexp& (0+255),w,b
  7336  00283C  B4D8               	btfsc	status,2,c
  7337  00283E  EF23  F014         	goto	u6391
  7338  002842  EF25  F014         	goto	u6390
  7339  002846                     u6391:
  7340  002846  EF3A  F014         	goto	l4731
  7341  00284A                     u6390:
  7342  00284A                     
  7343                           ; BSR set to: 0
  7344  00284A  296C               	incf	___fldiv@aexp& (0+255),w,b
  7345  00284C  A4D8               	btfss	status,2,c
  7346  00284E  EF2B  F014         	goto	u6401
  7347  002852  EF2D  F014         	goto	u6400
  7348  002856                     u6401:
  7349  002856  EF35  F014         	goto	l4727
  7350  00285A                     u6400:
  7351  00285A                     
  7352                           ; BSR set to: 0
  7353  00285A  0E00               	movlw	0
  7354  00285C  6E23               	movwf	___fldiv@a^0,c
  7355  00285E  0E00               	movlw	0
  7356  002860  6E24               	movwf	(___fldiv@a+1)^0,c
  7357  002862  0E00               	movlw	0
  7358  002864  6E25               	movwf	(___fldiv@a+2)^0,c
  7359  002866  0E00               	movlw	0
  7360  002868  6E26               	movwf	(___fldiv@a+3)^0,c
  7361  00286A                     l4727:
  7362                           
  7363                           ; BSR set to: 0
  7364  00286A  8E25               	bsf	(___fldiv@a+2)^0,7,c
  7365  00286C                     
  7366                           ; BSR set to: 0
  7367  00286C  0E00               	movlw	0
  7368  00286E  6E26               	movwf	(___fldiv@a+3)^0,c
  7369  002870  EF42  F014         	goto	l4733
  7370  002874                     l4731:
  7371                           
  7372                           ; BSR set to: 0
  7373  002874  0E00               	movlw	0
  7374  002876  6E23               	movwf	___fldiv@a^0,c
  7375  002878  0E00               	movlw	0
  7376  00287A  6E24               	movwf	(___fldiv@a+1)^0,c
  7377  00287C  0E00               	movlw	0
  7378  00287E  6E25               	movwf	(___fldiv@a+2)^0,c
  7379  002880  0E00               	movlw	0
  7380  002882  6E26               	movwf	(___fldiv@a+3)^0,c
  7381  002884                     l4733:
  7382                           
  7383                           ; BSR set to: 0
  7384  002884  5023               	movf	___fldiv@a^0,w,c
  7385  002886  1024               	iorwf	(___fldiv@a+1)^0,w,c
  7386  002888  1025               	iorwf	(___fldiv@a+2)^0,w,c
  7387  00288A  1026               	iorwf	(___fldiv@a+3)^0,w,c
  7388  00288C  A4D8               	btfss	status,2,c
  7389  00288E  EF4B  F014         	goto	u6411
  7390  002892  EF4D  F014         	goto	u6410
  7391  002896                     u6411:
  7392  002896  EF65  F014         	goto	l4745
  7393  00289A                     u6410:
  7394  00289A                     
  7395                           ; BSR set to: 0
  7396  00289A  0E00               	movlw	0
  7397  00289C  6E1F               	movwf	___fldiv@b^0,c
  7398  00289E  0E00               	movlw	0
  7399  0028A0  6E20               	movwf	(___fldiv@b+1)^0,c
  7400  0028A2  0E00               	movlw	0
  7401  0028A4  6E21               	movwf	(___fldiv@b+2)^0,c
  7402  0028A6  0E00               	movlw	0
  7403  0028A8  6E22               	movwf	(___fldiv@b+3)^0,c
  7404  0028AA                     
  7405                           ; BSR set to: 0
  7406  0028AA  0E80               	movlw	128
  7407  0028AC  1221               	iorwf	(___fldiv@b+2)^0,f,c
  7408  0028AE  0E7F               	movlw	127
  7409  0028B0  1222               	iorwf	(___fldiv@b+3)^0,f,c
  7410  0028B2                     l4739:
  7411                           
  7412                           ; BSR set to: 0
  7413  0028B2  5164               	movf	___fldiv@sign& (0+255),w,b
  7414  0028B4  1222               	iorwf	(___fldiv@b+3)^0,f,c
  7415  0028B6                     
  7416                           ; BSR set to: 0
  7417  0028B6  C01F  F01F         	movff	___fldiv@b,?___fldiv
  7418  0028BA  C020  F020         	movff	___fldiv@b+1,?___fldiv+1
  7419  0028BE  C021  F021         	movff	___fldiv@b+2,?___fldiv+2
  7420  0028C2  C022  F022         	movff	___fldiv@b+3,?___fldiv+3
  7421  0028C6  EFA8  F015         	goto	l669
  7422  0028CA                     l4745:
  7423                           
  7424                           ; BSR set to: 0
  7425  0028CA  516B               	movf	___fldiv@bexp& (0+255),w,b
  7426  0028CC  A4D8               	btfss	status,2,c
  7427  0028CE  EF6B  F014         	goto	u6421
  7428  0028D2  EF6D  F014         	goto	u6420
  7429  0028D6                     u6421:
  7430  0028D6  EF77  F014         	goto	l4753
  7431  0028DA                     u6420:
  7432  0028DA                     
  7433                           ; BSR set to: 0
  7434  0028DA  0E00               	movlw	0
  7435  0028DC  6E1F               	movwf	?___fldiv^0,c
  7436  0028DE  0E00               	movlw	0
  7437  0028E0  6E20               	movwf	(?___fldiv+1)^0,c
  7438  0028E2  0E00               	movlw	0
  7439  0028E4  6E21               	movwf	(?___fldiv+2)^0,c
  7440  0028E6  0E00               	movlw	0
  7441  0028E8  6E22               	movwf	(?___fldiv+3)^0,c
  7442  0028EA  EFA8  F015         	goto	l669
  7443  0028EE                     l4753:
  7444                           
  7445                           ; BSR set to: 0
  7446  0028EE  516C               	movf	___fldiv@aexp& (0+255),w,b
  7447  0028F0  C06B  F027         	movff	___fldiv@bexp,??___fldiv
  7448  0028F4  6A28               	clrf	(??___fldiv+1)^0,c
  7449  0028F6  5E27               	subwf	??___fldiv^0,f,c
  7450  0028F8  0E00               	movlw	0
  7451  0028FA  5A28               	subwfb	(??___fldiv+1)^0,f,c
  7452  0028FC  0E7F               	movlw	127
  7453  0028FE  2427               	addwf	??___fldiv^0,w,c
  7454  002900  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7455  002902  0E00               	movlw	0
  7456  002904  2028               	addwfc	(??___fldiv+1)^0,w,c
  7457  002906  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7458  002908                     
  7459                           ; BSR set to: 0
  7460  002908  C01F  F060         	movff	___fldiv@b,___fldiv@rem
  7461  00290C  C020  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  7462  002910  C021  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  7463  002914  C022  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  7464  002918                     
  7465                           ; BSR set to: 0
  7466  002918  0E00               	movlw	0
  7467  00291A  6E1F               	movwf	___fldiv@b^0,c
  7468  00291C  0E00               	movlw	0
  7469  00291E  6E20               	movwf	(___fldiv@b+1)^0,c
  7470  002920  0E00               	movlw	0
  7471  002922  6E21               	movwf	(___fldiv@b+2)^0,c
  7472  002924  0E00               	movlw	0
  7473  002926  6E22               	movwf	(___fldiv@b+3)^0,c
  7474  002928                     
  7475                           ; BSR set to: 0
  7476  002928  0E00               	movlw	0
  7477  00292A  6F67               	movwf	___fldiv@grs& (0+255),b
  7478  00292C  0E00               	movlw	0
  7479  00292E  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  7480  002930  0E00               	movlw	0
  7481  002932  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  7482  002934  0E00               	movlw	0
  7483  002936  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  7484  002938                     
  7485                           ; BSR set to: 0
  7486  002938  0E00               	movlw	0
  7487  00293A  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7488  00293C  EFD8  F014         	goto	l671
  7489  002940                     l4763:
  7490                           
  7491                           ; BSR set to: 0
  7492  002940  516C               	movf	___fldiv@aexp& (0+255),w,b
  7493  002942  B4D8               	btfsc	status,2,c
  7494  002944  EFA6  F014         	goto	u6431
  7495  002948  EFA8  F014         	goto	u6430
  7496  00294C                     u6431:
  7497  00294C  EFBF  F014         	goto	l4771
  7498  002950                     u6430:
  7499  002950                     
  7500                           ; BSR set to: 0
  7501  002950  90D8               	bcf	status,0,c
  7502  002952  3760               	rlcf	___fldiv@rem& (0+255),f,b
  7503  002954  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7504  002956  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7505  002958  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7506  00295A  90D8               	bcf	status,0,c
  7507  00295C  361F               	rlcf	___fldiv@b^0,f,c
  7508  00295E  3620               	rlcf	(___fldiv@b+1)^0,f,c
  7509  002960  3621               	rlcf	(___fldiv@b+2)^0,f,c
  7510  002962  3622               	rlcf	(___fldiv@b+3)^0,f,c
  7511  002964                     
  7512                           ; BSR set to: 0
  7513  002964  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7514  002966  EFB7  F014         	goto	u6441
  7515  00296A  EFB9  F014         	goto	u6440
  7516  00296E                     u6441:
  7517  00296E  EFBA  F014         	goto	l674
  7518  002972                     u6440:
  7519  002972                     
  7520                           ; BSR set to: 0
  7521  002972  801F               	bsf	___fldiv@b^0,0,c
  7522  002974                     l674:
  7523                           
  7524                           ; BSR set to: 0
  7525  002974  90D8               	bcf	status,0,c
  7526  002976  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7527  002978  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7528  00297A  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7529  00297C  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7530  00297E                     l4771:
  7531                           
  7532                           ; BSR set to: 0
  7533  00297E  5023               	movf	___fldiv@a^0,w,c
  7534  002980  5D60               	subwf	___fldiv@rem& (0+255),w,b
  7535  002982  5024               	movf	(___fldiv@a+1)^0,w,c
  7536  002984  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7537  002986  5025               	movf	(___fldiv@a+2)^0,w,c
  7538  002988  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7539  00298A  5026               	movf	(___fldiv@a+3)^0,w,c
  7540  00298C  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7541  00298E  A0D8               	btfss	status,0,c
  7542  002990  EFCC  F014         	goto	u6451
  7543  002994  EFCE  F014         	goto	u6450
  7544  002998                     u6451:
  7545  002998  EFD7  F014         	goto	l4777
  7546  00299C                     u6450:
  7547  00299C                     
  7548                           ; BSR set to: 0
  7549  00299C  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7550  00299E                     
  7551                           ; BSR set to: 0
  7552  00299E  5023               	movf	___fldiv@a^0,w,c
  7553  0029A0  5F60               	subwf	___fldiv@rem& (0+255),f,b
  7554  0029A2  5024               	movf	(___fldiv@a+1)^0,w,c
  7555  0029A4  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7556  0029A6  5025               	movf	(___fldiv@a+2)^0,w,c
  7557  0029A8  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7558  0029AA  5026               	movf	(___fldiv@a+3)^0,w,c
  7559  0029AC  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7560  0029AE                     l4777:
  7561                           
  7562                           ; BSR set to: 0
  7563  0029AE  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  7564  0029B0                     l671:
  7565                           
  7566                           ; BSR set to: 0
  7567  0029B0  0E19               	movlw	25
  7568  0029B2  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  7569  0029B4  EFDE  F014         	goto	u6461
  7570  0029B8  EFE0  F014         	goto	u6460
  7571  0029BC                     u6461:
  7572  0029BC  EFA0  F014         	goto	l4763
  7573  0029C0                     u6460:
  7574  0029C0                     
  7575                           ; BSR set to: 0
  7576  0029C0  5160               	movf	___fldiv@rem& (0+255),w,b
  7577  0029C2  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7578  0029C4  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7579  0029C6  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7580  0029C8  B4D8               	btfsc	status,2,c
  7581  0029CA  EFE9  F014         	goto	u6471
  7582  0029CE  EFEB  F014         	goto	u6470
  7583  0029D2                     u6471:
  7584  0029D2  EF03  F015         	goto	l4789
  7585  0029D6                     u6470:
  7586  0029D6                     
  7587                           ; BSR set to: 0
  7588  0029D6  8167               	bsf	___fldiv@grs& (0+255),0,b
  7589  0029D8  EF03  F015         	goto	l4789
  7590  0029DC                     l4783:
  7591                           
  7592                           ; BSR set to: 0
  7593  0029DC  90D8               	bcf	status,0,c
  7594  0029DE  361F               	rlcf	___fldiv@b^0,f,c
  7595  0029E0  3620               	rlcf	(___fldiv@b+1)^0,f,c
  7596  0029E2  3621               	rlcf	(___fldiv@b+2)^0,f,c
  7597  0029E4  3622               	rlcf	(___fldiv@b+3)^0,f,c
  7598  0029E6                     
  7599                           ; BSR set to: 0
  7600  0029E6  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7601  0029E8  EFF8  F014         	goto	u6481
  7602  0029EC  EFFA  F014         	goto	u6480
  7603  0029F0                     u6481:
  7604  0029F0  EFFB  F014         	goto	l680
  7605  0029F4                     u6480:
  7606  0029F4                     
  7607                           ; BSR set to: 0
  7608  0029F4  801F               	bsf	___fldiv@b^0,0,c
  7609  0029F6                     l680:
  7610                           
  7611                           ; BSR set to: 0
  7612  0029F6  90D8               	bcf	status,0,c
  7613  0029F8  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7614  0029FA  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7615  0029FC  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7616  0029FE  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7617  002A00  0765               	decf	___fldiv@new_exp& (0+255),f,b
  7618  002A02  A0D8               	btfss	status,0,c
  7619  002A04  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7620  002A06                     l4789:
  7621                           
  7622                           ; BSR set to: 0
  7623  002A06  AE21               	btfss	(___fldiv@b+2)^0,7,c
  7624  002A08  EF08  F015         	goto	u6491
  7625  002A0C  EF0A  F015         	goto	u6490
  7626  002A10                     u6491:
  7627  002A10  EFEE  F014         	goto	l4783
  7628  002A14                     u6490:
  7629  002A14                     
  7630                           ; BSR set to: 0
  7631  002A14  0E00               	movlw	0
  7632  002A16  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7633  002A18                     
  7634                           ; BSR set to: 0
  7635  002A18  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7636  002A1A  EF11  F015         	goto	u6501
  7637  002A1E  EF13  F015         	goto	u6500
  7638  002A22                     u6501:
  7639  002A22  EF37  F015         	goto	l682
  7640  002A26                     u6500:
  7641  002A26                     
  7642                           ; BSR set to: 0
  7643  002A26  0EFF               	movlw	255
  7644  002A28  1567               	andwf	___fldiv@grs& (0+255),w,b
  7645  002A2A  6E27               	movwf	??___fldiv^0,c
  7646  002A2C  0EFF               	movlw	255
  7647  002A2E  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7648  002A30  6E28               	movwf	(??___fldiv+1)^0,c
  7649  002A32  0EFF               	movlw	255
  7650  002A34  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7651  002A36  6E29               	movwf	(??___fldiv+2)^0,c
  7652  002A38  0E7F               	movlw	127
  7653  002A3A  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7654  002A3C  6E2A               	movwf	(??___fldiv+3)^0,c
  7655  002A3E  5027               	movf	??___fldiv^0,w,c
  7656  002A40  1028               	iorwf	(??___fldiv+1)^0,w,c
  7657  002A42  1029               	iorwf	(??___fldiv+2)^0,w,c
  7658  002A44  102A               	iorwf	(??___fldiv+3)^0,w,c
  7659  002A46  B4D8               	btfsc	status,2,c
  7660  002A48  EF28  F015         	goto	u6511
  7661  002A4C  EF2A  F015         	goto	u6510
  7662  002A50                     u6511:
  7663  002A50  EF2E  F015         	goto	l683
  7664  002A54                     u6510:
  7665  002A54                     l4797:
  7666                           
  7667                           ; BSR set to: 0
  7668  002A54  0E01               	movlw	1
  7669  002A56  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7670  002A58  EF37  F015         	goto	l682
  7671  002A5C                     l683:
  7672                           
  7673                           ; BSR set to: 0
  7674  002A5C  A01F               	btfss	___fldiv@b^0,0,c
  7675  002A5E  EF33  F015         	goto	u6521
  7676  002A62  EF35  F015         	goto	u6520
  7677  002A66                     u6521:
  7678  002A66  EF37  F015         	goto	l682
  7679  002A6A                     u6520:
  7680  002A6A  EF2A  F015         	goto	l4797
  7681  002A6E                     l682:
  7682                           
  7683                           ; BSR set to: 0
  7684  002A6E  516C               	movf	___fldiv@aexp& (0+255),w,b
  7685  002A70  B4D8               	btfsc	status,2,c
  7686  002A72  EF3D  F015         	goto	u6531
  7687  002A76  EF3F  F015         	goto	u6530
  7688  002A7A                     u6531:
  7689  002A7A  EF63  F015         	goto	l4809
  7690  002A7E                     u6530:
  7691  002A7E                     
  7692                           ; BSR set to: 0
  7693  002A7E  0E01               	movlw	1
  7694  002A80  261F               	addwf	___fldiv@b^0,f,c
  7695  002A82  0E00               	movlw	0
  7696  002A84  2220               	addwfc	(___fldiv@b+1)^0,f,c
  7697  002A86  2221               	addwfc	(___fldiv@b+2)^0,f,c
  7698  002A88  2222               	addwfc	(___fldiv@b+3)^0,f,c
  7699  002A8A                     
  7700                           ; BSR set to: 0
  7701  002A8A  A022               	btfss	(___fldiv@b+3)^0,0,c
  7702  002A8C  EF4A  F015         	goto	u6541
  7703  002A90  EF4C  F015         	goto	u6540
  7704  002A94                     u6541:
  7705  002A94  EF63  F015         	goto	l4809
  7706  002A98                     u6540:
  7707  002A98                     
  7708                           ; BSR set to: 0
  7709  002A98  C01F  F027         	movff	___fldiv@b,??___fldiv
  7710  002A9C  C020  F028         	movff	___fldiv@b+1,??___fldiv+1
  7711  002AA0  C021  F029         	movff	___fldiv@b+2,??___fldiv+2
  7712  002AA4  C022  F02A         	movff	___fldiv@b+3,??___fldiv+3
  7713  002AA8  342A               	rlcf	(??___fldiv+3)^0,w,c
  7714  002AAA  322A               	rrcf	(??___fldiv+3)^0,f,c
  7715  002AAC  3229               	rrcf	(??___fldiv+2)^0,f,c
  7716  002AAE  3228               	rrcf	(??___fldiv+1)^0,f,c
  7717  002AB0  3227               	rrcf	??___fldiv^0,f,c
  7718  002AB2  C027  F01F         	movff	??___fldiv,___fldiv@b
  7719  002AB6  C028  F020         	movff	??___fldiv+1,___fldiv@b+1
  7720  002ABA  C029  F021         	movff	??___fldiv+2,___fldiv@b+2
  7721  002ABE  C02A  F022         	movff	??___fldiv+3,___fldiv@b+3
  7722  002AC2                     
  7723                           ; BSR set to: 0
  7724  002AC2  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  7725  002AC4  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7726  002AC6                     l4809:
  7727                           
  7728                           ; BSR set to: 0
  7729  002AC6  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7730  002AC8  EF6E  F015         	goto	u6551
  7731  002ACC  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7732  002ACE  E108               	bnz	u6550
  7733  002AD0  2965               	incf	___fldiv@new_exp& (0+255),w,b
  7734  002AD2  A0D8               	btfss	status,0,c
  7735  002AD4  EF6E  F015         	goto	u6551
  7736  002AD8  EF70  F015         	goto	u6550
  7737  002ADC                     u6551:
  7738  002ADC  EF7B  F015         	goto	l4813
  7739  002AE0                     u6550:
  7740  002AE0                     
  7741                           ; BSR set to: 0
  7742  002AE0  0E00               	movlw	0
  7743  002AE2  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7744  002AE4  6965               	setf	___fldiv@new_exp& (0+255),b
  7745  002AE6  0E00               	movlw	0
  7746  002AE8  6E1F               	movwf	___fldiv@b^0,c
  7747  002AEA  0E00               	movlw	0
  7748  002AEC  6E20               	movwf	(___fldiv@b+1)^0,c
  7749  002AEE  0E00               	movlw	0
  7750  002AF0  6E21               	movwf	(___fldiv@b+2)^0,c
  7751  002AF2  0E00               	movlw	0
  7752  002AF4  6E22               	movwf	(___fldiv@b+3)^0,c
  7753  002AF6                     l4813:
  7754                           
  7755                           ; BSR set to: 0
  7756  002AF6  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7757  002AF8  EF88  F015         	goto	u6560
  7758  002AFC  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7759  002AFE  E106               	bnz	u6561
  7760  002B00  0565               	decf	___fldiv@new_exp& (0+255),w,b
  7761  002B02  B0D8               	btfsc	status,0,c
  7762  002B04  EF86  F015         	goto	u6561
  7763  002B08  EF88  F015         	goto	u6560
  7764  002B0C                     u6561:
  7765  002B0C  EF96  F015         	goto	l4817
  7766  002B10                     u6560:
  7767  002B10                     
  7768                           ; BSR set to: 0
  7769  002B10  0E00               	movlw	0
  7770  002B12  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7771  002B14  0E00               	movlw	0
  7772  002B16  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7773  002B18  0E00               	movlw	0
  7774  002B1A  6E1F               	movwf	___fldiv@b^0,c
  7775  002B1C  0E00               	movlw	0
  7776  002B1E  6E20               	movwf	(___fldiv@b+1)^0,c
  7777  002B20  0E00               	movlw	0
  7778  002B22  6E21               	movwf	(___fldiv@b+2)^0,c
  7779  002B24  0E00               	movlw	0
  7780  002B26  6E22               	movwf	(___fldiv@b+3)^0,c
  7781  002B28  0E00               	movlw	0
  7782  002B2A  6F64               	movwf	___fldiv@sign& (0+255),b
  7783  002B2C                     l4817:
  7784                           
  7785                           ; BSR set to: 0
  7786  002B2C  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  7787  002B30                     
  7788                           ; BSR set to: 0
  7789  002B30  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  7790  002B32  EF9D  F015         	goto	u6571
  7791  002B36  EF9F  F015         	goto	u6570
  7792  002B3A                     u6571:
  7793  002B3A  EFA2  F015         	goto	l4823
  7794  002B3E                     u6570:
  7795  002B3E                     
  7796                           ; BSR set to: 0
  7797  002B3E  8E21               	bsf	(___fldiv@b+2)^0,7,c
  7798  002B40  EFA3  F015         	goto	l4825
  7799  002B44                     l4823:
  7800                           
  7801                           ; BSR set to: 0
  7802  002B44  9E21               	bcf	(___fldiv@b+2)^0,7,c
  7803  002B46                     l4825:
  7804                           
  7805                           ; BSR set to: 0
  7806  002B46  90D8               	bcf	status,0,c
  7807  002B48  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  7808  002B4A  6E22               	movwf	(___fldiv@b+3)^0,c
  7809  002B4C  EF59  F014         	goto	l4739
  7810  002B50                     l669:
  7811                           
  7812                           ; BSR set to: 0
  7813  002B50  0012               	return		;funcret
  7814  002B52                     __end_of___fldiv:
  7815                           	callstack 0
  7816                           
  7817 ;; *************** function ___awmod *****************
  7818 ;; Defined at:
  7819 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  dividend        2   30[COMRAM] int 
  7822 ;;  divisor         2   32[COMRAM] int 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  sign            1   35[COMRAM] unsigned char 
  7825 ;;  counter         1   34[COMRAM] unsigned char 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  2   30[COMRAM] int 
  7828 ;; Registers used:
  7829 ;;		wreg, status,2, status,0
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7835 ;;      Params:         4       0       0       0       0       0       0       0       0
  7836 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7838 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7839 ;;Total ram usage:        6 bytes
  7840 ;; Hardware stack levels used: 1
  7841 ;; Hardware stack levels required when called: 4
  7842 ;; This function calls:
  7843 ;;		Nothing
  7844 ;; This function is called by:
  7845 ;;		_efgtoa
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text23
  7850  003A62                     __ptext23:
  7851                           	callstack 0
  7852  003A62                     ___awmod:
  7853                           	callstack 22
  7854  003A62  0E00               	movlw	0
  7855  003A64  6E24               	movwf	___awmod@sign^0,c
  7856  003A66  BE20               	btfsc	(___awmod@dividend+1)^0,7,c
  7857  003A68  EF3A  F01D         	goto	u6830
  7858  003A6C  EF38  F01D         	goto	u6831
  7859  003A70                     u6831:
  7860  003A70  EF40  F01D         	goto	l5021
  7861  003A74                     u6830:
  7862  003A74  6C1F               	negf	___awmod@dividend^0,c
  7863  003A76  1E20               	comf	(___awmod@dividend+1)^0,f,c
  7864  003A78  B0D8               	btfsc	status,0,c
  7865  003A7A  2A20               	incf	(___awmod@dividend+1)^0,f,c
  7866  003A7C  0E01               	movlw	1
  7867  003A7E  6E24               	movwf	___awmod@sign^0,c
  7868  003A80                     l5021:
  7869  003A80  BE22               	btfsc	(___awmod@divisor+1)^0,7,c
  7870  003A82  EF47  F01D         	goto	u6840
  7871  003A86  EF45  F01D         	goto	u6841
  7872  003A8A                     u6841:
  7873  003A8A  EF4B  F01D         	goto	l5025
  7874  003A8E                     u6840:
  7875  003A8E  6C21               	negf	___awmod@divisor^0,c
  7876  003A90  1E22               	comf	(___awmod@divisor+1)^0,f,c
  7877  003A92  B0D8               	btfsc	status,0,c
  7878  003A94  2A22               	incf	(___awmod@divisor+1)^0,f,c
  7879  003A96                     l5025:
  7880  003A96  5021               	movf	___awmod@divisor^0,w,c
  7881  003A98  1022               	iorwf	(___awmod@divisor+1)^0,w,c
  7882  003A9A  B4D8               	btfsc	status,2,c
  7883  003A9C  EF52  F01D         	goto	u6851
  7884  003AA0  EF54  F01D         	goto	u6850
  7885  003AA4                     u6851:
  7886  003AA4  EF78  F01D         	goto	l5041
  7887  003AA8                     u6850:
  7888  003AA8  0E01               	movlw	1
  7889  003AAA  6E23               	movwf	___awmod@counter^0,c
  7890  003AAC  EF5C  F01D         	goto	l5031
  7891  003AB0                     l5029:
  7892  003AB0  90D8               	bcf	status,0,c
  7893  003AB2  3621               	rlcf	___awmod@divisor^0,f,c
  7894  003AB4  3622               	rlcf	(___awmod@divisor+1)^0,f,c
  7895  003AB6  2A23               	incf	___awmod@counter^0,f,c
  7896  003AB8                     l5031:
  7897  003AB8  AE22               	btfss	(___awmod@divisor+1)^0,7,c
  7898  003ABA  EF61  F01D         	goto	u6861
  7899  003ABE  EF63  F01D         	goto	u6860
  7900  003AC2                     u6861:
  7901  003AC2  EF58  F01D         	goto	l5029
  7902  003AC6                     u6860:
  7903  003AC6                     l5033:
  7904  003AC6  5021               	movf	___awmod@divisor^0,w,c
  7905  003AC8  5C1F               	subwf	___awmod@dividend^0,w,c
  7906  003ACA  5022               	movf	(___awmod@divisor+1)^0,w,c
  7907  003ACC  5820               	subwfb	(___awmod@dividend+1)^0,w,c
  7908  003ACE  A0D8               	btfss	status,0,c
  7909  003AD0  EF6C  F01D         	goto	u6871
  7910  003AD4  EF6E  F01D         	goto	u6870
  7911  003AD8                     u6871:
  7912  003AD8  EF72  F01D         	goto	l5037
  7913  003ADC                     u6870:
  7914  003ADC  5021               	movf	___awmod@divisor^0,w,c
  7915  003ADE  5E1F               	subwf	___awmod@dividend^0,f,c
  7916  003AE0  5022               	movf	(___awmod@divisor+1)^0,w,c
  7917  003AE2  5A20               	subwfb	(___awmod@dividend+1)^0,f,c
  7918  003AE4                     l5037:
  7919  003AE4  90D8               	bcf	status,0,c
  7920  003AE6  3222               	rrcf	(___awmod@divisor+1)^0,f,c
  7921  003AE8  3221               	rrcf	___awmod@divisor^0,f,c
  7922  003AEA  2E23               	decfsz	___awmod@counter^0,f,c
  7923  003AEC  EF63  F01D         	goto	l5033
  7924  003AF0                     l5041:
  7925  003AF0  5024               	movf	___awmod@sign^0,w,c
  7926  003AF2  B4D8               	btfsc	status,2,c
  7927  003AF4  EF7E  F01D         	goto	u6881
  7928  003AF8  EF80  F01D         	goto	u6880
  7929  003AFC                     u6881:
  7930  003AFC  EF84  F01D         	goto	l5045
  7931  003B00                     u6880:
  7932  003B00  6C1F               	negf	___awmod@dividend^0,c
  7933  003B02  1E20               	comf	(___awmod@dividend+1)^0,f,c
  7934  003B04  B0D8               	btfsc	status,0,c
  7935  003B06  2A20               	incf	(___awmod@dividend+1)^0,f,c
  7936  003B08                     l5045:
  7937  003B08  C01F  F01F         	movff	___awmod@dividend,?___awmod
  7938  003B0C  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  7939  003B10  0012               	return		;funcret
  7940  003B12                     __end_of___awmod:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function ___awdiv *****************
  7944 ;; Defined at:
  7945 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  dividend        2   30[COMRAM] int 
  7948 ;;  divisor         2   32[COMRAM] int 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;  quotient        2   36[COMRAM] int 
  7951 ;;  sign            1   35[COMRAM] unsigned char 
  7952 ;;  counter         1   34[COMRAM] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  2   30[COMRAM] int 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7962 ;;      Params:         4       0       0       0       0       0       0       0       0
  7963 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7965 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7966 ;;Total ram usage:        8 bytes
  7967 ;; Hardware stack levels used: 1
  7968 ;; Hardware stack levels required when called: 4
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_efgtoa
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text24
  7977  0038EC                     __ptext24:
  7978                           	callstack 0
  7979  0038EC                     ___awdiv:
  7980                           	callstack 22
  7981  0038EC  0E00               	movlw	0
  7982  0038EE  6E24               	movwf	___awdiv@sign^0,c
  7983  0038F0  BE22               	btfsc	(___awdiv@divisor+1)^0,7,c
  7984  0038F2  EF7F  F01C         	goto	u6770
  7985  0038F6  EF7D  F01C         	goto	u6771
  7986  0038FA                     u6771:
  7987  0038FA  EF85  F01C         	goto	l4977
  7988  0038FE                     u6770:
  7989  0038FE  6C21               	negf	___awdiv@divisor^0,c
  7990  003900  1E22               	comf	(___awdiv@divisor+1)^0,f,c
  7991  003902  B0D8               	btfsc	status,0,c
  7992  003904  2A22               	incf	(___awdiv@divisor+1)^0,f,c
  7993  003906  0E01               	movlw	1
  7994  003908  6E24               	movwf	___awdiv@sign^0,c
  7995  00390A                     l4977:
  7996  00390A  BE20               	btfsc	(___awdiv@dividend+1)^0,7,c
  7997  00390C  EF8C  F01C         	goto	u6780
  7998  003910  EF8A  F01C         	goto	u6781
  7999  003914                     u6781:
  8000  003914  EF92  F01C         	goto	l4983
  8001  003918                     u6780:
  8002  003918  6C1F               	negf	___awdiv@dividend^0,c
  8003  00391A  1E20               	comf	(___awdiv@dividend+1)^0,f,c
  8004  00391C  B0D8               	btfsc	status,0,c
  8005  00391E  2A20               	incf	(___awdiv@dividend+1)^0,f,c
  8006  003920  0E01               	movlw	1
  8007  003922  1A24               	xorwf	___awdiv@sign^0,f,c
  8008  003924                     l4983:
  8009  003924  0E00               	movlw	0
  8010  003926  6E26               	movwf	(___awdiv@quotient+1)^0,c
  8011  003928  0E00               	movlw	0
  8012  00392A  6E25               	movwf	___awdiv@quotient^0,c
  8013  00392C  5021               	movf	___awdiv@divisor^0,w,c
  8014  00392E  1022               	iorwf	(___awdiv@divisor+1)^0,w,c
  8015  003930  B4D8               	btfsc	status,2,c
  8016  003932  EF9D  F01C         	goto	u6791
  8017  003936  EF9F  F01C         	goto	u6790
  8018  00393A                     u6791:
  8019  00393A  EFC7  F01C         	goto	l5005
  8020  00393E                     u6790:
  8021  00393E  0E01               	movlw	1
  8022  003940  6E23               	movwf	___awdiv@counter^0,c
  8023  003942  EFA7  F01C         	goto	l4991
  8024  003946                     l4989:
  8025  003946  90D8               	bcf	status,0,c
  8026  003948  3621               	rlcf	___awdiv@divisor^0,f,c
  8027  00394A  3622               	rlcf	(___awdiv@divisor+1)^0,f,c
  8028  00394C  2A23               	incf	___awdiv@counter^0,f,c
  8029  00394E                     l4991:
  8030  00394E  AE22               	btfss	(___awdiv@divisor+1)^0,7,c
  8031  003950  EFAC  F01C         	goto	u6801
  8032  003954  EFAE  F01C         	goto	u6800
  8033  003958                     u6801:
  8034  003958  EFA3  F01C         	goto	l4989
  8035  00395C                     u6800:
  8036  00395C                     l4993:
  8037  00395C  90D8               	bcf	status,0,c
  8038  00395E  3625               	rlcf	___awdiv@quotient^0,f,c
  8039  003960  3626               	rlcf	(___awdiv@quotient+1)^0,f,c
  8040  003962  5021               	movf	___awdiv@divisor^0,w,c
  8041  003964  5C1F               	subwf	___awdiv@dividend^0,w,c
  8042  003966  5022               	movf	(___awdiv@divisor+1)^0,w,c
  8043  003968  5820               	subwfb	(___awdiv@dividend+1)^0,w,c
  8044  00396A  A0D8               	btfss	status,0,c
  8045  00396C  EFBA  F01C         	goto	u6811
  8046  003970  EFBC  F01C         	goto	u6810
  8047  003974                     u6811:
  8048  003974  EFC1  F01C         	goto	l5001
  8049  003978                     u6810:
  8050  003978  5021               	movf	___awdiv@divisor^0,w,c
  8051  00397A  5E1F               	subwf	___awdiv@dividend^0,f,c
  8052  00397C  5022               	movf	(___awdiv@divisor+1)^0,w,c
  8053  00397E  5A20               	subwfb	(___awdiv@dividend+1)^0,f,c
  8054  003980  8025               	bsf	___awdiv@quotient^0,0,c
  8055  003982                     l5001:
  8056  003982  90D8               	bcf	status,0,c
  8057  003984  3222               	rrcf	(___awdiv@divisor+1)^0,f,c
  8058  003986  3221               	rrcf	___awdiv@divisor^0,f,c
  8059  003988  2E23               	decfsz	___awdiv@counter^0,f,c
  8060  00398A  EFAE  F01C         	goto	l4993
  8061  00398E                     l5005:
  8062  00398E  5024               	movf	___awdiv@sign^0,w,c
  8063  003990  B4D8               	btfsc	status,2,c
  8064  003992  EFCD  F01C         	goto	u6821
  8065  003996  EFCF  F01C         	goto	u6820
  8066  00399A                     u6821:
  8067  00399A  EFD3  F01C         	goto	l5009
  8068  00399E                     u6820:
  8069  00399E  6C25               	negf	___awdiv@quotient^0,c
  8070  0039A0  1E26               	comf	(___awdiv@quotient+1)^0,f,c
  8071  0039A2  B0D8               	btfsc	status,0,c
  8072  0039A4  2A26               	incf	(___awdiv@quotient+1)^0,f,c
  8073  0039A6                     l5009:
  8074  0039A6  C025  F01F         	movff	___awdiv@quotient,?___awdiv
  8075  0039AA  C026  F020         	movff	___awdiv@quotient+1,?___awdiv+1
  8076  0039AE  0012               	return		;funcret
  8077  0039B0                     __end_of___awdiv:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function _atoi *****************
  8081 ;; Defined at:
  8082 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  s               2   37[COMRAM] PTR const unsigned char 
  8085 ;;		 -> STR_4(6), 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  n               2   11[BANK0 ] int 
  8088 ;;  neg             2    4[BANK0 ] int 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  2   37[COMRAM] int 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8098 ;;      Params:         2       0       0       0       0       0       0       0       0
  8099 ;;      Locals:         0       9       0       0       0       0       0       0       0
  8100 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8101 ;;      Totals:         2      13       0       0       0       0       0       0       0
  8102 ;;Total ram usage:       15 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; Hardware stack levels required when called: 5
  8105 ;; This function calls:
  8106 ;;		___wmul
  8107 ;;		_isdigit
  8108 ;;		_isspace
  8109 ;; This function is called by:
  8110 ;;		_vfpfcnvrt
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text25
  8115  002F14                     __ptext25:
  8116                           	callstack 0
  8117  002F14                     _atoi:
  8118                           	callstack 22
  8119  002F14  0E00               	movlw	0
  8120  002F16  0100               	movlb	0	; () banked
  8121  002F18  6F6C               	movwf	(atoi@n+1)& (0+255),b
  8122  002F1A  0E00               	movlw	0
  8123  002F1C  6F6B               	movwf	atoi@n& (0+255),b
  8124  002F1E  0E00               	movlw	0
  8125  002F20  6F65               	movwf	(atoi@neg+1)& (0+255),b
  8126  002F22  0E00               	movlw	0
  8127  002F24  6F64               	movwf	atoi@neg& (0+255),b
  8128  002F26  EF97  F017         	goto	l5553
  8129  002F2A                     l5551:
  8130                           
  8131                           ; BSR set to: 0
  8132  002F2A  4A26               	infsnz	atoi@s^0,f,c
  8133  002F2C  2A27               	incf	(atoi@s+1)^0,f,c
  8134  002F2E                     l5553:
  8135                           
  8136                           ; BSR set to: 0
  8137  002F2E  0E01               	movlw	1
  8138  002F30  6F6A               	movwf	_atoi$1008& (0+255),b
  8139  002F32                     
  8140                           ; BSR set to: 0
  8141  002F32  C026  FFF6         	movff	atoi@s,tblptrl
  8142  002F36  C027  FFF7         	movff	atoi@s+1,tblptrh
  8143  002F3A                     	if	0	;tblptru may be non-zero
  8144  002F3A                     	endif
  8145  002F3A                     	if	0	;tblptru may be non-zero
  8146  002F3A                     	endif
  8147  002F3A  0008               	tblrd		*
  8148  002F3C  50F5               	movf	tablat,w,c
  8149  002F3E  0A20               	xorlw	32
  8150  002F40  B4D8               	btfsc	status,2,c
  8151  002F42  EFA5  F017         	goto	u7891
  8152  002F46  EFA7  F017         	goto	u7890
  8153  002F4A                     u7891:
  8154  002F4A  EFC4  F017         	goto	l5561
  8155  002F4E                     u7890:
  8156  002F4E                     
  8157                           ; BSR set to: 0
  8158  002F4E  0EF7               	movlw	247
  8159  002F50  6F60               	movwf	??_atoi& (0+255),b
  8160  002F52  0EFF               	movlw	255
  8161  002F54  6F61               	movwf	(??_atoi+1)& (0+255),b
  8162  002F56  C026  FFF6         	movff	atoi@s,tblptrl
  8163  002F5A  C027  FFF7         	movff	atoi@s+1,tblptrh
  8164  002F5E                     	if	0	;tblptru may be non-zero
  8165  002F5E                     	endif
  8166  002F5E                     	if	0	;tblptru may be non-zero
  8167  002F5E                     	endif
  8168  002F5E  0008               	tblrd		*
  8169  002F60  50F5               	movf	tablat,w,c
  8170  002F62  6F62               	movwf	(??_atoi+2)& (0+255),b
  8171  002F64  6B63               	clrf	(??_atoi+3)& (0+255),b
  8172  002F66  5160               	movf	??_atoi& (0+255),w,b
  8173  002F68  2762               	addwf	(??_atoi+2)& (0+255),f,b
  8174  002F6A  5161               	movf	(??_atoi+1)& (0+255),w,b
  8175  002F6C  2363               	addwfc	(??_atoi+3)& (0+255),f,b
  8176  002F6E  5163               	movf	(??_atoi+3)& (0+255),w,b
  8177  002F70  E109               	bnz	u7900
  8178  002F72  0E05               	movlw	5
  8179  002F74  5D62               	subwf	(??_atoi+2)& (0+255),w,b
  8180  002F76  A0D8               	btfss	status,0,c
  8181  002F78  EFC0  F017         	goto	u7901
  8182  002F7C  EFC2  F017         	goto	u7900
  8183  002F80                     u7901:
  8184  002F80  EFC4  F017         	goto	l5561
  8185  002F84                     u7900:
  8186  002F84                     
  8187                           ; BSR set to: 0
  8188  002F84  0E00               	movlw	0
  8189  002F86  6F6A               	movwf	_atoi$1008& (0+255),b
  8190  002F88                     l5561:
  8191                           
  8192                           ; BSR set to: 0
  8193  002F88  C06A  F066         	movff	_atoi$1008,_atoi$1007
  8194  002F8C  6B67               	clrf	(_atoi$1007+1)& (0+255),b
  8195  002F8E                     
  8196                           ; BSR set to: 0
  8197  002F8E  5166               	movf	_atoi$1007& (0+255),w,b
  8198  002F90  1167               	iorwf	(_atoi$1007+1)& (0+255),w,b
  8199  002F92  A4D8               	btfss	status,2,c
  8200  002F94  EFCE  F017         	goto	u7911
  8201  002F98  EFD0  F017         	goto	u7910
  8202  002F9C                     u7911:
  8203  002F9C  EF95  F017         	goto	l5551
  8204  002FA0                     u7910:
  8205  002FA0  EFDA  F017         	goto	l5571
  8206  002FA4                     l5567:
  8207                           
  8208                           ; BSR set to: 0
  8209  002FA4  0E00               	movlw	0
  8210  002FA6  6F65               	movwf	(atoi@neg+1)& (0+255),b
  8211  002FA8  0E01               	movlw	1
  8212  002FAA  6F64               	movwf	atoi@neg& (0+255),b
  8213  002FAC                     l5569:
  8214                           
  8215                           ; BSR set to: 0
  8216  002FAC  4A26               	infsnz	atoi@s^0,f,c
  8217  002FAE  2A27               	incf	(atoi@s+1)^0,f,c
  8218  002FB0  EF10  F018         	goto	l5577
  8219  002FB4                     l5571:
  8220                           
  8221                           ; BSR set to: 0
  8222  002FB4  C026  FFF6         	movff	atoi@s,tblptrl
  8223  002FB8  C027  FFF7         	movff	atoi@s+1,tblptrh
  8224  002FBC                     	if	0	;tblptru may be non-zero
  8225  002FBC                     	endif
  8226  002FBC                     	if	0	;tblptru may be non-zero
  8227  002FBC                     	endif
  8228  002FBC  0008               	tblrd		*
  8229  002FBE  50F5               	movf	tablat,w,c
  8230  002FC0  6F60               	movwf	??_atoi& (0+255),b
  8231  002FC2  6B61               	clrf	(??_atoi+1)& (0+255),b
  8232                           
  8233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8234                           ; Switch size 1, requested type "simple"
  8235                           ; Number of cases is 1, Range of values is 0 to 0
  8236                           ; switch strategies available:
  8237                           ; Name         Instructions Cycles
  8238                           ; simple_byte            4     3 (average)
  8239                           ;	Chosen strategy is simple_byte
  8240  002FC4  5161               	movf	(??_atoi+1)& (0+255),w,b
  8241  002FC6  0A00               	xorlw	0	; case 0
  8242  002FC8  B4D8               	btfsc	status,2,c
  8243  002FCA  EFE9  F017         	goto	l5825
  8244  002FCE  EF10  F018         	goto	l5577
  8245  002FD2                     l5825:
  8246                           
  8247                           ; BSR set to: 0
  8248                           ; Switch size 1, requested type "simple"
  8249                           ; Number of cases is 2, Range of values is 43 to 45
  8250                           ; switch strategies available:
  8251                           ; Name         Instructions Cycles
  8252                           ; simple_byte            7     4 (average)
  8253                           ;	Chosen strategy is simple_byte
  8254  002FD2  5160               	movf	??_atoi& (0+255),w,b
  8255  002FD4  0A2B               	xorlw	43	; case 43
  8256  002FD6  B4D8               	btfsc	status,2,c
  8257  002FD8  EFD6  F017         	goto	l5569
  8258  002FDC  0A06               	xorlw	6	; case 45
  8259  002FDE  B4D8               	btfsc	status,2,c
  8260  002FE0  EFD2  F017         	goto	l5567
  8261  002FE4  EF10  F018         	goto	l5577
  8262  002FE8                     l5573:
  8263                           
  8264                           ; BSR set to: 0
  8265  002FE8  C06B  F01F         	movff	atoi@n,___wmul@multiplier
  8266  002FEC  C06C  F020         	movff	atoi@n+1,___wmul@multiplier+1
  8267  002FF0  0E00               	movlw	0
  8268  002FF2  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  8269  002FF4  0E0A               	movlw	10
  8270  002FF6  6E21               	movwf	___wmul@multiplicand^0,c
  8271  002FF8  EC78  F020         	call	___wmul	;wreg free
  8272  002FFC  C026  FFF6         	movff	atoi@s,tblptrl
  8273  003000  C027  FFF7         	movff	atoi@s+1,tblptrh
  8274  003004                     	if	0	;tblptru may be non-zero
  8275  003004                     	endif
  8276  003004                     	if	0	;tblptru may be non-zero
  8277  003004                     	endif
  8278  003004  0008               	tblrd		*
  8279  003006  50F5               	movf	tablat,w,c
  8280  003008  5E1F               	subwf	?___wmul^0,f,c
  8281  00300A  0E00               	movlw	0
  8282  00300C  5A20               	subwfb	(?___wmul+1)^0,f,c
  8283  00300E  0E30               	movlw	48
  8284  003010  241F               	addwf	?___wmul^0,w,c
  8285  003012  0100               	movlb	0	; () banked
  8286  003014  6F6B               	movwf	atoi@n& (0+255),b
  8287  003016  0E00               	movlw	0
  8288  003018  2020               	addwfc	(?___wmul+1)^0,w,c
  8289  00301A  6F6C               	movwf	(atoi@n+1)& (0+255),b
  8290  00301C  EFD6  F017         	goto	l5569
  8291  003020                     l5577:
  8292                           
  8293                           ; BSR set to: 0
  8294  003020  0ED0               	movlw	208
  8295  003022  6F60               	movwf	??_atoi& (0+255),b
  8296  003024  0EFF               	movlw	255
  8297  003026  6F61               	movwf	(??_atoi+1)& (0+255),b
  8298  003028  C026  FFF6         	movff	atoi@s,tblptrl
  8299  00302C  C027  FFF7         	movff	atoi@s+1,tblptrh
  8300  003030                     	if	0	;tblptru may be non-zero
  8301  003030                     	endif
  8302  003030                     	if	0	;tblptru may be non-zero
  8303  003030                     	endif
  8304  003030  0008               	tblrd		*
  8305  003032  50F5               	movf	tablat,w,c
  8306  003034  6F62               	movwf	(??_atoi+2)& (0+255),b
  8307  003036  6B63               	clrf	(??_atoi+3)& (0+255),b
  8308  003038  5160               	movf	??_atoi& (0+255),w,b
  8309  00303A  2762               	addwf	(??_atoi+2)& (0+255),f,b
  8310  00303C  5161               	movf	(??_atoi+1)& (0+255),w,b
  8311  00303E  2363               	addwfc	(??_atoi+3)& (0+255),f,b
  8312  003040  5163               	movf	(??_atoi+3)& (0+255),w,b
  8313  003042  E10A               	bnz	u7920
  8314  003044  0E0A               	movlw	10
  8315  003046  5D62               	subwf	(??_atoi+2)& (0+255),w,b
  8316  003048  A0D8               	btfss	status,0,c
  8317  00304A  EF29  F018         	goto	u7921
  8318  00304E  EF2C  F018         	goto	u7920
  8319  003052                     u7921:
  8320  003052  0E01               	movlw	1
  8321  003054  EF2D  F018         	goto	u7930
  8322  003058                     u7920:
  8323  003058  0E00               	movlw	0
  8324  00305A                     u7930:
  8325  00305A  6F68               	movwf	_atoi$1009& (0+255),b
  8326  00305C  6B69               	clrf	(_atoi$1009+1)& (0+255),b
  8327  00305E                     
  8328                           ; BSR set to: 0
  8329  00305E  5168               	movf	_atoi$1009& (0+255),w,b
  8330  003060  1169               	iorwf	(_atoi$1009+1)& (0+255),w,b
  8331  003062  A4D8               	btfss	status,2,c
  8332  003064  EF36  F018         	goto	u7941
  8333  003068  EF38  F018         	goto	u7940
  8334  00306C                     u7941:
  8335  00306C  EFF4  F017         	goto	l5573
  8336  003070                     u7940:
  8337  003070                     
  8338                           ; BSR set to: 0
  8339  003070  5164               	movf	atoi@neg& (0+255),w,b
  8340  003072  1165               	iorwf	(atoi@neg+1)& (0+255),w,b
  8341  003074  A4D8               	btfss	status,2,c
  8342  003076  EF3F  F018         	goto	u7951
  8343  00307A  EF41  F018         	goto	u7950
  8344  00307E                     u7951:
  8345  00307E  EF4F  F018         	goto	l984
  8346  003082                     u7950:
  8347  003082                     
  8348                           ; BSR set to: 0
  8349  003082  C06B  F060         	movff	atoi@n,??_atoi
  8350  003086  C06C  F061         	movff	atoi@n+1,??_atoi+1
  8351  00308A  1F60               	comf	??_atoi& (0+255),f,b
  8352  00308C  1F61               	comf	(??_atoi+1)& (0+255),f,b
  8353  00308E  4B60               	infsnz	??_atoi& (0+255),f,b
  8354  003090  2B61               	incf	(??_atoi+1)& (0+255),f,b
  8355  003092  C060  F026         	movff	??_atoi,?_atoi
  8356  003096  C061  F027         	movff	??_atoi+1,?_atoi+1
  8357  00309A  EF53  F018         	goto	l987
  8358  00309E                     l984:
  8359                           
  8360                           ; BSR set to: 0
  8361  00309E  C06B  F026         	movff	atoi@n,?_atoi
  8362  0030A2  C06C  F027         	movff	atoi@n+1,?_atoi+1
  8363  0030A6                     l987:
  8364                           
  8365                           ; BSR set to: 0
  8366  0030A6  0012               	return		;funcret
  8367  0030A8                     __end_of_atoi:
  8368                           	callstack 0
  8369                           
  8370 ;; *************** function _isspace *****************
  8371 ;; Defined at:
  8372 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;  c               2   30[COMRAM] int 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;		None
  8377 ;; Return value:  Size  Location     Type
  8378 ;;                  2   30[COMRAM] int 
  8379 ;; Registers used:
  8380 ;;		wreg, status,2, status,0
  8381 ;; Tracked objects:
  8382 ;;		On entry : 0/0
  8383 ;;		On exit  : 0/0
  8384 ;;		Unchanged: 0/0
  8385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8386 ;;      Params:         2       0       0       0       0       0       0       0       0
  8387 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8388 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8389 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8390 ;;Total ram usage:        7 bytes
  8391 ;; Hardware stack levels used: 1
  8392 ;; Hardware stack levels required when called: 4
  8393 ;; This function calls:
  8394 ;;		Nothing
  8395 ;; This function is called by:
  8396 ;;		_atoi
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text26
  8401  003E86                     __ptext26:
  8402                           	callstack 0
  8403  003E86                     _isspace:
  8404                           	callstack 22
  8405  003E86  0E01               	movlw	1
  8406  003E88  6E25               	movwf	_isspace$1038^0,c
  8407  003E8A  0E20               	movlw	32
  8408  003E8C  181F               	xorwf	isspace@c^0,w,c
  8409  003E8E  1020               	iorwf	(isspace@c+1)^0,w,c
  8410  003E90  B4D8               	btfsc	status,2,c
  8411  003E92  EF4D  F01F         	goto	u7331
  8412  003E96  EF4F  F01F         	goto	u7330
  8413  003E9A                     u7331:
  8414  003E9A  EF68  F01F         	goto	l5237
  8415  003E9E                     u7330:
  8416  003E9E  0EF7               	movlw	247
  8417  003EA0  6E21               	movwf	??_isspace^0,c
  8418  003EA2  0EFF               	movlw	255
  8419  003EA4  6E22               	movwf	(??_isspace+1)^0,c
  8420  003EA6  C01F  F023         	movff	isspace@c,??_isspace+2
  8421  003EAA  C020  F024         	movff	isspace@c+1,??_isspace+3
  8422  003EAE  5021               	movf	??_isspace^0,w,c
  8423  003EB0  2623               	addwf	(??_isspace+2)^0,f,c
  8424  003EB2  5022               	movf	(??_isspace+1)^0,w,c
  8425  003EB4  2224               	addwfc	(??_isspace+3)^0,f,c
  8426  003EB6  5024               	movf	(??_isspace+3)^0,w,c
  8427  003EB8  E109               	bnz	u7340
  8428  003EBA  0E05               	movlw	5
  8429  003EBC  5C23               	subwf	(??_isspace+2)^0,w,c
  8430  003EBE  A0D8               	btfss	status,0,c
  8431  003EC0  EF64  F01F         	goto	u7341
  8432  003EC4  EF66  F01F         	goto	u7340
  8433  003EC8                     u7341:
  8434  003EC8  EF68  F01F         	goto	l5237
  8435  003ECC                     u7340:
  8436  003ECC  0E00               	movlw	0
  8437  003ECE  6E25               	movwf	_isspace$1038^0,c
  8438  003ED0                     l5237:
  8439  003ED0  C025  F01F         	movff	_isspace$1038,?_isspace
  8440  003ED4  6A20               	clrf	(?_isspace+1)^0,c
  8441  003ED6  0012               	return		;funcret
  8442  003ED8                     __end_of_isspace:
  8443                           	callstack 0
  8444                           
  8445 ;; *************** function _isdigit *****************
  8446 ;; Defined at:
  8447 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  c               2   30[COMRAM] int 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;		None
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  2   30[COMRAM] int 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2, status,0
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8461 ;;      Params:         2       0       0       0       0       0       0       0       0
  8462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8463 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8464 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8465 ;;Total ram usage:        6 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 4
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_vfpfcnvrt
  8472 ;;		_atoi
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text27
  8477  0040B8                     __ptext27:
  8478                           	callstack 0
  8479  0040B8                     _isdigit:
  8480                           	callstack 23
  8481  0040B8  0ED0               	movlw	208
  8482  0040BA  6E21               	movwf	??_isdigit^0,c
  8483  0040BC  0EFF               	movlw	255
  8484  0040BE  6E22               	movwf	(??_isdigit+1)^0,c
  8485  0040C0  C01F  F023         	movff	isdigit@c,??_isdigit+2
  8486  0040C4  C020  F024         	movff	isdigit@c+1,??_isdigit+3
  8487  0040C8  5021               	movf	??_isdigit^0,w,c
  8488  0040CA  2623               	addwf	(??_isdigit+2)^0,f,c
  8489  0040CC  5022               	movf	(??_isdigit+1)^0,w,c
  8490  0040CE  2224               	addwfc	(??_isdigit+3)^0,f,c
  8491  0040D0  5024               	movf	(??_isdigit+3)^0,w,c
  8492  0040D2  E10A               	bnz	u7310
  8493  0040D4  0E0A               	movlw	10
  8494  0040D6  5C23               	subwf	(??_isdigit+2)^0,w,c
  8495  0040D8  A0D8               	btfss	status,0,c
  8496  0040DA  EF71  F020         	goto	u7311
  8497  0040DE  EF74  F020         	goto	u7310
  8498  0040E2                     u7311:
  8499  0040E2  0E01               	movlw	1
  8500  0040E4  EF75  F020         	goto	u7320
  8501  0040E8                     u7310:
  8502  0040E8  0E00               	movlw	0
  8503  0040EA                     u7320:
  8504  0040EA  6E1F               	movwf	?_isdigit^0,c
  8505  0040EC  6A20               	clrf	(?_isdigit+1)^0,c
  8506  0040EE  0012               	return		;funcret
  8507  0040F0                     __end_of_isdigit:
  8508                           	callstack 0
  8509                           
  8510 ;; *************** function ___wmul *****************
  8511 ;; Defined at:
  8512 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  multiplier      2   30[COMRAM] unsigned int 
  8515 ;;  multiplicand    2   32[COMRAM] unsigned int 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  product         2   34[COMRAM] unsigned int 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  2   30[COMRAM] unsigned int 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0, prodl, prodh
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8527 ;;      Params:         4       0       0       0       0       0       0       0       0
  8528 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8530 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8531 ;;Total ram usage:        6 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 4
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_atoi
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text28
  8542  0040F0                     __ptext28:
  8543                           	callstack 0
  8544  0040F0                     ___wmul:
  8545                           	callstack 22
  8546  0040F0  501F               	movf	___wmul@multiplier^0,w,c
  8547  0040F2  0221               	mulwf	___wmul@multiplicand^0,c
  8548  0040F4  CFF3 F023          	movff	prodl,___wmul@product
  8549  0040F8  CFF4 F024          	movff	prodh,___wmul@product+1
  8550  0040FC  501F               	movf	___wmul@multiplier^0,w,c
  8551  0040FE  0222               	mulwf	(___wmul@multiplicand+1)^0,c
  8552  004100  50F3               	movf	243,w,c
  8553  004102  2624               	addwf	(___wmul@product+1)^0,f,c
  8554  004104  5020               	movf	(___wmul@multiplier+1)^0,w,c
  8555  004106  0221               	mulwf	___wmul@multiplicand^0,c
  8556  004108  50F3               	movf	243,w,c
  8557  00410A  2624               	addwf	(___wmul@product+1)^0,f,c
  8558  00410C  C023  F01F         	movff	___wmul@product,?___wmul
  8559  004110  C024  F020         	movff	___wmul@product+1,?___wmul+1
  8560  004114  0012               	return		;funcret
  8561  004116                     __end_of___wmul:
  8562                           	callstack 0
  8563                           
  8564 ;; *************** function _limpa_lcd *****************
  8565 ;; Defined at:
  8566 ;;		line 26 in file "./lcd.intermed.h"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;		None
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  1    wreg      void 
  8573 ;; Registers used:
  8574 ;;		wreg, status,2, cstack
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8580 ;;      Params:         0       0       0       0       0       0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8583 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8584 ;;Total ram usage:        0 bytes
  8585 ;; Hardware stack levels used: 1
  8586 ;; Hardware stack levels required when called: 5
  8587 ;; This function calls:
  8588 ;;		_comando_lcd
  8589 ;; This function is called by:
  8590 ;;		_main
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text29
  8595  00417E                     __ptext29:
  8596                           	callstack 0
  8597  00417E                     _limpa_lcd:
  8598                           	callstack 25
  8599  00417E                     
  8600                           ;./lcd.intermed.h: 28:     comando_lcd(1);
  8601  00417E  0E00               	movlw	0
  8602  004180  6E20               	movwf	(comando_lcd@comando+1)^0,c
  8603  004182  0E01               	movlw	1
  8604  004184  6E1F               	movwf	comando_lcd@comando^0,c
  8605  004186  EC8B  F020         	call	_comando_lcd	;wreg free
  8606  00418A  0012               	return		;funcret
  8607  00418C                     __end_of_limpa_lcd:
  8608                           	callstack 0
  8609                           
  8610 ;; *************** function _comando_lcd *****************
  8611 ;; Defined at:
  8612 ;;		line 7 in file "./lcd.intermed.h"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  comando         2   30[COMRAM] unsigned int 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8626 ;;      Params:         2       0       0       0       0       0       0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8628 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8629 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8630 ;;Total ram usage:        3 bytes
  8631 ;; Hardware stack levels used: 1
  8632 ;; Hardware stack levels required when called: 4
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_limpa_lcd
  8637 ;;		_main
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           	psect	text30
  8642  004116                     __ptext30:
  8643                           	callstack 0
  8644  004116                     _comando_lcd:
  8645                           	callstack 25
  8646  004116                     
  8647                           ;./lcd.intermed.h: 7: void comando_lcd(unsigned int comando);./lcd.intermed.h: 8: {;./lc
      +                          d.intermed.h: 9:     PORTEbits.RE2 = 0;
  8648  004116  9484               	bcf	132,2,c	;volatile
  8649                           
  8650                           ;./lcd.intermed.h: 10:     PORTEbits.RE1 = 1;
  8651  004118  8284               	bsf	132,1,c	;volatile
  8652                           
  8653                           ;./lcd.intermed.h: 11:     PORTD = comando;
  8654  00411A  C01F  FF83         	movff	comando_lcd@comando,3971	;volatile
  8655  00411E                     
  8656                           ;./lcd.intermed.h: 12:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8657  00411E  0E03               	movlw	3
  8658  004120  6E21               	movwf	??_comando_lcd^0,c
  8659  004122  0E98               	movlw	152
  8660  004124                     u8257:
  8661  004124  2EE8               	decfsz	wreg,f,c
  8662  004126  D7FE               	bra	u8257
  8663  004128  2E21               	decfsz	??_comando_lcd^0,f,c
  8664  00412A  D7FC               	bra	u8257
  8665  00412C                     
  8666                           ;./lcd.intermed.h: 13:     PORTEbits.RE1 = 0;
  8667  00412C  9284               	bcf	132,1,c	;volatile
  8668  00412E  0012               	return		;funcret
  8669  004130                     __end_of_comando_lcd:
  8670                           	callstack 0
  8671                           
  8672 ;; *************** function _imprime_lcd *****************
  8673 ;; Defined at:
  8674 ;;		line 31 in file "./lcd.intermed.h"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  frase           2   34[COMRAM] PTR unsigned char 
  8677 ;;		 -> temperature(8), STR_3(12), STR_2(17), STR_1(17), 
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;  indice          2    2[BANK0 ] int 
  8680 ;;  tamanho         2    0[BANK0 ] int 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8690 ;;      Params:         2       0       0       0       0       0       0       0       0
  8691 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8692 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8693 ;;      Totals:         5       4       0       0       0       0       0       0       0
  8694 ;;Total ram usage:        9 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 5
  8697 ;; This function calls:
  8698 ;;		_dado_lcd
  8699 ;;		_strlen
  8700 ;; This function is called by:
  8701 ;;		_main
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text31
  8706  003BBC                     __ptext31:
  8707                           	callstack 0
  8708  003BBC                     _imprime_lcd:
  8709                           	callstack 25
  8710  003BBC                     
  8711                           ;./lcd.intermed.h: 31: void imprime_lcd(char frase[]);./lcd.intermed.h: 32: {;./lcd.inte
      +                          rmed.h: 33: int indice = 0;
  8712  003BBC  0E00               	movlw	0
  8713  003BBE  0100               	movlb	0	; () banked
  8714  003BC0  6F63               	movwf	(imprime_lcd@indice+1)& (0+255),b
  8715  003BC2  0E00               	movlw	0
  8716  003BC4  6F62               	movwf	imprime_lcd@indice& (0+255),b
  8717  003BC6                     
  8718                           ; BSR set to: 0
  8719                           ;./lcd.intermed.h: 34: int tamanho = strlen(frase);
  8720  003BC6  C023  F01F         	movff	imprime_lcd@frase,strlen@s
  8721  003BCA  C024  F020         	movff	imprime_lcd@frase+1,strlen@s+1
  8722  003BCE  EC6C  F01F         	call	_strlen	;wreg free
  8723  003BD2  C01F  F060         	movff	?_strlen,imprime_lcd@tamanho
  8724  003BD6  C020  F061         	movff	?_strlen+1,imprime_lcd@tamanho+1
  8725                           
  8726                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  8727  003BDA  EF0E  F01E         	goto	l5743
  8728  003BDE                     l5739:
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;./lcd.intermed.h: 36:     {;./lcd.intermed.h: 37: dado_lcd(frase[indice]);
  8732  003BDE  5162               	movf	imprime_lcd@indice& (0+255),w,b
  8733  003BE0  2423               	addwf	imprime_lcd@frase^0,w,c
  8734  003BE2  6E25               	movwf	??_imprime_lcd^0,c
  8735  003BE4  5163               	movf	(imprime_lcd@indice+1)& (0+255),w,b
  8736  003BE6  2024               	addwfc	(imprime_lcd@frase+1)^0,w,c
  8737  003BE8  6E26               	movwf	(??_imprime_lcd+1)^0,c
  8738  003BEA  C025  FFF6         	movff	??_imprime_lcd,tblptrl
  8739  003BEE  C026  FFF7         	movff	??_imprime_lcd+1,tblptrh
  8740  003BF2  6AF8               	clrf	tblptru,c
  8741  003BF4  0E07               	movlw	(high __ramtop+-1)
  8742  003BF6  64F7               	cpfsgt	tblptrh,c
  8743  003BF8  D003               	bra	u8217
  8744  003BFA  0008               	tblrd		*
  8745  003BFC  50F5               	movf	tablat,w,c
  8746  003BFE  D005               	bra	u8210
  8747  003C00                     u8217:
  8748  003C00  CFF6 FFE1          	movff	tblptrl,fsr1l
  8749  003C04  CFF7 FFE2          	movff	tblptrh,fsr1h
  8750  003C08  50E7               	movf	indf1,w,c
  8751  003C0A                     u8210:
  8752  003C0A  6E27               	movwf	(??_imprime_lcd+2)^0,c
  8753  003C0C  5027               	movf	(??_imprime_lcd+2)^0,w,c
  8754  003C0E  6E1F               	movwf	dado_lcd@dado^0,c
  8755  003C10  6A20               	clrf	(dado_lcd@dado+1)^0,c
  8756  003C12  EC98  F020         	call	_dado_lcd	;wreg free
  8757  003C16                     
  8758                           ;./lcd.intermed.h: 38: indice++;
  8759  003C16  0100               	movlb	0	; () banked
  8760  003C18  4B62               	infsnz	imprime_lcd@indice& (0+255),f,b
  8761  003C1A  2B63               	incf	(imprime_lcd@indice+1)& (0+255),f,b
  8762  003C1C                     l5743:
  8763                           
  8764                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  8765  003C1C  0100               	movlb	0	; () banked
  8766  003C1E  5160               	movf	imprime_lcd@tamanho& (0+255),w,b
  8767  003C20  5D62               	subwf	imprime_lcd@indice& (0+255),w,b
  8768  003C22  5163               	movf	(imprime_lcd@indice+1)& (0+255),w,b
  8769  003C24  0A80               	xorlw	128
  8770  003C26  6E25               	movwf	??_imprime_lcd^0,c
  8771  003C28  5161               	movf	(imprime_lcd@tamanho+1)& (0+255),w,b
  8772  003C2A  0A80               	xorlw	128
  8773  003C2C  5825               	subwfb	??_imprime_lcd^0,w,c
  8774  003C2E  A0D8               	btfss	status,0,c
  8775  003C30  EF1C  F01E         	goto	u8221
  8776  003C34  EF1E  F01E         	goto	u8220
  8777  003C38                     u8221:
  8778  003C38  EFEF  F01D         	goto	l5739
  8779  003C3C                     u8220:
  8780  003C3C                     
  8781                           ; BSR set to: 0
  8782  003C3C  0012               	return		;funcret
  8783  003C3E                     __end_of_imprime_lcd:
  8784                           	callstack 0
  8785                           
  8786 ;; *************** function _strlen *****************
  8787 ;; Defined at:
  8788 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8791 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
  8792 ;;		 -> STR_1(17), 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  a               2   32[COMRAM] PTR const unsigned char 
  8795 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
  8796 ;;		 -> STR_1(17), 
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  2   30[COMRAM] unsigned int 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8806 ;;      Params:         2       0       0       0       0       0       0       0       0
  8807 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8809 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8810 ;;Total ram usage:        4 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 4
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_imprime_lcd
  8817 ;;		_pad
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           	psect	text32
  8822  003ED8                     __ptext32:
  8823                           	callstack 0
  8824  003ED8                     _strlen:
  8825                           	callstack 21
  8826  003ED8  C01F  F021         	movff	strlen@s,strlen@a
  8827  003EDC  C020  F022         	movff	strlen@s+1,strlen@a+1
  8828  003EE0  EF74  F01F         	goto	l4469
  8829  003EE4                     l4467:
  8830  003EE4  4A1F               	infsnz	strlen@s^0,f,c
  8831  003EE6  2A20               	incf	(strlen@s+1)^0,f,c
  8832  003EE8                     l4469:
  8833  003EE8  C01F  FFF6         	movff	strlen@s,tblptrl
  8834  003EEC  C020  FFF7         	movff	strlen@s+1,tblptrh
  8835  003EF0  6AF8               	clrf	tblptru,c
  8836  003EF2  0E07               	movlw	(high __ramtop+-1)
  8837  003EF4  64F7               	cpfsgt	tblptrh,c
  8838  003EF6  D003               	bra	u5917
  8839  003EF8  0008               	tblrd		*
  8840  003EFA  50F5               	movf	tablat,w,c
  8841  003EFC  D005               	bra	u5910
  8842  003EFE                     u5917:
  8843  003EFE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8844  003F02  CFF7 FFE2          	movff	tblptrh,fsr1h
  8845  003F06  50E7               	movf	indf1,w,c
  8846  003F08                     u5910:
  8847  003F08  0900               	iorlw	0
  8848  003F0A  A4D8               	btfss	status,2,c
  8849  003F0C  EF8A  F01F         	goto	u5921
  8850  003F10  EF8C  F01F         	goto	u5920
  8851  003F14                     u5921:
  8852  003F14  EF72  F01F         	goto	l4467
  8853  003F18                     u5920:
  8854  003F18  5021               	movf	strlen@a^0,w,c
  8855  003F1A  5C1F               	subwf	strlen@s^0,w,c
  8856  003F1C  6E1F               	movwf	?_strlen^0,c
  8857  003F1E  5022               	movf	(strlen@a+1)^0,w,c
  8858  003F20  5820               	subwfb	(strlen@s+1)^0,w,c
  8859  003F22  6E20               	movwf	(?_strlen+1)^0,c
  8860  003F24  0012               	return		;funcret
  8861  003F26                     __end_of_strlen:
  8862                           	callstack 0
  8863                           
  8864 ;; *************** function _dado_lcd *****************
  8865 ;; Defined at:
  8866 ;;		line 16 in file "./lcd.intermed.h"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  dado            2   30[COMRAM] unsigned int 
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  1    wreg      void 
  8873 ;; Registers used:
  8874 ;;		wreg
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8880 ;;      Params:         2       0       0       0       0       0       0       0       0
  8881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8882 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8883 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8884 ;;Total ram usage:        3 bytes
  8885 ;; Hardware stack levels used: 1
  8886 ;; Hardware stack levels required when called: 4
  8887 ;; This function calls:
  8888 ;;		Nothing
  8889 ;; This function is called by:
  8890 ;;		_imprime_lcd
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           	psect	text33
  8895  004130                     __ptext33:
  8896                           	callstack 0
  8897  004130                     _dado_lcd:
  8898                           	callstack 25
  8899  004130                     
  8900                           ;./lcd.intermed.h: 16: void dado_lcd(unsigned int dado);./lcd.intermed.h: 17: {;./lcd.in
      +                          termed.h: 18:     PORTEbits.RE2 = 1;
  8901  004130  8484               	bsf	132,2,c	;volatile
  8902                           
  8903                           ;./lcd.intermed.h: 19:     PORTEbits.RE1 = 1;
  8904  004132  8284               	bsf	132,1,c	;volatile
  8905                           
  8906                           ;./lcd.intermed.h: 20:     PORTD = dado;
  8907  004134  C01F  FF83         	movff	dado_lcd@dado,3971	;volatile
  8908  004138                     
  8909                           ;./lcd.intermed.h: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8910  004138  0E03               	movlw	3
  8911  00413A  6E21               	movwf	??_dado_lcd^0,c
  8912  00413C  0E98               	movlw	152
  8913  00413E                     u8267:
  8914  00413E  2EE8               	decfsz	wreg,f,c
  8915  004140  D7FE               	bra	u8267
  8916  004142  2E21               	decfsz	??_dado_lcd^0,f,c
  8917  004144  D7FC               	bra	u8267
  8918  004146                     
  8919                           ;./lcd.intermed.h: 22:     PORTEbits.RE1 = 0;
  8920  004146  9284               	bcf	132,1,c	;volatile
  8921  004148  0012               	return		;funcret
  8922  00414A                     __end_of_dado_lcd:
  8923                           	callstack 0
  8924                           
  8925 ;; *************** function _isr *****************
  8926 ;; Defined at:
  8927 ;;		line 44 in file "lcd.frase.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8943 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8944 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8945 ;;Total ram usage:        6 bytes
  8946 ;; Hardware stack levels used: 1
  8947 ;; Hardware stack levels required when called: 3
  8948 ;; This function calls:
  8949 ;;		_alerta
  8950 ;;		_verificaOValor
  8951 ;;		i2___fladd
  8952 ;;		i2___flge
  8953 ;;		i2___flsub
  8954 ;; This function is called by:
  8955 ;;		Interrupt level 2
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	intcode
  8960  000008                     __pintcode:
  8961                           	callstack 0
  8962  000008                     _isr:
  8963                           	callstack 19
  8964                           
  8965                           ;incstack = 0
  8966  000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8967  00000A  EDB4  F016         	call	int_func,f	;refresh shadow registers
  8968                           
  8969                           	psect	intcode_body
  8970  002D68                     __pintcode_body:
  8971                           	callstack 19
  8972  002D68                     int_func:
  8973                           	callstack 19
  8974  002D68  0006               	pop		; remove dummy address from shadow register refresh
  8975  002D6A  CFE1 F019          	movff	fsr1l,??_isr
  8976  002D6E  CFE2 F01A          	movff	fsr1h,??_isr+1
  8977  002D72  CFF6 F01B          	movff	tblptrl,??_isr+2
  8978  002D76  CFF7 F01C          	movff	tblptrh,??_isr+3
  8979  002D7A  CFF8 F01D          	movff	tblptru,??_isr+4
  8980  002D7E  CFF5 F01E          	movff	tablat,??_isr+5
  8981  002D82                     
  8982                           ;lcd.frase.c: 46:     if(INTCON3bits.INT1IF==1) {
  8983  002D82  A0F0               	btfss	240,0,c	;volatile
  8984  002D84  EFC6  F016         	goto	i2u582_41
  8985  002D88  EFC8  F016         	goto	i2u582_40
  8986  002D8C                     i2u582_41:
  8987  002D8C  EF4D  F017         	goto	i2l4379
  8988  002D90                     i2u582_40:
  8989  002D90                     
  8990                           ;lcd.frase.c: 48:         INTCON3bits.INT1IF = 0;
  8991  002D90  90F0               	bcf	240,0,c	;volatile
  8992  002D92                     
  8993                           ;lcd.frase.c: 50:             if(temperatura>=50){
  8994  002D92  C033  F001         	movff	_temperatura,i2___flge@ff1
  8995  002D96  C034  F002         	movff	_temperatura+1,i2___flge@ff1+1
  8996  002D9A  C035  F003         	movff	_temperatura+2,i2___flge@ff1+2
  8997  002D9E  C036  F004         	movff	_temperatura+3,i2___flge@ff1+3
  8998  002DA2  0E00               	movlw	0
  8999  002DA4  6E05               	movwf	i2___flge@ff2^0,c
  9000  002DA6  0E00               	movlw	0
  9001  002DA8  6E06               	movwf	(i2___flge@ff2+1)^0,c
  9002  002DAA  0E48               	movlw	72
  9003  002DAC  6E07               	movwf	(i2___flge@ff2+2)^0,c
  9004  002DAE  0E42               	movlw	66
  9005  002DB0  6E08               	movwf	(i2___flge@ff2+3)^0,c
  9006  002DB2  EC5A  F019         	call	i2___flge	;wreg free
  9007  002DB6  A0D8               	btfss	status,0,c
  9008  002DB8  EFE0  F016         	goto	i2u583_41
  9009  002DBC  EFE2  F016         	goto	i2u583_40
  9010  002DC0                     i2u583_41:
  9011  002DC0  EFFE  F016         	goto	i2l4373
  9012  002DC4                     i2u583_40:
  9013  002DC4                     
  9014                           ;lcd.frase.c: 51:                 temperatura--;
  9015  002DC4  C033  F011         	movff	_temperatura,i2___flsub@b
  9016  002DC8  C034  F012         	movff	_temperatura+1,i2___flsub@b+1
  9017  002DCC  C035  F013         	movff	_temperatura+2,i2___flsub@b+2
  9018  002DD0  C036  F014         	movff	_temperatura+3,i2___flsub@b+3
  9019  002DD4  0E00               	movlw	0
  9020  002DD6  6E15               	movwf	i2___flsub@a^0,c
  9021  002DD8  0E00               	movlw	0
  9022  002DDA  6E16               	movwf	(i2___flsub@a+1)^0,c
  9023  002DDC  0E80               	movlw	128
  9024  002DDE  6E17               	movwf	(i2___flsub@a+2)^0,c
  9025  002DE0  0E3F               	movlw	63
  9026  002DE2  6E18               	movwf	(i2___flsub@a+3)^0,c
  9027  002DE4  EC01  F020         	call	i2___flsub	;wreg free
  9028  002DE8  C011  F033         	movff	?i2___flsub,_temperatura
  9029  002DEC  C012  F034         	movff	?i2___flsub+1,_temperatura+1
  9030  002DF0  C013  F035         	movff	?i2___flsub+2,_temperatura+2
  9031  002DF4  C014  F036         	movff	?i2___flsub+3,_temperatura+3
  9032                           
  9033                           ;lcd.frase.c: 53:             } else if(temperatura <= 25){
  9034  002DF8  EF4D  F017         	goto	i2l4379
  9035  002DFC                     i2l4373:
  9036  002DFC  0E00               	movlw	0
  9037  002DFE  6E01               	movwf	i2___flge@ff1^0,c
  9038  002E00  0E00               	movlw	0
  9039  002E02  6E02               	movwf	(i2___flge@ff1+1)^0,c
  9040  002E04  0EC8               	movlw	200
  9041  002E06  6E03               	movwf	(i2___flge@ff1+2)^0,c
  9042  002E08  0E41               	movlw	65
  9043  002E0A  6E04               	movwf	(i2___flge@ff1+3)^0,c
  9044  002E0C  C033  F005         	movff	_temperatura,i2___flge@ff2
  9045  002E10  C034  F006         	movff	_temperatura+1,i2___flge@ff2+1
  9046  002E14  C035  F007         	movff	_temperatura+2,i2___flge@ff2+2
  9047  002E18  C036  F008         	movff	_temperatura+3,i2___flge@ff2+3
  9048  002E1C  EC5A  F019         	call	i2___flge	;wreg free
  9049  002E20  A0D8               	btfss	status,0,c
  9050  002E22  EF15  F017         	goto	i2u584_41
  9051  002E26  EF17  F017         	goto	i2u584_40
  9052  002E2A                     i2u584_41:
  9053  002E2A  EF33  F017         	goto	i2l4377
  9054  002E2E                     i2u584_40:
  9055  002E2E                     
  9056                           ;lcd.frase.c: 54:                 temperatura++;
  9057  002E2E  C033  F001         	movff	_temperatura,i2___fladd@b
  9058  002E32  C034  F002         	movff	_temperatura+1,i2___fladd@b+1
  9059  002E36  C035  F003         	movff	_temperatura+2,i2___fladd@b+2
  9060  002E3A  C036  F004         	movff	_temperatura+3,i2___fladd@b+3
  9061  002E3E  0E00               	movlw	0
  9062  002E40  6E05               	movwf	i2___fladd@a^0,c
  9063  002E42  0E00               	movlw	0
  9064  002E44  6E06               	movwf	(i2___fladd@a+1)^0,c
  9065  002E46  0E80               	movlw	128
  9066  002E48  6E07               	movwf	(i2___fladd@a+2)^0,c
  9067  002E4A  0E3F               	movlw	63
  9068  002E4C  6E08               	movwf	(i2___fladd@a+3)^0,c
  9069  002E4E  EC65  F00F         	call	i2___fladd	;wreg free
  9070  002E52  C001  F033         	movff	?i2___fladd,_temperatura
  9071  002E56  C002  F034         	movff	?i2___fladd+1,_temperatura+1
  9072  002E5A  C003  F035         	movff	?i2___fladd+2,_temperatura+2
  9073  002E5E  C004  F036         	movff	?i2___fladd+3,_temperatura+3
  9074                           
  9075                           ;lcd.frase.c: 55:             } else {
  9076  002E62  EF4D  F017         	goto	i2l4379
  9077  002E66                     i2l4377:
  9078                           
  9079                           ;lcd.frase.c: 56:                 temperatura--;
  9080  002E66  C033  F011         	movff	_temperatura,i2___flsub@b
  9081  002E6A  C034  F012         	movff	_temperatura+1,i2___flsub@b+1
  9082  002E6E  C035  F013         	movff	_temperatura+2,i2___flsub@b+2
  9083  002E72  C036  F014         	movff	_temperatura+3,i2___flsub@b+3
  9084  002E76  0E00               	movlw	0
  9085  002E78  6E15               	movwf	i2___flsub@a^0,c
  9086  002E7A  0E00               	movlw	0
  9087  002E7C  6E16               	movwf	(i2___flsub@a+1)^0,c
  9088  002E7E  0E80               	movlw	128
  9089  002E80  6E17               	movwf	(i2___flsub@a+2)^0,c
  9090  002E82  0E3F               	movlw	63
  9091  002E84  6E18               	movwf	(i2___flsub@a+3)^0,c
  9092  002E86  EC01  F020         	call	i2___flsub	;wreg free
  9093  002E8A  C011  F033         	movff	?i2___flsub,_temperatura
  9094  002E8E  C012  F034         	movff	?i2___flsub+1,_temperatura+1
  9095  002E92  C013  F035         	movff	?i2___flsub+2,_temperatura+2
  9096  002E96  C014  F036         	movff	?i2___flsub+3,_temperatura+3
  9097  002E9A                     i2l4379:
  9098                           
  9099                           ;lcd.frase.c: 62:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  9100  002E9A  AAF2               	btfss	242,5,c	;volatile
  9101  002E9C  EF52  F017         	goto	i2u585_41
  9102  002EA0  EF54  F017         	goto	i2u585_40
  9103  002EA4                     i2u585_41:
  9104  002EA4  EF7C  F017         	goto	i2l76
  9105  002EA8                     i2u585_40:
  9106  002EA8  A4F2               	btfss	242,2,c	;volatile
  9107  002EAA  EF59  F017         	goto	i2u586_41
  9108  002EAE  EF5B  F017         	goto	i2u586_40
  9109  002EB2                     i2u586_41:
  9110  002EB2  EF7C  F017         	goto	i2l76
  9111  002EB6                     i2u586_40:
  9112  002EB6                     
  9113                           ;lcd.frase.c: 64:         alerta();
  9114  002EB6  ECD8  F01C         	call	_alerta	;wreg free
  9115  002EBA                     
  9116                           ;lcd.frase.c: 65:         verificaOValor();
  9117  002EBA  EC44  F01B         	call	_verificaOValor	;wreg free
  9118  002EBE                     
  9119                           ;lcd.frase.c: 67:         temperatura = temperatura - 0.01;
  9120  002EBE  C033  F001         	movff	_temperatura,i2___fladd@b
  9121  002EC2  C034  F002         	movff	_temperatura+1,i2___fladd@b+1
  9122  002EC6  C035  F003         	movff	_temperatura+2,i2___fladd@b+2
  9123  002ECA  C036  F004         	movff	_temperatura+3,i2___fladd@b+3
  9124  002ECE  0E0A               	movlw	10
  9125  002ED0  6E05               	movwf	i2___fladd@a^0,c
  9126  002ED2  0ED7               	movlw	215
  9127  002ED4  6E06               	movwf	(i2___fladd@a+1)^0,c
  9128  002ED6  0E23               	movlw	35
  9129  002ED8  6E07               	movwf	(i2___fladd@a+2)^0,c
  9130  002EDA  0EBC               	movlw	188
  9131  002EDC  6E08               	movwf	(i2___fladd@a+3)^0,c
  9132  002EDE  EC65  F00F         	call	i2___fladd	;wreg free
  9133  002EE2  C001  F033         	movff	?i2___fladd,_temperatura
  9134  002EE6  C002  F034         	movff	?i2___fladd+1,_temperatura+1
  9135  002EEA  C003  F035         	movff	?i2___fladd+2,_temperatura+2
  9136  002EEE  C004  F036         	movff	?i2___fladd+3,_temperatura+3
  9137  002EF2                     
  9138                           ;lcd.frase.c: 69:   TMR0L = 5;
  9139  002EF2  0E05               	movlw	5
  9140  002EF4  6ED6               	movwf	214,c	;volatile
  9141  002EF6                     
  9142                           ;lcd.frase.c: 71:         INTCONbits.TMR0IF = 0;
  9143  002EF6  94F2               	bcf	242,2,c	;volatile
  9144  002EF8                     i2l76:
  9145  002EF8  C01E  FFF5         	movff	??_isr+5,tablat
  9146  002EFC  C01D  FFF8         	movff	??_isr+4,tblptru
  9147  002F00  C01C  FFF7         	movff	??_isr+3,tblptrh
  9148  002F04  C01B  FFF6         	movff	??_isr+2,tblptrl
  9149  002F08  C01A  FFE2         	movff	??_isr+1,fsr1h
  9150  002F0C  C019  FFE1         	movff	??_isr,fsr1l
  9151  002F10  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9152  002F12  0011               	retfie		f
  9153  002F14                     __end_of_isr:
  9154                           	callstack 0
  9155                           
  9156 ;; *************** function _verificaOValor *****************
  9157 ;; Defined at:
  9158 ;;		line 36 in file "lcd.frase.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;		None
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1    wreg      void 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2, status,0, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9172 ;;      Params:         0       0       0       0       0       0       0       0       0
  9173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9175 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9176 ;;Total ram usage:        0 bytes
  9177 ;; Hardware stack levels used: 1
  9178 ;; Hardware stack levels required when called: 2
  9179 ;; This function calls:
  9180 ;;		i2___fladd
  9181 ;;		i2___flge
  9182 ;;		i2___flsub
  9183 ;; This function is called by:
  9184 ;;		_isr
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text35
  9189  003688                     __ptext35:
  9190                           	callstack 0
  9191  003688                     _verificaOValor:
  9192                           	callstack 19
  9193  003688                     
  9194                           ;lcd.frase.c: 37:     if(temperatura>=50){
  9195  003688  C033  F001         	movff	_temperatura,i2___flge@ff1
  9196  00368C  C034  F002         	movff	_temperatura+1,i2___flge@ff1+1
  9197  003690  C035  F003         	movff	_temperatura+2,i2___flge@ff1+2
  9198  003694  C036  F004         	movff	_temperatura+3,i2___flge@ff1+3
  9199  003698  0E00               	movlw	0
  9200  00369A  6E05               	movwf	i2___flge@ff2^0,c
  9201  00369C  0E00               	movlw	0
  9202  00369E  6E06               	movwf	(i2___flge@ff2+1)^0,c
  9203  0036A0  0E48               	movlw	72
  9204  0036A2  6E07               	movwf	(i2___flge@ff2+2)^0,c
  9205  0036A4  0E42               	movlw	66
  9206  0036A6  6E08               	movwf	(i2___flge@ff2+3)^0,c
  9207  0036A8  EC5A  F019         	call	i2___flge	;wreg free
  9208  0036AC  A0D8               	btfss	status,0,c
  9209  0036AE  EF5B  F01B         	goto	i2u580_41
  9210  0036B2  EF5D  F01B         	goto	i2u580_40
  9211  0036B6                     i2u580_41:
  9212  0036B6  EF79  F01B         	goto	i2l4349
  9213  0036BA                     i2u580_40:
  9214  0036BA                     
  9215                           ;lcd.frase.c: 38:                 temperatura--;
  9216  0036BA  C033  F011         	movff	_temperatura,i2___flsub@b
  9217  0036BE  C034  F012         	movff	_temperatura+1,i2___flsub@b+1
  9218  0036C2  C035  F013         	movff	_temperatura+2,i2___flsub@b+2
  9219  0036C6  C036  F014         	movff	_temperatura+3,i2___flsub@b+3
  9220  0036CA  0E00               	movlw	0
  9221  0036CC  6E15               	movwf	i2___flsub@a^0,c
  9222  0036CE  0E00               	movlw	0
  9223  0036D0  6E16               	movwf	(i2___flsub@a+1)^0,c
  9224  0036D2  0E80               	movlw	128
  9225  0036D4  6E17               	movwf	(i2___flsub@a+2)^0,c
  9226  0036D6  0E3F               	movlw	63
  9227  0036D8  6E18               	movwf	(i2___flsub@a+3)^0,c
  9228  0036DA  EC01  F020         	call	i2___flsub	;wreg free
  9229  0036DE  C011  F033         	movff	?i2___flsub,_temperatura
  9230  0036E2  C012  F034         	movff	?i2___flsub+1,_temperatura+1
  9231  0036E6  C013  F035         	movff	?i2___flsub+2,_temperatura+2
  9232  0036EA  C014  F036         	movff	?i2___flsub+3,_temperatura+3
  9233                           
  9234                           ;lcd.frase.c: 39:             } else if(temperatura <= 25){
  9235  0036EE  EFAC  F01B         	goto	i2l65
  9236  0036F2                     i2l4349:
  9237  0036F2  0E00               	movlw	0
  9238  0036F4  6E01               	movwf	i2___flge@ff1^0,c
  9239  0036F6  0E00               	movlw	0
  9240  0036F8  6E02               	movwf	(i2___flge@ff1+1)^0,c
  9241  0036FA  0EC8               	movlw	200
  9242  0036FC  6E03               	movwf	(i2___flge@ff1+2)^0,c
  9243  0036FE  0E41               	movlw	65
  9244  003700  6E04               	movwf	(i2___flge@ff1+3)^0,c
  9245  003702  C033  F005         	movff	_temperatura,i2___flge@ff2
  9246  003706  C034  F006         	movff	_temperatura+1,i2___flge@ff2+1
  9247  00370A  C035  F007         	movff	_temperatura+2,i2___flge@ff2+2
  9248  00370E  C036  F008         	movff	_temperatura+3,i2___flge@ff2+3
  9249  003712  EC5A  F019         	call	i2___flge	;wreg free
  9250  003716  A0D8               	btfss	status,0,c
  9251  003718  EF90  F01B         	goto	i2u581_41
  9252  00371C  EF92  F01B         	goto	i2u581_40
  9253  003720                     i2u581_41:
  9254  003720  EFAC  F01B         	goto	i2l65
  9255  003724                     i2u581_40:
  9256  003724                     
  9257                           ;lcd.frase.c: 40:                 temperatura++;
  9258  003724  C033  F001         	movff	_temperatura,i2___fladd@b
  9259  003728  C034  F002         	movff	_temperatura+1,i2___fladd@b+1
  9260  00372C  C035  F003         	movff	_temperatura+2,i2___fladd@b+2
  9261  003730  C036  F004         	movff	_temperatura+3,i2___fladd@b+3
  9262  003734  0E00               	movlw	0
  9263  003736  6E05               	movwf	i2___fladd@a^0,c
  9264  003738  0E00               	movlw	0
  9265  00373A  6E06               	movwf	(i2___fladd@a+1)^0,c
  9266  00373C  0E80               	movlw	128
  9267  00373E  6E07               	movwf	(i2___fladd@a+2)^0,c
  9268  003740  0E3F               	movlw	63
  9269  003742  6E08               	movwf	(i2___fladd@a+3)^0,c
  9270  003744  EC65  F00F         	call	i2___fladd	;wreg free
  9271  003748  C001  F033         	movff	?i2___fladd,_temperatura
  9272  00374C  C002  F034         	movff	?i2___fladd+1,_temperatura+1
  9273  003750  C003  F035         	movff	?i2___fladd+2,_temperatura+2
  9274  003754  C004  F036         	movff	?i2___fladd+3,_temperatura+3
  9275  003758                     i2l65:
  9276  003758  0012               	return		;funcret
  9277  00375A                     __end_of_verificaOValor:
  9278                           	callstack 0
  9279                           
  9280 ;; *************** function i2___flsub *****************
  9281 ;; Defined at:
  9282 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;  b               4   16[COMRAM] void 
  9285 ;;  a               4   20[COMRAM] void 
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  4   16[COMRAM] void 
  9290 ;; Registers used:
  9291 ;;		wreg, status,2, status,0, cstack
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9297 ;;      Params:         8       0       0       0       0       0       0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9300 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9301 ;;Total ram usage:        8 bytes
  9302 ;; Hardware stack levels used: 1
  9303 ;; Hardware stack levels required when called: 1
  9304 ;; This function calls:
  9305 ;;		i2___fladd
  9306 ;; This function is called by:
  9307 ;;		_verificaOValor
  9308 ;;		_isr
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text36
  9313  004002                     __ptext36:
  9314                           	callstack 0
  9315  004002                     i2___flsub:
  9316                           	callstack 20
  9317  004002  0E00               	movlw	0
  9318  004004  1A15               	xorwf	i2___flsub@a^0,f,c
  9319  004006  0E00               	movlw	0
  9320  004008  1A16               	xorwf	(i2___flsub@a+1)^0,f,c
  9321  00400A  0E00               	movlw	0
  9322  00400C  1A17               	xorwf	(i2___flsub@a+2)^0,f,c
  9323  00400E  0E80               	movlw	128
  9324  004010  1A18               	xorwf	(i2___flsub@a+3)^0,f,c
  9325  004012  C011  F001         	movff	i2___flsub@b,i2___fladd@b
  9326  004016  C012  F002         	movff	i2___flsub@b+1,i2___fladd@b+1
  9327  00401A  C013  F003         	movff	i2___flsub@b+2,i2___fladd@b+2
  9328  00401E  C014  F004         	movff	i2___flsub@b+3,i2___fladd@b+3
  9329  004022  C015  F005         	movff	i2___flsub@a,i2___fladd@a
  9330  004026  C016  F006         	movff	i2___flsub@a+1,i2___fladd@a+1
  9331  00402A  C017  F007         	movff	i2___flsub@a+2,i2___fladd@a+2
  9332  00402E  C018  F008         	movff	i2___flsub@a+3,i2___fladd@a+3
  9333  004032  EC65  F00F         	call	i2___fladd	;wreg free
  9334  004036  C001  F011         	movff	?i2___fladd,?i2___flsub
  9335  00403A  C002  F012         	movff	?i2___fladd+1,?i2___flsub+1
  9336  00403E  C003  F013         	movff	?i2___fladd+2,?i2___flsub+2
  9337  004042  C004  F014         	movff	?i2___fladd+3,?i2___flsub+3
  9338  004046  0012               	return		;funcret
  9339  004048                     __end_ofi2___flsub:
  9340                           	callstack 0
  9341                           
  9342 ;; *************** function i2___fladd *****************
  9343 ;; Defined at:
  9344 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  b               4    0[COMRAM] void 
  9347 ;;  a               4    4[COMRAM] void 
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;  grs             1   15[COMRAM] unsigned char 
  9350 ;;  bexp            1   14[COMRAM] unsigned char 
  9351 ;;  aexp            1   13[COMRAM] unsigned char 
  9352 ;;  signs           1   12[COMRAM] unsigned char 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  4    0[COMRAM] unsigned char 
  9355 ;; Registers used:
  9356 ;;		wreg, status,2, status,0
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9362 ;;      Params:         8       0       0       0       0       0       0       0       0
  9363 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9364 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9365 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9366 ;;Total ram usage:       16 bytes
  9367 ;; Hardware stack levels used: 1
  9368 ;; This function calls:
  9369 ;;		Nothing
  9370 ;; This function is called by:
  9371 ;;		_verificaOValor
  9372 ;;		_isr
  9373 ;;		i2___flsub
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text37
  9378  001ECA                     __ptext37:
  9379                           	callstack 0
  9380  001ECA                     i2___fladd:
  9381                           	callstack 20
  9382  001ECA  5004               	movf	(i2___fladd@b+3)^0,w,c
  9383  001ECC  0B80               	andlw	128
  9384  001ECE  6E0D               	movwf	i2___fladd@signs^0,c
  9385  001ED0  5004               	movf	(i2___fladd@b+3)^0,w,c
  9386  001ED2  2404               	addwf	(i2___fladd@b+3)^0,w,c
  9387  001ED4  6E0F               	movwf	i2___fladd@bexp^0,c
  9388  001ED6  AE03               	btfss	(i2___fladd@b+2)^0,7,c
  9389  001ED8  EF70  F00F         	goto	i2u527_41
  9390  001EDC  EF72  F00F         	goto	i2u527_40
  9391  001EE0                     i2u527_41:
  9392  001EE0  EF73  F00F         	goto	i2l4051
  9393  001EE4                     i2u527_40:
  9394  001EE4  800F               	bsf	i2___fladd@bexp^0,0,c
  9395  001EE6                     i2l4051:
  9396  001EE6  500F               	movf	i2___fladd@bexp^0,w,c
  9397  001EE8  B4D8               	btfsc	status,2,c
  9398  001EEA  EF79  F00F         	goto	i2u528_41
  9399  001EEE  EF7B  F00F         	goto	i2u528_40
  9400  001EF2                     i2u528_41:
  9401  001EF2  EF90  F00F         	goto	i2l4061
  9402  001EF6                     i2u528_40:
  9403  001EF6  280F               	incf	i2___fladd@bexp^0,w,c
  9404  001EF8  A4D8               	btfss	status,2,c
  9405  001EFA  EF81  F00F         	goto	i2u529_41
  9406  001EFE  EF83  F00F         	goto	i2u529_40
  9407  001F02                     i2u529_41:
  9408  001F02  EF8B  F00F         	goto	i2l4057
  9409  001F06                     i2u529_40:
  9410  001F06  0E00               	movlw	0
  9411  001F08  6E01               	movwf	i2___fladd@b^0,c
  9412  001F0A  0E00               	movlw	0
  9413  001F0C  6E02               	movwf	(i2___fladd@b+1)^0,c
  9414  001F0E  0E00               	movlw	0
  9415  001F10  6E03               	movwf	(i2___fladd@b+2)^0,c
  9416  001F12  0E00               	movlw	0
  9417  001F14  6E04               	movwf	(i2___fladd@b+3)^0,c
  9418  001F16                     i2l4057:
  9419  001F16  8E03               	bsf	(i2___fladd@b+2)^0,7,c
  9420  001F18  0E00               	movlw	0
  9421  001F1A  6E04               	movwf	(i2___fladd@b+3)^0,c
  9422  001F1C  EF98  F00F         	goto	i2l4063
  9423  001F20                     i2l4061:
  9424  001F20  0E00               	movlw	0
  9425  001F22  6E01               	movwf	i2___fladd@b^0,c
  9426  001F24  0E00               	movlw	0
  9427  001F26  6E02               	movwf	(i2___fladd@b+1)^0,c
  9428  001F28  0E00               	movlw	0
  9429  001F2A  6E03               	movwf	(i2___fladd@b+2)^0,c
  9430  001F2C  0E00               	movlw	0
  9431  001F2E  6E04               	movwf	(i2___fladd@b+3)^0,c
  9432  001F30                     i2l4063:
  9433  001F30  5008               	movf	(i2___fladd@a+3)^0,w,c
  9434  001F32  0B80               	andlw	128
  9435  001F34  6E0E               	movwf	i2___fladd@aexp^0,c
  9436  001F36  500D               	movf	i2___fladd@signs^0,w,c
  9437  001F38  180E               	xorwf	i2___fladd@aexp^0,w,c
  9438  001F3A  B4D8               	btfsc	status,2,c
  9439  001F3C  EFA2  F00F         	goto	i2u530_41
  9440  001F40  EFA4  F00F         	goto	i2u530_40
  9441  001F44                     i2u530_41:
  9442  001F44  EFA5  F00F         	goto	i2l4069
  9443  001F48                     i2u530_40:
  9444  001F48  8C0D               	bsf	i2___fladd@signs^0,6,c
  9445  001F4A                     i2l4069:
  9446  001F4A  5008               	movf	(i2___fladd@a+3)^0,w,c
  9447  001F4C  2408               	addwf	(i2___fladd@a+3)^0,w,c
  9448  001F4E  6E0E               	movwf	i2___fladd@aexp^0,c
  9449  001F50  AE07               	btfss	(i2___fladd@a+2)^0,7,c
  9450  001F52  EFAD  F00F         	goto	i2u531_41
  9451  001F56  EFAF  F00F         	goto	i2u531_40
  9452  001F5A                     i2u531_41:
  9453  001F5A  EFB0  F00F         	goto	i2l4075
  9454  001F5E                     i2u531_40:
  9455  001F5E  800E               	bsf	i2___fladd@aexp^0,0,c
  9456  001F60                     i2l4075:
  9457  001F60  500E               	movf	i2___fladd@aexp^0,w,c
  9458  001F62  B4D8               	btfsc	status,2,c
  9459  001F64  EFB6  F00F         	goto	i2u532_41
  9460  001F68  EFB8  F00F         	goto	i2u532_40
  9461  001F6C                     i2u532_41:
  9462  001F6C  EFCD  F00F         	goto	i2l4085
  9463  001F70                     i2u532_40:
  9464  001F70  280E               	incf	i2___fladd@aexp^0,w,c
  9465  001F72  A4D8               	btfss	status,2,c
  9466  001F74  EFBE  F00F         	goto	i2u533_41
  9467  001F78  EFC0  F00F         	goto	i2u533_40
  9468  001F7C                     i2u533_41:
  9469  001F7C  EFC8  F00F         	goto	i2l4081
  9470  001F80                     i2u533_40:
  9471  001F80  0E00               	movlw	0
  9472  001F82  6E05               	movwf	i2___fladd@a^0,c
  9473  001F84  0E00               	movlw	0
  9474  001F86  6E06               	movwf	(i2___fladd@a+1)^0,c
  9475  001F88  0E00               	movlw	0
  9476  001F8A  6E07               	movwf	(i2___fladd@a+2)^0,c
  9477  001F8C  0E00               	movlw	0
  9478  001F8E  6E08               	movwf	(i2___fladd@a+3)^0,c
  9479  001F90                     i2l4081:
  9480  001F90  8E07               	bsf	(i2___fladd@a+2)^0,7,c
  9481  001F92  0E00               	movlw	0
  9482  001F94  6E08               	movwf	(i2___fladd@a+3)^0,c
  9483  001F96  EFD5  F00F         	goto	i2l4087
  9484  001F9A                     i2l4085:
  9485  001F9A  0E00               	movlw	0
  9486  001F9C  6E05               	movwf	i2___fladd@a^0,c
  9487  001F9E  0E00               	movlw	0
  9488  001FA0  6E06               	movwf	(i2___fladd@a+1)^0,c
  9489  001FA2  0E00               	movlw	0
  9490  001FA4  6E07               	movwf	(i2___fladd@a+2)^0,c
  9491  001FA6  0E00               	movlw	0
  9492  001FA8  6E08               	movwf	(i2___fladd@a+3)^0,c
  9493  001FAA                     i2l4087:
  9494  001FAA  500F               	movf	i2___fladd@bexp^0,w,c
  9495  001FAC  5C0E               	subwf	i2___fladd@aexp^0,w,c
  9496  001FAE  B0D8               	btfsc	status,0,c
  9497  001FB0  EFDC  F00F         	goto	i2u534_41
  9498  001FB4  EFDE  F00F         	goto	i2u534_40
  9499  001FB8                     i2u534_41:
  9500  001FB8  EF05  F010         	goto	i2l4123
  9501  001FBC                     i2u534_40:
  9502  001FBC  AC0D               	btfss	i2___fladd@signs^0,6,c
  9503  001FBE  EFE3  F00F         	goto	i2u535_41
  9504  001FC2  EFE5  F00F         	goto	i2u535_40
  9505  001FC6                     i2u535_41:
  9506  001FC6  EFE7  F00F         	goto	i2l4093
  9507  001FCA                     i2u535_40:
  9508  001FCA  0E80               	movlw	128
  9509  001FCC  1A0D               	xorwf	i2___fladd@signs^0,f,c
  9510  001FCE                     i2l4093:
  9511  001FCE  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
  9512  001FD2  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
  9513  001FD6  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
  9514  001FDA  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
  9515  001FDE  C005  F001         	movff	i2___fladd@a,i2___fladd@b
  9516  001FE2  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
  9517  001FE6  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
  9518  001FEA  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
  9519  001FEE  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
  9520  001FF2  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
  9521  001FF6  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
  9522  001FFA  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
  9523  001FFE  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
  9524  002002  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
  9525  002006  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
  9526  00200A                     i2l4123:
  9527  00200A  0E00               	movlw	0
  9528  00200C  6E10               	movwf	i2___fladd@grs^0,c
  9529  00200E  500F               	movf	i2___fladd@bexp^0,w,c
  9530  002010  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
  9531  002014  6A0A               	clrf	(??i2___fladd+1)^0,c
  9532  002016  5E09               	subwf	??i2___fladd^0,f,c
  9533  002018  0E00               	movlw	0
  9534  00201A  5A0A               	subwfb	(??i2___fladd+1)^0,f,c
  9535  00201C  BE0A               	btfsc	(??i2___fladd+1)^0,7,c
  9536  00201E  EF1A  F010         	goto	i2u536_41
  9537  002022  500A               	movf	(??i2___fladd+1)^0,w,c
  9538  002024  E109               	bnz	i2u536_40
  9539  002026  0E1A               	movlw	26
  9540  002028  5C09               	subwf	??i2___fladd^0,w,c
  9541  00202A  A0D8               	btfss	status,0,c
  9542  00202C  EF1A  F010         	goto	i2u536_41
  9543  002030  EF1C  F010         	goto	i2u536_40
  9544  002034                     i2u536_41:
  9545  002034  EF53  F010         	goto	i2l616
  9546  002038                     i2u536_40:
  9547  002038  5001               	movf	i2___fladd@b^0,w,c
  9548  00203A  1002               	iorwf	(i2___fladd@b+1)^0,w,c
  9549  00203C  1003               	iorwf	(i2___fladd@b+2)^0,w,c
  9550  00203E  1004               	iorwf	(i2___fladd@b+3)^0,w,c
  9551  002040  A4D8               	btfss	status,2,c
  9552  002042  EF25  F010         	goto	i2u537_41
  9553  002046  EF28  F010         	goto	i2u537_40
  9554  00204A                     i2u537_41:
  9555  00204A  0E01               	movlw	1
  9556  00204C  EF29  F010         	goto	i2u538_40
  9557  002050                     i2u537_40:
  9558  002050  0E00               	movlw	0
  9559  002052                     i2u538_40:
  9560  002052  6E10               	movwf	i2___fladd@grs^0,c
  9561  002054  0E00               	movlw	0
  9562  002056  6E01               	movwf	i2___fladd@b^0,c
  9563  002058  0E00               	movlw	0
  9564  00205A  6E02               	movwf	(i2___fladd@b+1)^0,c
  9565  00205C  0E00               	movlw	0
  9566  00205E  6E03               	movwf	(i2___fladd@b+2)^0,c
  9567  002060  0E00               	movlw	0
  9568  002062  6E04               	movwf	(i2___fladd@b+3)^0,c
  9569  002064  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
  9570  002068  EF5C  F010         	goto	i2l615
  9571  00206C                     i2l617:
  9572  00206C  A010               	btfss	i2___fladd@grs^0,0,c
  9573  00206E  EF3B  F010         	goto	i2u539_41
  9574  002072  EF3D  F010         	goto	i2u539_40
  9575  002076                     i2u539_41:
  9576  002076  EF43  F010         	goto	i2l4135
  9577  00207A                     i2u539_40:
  9578  00207A  90D8               	bcf	status,0,c
  9579  00207C  3010               	rrcf	i2___fladd@grs^0,w,c
  9580  00207E  0901               	iorlw	1
  9581  002080  6E10               	movwf	i2___fladd@grs^0,c
  9582  002082  EF45  F010         	goto	i2l4137
  9583  002086                     i2l4135:
  9584  002086  90D8               	bcf	status,0,c
  9585  002088  3210               	rrcf	i2___fladd@grs^0,f,c
  9586  00208A                     i2l4137:
  9587  00208A  A001               	btfss	i2___fladd@b^0,0,c
  9588  00208C  EF4A  F010         	goto	i2u540_41
  9589  002090  EF4C  F010         	goto	i2u540_40
  9590  002094                     i2u540_41:
  9591  002094  EF4D  F010         	goto	i2l4141
  9592  002098                     i2u540_40:
  9593  002098  8E10               	bsf	i2___fladd@grs^0,7,c
  9594  00209A                     i2l4141:
  9595  00209A  3404               	rlcf	(i2___fladd@b+3)^0,w,c
  9596  00209C  3204               	rrcf	(i2___fladd@b+3)^0,f,c
  9597  00209E  3203               	rrcf	(i2___fladd@b+2)^0,f,c
  9598  0020A0  3202               	rrcf	(i2___fladd@b+1)^0,f,c
  9599  0020A2  3201               	rrcf	i2___fladd@b^0,f,c
  9600  0020A4  2A0F               	incf	i2___fladd@bexp^0,f,c
  9601  0020A6                     i2l616:
  9602  0020A6  500E               	movf	i2___fladd@aexp^0,w,c
  9603  0020A8  5C0F               	subwf	i2___fladd@bexp^0,w,c
  9604  0020AA  A0D8               	btfss	status,0,c
  9605  0020AC  EF5A  F010         	goto	i2u541_41
  9606  0020B0  EF5C  F010         	goto	i2u541_40
  9607  0020B4                     i2u541_41:
  9608  0020B4  EF36  F010         	goto	i2l617
  9609  0020B8                     i2u541_40:
  9610  0020B8                     i2l615:
  9611  0020B8  BC0D               	btfsc	i2___fladd@signs^0,6,c
  9612  0020BA  EF61  F010         	goto	i2u542_41
  9613  0020BE  EF63  F010         	goto	i2u542_40
  9614  0020C2                     i2u542_41:
  9615  0020C2  EFA3  F010         	goto	i2l4169
  9616  0020C6                     i2u542_40:
  9617  0020C6  500F               	movf	i2___fladd@bexp^0,w,c
  9618  0020C8  A4D8               	btfss	status,2,c
  9619  0020CA  EF69  F010         	goto	i2u543_41
  9620  0020CE  EF6B  F010         	goto	i2u543_40
  9621  0020D2                     i2u543_41:
  9622  0020D2  EF75  F010         	goto	i2l4151
  9623  0020D6                     i2u543_40:
  9624  0020D6  0E00               	movlw	0
  9625  0020D8  6E01               	movwf	?i2___fladd^0,c
  9626  0020DA  0E00               	movlw	0
  9627  0020DC  6E02               	movwf	(?i2___fladd+1)^0,c
  9628  0020DE  0E00               	movlw	0
  9629  0020E0  6E03               	movwf	(?i2___fladd+2)^0,c
  9630  0020E2  0E00               	movlw	0
  9631  0020E4  6E04               	movwf	(?i2___fladd+3)^0,c
  9632  0020E6  EFC4  F011         	goto	i2l624
  9633  0020EA                     i2l4151:
  9634  0020EA  5005               	movf	i2___fladd@a^0,w,c
  9635  0020EC  2601               	addwf	i2___fladd@b^0,f,c
  9636  0020EE  5006               	movf	(i2___fladd@a+1)^0,w,c
  9637  0020F0  2202               	addwfc	(i2___fladd@b+1)^0,f,c
  9638  0020F2  5007               	movf	(i2___fladd@a+2)^0,w,c
  9639  0020F4  2203               	addwfc	(i2___fladd@b+2)^0,f,c
  9640  0020F6  5008               	movf	(i2___fladd@a+3)^0,w,c
  9641  0020F8  2204               	addwfc	(i2___fladd@b+3)^0,f,c
  9642  0020FA  A004               	btfss	(i2___fladd@b+3)^0,0,c
  9643  0020FC  EF82  F010         	goto	i2u544_41
  9644  002100  EF84  F010         	goto	i2u544_40
  9645  002104                     i2u544_41:
  9646  002104  EF30  F011         	goto	i2l4205
  9647  002108                     i2u544_40:
  9648  002108  A010               	btfss	i2___fladd@grs^0,0,c
  9649  00210A  EF89  F010         	goto	i2u545_41
  9650  00210E  EF8B  F010         	goto	i2u545_40
  9651  002112                     i2u545_41:
  9652  002112  EF91  F010         	goto	i2l4159
  9653  002116                     i2u545_40:
  9654  002116  90D8               	bcf	status,0,c
  9655  002118  3010               	rrcf	i2___fladd@grs^0,w,c
  9656  00211A  0901               	iorlw	1
  9657  00211C  6E10               	movwf	i2___fladd@grs^0,c
  9658  00211E  EF93  F010         	goto	i2l4161
  9659  002122                     i2l4159:
  9660  002122  90D8               	bcf	status,0,c
  9661  002124  3210               	rrcf	i2___fladd@grs^0,f,c
  9662  002126                     i2l4161:
  9663  002126  A001               	btfss	i2___fladd@b^0,0,c
  9664  002128  EF98  F010         	goto	i2u546_41
  9665  00212C  EF9A  F010         	goto	i2u546_40
  9666  002130                     i2u546_41:
  9667  002130  EF9B  F010         	goto	i2l4165
  9668  002134                     i2u546_40:
  9669  002134  8E10               	bsf	i2___fladd@grs^0,7,c
  9670  002136                     i2l4165:
  9671  002136  3404               	rlcf	(i2___fladd@b+3)^0,w,c
  9672  002138  3204               	rrcf	(i2___fladd@b+3)^0,f,c
  9673  00213A  3203               	rrcf	(i2___fladd@b+2)^0,f,c
  9674  00213C  3202               	rrcf	(i2___fladd@b+1)^0,f,c
  9675  00213E  3201               	rrcf	i2___fladd@b^0,f,c
  9676  002140  2A0F               	incf	i2___fladd@bexp^0,f,c
  9677  002142  EF30  F011         	goto	i2l4205
  9678  002146                     i2l4169:
  9679  002146  5005               	movf	i2___fladd@a^0,w,c
  9680  002148  5C01               	subwf	i2___fladd@b^0,w,c
  9681  00214A  5006               	movf	(i2___fladd@a+1)^0,w,c
  9682  00214C  5802               	subwfb	(i2___fladd@b+1)^0,w,c
  9683  00214E  5007               	movf	(i2___fladd@a+2)^0,w,c
  9684  002150  5803               	subwfb	(i2___fladd@b+2)^0,w,c
  9685  002152  5004               	movf	(i2___fladd@b+3)^0,w,c
  9686  002154  0A80               	xorlw	128
  9687  002156  6E09               	movwf	??i2___fladd^0,c
  9688  002158  5008               	movf	(i2___fladd@a+3)^0,w,c
  9689  00215A  0A80               	xorlw	128
  9690  00215C  5809               	subwfb	??i2___fladd^0,w,c
  9691  00215E  B0D8               	btfsc	status,0,c
  9692  002160  EFB4  F010         	goto	i2u547_41
  9693  002164  EFB6  F010         	goto	i2u547_40
  9694  002168                     i2u547_41:
  9695  002168  EFE1  F010         	goto	i2l4179
  9696  00216C                     i2u547_40:
  9697  00216C  5001               	movf	i2___fladd@b^0,w,c
  9698  00216E  5C05               	subwf	i2___fladd@a^0,w,c
  9699  002170  6E09               	movwf	??i2___fladd^0,c
  9700  002172  5002               	movf	(i2___fladd@b+1)^0,w,c
  9701  002174  5806               	subwfb	(i2___fladd@a+1)^0,w,c
  9702  002176  6E0A               	movwf	(??i2___fladd+1)^0,c
  9703  002178  5003               	movf	(i2___fladd@b+2)^0,w,c
  9704  00217A  5807               	subwfb	(i2___fladd@a+2)^0,w,c
  9705  00217C  6E0B               	movwf	(??i2___fladd+2)^0,c
  9706  00217E  5004               	movf	(i2___fladd@b+3)^0,w,c
  9707  002180  5808               	subwfb	(i2___fladd@a+3)^0,w,c
  9708  002182  6E0C               	movwf	(??i2___fladd+3)^0,c
  9709  002184  0EFF               	movlw	255
  9710  002186  2409               	addwf	??i2___fladd^0,w,c
  9711  002188  6E01               	movwf	i2___fladd@b^0,c
  9712  00218A  0EFF               	movlw	255
  9713  00218C  200A               	addwfc	(??i2___fladd+1)^0,w,c
  9714  00218E  6E02               	movwf	(i2___fladd@b+1)^0,c
  9715  002190  0EFF               	movlw	255
  9716  002192  200B               	addwfc	(??i2___fladd+2)^0,w,c
  9717  002194  6E03               	movwf	(i2___fladd@b+2)^0,c
  9718  002196  0EFF               	movlw	255
  9719  002198  200C               	addwfc	(??i2___fladd+3)^0,w,c
  9720  00219A  6E04               	movwf	(i2___fladd@b+3)^0,c
  9721  00219C  0E80               	movlw	128
  9722  00219E  1A0D               	xorwf	i2___fladd@signs^0,f,c
  9723  0021A0  6C10               	negf	i2___fladd@grs^0,c
  9724  0021A2  5010               	movf	i2___fladd@grs^0,w,c
  9725  0021A4  A4D8               	btfss	status,2,c
  9726  0021A6  EFD7  F010         	goto	i2u548_41
  9727  0021AA  EFD9  F010         	goto	i2u548_40
  9728  0021AE                     i2u548_41:
  9729  0021AE  EFE9  F010         	goto	i2l632
  9730  0021B2                     i2u548_40:
  9731  0021B2  0E01               	movlw	1
  9732  0021B4  2601               	addwf	i2___fladd@b^0,f,c
  9733  0021B6  0E00               	movlw	0
  9734  0021B8  2202               	addwfc	(i2___fladd@b+1)^0,f,c
  9735  0021BA  2203               	addwfc	(i2___fladd@b+2)^0,f,c
  9736  0021BC  2204               	addwfc	(i2___fladd@b+3)^0,f,c
  9737  0021BE  EFE9  F010         	goto	i2l632
  9738  0021C2                     i2l4179:
  9739  0021C2  5005               	movf	i2___fladd@a^0,w,c
  9740  0021C4  5E01               	subwf	i2___fladd@b^0,f,c
  9741  0021C6  5006               	movf	(i2___fladd@a+1)^0,w,c
  9742  0021C8  5A02               	subwfb	(i2___fladd@b+1)^0,f,c
  9743  0021CA  5007               	movf	(i2___fladd@a+2)^0,w,c
  9744  0021CC  5A03               	subwfb	(i2___fladd@b+2)^0,f,c
  9745  0021CE  5008               	movf	(i2___fladd@a+3)^0,w,c
  9746  0021D0  5A04               	subwfb	(i2___fladd@b+3)^0,f,c
  9747  0021D2                     i2l632:
  9748  0021D2  5001               	movf	i2___fladd@b^0,w,c
  9749  0021D4  1002               	iorwf	(i2___fladd@b+1)^0,w,c
  9750  0021D6  1003               	iorwf	(i2___fladd@b+2)^0,w,c
  9751  0021D8  1004               	iorwf	(i2___fladd@b+3)^0,w,c
  9752  0021DA  A4D8               	btfss	status,2,c
  9753  0021DC  EFF2  F010         	goto	i2u549_41
  9754  0021E0  EFF4  F010         	goto	i2u549_40
  9755  0021E4                     i2u549_41:
  9756  0021E4  EF29  F011         	goto	i2l4203
  9757  0021E8                     i2u549_40:
  9758  0021E8  5010               	movf	i2___fladd@grs^0,w,c
  9759  0021EA  A4D8               	btfss	status,2,c
  9760  0021EC  EFFA  F010         	goto	i2u550_41
  9761  0021F0  EFFC  F010         	goto	i2u550_40
  9762  0021F4                     i2u550_41:
  9763  0021F4  EF29  F011         	goto	i2l4203
  9764  0021F8                     i2u550_40:
  9765  0021F8  0E00               	movlw	0
  9766  0021FA  6E01               	movwf	?i2___fladd^0,c
  9767  0021FC  0E00               	movlw	0
  9768  0021FE  6E02               	movwf	(?i2___fladd+1)^0,c
  9769  002200  0E00               	movlw	0
  9770  002202  6E03               	movwf	(?i2___fladd+2)^0,c
  9771  002204  0E00               	movlw	0
  9772  002206  6E04               	movwf	(?i2___fladd+3)^0,c
  9773  002208  EFC4  F011         	goto	i2l624
  9774  00220C                     i2l4187:
  9775  00220C  90D8               	bcf	status,0,c
  9776  00220E  3601               	rlcf	i2___fladd@b^0,f,c
  9777  002210  3602               	rlcf	(i2___fladd@b+1)^0,f,c
  9778  002212  3603               	rlcf	(i2___fladd@b+2)^0,f,c
  9779  002214  3604               	rlcf	(i2___fladd@b+3)^0,f,c
  9780  002216  AE10               	btfss	i2___fladd@grs^0,7,c
  9781  002218  EF10  F011         	goto	i2u551_41
  9782  00221C  EF12  F011         	goto	i2u551_40
  9783  002220                     i2u551_41:
  9784  002220  EF13  F011         	goto	i2l4193
  9785  002224                     i2u551_40:
  9786  002224  8001               	bsf	i2___fladd@b^0,0,c
  9787  002226                     i2l4193:
  9788  002226  A010               	btfss	i2___fladd@grs^0,0,c
  9789  002228  EF18  F011         	goto	i2u552_41
  9790  00222C  EF1A  F011         	goto	i2u552_40
  9791  002230                     i2u552_41:
  9792  002230  EF1E  F011         	goto	i2l4197
  9793  002234                     i2u552_40:
  9794  002234  80D8               	bsf	status,0,c
  9795  002236  3610               	rlcf	i2___fladd@grs^0,f,c
  9796  002238  EF20  F011         	goto	i2l4199
  9797  00223C                     i2l4197:
  9798  00223C  90D8               	bcf	status,0,c
  9799  00223E  3610               	rlcf	i2___fladd@grs^0,f,c
  9800  002240                     i2l4199:
  9801  002240  500F               	movf	i2___fladd@bexp^0,w,c
  9802  002242  B4D8               	btfsc	status,2,c
  9803  002244  EF26  F011         	goto	i2u553_41
  9804  002248  EF28  F011         	goto	i2u553_40
  9805  00224C                     i2u553_41:
  9806  00224C  EF29  F011         	goto	i2l4203
  9807  002250                     i2u553_40:
  9808  002250  060F               	decf	i2___fladd@bexp^0,f,c
  9809  002252                     i2l4203:
  9810  002252  AE03               	btfss	(i2___fladd@b+2)^0,7,c
  9811  002254  EF2E  F011         	goto	i2u554_41
  9812  002258  EF30  F011         	goto	i2u554_40
  9813  00225C                     i2u554_41:
  9814  00225C  EF06  F011         	goto	i2l4187
  9815  002260                     i2u554_40:
  9816  002260                     i2l4205:
  9817  002260  0E00               	movlw	0
  9818  002262  6E0E               	movwf	i2___fladd@aexp^0,c
  9819  002264  AE10               	btfss	i2___fladd@grs^0,7,c
  9820  002266  EF37  F011         	goto	i2u555_41
  9821  00226A  EF39  F011         	goto	i2u555_40
  9822  00226E                     i2u555_41:
  9823  00226E  EF51  F011         	goto	i2l641
  9824  002272                     i2u555_40:
  9825  002272  C010  F009         	movff	i2___fladd@grs,??i2___fladd
  9826  002276  0E7F               	movlw	127
  9827  002278  1609               	andwf	??i2___fladd^0,f,c
  9828  00227A  B4D8               	btfsc	status,2,c
  9829  00227C  EF42  F011         	goto	i2u556_41
  9830  002280  EF44  F011         	goto	i2u556_40
  9831  002284                     i2u556_41:
  9832  002284  EF48  F011         	goto	i2l642
  9833  002288                     i2u556_40:
  9834  002288                     i2l4211:
  9835  002288  0E01               	movlw	1
  9836  00228A  6E0E               	movwf	i2___fladd@aexp^0,c
  9837  00228C  EF51  F011         	goto	i2l641
  9838  002290                     i2l642:
  9839  002290  A001               	btfss	i2___fladd@b^0,0,c
  9840  002292  EF4D  F011         	goto	i2u557_41
  9841  002296  EF4F  F011         	goto	i2u557_40
  9842  00229A                     i2u557_41:
  9843  00229A  EF51  F011         	goto	i2l641
  9844  00229E                     i2u557_40:
  9845  00229E  EF44  F011         	goto	i2l4211
  9846  0022A2                     i2l641:
  9847  0022A2  500E               	movf	i2___fladd@aexp^0,w,c
  9848  0022A4  B4D8               	btfsc	status,2,c
  9849  0022A6  EF57  F011         	goto	i2u558_41
  9850  0022AA  EF59  F011         	goto	i2u558_40
  9851  0022AE                     i2u558_41:
  9852  0022AE  EF84  F011         	goto	i2l4223
  9853  0022B2                     i2u558_40:
  9854  0022B2  0E01               	movlw	1
  9855  0022B4  2601               	addwf	i2___fladd@b^0,f,c
  9856  0022B6  0E00               	movlw	0
  9857  0022B8  2202               	addwfc	(i2___fladd@b+1)^0,f,c
  9858  0022BA  2203               	addwfc	(i2___fladd@b+2)^0,f,c
  9859  0022BC  2204               	addwfc	(i2___fladd@b+3)^0,f,c
  9860  0022BE  A004               	btfss	(i2___fladd@b+3)^0,0,c
  9861  0022C0  EF64  F011         	goto	i2u559_41
  9862  0022C4  EF66  F011         	goto	i2u559_40
  9863  0022C8                     i2u559_41:
  9864  0022C8  EF84  F011         	goto	i2l4223
  9865  0022CC                     i2u559_40:
  9866  0022CC  C001  F009         	movff	i2___fladd@b,??i2___fladd
  9867  0022D0  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
  9868  0022D4  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
  9869  0022D8  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
  9870  0022DC  340C               	rlcf	(??i2___fladd+3)^0,w,c
  9871  0022DE  320C               	rrcf	(??i2___fladd+3)^0,f,c
  9872  0022E0  320B               	rrcf	(??i2___fladd+2)^0,f,c
  9873  0022E2  320A               	rrcf	(??i2___fladd+1)^0,f,c
  9874  0022E4  3209               	rrcf	??i2___fladd^0,f,c
  9875  0022E6  C009  F001         	movff	??i2___fladd,i2___fladd@b
  9876  0022EA  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
  9877  0022EE  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
  9878  0022F2  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
  9879  0022F6  280F               	incf	i2___fladd@bexp^0,w,c
  9880  0022F8  B4D8               	btfsc	status,2,c
  9881  0022FA  EF81  F011         	goto	i2u560_41
  9882  0022FE  EF83  F011         	goto	i2u560_40
  9883  002302                     i2u560_41:
  9884  002302  EF84  F011         	goto	i2l4223
  9885  002306                     i2u560_40:
  9886  002306  2A0F               	incf	i2___fladd@bexp^0,f,c
  9887  002308                     i2l4223:
  9888  002308  280F               	incf	i2___fladd@bexp^0,w,c
  9889  00230A  B4D8               	btfsc	status,2,c
  9890  00230C  EF8A  F011         	goto	i2u561_41
  9891  002310  EF8C  F011         	goto	i2u561_40
  9892  002314                     i2u561_41:
  9893  002314  EF94  F011         	goto	i2l4227
  9894  002318                     i2u561_40:
  9895  002318  500F               	movf	i2___fladd@bexp^0,w,c
  9896  00231A  A4D8               	btfss	status,2,c
  9897  00231C  EF92  F011         	goto	i2u562_41
  9898  002320  EF94  F011         	goto	i2u562_40
  9899  002324                     i2u562_41:
  9900  002324  EFA6  F011         	goto	i2l4231
  9901  002328                     i2u562_40:
  9902  002328                     i2l4227:
  9903  002328  0E00               	movlw	0
  9904  00232A  6E01               	movwf	i2___fladd@b^0,c
  9905  00232C  0E00               	movlw	0
  9906  00232E  6E02               	movwf	(i2___fladd@b+1)^0,c
  9907  002330  0E00               	movlw	0
  9908  002332  6E03               	movwf	(i2___fladd@b+2)^0,c
  9909  002334  0E00               	movlw	0
  9910  002336  6E04               	movwf	(i2___fladd@b+3)^0,c
  9911  002338  500F               	movf	i2___fladd@bexp^0,w,c
  9912  00233A  A4D8               	btfss	status,2,c
  9913  00233C  EFA2  F011         	goto	i2u563_41
  9914  002340  EFA4  F011         	goto	i2u563_40
  9915  002344                     i2u563_41:
  9916  002344  EFA6  F011         	goto	i2l4231
  9917  002348                     i2u563_40:
  9918  002348  0E00               	movlw	0
  9919  00234A  6E0D               	movwf	i2___fladd@signs^0,c
  9920  00234C                     i2l4231:
  9921  00234C  A00F               	btfss	i2___fladd@bexp^0,0,c
  9922  00234E  EFAB  F011         	goto	i2u564_41
  9923  002352  EFAD  F011         	goto	i2u564_40
  9924  002356                     i2u564_41:
  9925  002356  EFB0  F011         	goto	i2l4235
  9926  00235A                     i2u564_40:
  9927  00235A  8E03               	bsf	(i2___fladd@b+2)^0,7,c
  9928  00235C  EFB1  F011         	goto	i2l4237
  9929  002360                     i2l4235:
  9930  002360  9E03               	bcf	(i2___fladd@b+2)^0,7,c
  9931  002362                     i2l4237:
  9932  002362  90D8               	bcf	status,0,c
  9933  002364  300F               	rrcf	i2___fladd@bexp^0,w,c
  9934  002366  6E04               	movwf	(i2___fladd@b+3)^0,c
  9935  002368  AE0D               	btfss	i2___fladd@signs^0,7,c
  9936  00236A  EFB9  F011         	goto	i2u565_41
  9937  00236E  EFBB  F011         	goto	i2u565_40
  9938  002372                     i2u565_41:
  9939  002372  EFBC  F011         	goto	i2l4243
  9940  002376                     i2u565_40:
  9941  002376  8E04               	bsf	(i2___fladd@b+3)^0,7,c
  9942  002378                     i2l4243:
  9943  002378  C001  F001         	movff	i2___fladd@b,?i2___fladd
  9944  00237C  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
  9945  002380  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
  9946  002384  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
  9947  002388                     i2l624:
  9948  002388  0012               	return		;funcret
  9949  00238A                     __end_ofi2___fladd:
  9950                           	callstack 0
  9951                           
  9952 ;; *************** function _alerta *****************
  9953 ;; Defined at:
  9954 ;;		line 25 in file "lcd.frase.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;		None
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;		None
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      void 
  9961 ;; Registers used:
  9962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9968 ;;      Params:         0       0       0       0       0       0       0       0       0
  9969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9970 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9971 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9972 ;;Total ram usage:        2 bytes
  9973 ;; Hardware stack levels used: 1
  9974 ;; Hardware stack levels required when called: 2
  9975 ;; This function calls:
  9976 ;;		i2___flge
  9977 ;;		i2_comando_lcd
  9978 ;;		i2_imprime_lcd
  9979 ;;		i2_limpa_lcd
  9980 ;; This function is called by:
  9981 ;;		_isr
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text38
  9986  0039B0                     __ptext38:
  9987                           	callstack 0
  9988  0039B0                     _alerta:
  9989                           	callstack 19
  9990  0039B0                     
  9991                           ;lcd.frase.c: 26:     if(temperatura > temperaturaMaxima || temperatura < temperaturaMin
      +                          ima){
  9992  0039B0  C03D  F001         	movff	_temperaturaMaxima,i2___flge@ff1
  9993  0039B4  C03E  F002         	movff	_temperaturaMaxima+1,i2___flge@ff1+1
  9994  0039B8  C03F  F003         	movff	_temperaturaMaxima+2,i2___flge@ff1+2
  9995  0039BC  C040  F004         	movff	_temperaturaMaxima+3,i2___flge@ff1+3
  9996  0039C0  C033  F005         	movff	_temperatura,i2___flge@ff2
  9997  0039C4  C034  F006         	movff	_temperatura+1,i2___flge@ff2+1
  9998  0039C8  C035  F007         	movff	_temperatura+2,i2___flge@ff2+2
  9999  0039CC  C036  F008         	movff	_temperatura+3,i2___flge@ff2+3
 10000  0039D0  EC5A  F019         	call	i2___flge	;wreg free
 10001  0039D4  A0D8               	btfss	status,0,c
 10002  0039D6  EFEF  F01C         	goto	i2u578_41
 10003  0039DA  EFF1  F01C         	goto	i2u578_40
 10004  0039DE                     i2u578_41:
 10005  0039DE  EF0A  F01D         	goto	i2l4333
 10006  0039E2                     i2u578_40:
 10007  0039E2  C033  F001         	movff	_temperatura,i2___flge@ff1
 10008  0039E6  C034  F002         	movff	_temperatura+1,i2___flge@ff1+1
 10009  0039EA  C035  F003         	movff	_temperatura+2,i2___flge@ff1+2
 10010  0039EE  C036  F004         	movff	_temperatura+3,i2___flge@ff1+3
 10011  0039F2  C039  F005         	movff	_temperaturaMinima,i2___flge@ff2
 10012  0039F6  C03A  F006         	movff	_temperaturaMinima+1,i2___flge@ff2+1
 10013  0039FA  C03B  F007         	movff	_temperaturaMinima+2,i2___flge@ff2+2
 10014  0039FE  C03C  F008         	movff	_temperaturaMinima+3,i2___flge@ff2+3
 10015  003A02  EC5A  F019         	call	i2___flge	;wreg free
 10016  003A06  B0D8               	btfsc	status,0,c
 10017  003A08  EF08  F01D         	goto	i2u579_41
 10018  003A0C  EF0A  F01D         	goto	i2u579_40
 10019  003A10                     i2u579_41:
 10020  003A10  EF30  F01D         	goto	i2l59
 10021  003A14                     i2u579_40:
 10022  003A14                     i2l4333:
 10023                           
 10024                           ;lcd.frase.c: 27:             limpa_lcd( );
 10025  003A14  ECC6  F020         	call	i2_limpa_lcd	;wreg free
 10026  003A18                     
 10027                           ;lcd.frase.c: 28:             _delay((unsigned long)((1000)*(4000000/4000.0)));
 10028  003A18  0E06               	movlw	6
 10029  003A1A  6E0F               	movwf	(??_alerta+1)^0,c
 10030  003A1C  0E13               	movlw	19
 10031  003A1E  6E0E               	movwf	??_alerta^0,c
 10032  003A20  0EAE               	movlw	174
 10033  003A22                     i2u827_47:
 10034  003A22  2EE8               	decfsz	wreg,f,c
 10035  003A24  D7FE               	bra	i2u827_47
 10036  003A26  2E0E               	decfsz	??_alerta^0,f,c
 10037  003A28  D7FC               	bra	i2u827_47
 10038  003A2A  2E0F               	decfsz	(??_alerta+1)^0,f,c
 10039  003A2C  D7FA               	bra	i2u827_47
 10040  003A2E                     
 10041                           ;lcd.frase.c: 29:             comando_lcd(128);
 10042  003A2E  0E00               	movlw	0
 10043  003A30  6E02               	movwf	(i2comando_lcd@comando+1)^0,c
 10044  003A32  0E80               	movlw	128
 10045  003A34  6E01               	movwf	i2comando_lcd@comando^0,c
 10046  003A36  ECA5  F020         	call	i2_comando_lcd	;wreg free
 10047  003A3A                     
 10048                           ;lcd.frase.c: 30:             imprime_lcd("ERRO Temperatura");
 10049  003A3A  0E12               	movlw	low STR_1
 10050  003A3C  6E05               	movwf	i2imprime_lcd@frase^0,c
 10051  003A3E  0E08               	movlw	high STR_1
 10052  003A40  6E06               	movwf	(i2imprime_lcd@frase+1)^0,c
 10053  003A42  EC1F  F01E         	call	i2_imprime_lcd	;wreg free
 10054  003A46                     
 10055                           ;lcd.frase.c: 31:             _delay((unsigned long)((1000)*(4000000/4000.0)));
 10056  003A46  0E06               	movlw	6
 10057  003A48  6E0F               	movwf	(??_alerta+1)^0,c
 10058  003A4A  0E13               	movlw	19
 10059  003A4C  6E0E               	movwf	??_alerta^0,c
 10060  003A4E  0EAE               	movlw	174
 10061  003A50                     i2u828_47:
 10062  003A50  2EE8               	decfsz	wreg,f,c
 10063  003A52  D7FE               	bra	i2u828_47
 10064  003A54  2E0E               	decfsz	??_alerta^0,f,c
 10065  003A56  D7FC               	bra	i2u828_47
 10066  003A58  2E0F               	decfsz	(??_alerta+1)^0,f,c
 10067  003A5A  D7FA               	bra	i2u828_47
 10068  003A5C                     
 10069                           ;lcd.frase.c: 32:             limpa_lcd( );
 10070  003A5C  ECC6  F020         	call	i2_limpa_lcd	;wreg free
 10071  003A60                     i2l59:
 10072  003A60  0012               	return		;funcret
 10073  003A62                     __end_of_alerta:
 10074                           	callstack 0
 10075                           
 10076 ;; *************** function i2_limpa_lcd *****************
 10077 ;; Defined at:
 10078 ;;		line 26 in file "./lcd.intermed.h"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;		None
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;		None
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      void 
 10085 ;; Registers used:
 10086 ;;		wreg, status,2, cstack
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10092 ;;      Params:         0       0       0       0       0       0       0       0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10094 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10095 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10096 ;;Total ram usage:        0 bytes
 10097 ;; Hardware stack levels used: 1
 10098 ;; Hardware stack levels required when called: 1
 10099 ;; This function calls:
 10100 ;;		i2_comando_lcd
 10101 ;; This function is called by:
 10102 ;;		_alerta
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           	psect	text39
 10107  00418C                     __ptext39:
 10108                           	callstack 0
 10109  00418C                     i2_limpa_lcd:
 10110                           	callstack 19
 10111  00418C                     
 10112                           ;./lcd.intermed.h: 28:     comando_lcd(1);
 10113  00418C  0E00               	movlw	0
 10114  00418E  6E02               	movwf	(i2comando_lcd@comando+1)^0,c
 10115  004190  0E01               	movlw	1
 10116  004192  6E01               	movwf	i2comando_lcd@comando^0,c
 10117  004194  ECA5  F020         	call	i2_comando_lcd	;wreg free
 10118  004198  0012               	return		;funcret
 10119  00419A                     __end_ofi2_limpa_lcd:
 10120                           	callstack 0
 10121                           
 10122 ;; *************** function i2_comando_lcd *****************
 10123 ;; Defined at:
 10124 ;;		line 7 in file "./lcd.intermed.h"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;  comando         2    0[COMRAM] unsigned int 
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;		None
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  1    wreg      void 
 10131 ;; Registers used:
 10132 ;;		wreg
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10138 ;;      Params:         2       0       0       0       0       0       0       0       0
 10139 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10140 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10141 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10142 ;;Total ram usage:        3 bytes
 10143 ;; Hardware stack levels used: 1
 10144 ;; This function calls:
 10145 ;;		Nothing
 10146 ;; This function is called by:
 10147 ;;		_alerta
 10148 ;;		i2_limpa_lcd
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           	psect	text40
 10153  00414A                     __ptext40:
 10154                           	callstack 0
 10155  00414A                     i2_comando_lcd:
 10156                           	callstack 19
 10157  00414A                     
 10158                           ;./lcd.intermed.h: 7: void comando_lcd(unsigned int comando);./lcd.intermed.h: 8: {;./lc
      +                          d.intermed.h: 9:     PORTEbits.RE2 = 0;
 10159  00414A  9484               	bcf	132,2,c	;volatile
 10160                           
 10161                           ;./lcd.intermed.h: 10:     PORTEbits.RE1 = 1;
 10162  00414C  8284               	bsf	132,1,c	;volatile
 10163                           
 10164                           ;./lcd.intermed.h: 11:     PORTD = comando;
 10165  00414E  C001  FF83         	movff	i2comando_lcd@comando,3971	;volatile
 10166  004152                     
 10167                           ;./lcd.intermed.h: 12:     _delay((unsigned long)((2)*(4000000/4000.0)));
 10168  004152  0E03               	movlw	3
 10169  004154  6E03               	movwf	??i2_comando_lcd^0,c
 10170  004156  0E98               	movlw	152
 10171  004158                     i2u829_47:
 10172  004158  2EE8               	decfsz	wreg,f,c
 10173  00415A  D7FE               	bra	i2u829_47
 10174  00415C  2E03               	decfsz	??i2_comando_lcd^0,f,c
 10175  00415E  D7FC               	bra	i2u829_47
 10176  004160                     
 10177                           ;./lcd.intermed.h: 13:     PORTEbits.RE1 = 0;
 10178  004160  9284               	bcf	132,1,c	;volatile
 10179  004162  0012               	return		;funcret
 10180  004164                     __end_ofi2_comando_lcd:
 10181                           	callstack 0
 10182                           
 10183 ;; *************** function i2_imprime_lcd *****************
 10184 ;; Defined at:
 10185 ;;		line 31 in file "./lcd.intermed.h"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  frase           2    4[COMRAM] PTR unsigned char 
 10188 ;;		 -> temperature(8), STR_3(12), STR_2(17), STR_1(17), 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  indice          2   11[COMRAM] int 
 10191 ;;  tamanho         2    9[COMRAM] int 
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  1    wreg      void 
 10194 ;; Registers used:
 10195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10201 ;;      Params:         2       0       0       0       0       0       0       0       0
 10202 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10203 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10204 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10205 ;;Total ram usage:        9 bytes
 10206 ;; Hardware stack levels used: 1
 10207 ;; Hardware stack levels required when called: 1
 10208 ;; This function calls:
 10209 ;;		i2_dado_lcd
 10210 ;;		i2_strlen
 10211 ;; This function is called by:
 10212 ;;		_alerta
 10213 ;; This function uses a non-reentrant model
 10214 ;;
 10215                           
 10216                           	psect	text41
 10217  003C3E                     __ptext41:
 10218                           	callstack 0
 10219  003C3E                     i2_imprime_lcd:
 10220                           	callstack 19
 10221  003C3E                     
 10222                           ;./lcd.intermed.h: 31: void imprime_lcd(char frase[]);./lcd.intermed.h: 32: {;./lcd.inte
      +                          rmed.h: 33: int indice = 0;
 10223  003C3E  0E00               	movlw	0
 10224  003C40  6E0D               	movwf	(i2imprime_lcd@indice+1)^0,c
 10225  003C42  0E00               	movlw	0
 10226  003C44  6E0C               	movwf	i2imprime_lcd@indice^0,c
 10227  003C46                     
 10228                           ;./lcd.intermed.h: 34: int tamanho = strlen(frase);
 10229  003C46  C005  F001         	movff	i2imprime_lcd@frase,i2strlen@s
 10230  003C4A  C006  F002         	movff	i2imprime_lcd@frase+1,i2strlen@s+1
 10231  003C4E  EC93  F01F         	call	i2_strlen	;wreg free
 10232  003C52  C001  F00A         	movff	?i2_strlen,i2imprime_lcd@tamanho
 10233  003C56  C002  F00B         	movff	?i2_strlen+1,i2imprime_lcd@tamanho+1
 10234                           
 10235                           ;./lcd.intermed.h: 35: while(indice<tamanho)
 10236  003C5A  EF4D  F01E         	goto	i2l4287
 10237  003C5E                     i2l4283:
 10238                           
 10239                           ;./lcd.intermed.h: 36:     {;./lcd.intermed.h: 37: dado_lcd(frase[indice]);
 10240  003C5E  500C               	movf	i2imprime_lcd@indice^0,w,c
 10241  003C60  2405               	addwf	i2imprime_lcd@frase^0,w,c
 10242  003C62  6E07               	movwf	??i2_imprime_lcd^0,c
 10243  003C64  500D               	movf	(i2imprime_lcd@indice+1)^0,w,c
 10244  003C66  2006               	addwfc	(i2imprime_lcd@frase+1)^0,w,c
 10245  003C68  6E08               	movwf	(??i2_imprime_lcd+1)^0,c
 10246  003C6A  C007  FFF6         	movff	??i2_imprime_lcd,tblptrl
 10247  003C6E  C008  FFF7         	movff	??i2_imprime_lcd+1,tblptrh
 10248  003C72  6AF8               	clrf	tblptru,c
 10249  003C74  0E07               	movlw	(high __ramtop+-1)
 10250  003C76  64F7               	cpfsgt	tblptrh,c
 10251  003C78  D003               	bra	i2u569_47
 10252  003C7A  0008               	tblrd		*
 10253  003C7C  50F5               	movf	tablat,w,c
 10254  003C7E  D005               	bra	i2u569_40
 10255  003C80                     i2u569_47:
 10256  003C80  CFF6 FFE1          	movff	tblptrl,fsr1l
 10257  003C84  CFF7 FFE2          	movff	tblptrh,fsr1h
 10258  003C88  50E7               	movf	indf1,w,c
 10259  003C8A                     i2u569_40:
 10260  003C8A  6E09               	movwf	(??i2_imprime_lcd+2)^0,c
 10261  003C8C  5009               	movf	(??i2_imprime_lcd+2)^0,w,c
 10262  003C8E  6E01               	movwf	i2dado_lcd@dado^0,c
 10263  003C90  6A02               	clrf	(i2dado_lcd@dado+1)^0,c
 10264  003C92  ECB2  F020         	call	i2_dado_lcd	;wreg free
 10265  003C96                     
 10266                           ;./lcd.intermed.h: 38: indice++;
 10267  003C96  4A0C               	infsnz	i2imprime_lcd@indice^0,f,c
 10268  003C98  2A0D               	incf	(i2imprime_lcd@indice+1)^0,f,c
 10269  003C9A                     i2l4287:
 10270                           
 10271                           ;./lcd.intermed.h: 35: while(indice<tamanho)
 10272  003C9A  500A               	movf	i2imprime_lcd@tamanho^0,w,c
 10273  003C9C  5C0C               	subwf	i2imprime_lcd@indice^0,w,c
 10274  003C9E  500D               	movf	(i2imprime_lcd@indice+1)^0,w,c
 10275  003CA0  0A80               	xorlw	128
 10276  003CA2  6E07               	movwf	??i2_imprime_lcd^0,c
 10277  003CA4  500B               	movf	(i2imprime_lcd@tamanho+1)^0,w,c
 10278  003CA6  0A80               	xorlw	128
 10279  003CA8  5807               	subwfb	??i2_imprime_lcd^0,w,c
 10280  003CAA  A0D8               	btfss	status,0,c
 10281  003CAC  EF5A  F01E         	goto	i2u570_41
 10282  003CB0  EF5C  F01E         	goto	i2u570_40
 10283  003CB4                     i2u570_41:
 10284  003CB4  EF2F  F01E         	goto	i2l4283
 10285  003CB8                     i2u570_40:
 10286  003CB8  0012               	return		;funcret
 10287  003CBA                     __end_ofi2_imprime_lcd:
 10288                           	callstack 0
 10289                           
 10290 ;; *************** function i2_strlen *****************
 10291 ;; Defined at:
 10292 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10295 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
 10296 ;;		 -> STR_1(17), 
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10299 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
 10300 ;;		 -> STR_1(17), 
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  2    0[COMRAM] unsigned int 
 10303 ;; Registers used:
 10304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10310 ;;      Params:         2       0       0       0       0       0       0       0       0
 10311 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10312 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10313 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10314 ;;Total ram usage:        4 bytes
 10315 ;; Hardware stack levels used: 1
 10316 ;; This function calls:
 10317 ;;		Nothing
 10318 ;; This function is called by:
 10319 ;;		i2_imprime_lcd
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323                           	psect	text42
 10324  003F26                     __ptext42:
 10325                           	callstack 0
 10326  003F26                     i2_strlen:
 10327                           	callstack 19
 10328  003F26  C001  F003         	movff	i2strlen@s,i2strlen@a
 10329  003F2A  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 10330  003F2E  EF9B  F01F         	goto	i2l4251
 10331  003F32                     i2l4249:
 10332  003F32  4A01               	infsnz	i2strlen@s^0,f,c
 10333  003F34  2A02               	incf	(i2strlen@s+1)^0,f,c
 10334  003F36                     i2l4251:
 10335  003F36  C001  FFF6         	movff	i2strlen@s,tblptrl
 10336  003F3A  C002  FFF7         	movff	i2strlen@s+1,tblptrh
 10337  003F3E  6AF8               	clrf	tblptru,c
 10338  003F40  0E07               	movlw	(high __ramtop+-1)
 10339  003F42  64F7               	cpfsgt	tblptrh,c
 10340  003F44  D003               	bra	i2u566_47
 10341  003F46  0008               	tblrd		*
 10342  003F48  50F5               	movf	tablat,w,c
 10343  003F4A  D005               	bra	i2u566_40
 10344  003F4C                     i2u566_47:
 10345  003F4C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10346  003F50  CFF7 FFE2          	movff	tblptrh,fsr1h
 10347  003F54  50E7               	movf	indf1,w,c
 10348  003F56                     i2u566_40:
 10349  003F56  0900               	iorlw	0
 10350  003F58  A4D8               	btfss	status,2,c
 10351  003F5A  EFB1  F01F         	goto	i2u567_41
 10352  003F5E  EFB3  F01F         	goto	i2u567_40
 10353  003F62                     i2u567_41:
 10354  003F62  EF99  F01F         	goto	i2l4249
 10355  003F66                     i2u567_40:
 10356  003F66  5003               	movf	i2strlen@a^0,w,c
 10357  003F68  5C01               	subwf	i2strlen@s^0,w,c
 10358  003F6A  6E01               	movwf	?i2_strlen^0,c
 10359  003F6C  5004               	movf	(i2strlen@a+1)^0,w,c
 10360  003F6E  5802               	subwfb	(i2strlen@s+1)^0,w,c
 10361  003F70  6E02               	movwf	(?i2_strlen+1)^0,c
 10362  003F72  0012               	return		;funcret
 10363  003F74                     __end_ofi2_strlen:
 10364                           	callstack 0
 10365                           
 10366 ;; *************** function i2_dado_lcd *****************
 10367 ;; Defined at:
 10368 ;;		line 16 in file "./lcd.intermed.h"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  dado            2    0[COMRAM] unsigned int 
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;		None
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  1    wreg      void 
 10375 ;; Registers used:
 10376 ;;		wreg
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/0
 10379 ;;		On exit  : 0/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10382 ;;      Params:         2       0       0       0       0       0       0       0       0
 10383 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10384 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10385 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10386 ;;Total ram usage:        3 bytes
 10387 ;; Hardware stack levels used: 1
 10388 ;; This function calls:
 10389 ;;		Nothing
 10390 ;; This function is called by:
 10391 ;;		i2_imprime_lcd
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           	psect	text43
 10396  004164                     __ptext43:
 10397                           	callstack 0
 10398  004164                     i2_dado_lcd:
 10399                           	callstack 19
 10400  004164                     
 10401                           ;./lcd.intermed.h: 16: void dado_lcd(unsigned int dado);./lcd.intermed.h: 17: {;./lcd.in
      +                          termed.h: 18:     PORTEbits.RE2 = 1;
 10402  004164  8484               	bsf	132,2,c	;volatile
 10403                           
 10404                           ;./lcd.intermed.h: 19:     PORTEbits.RE1 = 1;
 10405  004166  8284               	bsf	132,1,c	;volatile
 10406                           
 10407                           ;./lcd.intermed.h: 20:     PORTD = dado;
 10408  004168  C001  FF83         	movff	i2dado_lcd@dado,3971	;volatile
 10409  00416C                     
 10410                           ;./lcd.intermed.h: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
 10411  00416C  0E03               	movlw	3
 10412  00416E  6E03               	movwf	??i2_dado_lcd^0,c
 10413  004170  0E98               	movlw	152
 10414  004172                     i2u830_47:
 10415  004172  2EE8               	decfsz	wreg,f,c
 10416  004174  D7FE               	bra	i2u830_47
 10417  004176  2E03               	decfsz	??i2_dado_lcd^0,f,c
 10418  004178  D7FC               	bra	i2u830_47
 10419  00417A                     
 10420                           ;./lcd.intermed.h: 22:     PORTEbits.RE1 = 0;
 10421  00417A  9284               	bcf	132,1,c	;volatile
 10422  00417C  0012               	return		;funcret
 10423  00417E                     __end_ofi2_dado_lcd:
 10424                           	callstack 0
 10425                           
 10426 ;; *************** function i2___flge *****************
 10427 ;; Defined at:
 10428 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  ff1             4    0[COMRAM] void 
 10431 ;;  ff2             4    4[COMRAM] void 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;		None
 10434 ;; Return value:  Size  Location     Type
 10435 ;;		None               void
 10436 ;; Registers used:
 10437 ;;		wreg, status,2, status,0
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/0
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10443 ;;      Params:         8       0       0       0       0       0       0       0       0
 10444 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10445 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10446 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10447 ;;Total ram usage:       12 bytes
 10448 ;; Hardware stack levels used: 1
 10449 ;; This function calls:
 10450 ;;		Nothing
 10451 ;; This function is called by:
 10452 ;;		_alerta
 10453 ;;		_verificaOValor
 10454 ;;		_isr
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text44
 10459  0032B4                     __ptext44:
 10460                           	callstack 0
 10461  0032B4                     i2___flge:
 10462                           	callstack 21
 10463  0032B4  0E00               	movlw	0
 10464  0032B6  1401               	andwf	i2___flge@ff1^0,w,c
 10465  0032B8  6E09               	movwf	??i2___flge^0,c
 10466  0032BA  0E00               	movlw	0
 10467  0032BC  1402               	andwf	(i2___flge@ff1+1)^0,w,c
 10468  0032BE  6E0A               	movwf	(??i2___flge+1)^0,c
 10469  0032C0  0E80               	movlw	128
 10470  0032C2  1403               	andwf	(i2___flge@ff1+2)^0,w,c
 10471  0032C4  6E0B               	movwf	(??i2___flge+2)^0,c
 10472  0032C6  0E7F               	movlw	127
 10473  0032C8  1404               	andwf	(i2___flge@ff1+3)^0,w,c
 10474  0032CA  6E0C               	movwf	(??i2___flge+3)^0,c
 10475  0032CC  5009               	movf	??i2___flge^0,w,c
 10476  0032CE  100A               	iorwf	(??i2___flge+1)^0,w,c
 10477  0032D0  100B               	iorwf	(??i2___flge+2)^0,w,c
 10478  0032D2  100C               	iorwf	(??i2___flge+3)^0,w,c
 10479  0032D4  A4D8               	btfss	status,2,c
 10480  0032D6  EF6F  F019         	goto	i2u571_41
 10481  0032DA  EF71  F019         	goto	i2u571_40
 10482  0032DE                     i2u571_41:
 10483  0032DE  EF79  F019         	goto	i2l4293
 10484  0032E2                     i2u571_40:
 10485  0032E2  0E00               	movlw	0
 10486  0032E4  6E01               	movwf	i2___flge@ff1^0,c
 10487  0032E6  0E00               	movlw	0
 10488  0032E8  6E02               	movwf	(i2___flge@ff1+1)^0,c
 10489  0032EA  0E00               	movlw	0
 10490  0032EC  6E03               	movwf	(i2___flge@ff1+2)^0,c
 10491  0032EE  0E00               	movlw	0
 10492  0032F0  6E04               	movwf	(i2___flge@ff1+3)^0,c
 10493  0032F2                     i2l4293:
 10494  0032F2  0E00               	movlw	0
 10495  0032F4  1405               	andwf	i2___flge@ff2^0,w,c
 10496  0032F6  6E09               	movwf	??i2___flge^0,c
 10497  0032F8  0E00               	movlw	0
 10498  0032FA  1406               	andwf	(i2___flge@ff2+1)^0,w,c
 10499  0032FC  6E0A               	movwf	(??i2___flge+1)^0,c
 10500  0032FE  0E80               	movlw	128
 10501  003300  1407               	andwf	(i2___flge@ff2+2)^0,w,c
 10502  003302  6E0B               	movwf	(??i2___flge+2)^0,c
 10503  003304  0E7F               	movlw	127
 10504  003306  1408               	andwf	(i2___flge@ff2+3)^0,w,c
 10505  003308  6E0C               	movwf	(??i2___flge+3)^0,c
 10506  00330A  5009               	movf	??i2___flge^0,w,c
 10507  00330C  100A               	iorwf	(??i2___flge+1)^0,w,c
 10508  00330E  100B               	iorwf	(??i2___flge+2)^0,w,c
 10509  003310  100C               	iorwf	(??i2___flge+3)^0,w,c
 10510  003312  A4D8               	btfss	status,2,c
 10511  003314  EF8E  F019         	goto	i2u572_41
 10512  003318  EF90  F019         	goto	i2u572_40
 10513  00331C                     i2u572_41:
 10514  00331C  EF98  F019         	goto	i2l4297
 10515  003320                     i2u572_40:
 10516  003320  0E00               	movlw	0
 10517  003322  6E05               	movwf	i2___flge@ff2^0,c
 10518  003324  0E00               	movlw	0
 10519  003326  6E06               	movwf	(i2___flge@ff2+1)^0,c
 10520  003328  0E00               	movlw	0
 10521  00332A  6E07               	movwf	(i2___flge@ff2+2)^0,c
 10522  00332C  0E00               	movlw	0
 10523  00332E  6E08               	movwf	(i2___flge@ff2+3)^0,c
 10524  003330                     i2l4297:
 10525  003330  AE04               	btfss	(i2___flge@ff1+3)^0,7,c
 10526  003332  EF9D  F019         	goto	i2u573_41
 10527  003336  EF9F  F019         	goto	i2u573_40
 10528  00333A                     i2u573_41:
 10529  00333A  EFA8  F019         	goto	i2l4301
 10530  00333E                     i2u573_40:
 10531  00333E  6C01               	negf	i2___flge@ff1^0,c
 10532  003340  1E02               	comf	(i2___flge@ff1+1)^0,f,c
 10533  003342  B0D8               	btfsc	status,0,c
 10534  003344  2A02               	incf	(i2___flge@ff1+1)^0,f,c
 10535  003346  1E03               	comf	(i2___flge@ff1+2)^0,f,c
 10536  003348  B0D8               	btfsc	status,0,c
 10537  00334A  2A03               	incf	(i2___flge@ff1+2)^0,f,c
 10538  00334C  0E80               	movlw	128
 10539  00334E  5604               	subfwb	(i2___flge@ff1+3)^0,f,c
 10540  003350                     i2l4301:
 10541  003350  AE08               	btfss	(i2___flge@ff2+3)^0,7,c
 10542  003352  EFAD  F019         	goto	i2u574_41
 10543  003356  EFAF  F019         	goto	i2u574_40
 10544  00335A                     i2u574_41:
 10545  00335A  EFB8  F019         	goto	i2l352
 10546  00335E                     i2u574_40:
 10547  00335E  6C05               	negf	i2___flge@ff2^0,c
 10548  003360  1E06               	comf	(i2___flge@ff2+1)^0,f,c
 10549  003362  B0D8               	btfsc	status,0,c
 10550  003364  2A06               	incf	(i2___flge@ff2+1)^0,f,c
 10551  003366  1E07               	comf	(i2___flge@ff2+2)^0,f,c
 10552  003368  B0D8               	btfsc	status,0,c
 10553  00336A  2A07               	incf	(i2___flge@ff2+2)^0,f,c
 10554  00336C  0E80               	movlw	128
 10555  00336E  5608               	subfwb	(i2___flge@ff2+3)^0,f,c
 10556  003370                     i2l352:
 10557  003370  0E00               	movlw	0
 10558  003372  1A01               	xorwf	i2___flge@ff1^0,f,c
 10559  003374  0E00               	movlw	0
 10560  003376  1A02               	xorwf	(i2___flge@ff1+1)^0,f,c
 10561  003378  0E00               	movlw	0
 10562  00337A  1A03               	xorwf	(i2___flge@ff1+2)^0,f,c
 10563  00337C  0E80               	movlw	128
 10564  00337E  1A04               	xorwf	(i2___flge@ff1+3)^0,f,c
 10565  003380  0E00               	movlw	0
 10566  003382  1A05               	xorwf	i2___flge@ff2^0,f,c
 10567  003384  0E00               	movlw	0
 10568  003386  1A06               	xorwf	(i2___flge@ff2+1)^0,f,c
 10569  003388  0E00               	movlw	0
 10570  00338A  1A07               	xorwf	(i2___flge@ff2+2)^0,f,c
 10571  00338C  0E80               	movlw	128
 10572  00338E  1A08               	xorwf	(i2___flge@ff2+3)^0,f,c
 10573  003390  5005               	movf	i2___flge@ff2^0,w,c
 10574  003392  5C01               	subwf	i2___flge@ff1^0,w,c
 10575  003394  5006               	movf	(i2___flge@ff2+1)^0,w,c
 10576  003396  5802               	subwfb	(i2___flge@ff1+1)^0,w,c
 10577  003398  5007               	movf	(i2___flge@ff2+2)^0,w,c
 10578  00339A  5803               	subwfb	(i2___flge@ff1+2)^0,w,c
 10579  00339C  5008               	movf	(i2___flge@ff2+3)^0,w,c
 10580  00339E  5804               	subwfb	(i2___flge@ff1+3)^0,w,c
 10581  0033A0  B0D8               	btfsc	status,0,c
 10582  0033A2  EFD5  F019         	goto	i2u575_41
 10583  0033A6  EFD7  F019         	goto	i2u575_40
 10584  0033AA                     i2u575_41:
 10585  0033AA  EFDA  F019         	goto	i2l4307
 10586  0033AE                     i2u575_40:
 10587  0033AE  90D8               	bcf	status,0,c
 10588  0033B0  EFDB  F019         	goto	i2l357
 10589  0033B4                     i2l4307:
 10590  0033B4  80D8               	bsf	status,0,c
 10591  0033B6                     i2l357:
 10592  0033B6  0012               	return		;funcret
 10593  0033B8                     __end_ofi2___flge:
 10594                           	callstack 0
 10595                           
 10596                           	psect	rparam
 10597  0000                     
 10598                           	psect	temp
 10599  000041                     btemp:
 10600                           	callstack 0
 10601  000041                     	ds	1
 10602  0000                     int$flags	set	btemp
 10603  0000                     wtemp8	set	btemp+1
 10604  0000                     ttemp5	set	btemp+1
 10605  0000                     ttemp6	set	btemp+4
 10606  0000                     ttemp7	set	btemp+8
 10607                           
 10608                           	psect	idloc
 10609                           
 10610                           ;Config register IDLOC0 @ 0x200000
 10611                           ;	unspecified, using default values
 10612  200000                     	org	2097152
 10613  200000  FF                 	db	255
 10614                           
 10615                           ;Config register IDLOC1 @ 0x200001
 10616                           ;	unspecified, using default values
 10617  200001                     	org	2097153
 10618  200001  FF                 	db	255
 10619                           
 10620                           ;Config register IDLOC2 @ 0x200002
 10621                           ;	unspecified, using default values
 10622  200002                     	org	2097154
 10623  200002  FF                 	db	255
 10624                           
 10625                           ;Config register IDLOC3 @ 0x200003
 10626                           ;	unspecified, using default values
 10627  200003                     	org	2097155
 10628  200003  FF                 	db	255
 10629                           
 10630                           ;Config register IDLOC4 @ 0x200004
 10631                           ;	unspecified, using default values
 10632  200004                     	org	2097156
 10633  200004  FF                 	db	255
 10634                           
 10635                           ;Config register IDLOC5 @ 0x200005
 10636                           ;	unspecified, using default values
 10637  200005                     	org	2097157
 10638  200005  FF                 	db	255
 10639                           
 10640                           ;Config register IDLOC6 @ 0x200006
 10641                           ;	unspecified, using default values
 10642  200006                     	org	2097158
 10643  200006  FF                 	db	255
 10644                           
 10645                           ;Config register IDLOC7 @ 0x200007
 10646                           ;	unspecified, using default values
 10647  200007                     	org	2097159
 10648  200007  FF                 	db	255
 10649                           
 10650                           	psect	config
 10651                           
 10652                           ;Config register CONFIG1L @ 0x300000
 10653                           ;	unspecified, using default values
 10654                           ;	PLL Prescaler Selection bits
 10655                           ;	PLLDIV = 0x0, unprogrammed default
 10656                           ;	System Clock Postscaler Selection bits
 10657                           ;	CPUDIV = 0x0, unprogrammed default
 10658                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10659                           ;	USBDIV = 0x0, unprogrammed default
 10660  300000                     	org	3145728
 10661  300000  00                 	db	0
 10662                           
 10663                           ;Config register CONFIG1H @ 0x300001
 10664                           ;	Oscillator Selection bits
 10665                           ;	FOSC = HS, HS oscillator (HS)
 10666                           ;	Fail-Safe Clock Monitor Enable bit
 10667                           ;	FCMEN = 0x0, unprogrammed default
 10668                           ;	Internal/External Oscillator Switchover bit
 10669                           ;	IESO = 0x0, unprogrammed default
 10670  300001                     	org	3145729
 10671  300001  0C                 	db	12
 10672                           
 10673                           ;Config register CONFIG2L @ 0x300002
 10674                           ;	unspecified, using default values
 10675                           ;	Power-up Timer Enable bit
 10676                           ;	PWRT = 0x1, unprogrammed default
 10677                           ;	Brown-out Reset Enable bits
 10678                           ;	BOR = 0x3, unprogrammed default
 10679                           ;	Brown-out Reset Voltage bits
 10680                           ;	BORV = 0x3, unprogrammed default
 10681                           ;	USB Voltage Regulator Enable bit
 10682                           ;	VREGEN = 0x0, unprogrammed default
 10683  300002                     	org	3145730
 10684  300002  1F                 	db	31
 10685                           
 10686                           ;Config register CONFIG2H @ 0x300003
 10687                           ;	Watchdog Timer Enable bit
 10688                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10689                           ;	Watchdog Timer Postscale Select bits
 10690                           ;	WDTPS = 0xF, unprogrammed default
 10691  300003                     	org	3145731
 10692  300003  1E                 	db	30
 10693                           
 10694                           ; Padding undefined space
 10695  300004                     	org	3145732
 10696  300004  FF                 	db	255
 10697                           
 10698                           ;Config register CONFIG3H @ 0x300005
 10699                           ;	CCP2 MUX bit
 10700                           ;	CCP2MX = 0x1, unprogrammed default
 10701                           ;	PORTB A/D Enable bit
 10702                           ;	PBADEN = 0x1, unprogrammed default
 10703                           ;	Low-Power Timer 1 Oscillator Enable bit
 10704                           ;	LPT1OSC = 0x0, unprogrammed default
 10705                           ;	MCLR Pin Enable bit
 10706                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10707  300005                     	org	3145733
 10708  300005  83                 	db	131
 10709                           
 10710                           ;Config register CONFIG4L @ 0x300006
 10711                           ;	unspecified, using default values
 10712                           ;	Stack Full/Underflow Reset Enable bit
 10713                           ;	STVREN = 0x1, unprogrammed default
 10714                           ;	Single-Supply ICSP Enable bit
 10715                           ;	LVP = 0x1, unprogrammed default
 10716                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10717                           ;	ICPRT = 0x0, unprogrammed default
 10718                           ;	Extended Instruction Set Enable bit
 10719                           ;	XINST = 0x0, unprogrammed default
 10720                           ;	Background Debugger Enable bit
 10721                           ;	DEBUG = 0x1, unprogrammed default
 10722  300006                     	org	3145734
 10723  300006  85                 	db	133
 10724                           
 10725                           ; Padding undefined space
 10726  300007                     	org	3145735
 10727  300007  FF                 	db	255
 10728                           
 10729                           ;Config register CONFIG5L @ 0x300008
 10730                           ;	unspecified, using default values
 10731                           ;	Code Protection bit
 10732                           ;	CP0 = 0x1, unprogrammed default
 10733                           ;	Code Protection bit
 10734                           ;	CP1 = 0x1, unprogrammed default
 10735                           ;	Code Protection bit
 10736                           ;	CP2 = 0x1, unprogrammed default
 10737                           ;	Code Protection bit
 10738                           ;	CP3 = 0x1, unprogrammed default
 10739  300008                     	org	3145736
 10740  300008  0F                 	db	15
 10741                           
 10742                           ;Config register CONFIG5H @ 0x300009
 10743                           ;	unspecified, using default values
 10744                           ;	Boot Block Code Protection bit
 10745                           ;	CPB = 0x1, unprogrammed default
 10746                           ;	Data EEPROM Code Protection bit
 10747                           ;	CPD = 0x1, unprogrammed default
 10748  300009                     	org	3145737
 10749  300009  C0                 	db	192
 10750                           
 10751                           ;Config register CONFIG6L @ 0x30000A
 10752                           ;	unspecified, using default values
 10753                           ;	Write Protection bit
 10754                           ;	WRT0 = 0x1, unprogrammed default
 10755                           ;	Write Protection bit
 10756                           ;	WRT1 = 0x1, unprogrammed default
 10757                           ;	Write Protection bit
 10758                           ;	WRT2 = 0x1, unprogrammed default
 10759                           ;	Write Protection bit
 10760                           ;	WRT3 = 0x1, unprogrammed default
 10761  30000A                     	org	3145738
 10762  30000A  0F                 	db	15
 10763                           
 10764                           ;Config register CONFIG6H @ 0x30000B
 10765                           ;	unspecified, using default values
 10766                           ;	Configuration Register Write Protection bit
 10767                           ;	WRTC = 0x1, unprogrammed default
 10768                           ;	Boot Block Write Protection bit
 10769                           ;	WRTB = 0x1, unprogrammed default
 10770                           ;	Data EEPROM Write Protection bit
 10771                           ;	WRTD = 0x1, unprogrammed default
 10772  30000B                     	org	3145739
 10773  30000B  E0                 	db	224
 10774                           
 10775                           ;Config register CONFIG7L @ 0x30000C
 10776                           ;	unspecified, using default values
 10777                           ;	Table Read Protection bit
 10778                           ;	EBTR0 = 0x1, unprogrammed default
 10779                           ;	Table Read Protection bit
 10780                           ;	EBTR1 = 0x1, unprogrammed default
 10781                           ;	Table Read Protection bit
 10782                           ;	EBTR2 = 0x1, unprogrammed default
 10783                           ;	Table Read Protection bit
 10784                           ;	EBTR3 = 0x1, unprogrammed default
 10785  30000C                     	org	3145740
 10786  30000C  0F                 	db	15
 10787                           
 10788                           ;Config register CONFIG7H @ 0x30000D
 10789                           ;	unspecified, using default values
 10790                           ;	Boot Block Table Read Protection bit
 10791                           ;	EBTRB = 0x1, unprogrammed default
 10792  30000D                     	org	3145741
 10793  30000D  40                 	db	64
 10794                           tosu	equ	0xFFF
 10795                           tosh	equ	0xFFE
 10796                           tosl	equ	0xFFD
 10797                           stkptr	equ	0xFFC
 10798                           pclatu	equ	0xFFB
 10799                           pclath	equ	0xFFA
 10800                           pcl	equ	0xFF9
 10801                           tblptru	equ	0xFF8
 10802                           tblptrh	equ	0xFF7
 10803                           tblptrl	equ	0xFF6
 10804                           tablat	equ	0xFF5
 10805                           prodh	equ	0xFF4
 10806                           prodl	equ	0xFF3
 10807                           indf0	equ	0xFEF
 10808                           postinc0	equ	0xFEE
 10809                           postdec0	equ	0xFED
 10810                           preinc0	equ	0xFEC
 10811                           plusw0	equ	0xFEB
 10812                           fsr0h	equ	0xFEA
 10813                           fsr0l	equ	0xFE9
 10814                           wreg	equ	0xFE8
 10815                           indf1	equ	0xFE7
 10816                           postinc1	equ	0xFE6
 10817                           postdec1	equ	0xFE5
 10818                           preinc1	equ	0xFE4
 10819                           plusw1	equ	0xFE3
 10820                           fsr1h	equ	0xFE2
 10821                           fsr1l	equ	0xFE1
 10822                           bsr	equ	0xFE0
 10823                           indf2	equ	0xFDF
 10824                           postinc2	equ	0xFDE
 10825                           postdec2	equ	0xFDD
 10826                           preinc2	equ	0xFDC
 10827                           plusw2	equ	0xFDB
 10828                           fsr2h	equ	0xFDA
 10829                           fsr2l	equ	0xFD9
 10830                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        8
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      64
    BANK0           160    143     159
    BANK1           256      8      88
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), temperature(BANK0[8]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), temperature(BANK0[8]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S821_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    imprime_lcd@frase	PTR unsigned char  size(2) Largest target is 17
		 -> temperature(BANK0[8]), STR_3(CODE[12]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_tolower
    _efgtoa->___fladd
    _efgtoa->___fldiv
    _efgtoa->___fleq
    _efgtoa->___flmul
    _efgtoa->_tolower
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _limpa_lcd->_comando_lcd
    _imprime_lcd->_strlen

Critical Paths under _isr in COMRAM

    _isr->i2___flsub
    _verificaOValor->i2___flsub
    i2___flsub->i2___fladd
    _alerta->i2_imprime_lcd
    i2_limpa_lcd->i2_comando_lcd
    i2_imprime_lcd->i2_strlen

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   41650
                                            141 BANK0      2     2      0
                        _comando_lcd
                        _imprime_lcd
                          _limpa_lcd
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   39674
                                            133 BANK0      8     0      8
                                              0 BANK1      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   39164
                                            125 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   38613
                                            101 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             30 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   31280
                                             33 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             36 COMRAM     6     4      2
                                              0 BANK0      2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             30 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             30 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4047
                                              4 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             39 COMRAM     3     3      0
                                              0 BANK0      4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             30 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             30 COMRAM     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             30 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4667
                                             13 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3772
                                             30 COMRAM    12     4      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             30 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             30 COMRAM    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1646
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             30 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                             30 COMRAM    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             30 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1695
                                             37 COMRAM     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             30 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             30 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _limpa_lcd                                            0     0      0     528
                        _comando_lcd
 ---------------------------------------------------------------------------------
 (2) _comando_lcd                                          3     1      2     528
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _imprime_lcd                                          9     7      2     920
                                             34 COMRAM     5     3      2
                                              0 BANK0      4     4      0
                           _dado_lcd
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _dado_lcd                                             3     1      2     121
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  6     6      0   11103
                                             24 COMRAM     6     6      0
                             _alerta
                     _verificaOValor
                          i2___fladd
                           i2___flge
                          i2___flsub
 ---------------------------------------------------------------------------------
 (10) _verificaOValor                                      0     0      0    5079
                          i2___fladd
                           i2___flge
                          i2___flsub
 ---------------------------------------------------------------------------------
 (10) i2___flsub                                           8     0      8    2393
                                             16 COMRAM     8     0      8
                          i2___fladd
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2192
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (10) _alerta                                              2     2      0     945
                                             13 COMRAM     2     2      0
                           i2___flge
                      i2_comando_lcd
                      i2_imprime_lcd
                        i2_limpa_lcd
 ---------------------------------------------------------------------------------
 (11) i2_limpa_lcd                                         0     0      0      74
                      i2_comando_lcd
 ---------------------------------------------------------------------------------
 (12) i2_comando_lcd                                       3     1      2      74
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (11) i2_imprime_lcd                                       9     7      2     303
                                              4 COMRAM     9     7      2
                         i2_dado_lcd
                           i2_strlen
 ---------------------------------------------------------------------------------
 (12) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_dado_lcd                                          3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (10) i2___flge                                           12     4      8     494
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _comando_lcd
   _imprime_lcd
     _dado_lcd
     _strlen
   _limpa_lcd
     _comando_lcd
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _isr (ROOT)
   _alerta
     i2___flge
     i2_comando_lcd
     i2_imprime_lcd
       i2_dado_lcd
       i2_strlen
     i2_limpa_lcd
       i2_comando_lcd
   _verificaOValor
     i2___fladd
     i2___flge
     i2___flsub
       i2___fladd
   i2___fladd
   i2___flge
   i2___flsub

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      8      58       7       34.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8F      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      40       1       68.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     137      20        0.0%
DATA                 0      0     137       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Oct 05 23:26:12 2021

           ___fldiv@aexp 006C             ___fldiv@bexp 006B             ___fldiv@sign 0064  
                     l31 412E                       l34 4148                       l43 3C3C  
                     l37 418A                       l87 4114             ___awdiv@sign 0024  
    ___wmul@multiplicand 0021                      l331 3B10                      l318 39AE  
                    l352 326C                      l361 40B6                      l346 3BBA  
                    l357 32B2                      l701 2450                      l710 26BE  
                    l711 26AC                      l615 1BF8                      l632 1D12  
                    l624 1EC8                      l616 1BE6                      l384 31AC  
                    l705 27B4                      l641 1DE2                      l617 1BAC  
                    l642 1DD0                      l811 38EA                      l708 2646  
                    l718 2776                      l806 386A                      l671 29B0  
                    l680 29F6                      l657 3FBA                      l809 38AE  
                    l682 2A6E                      l674 2974                      l683 2A5C  
                    l931 1A06                      l669 2B50                      l829 149A  
                    l765 3E32                      l847 0C30                      l944 3D12  
                    l945 3D1A                      l938 194C                      l955 34B6  
                    l875 106E                      l984 309E                      l993 2D66  
                    l987 30A6                      l996 2CAA          ?_verificaOValor 0001  
            i2___fladd@a 0005              i2___fladd@b 0001               i2_dado_lcd 4164  
                    _pad 3824                      _isr 0008             ___awmod@sign 0024  
                    wreg 000FE8              i2___flsub@a 0015              i2___flsub@b 0011  
           ___flmul@aexp 0061             ___flmul@bexp 0066             ___flmul@sign 0060  
           ___flmul@temp 006B             ___flmul@prod 0067             ___fltol@exp1 0028  
                   l1003 40EE                     l1011 3ED6                     l1032 3822  
                   l1040 4000                     l1017 407E                     l1043 41A2  
                   l1055 3F24                     l1049 3DD8                     l1074 3D7C  
                   l1059 3686                     l1069 3D74                     l5001 3982  
                   l5003 3988                     l5005 398E                     l5021 3A80  
                   l5013 3A62                     l5101 30D2                     l5007 399E  
                   l5031 3AB8                     l5023 3A8E                     l5015 3A66  
                   l5111 3120                     l5103 30FC                     l5009 39A6  
                   l5033 3AC6                     l5041 3AF0                     l5025 3A96  
                   l5017 3A74                     l5121 314C                     l5105 30FE  
                   l5201 2BCA                     l5043 3B00                     l5035 3ADC  
                   l5027 3AA8                     l5019 3A7C                     l5051 3B40  
                   l5131 317C                     l5107 310E                     l5211 2C9A  
                   l5203 2BDE                     l4261 412C                     l4317 417E  
                   l5045 3B08                     l5037 3AE4                     l5029 3AB0  
                   l5061 3BB8                     l5053 3B50                     l4501 1A90  
                   l5133 318C                     l5117 3138                     l5109 3112  
                   l5221 2D56                     l5205 2BEC                     l5213 2CCE  
                   l5141 3832                     l5231 3E8A                     l5039 3AEA  
                   l5055 3B7E                     l5071 321C                     l4511 1AD0  
                   l4503 1A9E                     l5135 319C                     l5127 3160  
                   l5119 3142                     l5215 2D0A                     l5151 388A  
                   l5143 3846                     l4257 4116                     l5225 40B8  
                   l5233 3E9E                     l5057 3B8E                     l5049 3B12  
                   l5081 32AA                     l5073 322C                     l5065 31AE  
                   l4601 1CAC                     l4521 1B0A                     l4513 1AD2  
                   l4505 1AA0                     l5129 316C                     l5161 33B8  
                   l5217 2D1E                     l5209 2C5E                     l5153 3890  
                   l5145 3856                     l5401 0F4C                     l5321 0B8E  
                   l5313 0AC4                     l5241 083E                     l4259 411E  
                   l5235 3ECC                     l5059 3BB2                     l5083 32B0  
                   l5075 323A                     l5067 31DE                     l5091 40A6  
                   l4611 1D28                     l4603 1CE0                     l4531 1B1E  
                   l4523 1B0E                     l4507 1AB0                     l4515 1ADA  
                   l5163 33D8                     l5219 2D46                     l4451 375A  
                   l5155 38BC                     l5147 3862                     l5139 3824  
                   l5411 1020                     l5403 0F5C                     l5331 0BF0  
                   l5323 0B96                     l5315 0AF8                     l5307 0A74  
                   l5251 0892                     l5243 0848                     l5237 3ED0  
                   l5229 3E86                     l4701 27D4                     l5077 324C  
                   l5069 31EE                     l4621 1D64                     l4613 1D38  
                   l4605 1CE2                     l4541 1B32                     l4533 1B22  
                   l4525 1B12                     l4517 1AEA                     l4509 1AC0  
                   l5165 3418                     l5173 3458                     l4461 37DC  
                   l4453 376C                     l5157 38D0                     l5149 3876  
                   l5501 1340                     l5421 1066                     l5413 1034  
                   l5405 0F90                     l5333 0C02                     l5317 0AFE  
                   l5325 0BCA                     l5309 0A8E                     l5261 08D6  
                   l5253 089C                     l5245 0858                     ?_pad 0064  
                   l4471 3F18                     l4703 27E4                     l4711 280E  
                   l5079 325A                     l5087 4080                     l4631 1D90  
                   l4623 1D66                     l4607 1CF2                     l4551 1B46  
                   l4543 1B36                     l4535 1B26                     l4527 1B16  
                   l4519 1AFC                     l5095 30A8                     l5175 346A  
                   l5167 3440                     l4455 377E                     l5183 3D7E  
                   l5191 3D54                     l5503 1346                     l5511 1396  
                   l5431 1122                     l5423 108A                     l5407 0FE8  
                   l5415 1038                     l5351 0CB2                     l5335 0C0A  
                   l5327 0BDA                     l5319 0B5A                     l5263 08E2  
                   l5271 08F8                     l5255 08A4                     l5247 0866  
                   l4465 3ED8                     l4801 2A7E                     l4721 283A  
                   l4713 281E                     l4705 27F4                     l5089 4096  
                   l4641 1DC8                     l4625 1D74                     l4617 1D4C  
                   l4633 1D92                     l4609 1D02                     l4561 1BA4  
                   l4545 1B3A                     l4537 1B2A                     l4529 1B1A  
                   l4553 1B4A                     l4481 1A26                     l5097 30BE  
                   l5169 344C                     l4457 3788                     l5185 3D8E  
                   l5193 3D66                     l5521 13E6                     l5513 13A8  
                   l5505 136C                     l5441 116A                     l5433 1130  
                   l5425 10EE                     l5417 1048                     l5409 0FEC  
                   l5361 0CEA                     l5353 0CBA                     l5345 0C4E  
                   l5337 0C24                     l5329 0BDE                     l5281 0982  
                   l5273 091E                     l5265 08EA                     l5257 08B6  
                   l5249 086E                     l5601 35F6                     l4467 3EE4  
                   l4811 2AE0                     l4803 2A8A                     l4723 284A  
                   l4731 2874                     l4715 2824                     l4707 2804  
                   l4651 1E46                     l4627 1D7C                     l4619 1D56  
                   l4635 1DA0                     l4571 1BDA                     l4563 1BBA  
                   l4555 1B4E                     l4547 1B3E                     l4539 1B2E  
                   l4483 1A36                     l4491 1A60                     l4475 1A08  
                   l5179 34AE                     l4459 37A6                     l5187 3D1C  
                   l5523 13EE                     l5515 13C2                     l5507 1388  
                   l5451 1194                     l5443 116E                     l5427 10FC  
                   l5435 1138                     l5419 105A                     l5371 0D34  
                   l5363 0CF8                     l5347 0C60                     l5355 0CBE  
                   l5339 0C3C                     l5291 09F4                     l5283 099A  
                   l5267 08EE                     l5259 08C4                     l5603 360E  
                   l4469 3EE8                     l4821 2B3E                     l4813 2AF6  
                   l4805 2A98                     l4741 28B6                     l4733 2884  
                   l4725 285A                     l4717 282A                     l4709 2806  
                   l4901 255C                     l4661 1E8C                     l4645 1DF2  
                   l4653 1E48                     l4637 1DA4                     l4629 1D80  
                   l4581 1C2A                     l4573 1BE4                     l4565 1BC6  
                   l4557 1B78                     l4549 1B42                     l4493 1A70  
                   l4485 1A46                     l4477 1A16                     l5197 2B52  
                   l5541 1474                     l5533 143E                     l5525 13FE  
                   l5517 13C8                     l5509 1390                     l5461 11C8  
                   l5453 119A                     l5445 1174                     l5437 114C  
                   l5429 1110                     l5381 0D7A                     l5373 0D46  
                   l5365 0CFC                     l5357 0CC6                     l5349 0C7C  
                   l5285 09A4                     l5277 0954                     l5269 08F2  
                   l5605 362A                     l5701 1992                     l5621 14E4  
                   l5613 149C                     l5551 2F2A                     l4823 2B44  
                   l4815 2B10                     l4807 2AC2                     l4735 289A  
                   l4727 286A                     l4719 2838                     l4911 2600  
                   l4903 2578                     l4671 1EB6                     l4663 1E9A  
                   l4655 1E58                     l4647 1DFE                     l4639 1DB2  
                   l4591 1C66                     l4583 1C3A                     l4575 1C06  
                   l4567 1BCA                     l4559 1B94                     l4495 1A76  
                   l4487 1A56                     l4479 1A24                     l5199 2B72  
                   l5543 147A                     l5535 1450                     l5527 1404  
                   l5519 13DA                     l5447 1180                     l5439 115A  
                   l5455 11A0                     l5463 11CE                     l5471 1266  
                   l5391 0E8E                     l5383 0DDE                     l5367 0D0E  
                   l5375 0D4E                     l5359 0CD8                     l5295 0A2A  
                   l5279 0966                     l5607 363C                     l5703 19A6  
                   l5631 157A                     l5623 1508                     l5615 14C0  
                   l5721 4130                     l5561 2F88                     l5553 2F2E  
                   l4825 2B46                     l4817 2B2C                     l4809 2AC6  
                   l4761 2938                     l4753 28EE                     l4737 28AA  
                   l4745 28CA                     l4729 286C                     l4921 2656  
                   l4913 260E                     l4905 2584                     l4841 23B8  
                   l4833 238A                     l4673 1EB8                     l4665 1EA0  
                   l4657 1E68                     l4649 1E0C                     l4593 1C74  
                   l4585 1C48                     l4577 1C16                     l4569 1BD8  
                   l4497 1A88                     l4489 1A58                     l4681 3FDA  
                   l5537 145C                     l5529 140A                     l5481 12D0  
                   l5473 1284                     l5465 1226                     l5457 11B2  
                   l5449 1190                     l5393 0EC2                     l5385 0E36  
                   l5377 0D56                     l5369 0D1C                     l5297 0A3C  
                   l5289 09CE                     l5609 3664                     l5641 1606  
                   l5633 1588                     l5625 153E                     l5617 14CE  
                   l5713 19D0                     l5723 4138                     l4691 410C  
                   l5571 2FB4                     l5555 2F32                     l4819 2B30  
                   l4771 297E                     l4763 2940                     l4755 2908  
                   l4747 28DA                     l4739 28B2                     l4923 2664  
                   l4915 262C                     l4907 25A0                     l4851 23F4  
                   l4843 23C8                     l4835 2398                     l4667 1EA2  
                   l4659 1E88                     l4595 1C76                     l4587 1C56  
                   l4499 1A8A                     l4683 3FDE                     l5539 1464  
                   l5491 130E                     l5483 12D4                     l5475 12A0  
                   l5467 125A                     l5459 11C4                     l5395 0EF6  
                   l5387 0E6A                     l5379 0D66                     l5299 0A58  
                   l5715 19F4                     l5707 19B4                     l5651 169A  
                   l5643 160E                     l5627 154C                     l5619 14E0  
                   l5731 3CD0                     l5725 4146                     l5741 3C16  
                   l5581 305E                     l5573 2FE8                     l5565 2F8E  
                   l5557 2F4E                     l5549 2F14                     l4781 29D6  
                   l4773 299C                     l4765 2950                     l4757 2918  
                   l4749 28DA                     l4933 26CE                     l4941 2716  
                   l4925 2668                     l4917 2636                     l4909 25CA  
                   l4861 242A                     l4853 23FA                     l4845 23D8  
                   l4837 23A6                     l4669 1EA8                     l4597 1C80  
                   l4589 1C62                     l4677 3FBC                     l4685 4048  
                   l5493 1316                     l5485 12E4                     l5477 12B2  
                   l5469 1262                     l5397 0F0A                     l5389 0E70  
                   l5709 19C2                     l5661 1724                     l5653 16A8  
                   l5645 161C                     l5637 15D0                     l5629 155A  
                   l5733 3CF6                     l5743 3C1C                     l5735 3BBC  
                   l5583 3070                     l5567 2FA4                     l5559 2F84  
                   l4791 2A14                     l4783 29DC                     l4775 299E  
                   l4767 2964                     l4759 2928                     l4695 27B6  
                   l4951 278A                     l4943 2730                     l4935 26DA  
                   l4927 2676                     l4919 2644                     l4863 243A  
                   l4855 2408                     l4847 23DE                     l4839 23A8  
                   l4599 1C86                     l4679 3FC8                     l5495 1324  
                   l5487 12F6                     l5479 12C0                     l5399 0F3C  
                   l5671 17BA                     l5663 1734                     l5647 1640  
                   l5639 15E2                     l5727 3CBA                     l5751 3DFC  
                   l5737 3BC6                     l4689 40F0                     l5585 3082  
                   l5825 2FD2                     l5577 3020                     l5569 2FAC  
                   l4793 2A18                     l4785 29E6                     l4777 29AE  
                   l4769 2972                     l4697 27C4                     l4953 2798  
                   l4945 2744                     l4937 26E8                     l4929 26A4  
                   l4881 24BC                     l4873 2484                     l4865 2440  
                   l4857 240A                     l4849 23EE                     l5497 132C  
                   l5489 12FE                     l5593 35B2                     l5673 17D0  
                   l5681 183A                     l5665 1766                     l5657 16F0  
                   l5649 167A                     l5729 3CC2                     l5753 3E1A  
                   l5745 3DDA                     l5761 34D2                     l5739 3BDE  
                   l4971 38F0                     l4795 2A26                     l4787 29F4  
                   l4779 29C0                     l4699 27D2                     l4955 279A  
                   l4947 275E                     l4939 2712                     l4891 2506  
                   l4883 24D4                     l4875 2490                     l4867 2460  
                   l4859 241A                     l4963 3F74                     l5499 1334  
                   l5595 35DC                     l5691 191C                     l5683 1868  
                   l5675 17DE                     l5667 1776                     l5659 1702  
                   l5747 3DEC                     l5771 34F0                     l5763 34D4  
                   ?_isr 0001                     l4981 3920                     l4973 38FE  
                   l4797 2A54                     l4789 2A06                     l4949 277A  
                   l4957 27A0                     l4893 2516                     l4885 24E0  
                   l4877 249A                     l4869 2470                     l4965 3F86  
                   l5677 180E                     l5669 17A8                     l5749 3DF4  
                   l5781 3520                     l5773 34F4                     l5765 34D6  
                   l5757 34B8                     l4991 394E                     l4983 3924  
                   l4975 3906                     l4959 27A4                     l4895 2522  
                   l4887 24EC                     l4879 24B0                     l5599 35E8  
                   l5687 18D6                     l5791 3584                     l5783 353A  
                   l5775 3500                     l5767 34D8                     l5759 34BE  
                   l4993 395C                     l4985 392C                     l4977 390A  
                   l4969 38EC                     l4897 2532                     l4889 24FA  
                   l5689 18E8                     l5697 1960                     l5793 3590  
                   l5785 3546                     l5777 350C                     l5769 34E4  
                   l4995 3962                     l4987 393E                     l4979 3918  
                   l4899 254C                     l5699 1984                     l5787 3552  
                   l5779 351C                     l4997 3978                     l4989 3946  
                   l5789 355E                     l4999 3980                     STR_1 0812  
                   STR_2 0801                     STR_3 0806                     STR_4 0823  
                   STR_5 0829                     STR_6 0831                     STR_9 082D  
                   u6000 1AFC                     u6001 1AF8                     u6010 1B0A  
                   u6011 1B06                     u6100 1C48                     u6020 1B78  
                   u6101 1C44                     u6021 1B74                     u6110 1C56  
                   u6030 1B90                     u6111 1C52                     u6031 1B8A  
                   u6200 1DA0                     u6120 1C74                     u6040 1B92  
                   u7000 3120                     u6201 1D9C                     u6121 1C70  
                   u7001 311C                     u6210 1DB2                     u6130 1CAC  
                   u6050 1BBA                     u7010 3134                     u6211 1DAE  
                   u6131 1CA8                     u6051 1BB6                     u7011 3130  
                   u6300 1E9A                     u6220 1DC8                     u6140 1CF2  
                   u6060 1BD8                     u7020 315C                     u7100 3418  
                   u6301 1E96                     u6221 1DC4                     u6141 1CEE  
                   u6061 1BD4                     u7021 3158                     u7101 3414  
                   u6310 1EB6                     u6230 1DDE                     u6150 1D28  
                   u6070 1BF8                     u7030 317C                     u7110 3440  
                   u6311 1EB2                     u6231 1DDA                     u6151 1D24  
                   u6071 1BF4                     u7031 3178                     u7111 343C  
                   u6400 285A                     u6240 1DF2                     u6160 1D38  
                   u6080 1C06                     u7040 318C                     u7120 346A  
                   u6320 4000                     u7200 3D66                     u8000 3664  
                   u6401 2856                     u6241 1DEE                     u6161 1D34  
                   u6081 1C02                     u7041 3188                     u7121 3466  
                   u6321 3FFC                     u7201 3D62                     u8001 3660  
                   u6410 289A                     u6250 1E0C                     u6170 1D64  
                   u6090 1C16                     u7210 2B9C                     u7050 3832  
                   u6330 4078                     u8010 14C0                     u6411 2896  
                   u6251 1E08                     u6171 1D60                     u6091 1C12  
                   u7051 382E                     u6331 4072                     u8011 14BC  
                   u6500 2A26                     u6420 28DA                     u6260 1E46  
                   u6180 1D74                     u7140 34A4                     u7300 2D46  
                   u7220 2BCA                     u7060 3856                     u6340 407A  
                   u8100 16EC                     u8020 1508                     u6501 2A22  
                   u6421 28D6                     u6261 1E42                     u6181 1D70  
                   u7141 349E                     u7301 2D42                     u7221 2BC6  
                   u7061 3852                     u8021 1504                     u7310 40E8  
                   u6510 2A54                     u6430 2950                     u6350 27D2  
                   u6270 1E58                     u6190 1D90                     u7150 34A6  
                   u7230 2BEC                     u7070 38AE                     u8110 1702  
                   u8030 154C                     i2l31 4162                     u7311 40E2  
                   u6511 2A50                     u6431 294C                     u6351 27CE  
                   u6271 1E54                     u6191 1D8C                     u7135 347C  
                   u7231 2BE8                     u7215 2B92                     u7071 38AA  
                   u8111 16FE                     u8031 1548                     u7320 40EA  
                   u6520 2A6A                     u6440 2972                     u6360 27E4  
                   u6600 23C8                     u6280 1E68                     u7080 38BC  
                   u7160 3DC6                     u7400 094E                     u8120 1734  
                   u8040 15CA                     u8200 3D12                     u6521 2A66  
                   u6441 296E                     u6361 27E0                     u6601 23C4  
                   u6281 1E64                     u7081 38B8                     u7401 0948  
                   u8121 1730                     u8041 15C4                     u8201 3D0E  
                   i2l34 417C                     u8210 3C0A                     u7330 3E9E  
                   u6530 2A7E                     u6450 299C                     u6370 27F4  
                   u6610 2408                     u6290 1E88                     u7090 33F8  
                   u7250 2C5A                     u7170 3DD8                     u7410 0950  
                   u8130 1776                     u8050 15CC                     i2l43 3CB8  
                   u7331 3E9A                     u6531 2A7A                     u6451 2998  
                   u6371 27F0                     u6611 2404                     u6291 1E84  
                   u7251 2C56                     u7171 3DD4                     u8131 1772  
                   u8220 3C3C                     u7340 3ECC                     u6540 2A98  
                   u6460 29C0                     u6380 2838                     u6700 26A4  
                   u6620 241A                     u7260 2C7E                     u5900 37DC  
                   u7180 3D4C                     u7500 0BF0                     u7420 0966  
                   u8140 17BA                     u8060 15E2                     i2l37 4198  
                   u8221 3C38                     u7341 3EC8                     u6541 2A94  
                   u6461 29BC                     u6381 2834                     u6701 26A0  
                   u6621 2416                     u7245 2C00                     u5901 37D8  
                   u7181 3D46                     u7501 0BEC                     u7421 0962  
                   u8141 17B6                     u8061 15DE                     u5910 3F08  
                   u6550 2AE0                     u6470 29D6                     u6390 284A  
                   u6710 26BA                     u6630 242A                     u7270 2C9A  
                   u7246 2C0A                     u7190 3D4E                     u7510 0C02  
                   u7430 09F4                     u7350 0866                     u8150 1868  
                   u8070 1606                     u6551 2ADC                     u6471 29D2  
                   u6391 2846                     u6711 26B6                     u6631 2426  
                   u7095 33EE                     u7271 2C96                     u7247 2C1A  
                   u7167 3DBC                     u7511 0BFE                     u7431 09F0  
                   u7351 0862                     u8151 1864                     u8071 1602  
                   u5920 3F18                     u6800 395C                     u6560 2B10  
                   u6480 29F4                     u6720 26CE                     u6640 2460  
                   u7280 2CEE                     u7600 0D0E                     u7520 0C24  
                   u7440 0A24                     u7360 08B6                     u8160 18D0  
                   u8080 1640                     i2l65 3758                     u5921 3F14  
                   u8217 3C00                     u6801 3958                     u6561 2B0C  
                   u6481 29F0                     u6721 26CA                     u6641 245C  
                   u7265 2C74                     u7601 0D0A                     u7521 0C20  
                   u7441 0A1E                     u7361 08B2                     u8161 18CA  
                   u8081 163C                     u6810 3978                     u6570 2B3E  
                   u6490 2A14                     u6730 26E8                     u6650 2470  
                   u5930 1A24                     u7290 2D0A                     u7610 0D1C  
                   u7530 0C4A                     u7450 0A26                     u7370 08C4  
                   u8170 18D2                     u8090 16EA                     i2l59 3A60  
                   u6811 3974                     u6571 2B3A                     u6491 2A10  
                   u6731 26E4                     u6651 246C                     u5931 1A20  
                   u7291 2D06                     u7611 0D18                     u7531 0C46  
                   u7371 08C0                     u8091 16E4                     i2l76 2EF8  
                   u6820 399E                     u6900 3B7E                     u6740 2730  
                   u6660 25EA                     u6580 23A6                     u5940 1A36  
                   u7700 10FC                     u7620 0D46                     u7540 0C60  
                   u7460 0A3C                     u7380 08D6                     u8180 18E8  
                   u5917 3EFE                     u6821 399A                     u6901 3B7A  
                   u6741 272C                     u6581 23A2                     u5941 1A32  
                   u7285 2CE4                     u7701 10F8                     u7621 0D42  
                   u7541 0C5C                     u7461 0A38                     u7381 08D2  
                   u8181 18E4                     u8237 352C                     u6830 3A74  
                   u6910 3BB2                     u6750 275E                     u6670 2644  
                   u6590 23B8                     u5950 1A46                     u5870 376C  
                   u7710 1110                     u7630 0E8E                     u7550 0C7C  
                   u7470 0AC0                     u7390 091E                     u8190 1984  
                   u6831 3A70                     u6911 3BAE                     u6751 275A  
                   u6671 2640                     u6591 23B4                     u5951 1A42  
                   u5871 3768                     u7711 110C                     u7631 0E8A  
                   u7551 0C78                     u7471 0ABC                     u7391 091A  
                   u8191 1980                     u8247 359C                     u6840 3A8E  
                   u6920 31DE                     u6760 2798                     u6680 2664  
                   u5960 1A88                     u5880 377E                     u7800 12C0  
                   u7720 1122                     u7640 0EF6                     u7560 0CB2  
                   u7480 0B56                     u8257 4124                     u6841 3A8A  
                   u6921 31DA                     u6761 2794                     u6681 2660  
                   u6665 25E0                     u5961 1A84                     u5881 377A  
                   u7801 12BC                     u7721 111E                     u7641 0EF2  
                   u7561 0CAE                     u7481 0B52                     u6770 38FE  
                   u6850 3AA8                     u6930 321C                     u6690 2676  
                   u5970 1A9E                     u5890 37A6                     u7810 12F6  
                   u7730 1130                     u7650 0F3C                     u7570 0CD8  
                   u7490 0BCA                     u8267 413E                     u6771 38FA  
                   u6851 3AA4                     u6931 3218                     u6691 2672  
                   u5971 1A9A                     u5891 37A2                     u7811 12F2  
                   u7731 112C                     u7651 0F38                     u7571 0CD4  
                   u7491 0BC6                     u7900 2F84                     u6780 3918  
                   u6860 3AC6                     u6940 323A                     u5980 1AB0  
                   u7820 1324                     u7740 114C                     u7660 0F4C  
                   u7580 0CEA                     u7901 2F80                     u6781 3914  
                   u6861 3AC2                     u6941 3236                     u5981 1AAC  
                   u7821 1320                     u7741 1148                     u7661 0F48  
                   u7581 0CE6                     u7910 2FA0                     u6790 393E  
                   u6870 3ADC                     u6950 325A                     u5990 1AC0  
                   u7830 13A8                     u7750 115A                     u7670 0FE8  
                   u7590 0CF8                     u7911 2F9C                     u6791 393A  
                   u6871 3AD8                     u6951 3256                     u5991 1ABC  
                   u7831 13A4                     u7751 1156                     u7671 0FE4  
                   u7591 0CF4                     u7920 3058                     u6880 3B00  
                   u6960 32AA                     u7840 13C2                     u7760 11B2  
                   u7680 1034                     u7921 3052                     u6881 3AFC  
                   u6961 32A6                     u7841 13BE                     u7761 11AE  
                   u7681 1030                     u7930 305A                     u6890 3B40  
                   u6970 4096                     u7850 13DA                     u7770 1284  
                   u7690 105A                     u6891 3B3C                     u6971 4092  
                   u7851 13D6                     u7771 1280                     u7691 1056  
                   u7940 3070                     u6980 30BE                     u7860 1438  
                   u7780 12A0                     u7941 306C                     u6981 30BA  
                   u7861 1432                     u7781 129C                     u7950 3082  
                   u6990 30F2                     u7870 143A                     u7790 12B2  
                   u7951 307E                     u7791 12AE                     u7880 1450  
                   u7960 35DC                     u7881 144C                     u7961 35D8  
                   u7890 2F4E                     u7970 360E                     u7891 2F4A  
                   u6995 30E8                     u7971 360A                     u7980 362A  
                   u7981 3626                     u7990 363C                     u7991 3638  
           i2___flge@ff1 0001             i2___flge@ff2 0005                     _dbuf 0100  
                   _atoi 2F14                     _main 34B8                     _prec 00F3  
                   _nout 00EF                     pad@i 006B                     pad@p 0068  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 006D  
                   fsr2l 000FD9                     btemp 0041            ___fpclassifyf 33B8  
                   prodh 000FF4                     prodl 000FF3     i2comando_lcd@comando 0001  
                   start 000E          ___fldiv@new_exp 0065             _tolower$1102 0060  
           ___param_bank 000000                    ??_pad 006A                    ??_isr 0019  
          ___fltol@sign1 0027                    ?_atoi 0026          __end_of___fladd 1ECA  
                  ?_main 0001          __end_of___fldiv 2B52          __end_of___awdiv 39B0  
        __end_of___flneg 40B8                    STR_10 0835                    STR_13 0839  
                  STR_15 0839          __end_of___awmod 3B12          __end_of___flmul 27B6  
        __end_of___flsub 3FBC          __end_of___fltol 31AE                    _T0CON 000FD5  
        ___awdiv@divisor 0021                    i2l352 3370                    i2l357 33B6  
                  i2l615 20B8                    i2l632 21D2                    i2l624 2388  
                  i2l616 20A6                    i2l641 22A2                    i2l617 206C  
                  i2l642 2290                    i2l657 4046          ___awdiv@counter 0023  
           vfpfcnvrt@fmt 00C7                    _TMR0L 000FD6                    _PORTD 000F83  
                  _TRISD 000F95                    _TRISE 000F96       i2imprime_lcd@frase 0005  
          i2___fladd@grs 0010                    _flags 0037                    _fputc 375A  
                  _fputs 3FBC          __end_of_isdigit 40F0                    atoi@n 006B  
                  pad@fp 0064                    atoi@s 0026                    _width 00F1  
                  _putch 41A2              i2_limpa_lcd 418C          __end_of_isspace 3ED8  
        __end_of_isupper 4080         __end_ofi2___flge 33B8                    tablat 000FF5  
                  ttemp5 0042                    ttemp6 0045                    ttemp7 0049  
           ?_imprime_lcd 0023                    status 000FD8                    wtemp8 0042  
        __end_of_sprintf 3E34           ?___fpclassifyf 001F          __end_of_tolower 3D7E  
        __end_of_strncmp 3688       __size_ofi2___fladd 04C0       __size_ofi2___flsub 0046  
       __end_ofi2_strlen 3F74          __initialization 3E34             __end_of_atoi 30A8  
           __end_of_main 35B2                   ??_atoi 0060                   ??_main 00ED  
          __activetblptr 000002              ?i2_dado_lcd 0001        _temperaturaMaxima 003D  
      _temperaturaMinima 0039                   _ADCON1 000FC1                   ?_fputc 001F  
                 ?_fputs 0060         ___awdiv@dividend 001F                   ?_putch 0001  
                 i2l1055 3F72                   i2l4101 1FDE                   i2l4111 1FF2  
                 i2l4103 1FE2                   i2l4041 416C                   i2l4033 414A  
                 i2l4201 2250                   i2l4121 2006                   i2l4113 1FF6  
                 i2l4105 1FE6                   i2l4043 417A                   i2l4035 4152  
                 i2l4211 2288                   i2l4203 2252                   i2l4131 2064  
                 i2l4115 1FFA                   i2l4107 1FEA                   i2l4123 200A  
                 i2l4051 1EE6                   i2l4301 3350                   i2l4037 4160  
                 i2l4221 2306                   i2l4205 2260                   i2l4141 209A  
                 i2l4133 207A                   i2l4125 200E                   i2l4117 1FFE  
                 i2l4109 1FEE                   i2l4053 1EF6                   i2l4061 1F20  
                 i2l4045 1ECA                   i2l4303 335E                   i2l4039 4164  
                 i2l4231 234C                   i2l4215 22B2                   i2l4223 2308  
                 i2l4207 2264                   i2l4151 20EA                   i2l4143 20A4  
                 i2l4135 2086                   i2l4127 2038                   i2l4119 2002  
                 i2l4071 1F50                   i2l4063 1F30                   i2l4055 1F06  
                 i2l4047 1ED6                   i2l4311 4002                   i2l4305 33AE  
                 i2l4241 2376                   i2l4233 235A                   i2l4225 2318  
                 i2l4217 22BE                   i2l4209 2272                   i2l4161 2126  
                 i2l4153 20FA                   i2l4145 20C6                   i2l4137 208A  
                 i2l4129 2054                   i2l4081 1F90                   i2l4073 1F5E  
                 i2l4065 1F36                   i2l4057 1F16                   i2l4049 1EE4  
                 i2l4313 4012                   i2l4307 33B4                   i2l4251 3F36  
                 i2l4331 39E2                   i2l4243 2378                   i2l4235 2360  
                 i2l4227 2328                   i2l4219 22CC                   i2l4171 216C  
                 i2l4163 2134                   i2l4155 2108                   i2l4147 20D6  
                 i2l4139 2098                   i2l4091 1FCA                   i2l4083 1F92  
                 i2l4075 1F60                   i2l4067 1F48                   i2l4059 1F18  
                 i2l4253 3F66                   i2l4341 3A46                   i2l4333 3A14  
                 i2l4237 2362                   i2l4229 2348                   i2l4181 21E8  
                 i2l4173 21A0                   i2l4165 2136                   i2l4157 2116  
                 i2l4093 1FCE                   i2l4077 1F70                   i2l4085 1F9A  
                 i2l4069 1F4A                   i2l4247 3F26                   i2l4343 3A5C  
                 i2l4335 3A18                   i2l4239 2368                   i2l4191 2224  
                 i2l4183 21F8                   i2l4175 21A2                   i2l4167 2140  
                 i2l4159 2122                   i2l4095 1FD2                   i2l4087 1FAA  
                 i2l4079 1F80                   i2l4351 3724                   i2l4249 3F32  
                 i2l4281 3C46                   i2l4337 3A2E                   i2l4329 39B0  
                 i2l4193 2226                   i2l4177 21B2                   i2l4169 2146  
                 i2l4097 1FD6                   i2l4089 1FBC                   i2l4345 3688  
                 i2l4291 32E2                   i2l4283 3C5E                   i2l4339 3A3A  
                 i2l4195 2234                   i2l4187 220C                   i2l4179 21C2  
                 i2l4099 1FDA                   i2l4347 36BA                   i2l4371 2DC4  
                 i2l4293 32F2                   i2l4285 3C96                   i2l4277 418C  
                 i2l4197 223C                   i2l4189 2216                   i2l4349 36F2  
                 i2l4381 2EA8                   i2l4373 2DFC                   i2l4365 2D82  
                 i2l4295 3320                   i2l4287 3C9A                   i2l4279 3C3E  
                 i2l4199 2240                   i2l4391 2EF6                   i2l4383 2EB6  
                 i2l4375 2E2E                   i2l4367 2D90                   i2l4297 3330  
                 i2l4289 32B4                   i2l4385 2EBA                   i2l4377 2E66  
                 i2l4369 2D92                   i2l4299 333E                   i2l4387 2EBE  
                 i2l4379 2E9A                   i2l4389 2EF2         __end_of_dado_lcd 414A  
    i2imprime_lcd@indice 000C           i2___fladd@aexp 000E           i2___fladd@bexp 000F  
   __size_of_comando_lcd 001A             vfprintf@cfmt 00E3                   ___flge 31AE  
                 ___fleq 3B12                ??___fladd 0027                   ___wmul 40F0  
              ??___fldiv 0027                ??___awdiv 0023                ??___flneg 0023  
              ??___awmod 0023                ??___flmul 0027                ??___flsub 002B  
              ??___fltol 0023                   _alerta 39B0                   _efgtoa 083E  
                 _floorf 2B52                   clear_0 3E5A                   clear_1 3E66  
                 clear_2 3E72         ___awdiv@quotient 0025          ___awmod@divisor 0021  
                 isa$std 000001          ___awmod@counter 0023                   pad@buf 0066  
                 _strcpy 3D7E                   _strlen 3ED8                   fputc@c 001F  
                 fputs@c 0028                   fputs@i 0029             __pdataCOMRAM 0039  
                 fputs@s 0060        __end_ofi2___fladd 238A                ??_isdigit 0021  
      __end_ofi2___flsub 4048   __size_ofi2_comando_lcd 001A          ___fpclassifyf@e 0060  
        ___fpclassifyf@u 0062          ___fpclassifyf@x 001F             __mediumconst 0000  
              ??_isspace 0021                   tblptrh 000FF7                ??_isupper 0021  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 3D1C                ??_sprintf 002B                ??_tolower 0027  
              ??_strncmp 0025               ___flge@ff1 006D          ??___fpclassifyf 0023  
             ___flge@ff2 0071               ___fleq@ff1 001F               ___fleq@ff2 0023  
             __accesstop 0060  __end_of__initialization 3E78               ___flneg@f1 001F  
          ___rparam_used 000001               ___fltol@f1 001F      __size_ofi2_dado_lcd 001A  
         __pcstackCOMRAM 0001         ??_verificaOValor 0019            __end_of_fputc 3824  
          __end_of_fputs 4002            __end_of_putch 41A4                ?i2___flge 0001  
              ?i2_strlen 0001                  ??_fputc 0023                  ??_fputs 0028  
                ??_putch 001F               __pbssBANK0 00EF               __pbssBANK1 0100  
          i2_comando_lcd 414A     __size_of_imprime_lcd 0082       __size_of_limpa_lcd 000E  
             _efgtoa$942 008D               _efgtoa$943 008F               _efgtoa$952 0093  
             _efgtoa$953 0095               _efgtoa$954 0097               _efgtoa$948 0091  
                ?___flge 006D                  ?___fleq 001F                  ?___wmul 001F  
                ?_alerta 0001                  ?_efgtoa 0081                  ?_floorf 006D  
             ??i2___flge 0009                  ?_strcpy 001F                  ?_strlen 001F  
              ?_dado_lcd 001F   __size_ofi2_imprime_lcd 007C       __size_of_vfpfcnvrt 056C  
             ??i2_strlen 0003             ?i2_limpa_lcd 0001     i2imprime_lcd@tamanho 000A  
         ?i2_comando_lcd 0001          i2___fladd@signs 000D                  __Hparam 0000  
                __Lparam 0000          __size_of___flge 0106          __size_of___fleq 00AA  
                ___fladd 1A08                  ___fldiv 27B6                  ___awdiv 38EC  
                ___flneg 4080                  ___awmod 3A62                  ___flmul 238A  
                ___flsub 3F74                  ___fltol 30A8          __size_of___wmul 0026  
              ?_vfprintf 00DD          __size_of_alerta 00B2             __psmallconst 0800  
        __size_of_efgtoa 0C5E          __size_of_floorf 0216                  __pcinit 3E34  
                __ramtop 0800                  __ptext0 34B8                  __ptext1 3DDA  
                __ptext2 3CBA                  __ptext3 149C                  __ptext4 35B2  
                __ptext5 083E                  __ptext6 3D1C                  __ptext7 4048  
                __ptext8 3D7E                  __ptext9 3824          __size_of_strcpy 005C  
        __size_of_strlen 004E             ??i2_dado_lcd 0003               ??_dado_lcd 0021  
           __size_of_pad 00C8                  _isdigit 40B8             __size_of_isr 2F0C  
       ___awmod@dividend 001F        __end_of_limpa_lcd 418C                  _isspace 3E86  
                _isupper 4048                  efgtoa@c 0087                  efgtoa@d 00A5  
                efgtoa@e 00BD                  efgtoa@f 0083                  efgtoa@g 00B9  
                efgtoa@h 00AF                  efgtoa@i 00B7                  efgtoa@l 00B3  
                efgtoa@m 009F                  efgtoa@n 00BF                  efgtoa@p 00A9  
                efgtoa@t 0099                  efgtoa@u 00C1                  efgtoa@w 00AB  
                atoi@neg 0064                  _sprintf 3DDA                  _tolower 3D1C  
                _strncmp 35B2           __pintcode_body 2D68     end_of_initialization 3E78  
                floorf@e 007B                  floorf@m 0077                  floorf@u 007D  
                floorf@x 006D                  fputc@fp 0021            __Lmediumconst 0000  
                int_func 2D68                  fputs@fp 0062            i2_imprime_lcd 3C3E  
     __end_ofi2_dado_lcd 417E        __end_of_vfpfcnvrt 1A08               efgtoa@mode 00AE  
             efgtoa@sign 00A7                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 002B                  strcpy@d 0027                  strlen@a 0021  
                strcpy@s 0025                  strlen@s 001F                _PORTAbits 000F80  
              _PORTEbits 000F84        imprime_lcd@indice 0062              ___fladd@grs 0063  
            ___fldiv@grs 0067              ___fldiv@rem 0060                i2___fladd 1ECA  
              i2___flsub 4002          ??i2_comando_lcd 0003              ___flmul@grs 0062  
           dado_lcd@dado 001F            ??_comando_lcd 0021           ?i2_imprime_lcd 0005  
         __end_of___flge 32B4           __end_of___fleq 3BBC              vfpfcnvrt@ap 00C9  
            vfpfcnvrt@ct 00D9              vfpfcnvrt@fp 00C5           __end_of___wmul 4116  
         __end_of_alerta 3A62            __pidataCOMRAM 419A           __end_of_efgtoa 149C  
         __end_of_floorf 2D68               floorf@F527 002B           __end_of_strcpy 3DDA  
         __end_of_strlen 3F26        __size_ofi2___flge 0104      start_initialization 3E34  
            __end_of_pad 38EC              __end_of_isr 2F14               ?i2___fladd 0001  
             ?i2___flsub 0011        __size_ofi2_strlen 004E                i2strlen@a 0003  
              i2strlen@s 0001     __size_ofi2_limpa_lcd 000E    __end_of___fpclassifyf 34B8  
            vfprintf@fmt 00DF                 ??___flge 0075                 ??___fleq 0027  
    __end_of_comando_lcd 4130                 ??___wmul 0023                 ??_alerta 000E  
               ??_efgtoa 0088                 ??_floorf 0071                 ??_strcpy 0023  
               ??_strlen 0021                ___fladd@a 0023                ___fladd@b 001F  
              ___fldiv@a 0023                ___fldiv@b 001F                ___flmul@a 0023  
              ___flmul@b 001F              __pbssCOMRAM 002B                ___flsub@a 0071  
              ___flsub@b 006D            __pcstackBANK0 0060            __pcstackBANK1 0150  
      __size_of_dado_lcd 001A          ??i2_imprime_lcd 0007            ??_imprime_lcd 0025  
              _atoi$1007 0066                _atoi$1008 006A                _atoi$1009 0068  
     comando_lcd@comando 001F                __pintcode 0008                 ?___fladd 001F  
               ?___fldiv 001F                 ?___awdiv 001F                 ?___flneg 001F  
               ?___awmod 001F                 ?___flmul 001F                 ?___flsub 006D  
               ?___fltol 001F        __size_of_vfprintf 0062              __smallconst 0800  
               ?_isdigit 001F                 ?_isspace 001F  __size_of_verificaOValor 00D2  
               ?_isupper 001F              ??i2___fladd 0009                 ?_sprintf 00E5  
               ?_tolower 0025              ??i2___flsub 0019           __size_of_fputc 00CA  
         __size_of_fputs 0046                 ?_strncmp 001F                _limpa_lcd 417E  
         __size_of_putch 0002           ___wmul@product 0023              _comando_lcd 4116  
         i2dado_lcd@dado 0001                 i2u530_40 1F48                 i2u530_41 1F44  
               i2u531_40 1F5E                 i2u531_41 1F5A                 i2u540_40 2098  
               i2u532_40 1F70                 i2u540_41 2094                 i2u532_41 1F6C  
               i2u541_40 20B8                 i2u533_40 1F80                 i2u541_41 20B4  
               i2u533_41 1F7C                 i2u550_40 21F8                 i2u542_40 20C6  
               i2u534_40 1FBC                 i2u550_41 21F4                 i2u542_41 20C2  
               i2u534_41 1FB8                 i2u551_40 2224                 i2u543_40 20D6  
               i2u535_40 1FCA                 i2u527_40 1EE4                 i2u551_41 2220  
               i2u543_41 20D2                 i2u535_41 1FC6                 i2u527_41 1EE0  
               i2u560_40 2306                 i2u552_40 2234                 i2u544_40 2108  
               i2u536_40 2038                 i2u528_40 1EF6                 i2u560_41 2302  
               i2u552_41 2230                 i2u544_41 2104                 i2u536_41 2034  
               i2u528_41 1EF2                 i2u561_40 2318                 i2u553_40 2250  
               i2u545_40 2116                 i2u537_40 2050                 i2u529_40 1F06  
               i2u561_41 2314                 i2u553_41 224C                 i2u545_41 2112  
               i2u537_41 204A                 i2u529_41 1F02                 i2u570_40 3CB8  
               i2u562_40 2328                 i2u554_40 2260                 i2u546_40 2134  
               i2u538_40 2052                 i2u570_41 3CB4                 i2u562_41 2324  
               i2u554_41 225C                 i2u546_41 2130                 i2u571_40 32E2  
               i2u563_40 2348                 i2u555_40 2272                 i2u547_40 216C  
               i2u539_40 207A                 i2u571_41 32DE                 i2u563_41 2344  
               i2u555_41 226E                 i2u547_41 2168                 i2u539_41 2076  
               i2u572_40 3320                 i2u564_40 235A                 i2u556_40 2288  
               i2u548_40 21B2                 i2u580_40 36BA                 i2u572_41 331C  
               i2u564_41 2356                 i2u556_41 2284                 i2u548_41 21AE  
               i2u580_41 36B6                 i2u573_40 333E                 i2u565_40 2376  
               i2u557_40 229E                 i2u549_40 21E8                 i2u581_40 3724  
               i2u573_41 333A                 i2u565_41 2372                 i2u557_41 229A  
               i2u549_41 21E4                 i2u581_41 3720                 i2u574_40 335E  
               i2u566_40 3F56                 i2u558_40 22B2                 i2u582_40 2D90  
               i2u574_41 335A                 i2u558_41 22AE                 i2u582_41 2D8C  
               i2u830_47 4172                 i2u566_47 3F4C                 i2u575_40 33AE  
               i2u567_40 3F66                 i2u559_40 22CC                 i2u583_40 2DC4  
               i2u575_41 33AA                 i2u567_41 3F62                 i2u559_41 22C8  
               i2u583_41 2DC0                 i2u584_40 2E2E                 i2u584_41 2E2A  
               i2u569_40 3C8A                 i2u585_40 2EA8                 i2u585_41 2EA4  
               i2u569_47 3C80                 i2u578_40 39E2                 i2u586_40 2EB6  
               i2u578_41 39DE                 i2u586_41 2EB2                 i2u579_40 3A14  
               i2u579_41 3A10                 i2u827_47 3A22                 i2u828_47 3A50  
               i2u829_47 4158      __end_of_imprime_lcd 3C3E         imprime_lcd@frase 0023  
              _vfpfcnvrt 149C                 i2___flge 32B4        ___wmul@multiplier 001F  
           _isspace$1038 0025                 i2_strlen 3F26               vfpfcnvrt@c 00DC  
             vfpfcnvrt@f 00D5              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
              copy_data0 3E48               ?_limpa_lcd 0001                 __Hrparam 0000  
             vfprintf@ap 00E1                 __Lrparam 0000               vfprintf@fp 00DD  
       __size_of___fladd 04C2         __size_of___fldiv 039C         __size_of___awdiv 00C4  
       __size_of___flneg 0038         __size_of___awmod 00B0         __size_of___flmul 042C  
       __size_of___flsub 0048         __size_of___fltol 0106               ?_vfpfcnvrt 00C5  
     ___fpclassifyf@F465 002F                 _dado_lcd 4130               sprintf@fmt 00E7  
       __size_of_isdigit 0038         __size_of_isspace 0052                 __ptext10 3FBC  
               __ptext11 375A                 __ptext20 31AE                 __ptext12 41A2  
               __ptext21 3B12                 __ptext13 2B52                 __ptext30 4116  
               __ptext22 27B6                 __ptext14 33B8                 __ptext31 3BBC  
               __ptext23 3A62                 __ptext15 30A8                 __ptext40 414A  
               __ptext32 3ED8                 __ptext24 38EC                 __ptext16 3F74  
               __ptext41 3C3E                 __ptext33 4130                 __ptext25 2F14  
               __ptext17 1A08                 __ptext42 3F26                 __ptext26 3E86  
               __ptext18 4080                 __ptext43 4164                 __ptext35 3688  
               __ptext27 40B8                 __ptext19 238A                 __ptext44 32B4  
               __ptext36 4002                 __ptext28 40F0                 __ptext37 1ECA  
               __ptext29 417E                 __ptext38 39B0                 __ptext39 418C  
       __size_of_isupper 0038                 _encerrar 00F5         __size_of_sprintf 005A  
       __size_of_tolower 0062               strcpy@dest 001F         __size_of_strncmp 00D6  
            _imprime_lcd 3BBC            __size_of_atoi 0194            __size_of_main 00FA  
  __end_ofi2_comando_lcd 4164                 efgtoa@fp 0081                 efgtoa@ne 009D  
               efgtoa@pp 009B                 efgtoa@ou 00A1                 isa$xinst 000000  
               int$flags 0041                 _vfprintf 3CBA               _INTCONbits 000FF2  
         _verificaOValor 3688                 isdigit@c 001F            ??i2_limpa_lcd 0004  
            ??_limpa_lcd 0022                 intlevel2 0000                sprintf@ap 0150  
               isspace@c 001F                strcpy@src 0021                 isupper@c 001F  
              strncmp@_l 001F                strncmp@_r 0021              efgtoa@nmode 00AD  
            ??_vfpfcnvrt 00CB            _vfpfcnvrt$973 00D3            _vfpfcnvrt$968 00CF  
          _vfpfcnvrt$969 00D1   __end_of_verificaOValor 375A              _temperatura 0033  
            _temperature 00F7                 sprintf@f 0152                 tolower@c 0025  
               sprintf@s 00E5   __size_of___fpclassifyf 0100                 strncmp@l 0026  
               strncmp@n 0023                 strncmp@r 0028            ___fladd@signs 0060  
     imprime_lcd@tamanho 0060             ___fladd@aexp 0061             ___fladd@bexp 0062  
  __end_ofi2_imprime_lcd 3CBA             ?_comando_lcd 001F      __end_ofi2_limpa_lcd 419A  
