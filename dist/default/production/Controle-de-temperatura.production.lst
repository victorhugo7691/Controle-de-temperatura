

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 06 11:57:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Version 2.20
    68                           ; Generated 12/02/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4550 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102                           	psect	idataCOMRAM
   103  00419A                     __pidataCOMRAM:
   104                           	callstack 0
   105                           
   106                           ;initializer for _temperaturaMinima
   107  00419A  0000               	dw	0
   108  00419C  41C8               	dw	16840
   109                           
   110                           ;initializer for _temperaturaMaxima
   111  00419E  0000               	dw	0
   112  0041A0  4248               	dw	16968
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _ADCON1	set	4033
   115  0000                     _TRISE	set	3990
   116  0000                     _TRISD	set	3989
   117  0000                     _T0CON	set	4053
   118  0000                     _PORTAbits	set	3968
   119  0000                     _TMR0L	set	4054
   120  0000                     _INTCONbits	set	4082
   121  0000                     _INTCON3bits	set	4080
   122  0000                     _PORTD	set	3971
   123  0000                     _PORTEbits	set	3972
   124                           
   125                           	psect	smallconst
   126  000800                     __psmallconst:
   127                           	callstack 0
   128  000800  00                 	db	0
   129  000801                     STR_2:
   130  000801  43                 	db	67	;'C'
   131  000802  54                 	db	84	;'T'
   132  000803  52                 	db	82	;'R'
   133  000804  4C                 	db	76	;'L'
   134  000805  20                 	db	32
   135  000806  54                 	db	84	;'T'
   136  000807  65                 	db	101	;'e'
   137  000808  6D                 	db	109	;'m'
   138  000809  70                 	db	112	;'p'
   139  00080A  65                 	db	101	;'e'
   140  00080B  72                 	db	114	;'r'
   141  00080C  61                 	db	97	;'a'
   142  00080D  74                 	db	116	;'t'
   143  00080E  75                 	db	117	;'u'
   144  00080F  72                 	db	114	;'r'
   145  000810  61                 	db	97	;'a'
   146  000811  00                 	db	0
   147  000812                     STR_1:
   148  000812  45                 	db	69	;'E'
   149  000813  52                 	db	82	;'R'
   150  000814  52                 	db	82	;'R'
   151  000815  4F                 	db	79	;'O'
   152  000816  20                 	db	32
   153  000817  54                 	db	84	;'T'
   154  000818  65                 	db	101	;'e'
   155  000819  6D                 	db	109	;'m'
   156  00081A  70                 	db	112	;'p'
   157  00081B  65                 	db	101	;'e'
   158  00081C  72                 	db	114	;'r'
   159  00081D  61                 	db	97	;'a'
   160  00081E  74                 	db	116	;'t'
   161  00081F  75                 	db	117	;'u'
   162  000820  72                 	db	114	;'r'
   163  000821  61                 	db	97	;'a'
   164  000822  00                 	db	0
   165  000823                     STR_4:
   166  000823  25                 	db	37
   167  000824  33                 	db	51	;'3'
   168  000825  2E                 	db	46
   169  000826  32                 	db	50	;'2'
   170  000827  66                 	db	102	;'f'
   171  000828  00                 	db	0
   172  000829                     STR_5:
   173  000829  49                 	db	73	;'I'
   174  00082A  4E                 	db	78	;'N'
   175  00082B  46                 	db	70	;'F'
   176  00082C  00                 	db	0
   177  00082D                     STR_9:
   178  00082D  4E                 	db	78	;'N'
   179  00082E  41                 	db	65	;'A'
   180  00082F  4E                 	db	78	;'N'
   181  000830  00                 	db	0
   182  000831                     STR_6:
   183  000831  69                 	db	105	;'i'
   184  000832  6E                 	db	110	;'n'
   185  000833  66                 	db	102	;'f'
   186  000834  00                 	db	0
   187  000835                     STR_10:
   188  000835  6E                 	db	110	;'n'
   189  000836  61                 	db	97	;'a'
   190  000837  6E                 	db	110	;'n'
   191  000838  00                 	db	0
   192  000839                     STR_13:
   193  000839  6C                 	db	108	;'l'
   194  00083A  66                 	db	102	;'f'
   195  00083B  00                 	db	0
   196  00083C  00                 	db	0	; dummy byte at the end
   197  0000                     
   198                           ; #config settings
   199                           
   200                           	psect	cinit
   201  003E34                     __pcinit:
   202                           	callstack 0
   203  003E34                     start_initialization:
   204                           	callstack 0
   205  003E34                     __initialization:
   206                           	callstack 0
   207                           
   208                           ; Initialize objects allocated to COMRAM (8 bytes)
   209                           ; load TBLPTR registers with __pidataCOMRAM
   210  003E34  0E9A               	movlw	low __pidataCOMRAM
   211  003E36  6EF6               	movwf	tblptrl,c
   212  003E38  0E41               	movlw	high __pidataCOMRAM
   213  003E3A  6EF7               	movwf	tblptrh,c
   214  003E3C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   215  003E3E  6EF8               	movwf	tblptru,c
   216  003E40  EE00  F039         	lfsr	0,__pdataCOMRAM
   217  003E44  EE10 F008          	lfsr	1,8
   218  003E48                     copy_data0:
   219  003E48  0009               	tblrd		*+
   220  003E4A  CFF5 FFEE          	movff	tablat,postinc0
   221  003E4E  50E5               	movf	postdec1,w,c
   222  003E50  50E1               	movf	fsr1l,w,c
   223  003E52  E1FA               	bnz	copy_data0
   224                           
   225                           ; Clear objects allocated to BANK1 (80 bytes)
   226  003E54  EE01  F000         	lfsr	0,__pbssBANK1
   227  003E58  0E50               	movlw	80
   228  003E5A                     clear_0:
   229  003E5A  6AEE               	clrf	postinc0,c
   230  003E5C  06E8               	decf	wreg,f,c
   231  003E5E  E1FD               	bnz	clear_0
   232                           
   233                           ; Clear objects allocated to BANK0 (14 bytes)
   234  003E60  EE00  F0EF         	lfsr	0,__pbssBANK0
   235  003E64  0E0E               	movlw	14
   236  003E66                     clear_1:
   237  003E66  6AEE               	clrf	postinc0,c
   238  003E68  06E8               	decf	wreg,f,c
   239  003E6A  E1FD               	bnz	clear_1
   240                           
   241                           ; Clear objects allocated to COMRAM (14 bytes)
   242  003E6C  EE00  F02B         	lfsr	0,__pbssCOMRAM
   243  003E70  0E0E               	movlw	14
   244  003E72                     clear_2:
   245  003E72  6AEE               	clrf	postinc0,c
   246  003E74  06E8               	decf	wreg,f,c
   247  003E76  E1FD               	bnz	clear_2
   248  003E78                     end_of_initialization:
   249                           	callstack 0
   250  003E78                     __end_of__initialization:
   251                           	callstack 0
   252  003E78  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253  003E7A  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254  003E7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  003E7E  6EF8               	movwf	tblptru,c
   256  003E80  0100               	movlb	0
   257  003E82  EF5C  F01A         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMRAM
   260  00002B                     __pbssCOMRAM:
   261                           	callstack 0
   262  00002B                     floorf@F527:
   263                           	callstack 0
   264  00002B                     	ds	4
   265  00002F                     ___fpclassifyf@F465:
   266                           	callstack 0
   267  00002F                     	ds	4
   268  000033                     _temperatura:
   269                           	callstack 0
   270  000033                     	ds	4
   271  000037                     _flags:
   272                           	callstack 0
   273  000037                     	ds	2
   274                           
   275                           	psect	dataCOMRAM
   276  000039                     __pdataCOMRAM:
   277                           	callstack 0
   278  000039                     _temperaturaMinima:
   279                           	callstack 0
   280  000039                     	ds	4
   281  00003D                     _temperaturaMaxima:
   282                           	callstack 0
   283  00003D                     	ds	4
   284                           
   285                           	psect	bssBANK0
   286  0000EF                     __pbssBANK0:
   287                           	callstack 0
   288  0000EF                     _nout:
   289                           	callstack 0
   290  0000EF                     	ds	2
   291  0000F1                     _width:
   292                           	callstack 0
   293  0000F1                     	ds	2
   294  0000F3                     _prec:
   295                           	callstack 0
   296  0000F3                     	ds	2
   297  0000F5                     _temperature:
   298                           	callstack 0
   299  0000F5                     	ds	8
   300                           
   301                           	psect	bssBANK1
   302  000100                     __pbssBANK1:
   303                           	callstack 0
   304  000100                     _dbuf:
   305                           	callstack 0
   306  000100                     	ds	80
   307                           
   308                           	psect	cstackBANK1
   309  000150                     __pcstackBANK1:
   310                           	callstack 0
   311  000150                     sprintf@ap:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x0
   315  000150                     	ds	2
   316  000152                     sprintf@f:
   317                           	callstack 0
   318                           
   319                           ; 6 bytes @ 0x2
   320  000152                     	ds	6
   321                           
   322                           	psect	cstackBANK0
   323  000060                     __pcstackBANK0:
   324                           	callstack 0
   325  000060                     ??_atoi:
   326  000060                     ___fladd@signs:
   327                           	callstack 0
   328  000060                     ___flmul@sign:
   329                           	callstack 0
   330  000060                     imprime_lcd@tamanho:
   331                           	callstack 0
   332  000060                     ___fpclassifyf@e:
   333                           	callstack 0
   334  000060                     fputs@s:
   335                           	callstack 0
   336  000060                     _tolower$1101:
   337                           	callstack 0
   338  000060                     ___fldiv@rem:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x0
   342  000060                     	ds	1
   343  000061                     ___fladd@aexp:
   344                           	callstack 0
   345  000061                     ___flmul@aexp:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x1
   349  000061                     	ds	1
   350  000062                     ___fladd@bexp:
   351                           	callstack 0
   352  000062                     imprime_lcd@indice:
   353                           	callstack 0
   354  000062                     fputs@fp:
   355                           	callstack 0
   356  000062                     ___flmul@grs:
   357                           	callstack 0
   358  000062                     ___fpclassifyf@u:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x2
   362  000062                     	ds	1
   363  000063                     ___fladd@grs:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0x3
   367  000063                     	ds	1
   368  000064                     ?_pad:
   369                           	callstack 0
   370  000064                     ___fldiv@sign:
   371                           	callstack 0
   372  000064                     pad@fp:
   373                           	callstack 0
   374  000064                     atoi@neg:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x4
   378  000064                     	ds	1
   379  000065                     ___fldiv@new_exp:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x5
   383  000065                     	ds	1
   384  000066                     ___flmul@bexp:
   385                           	callstack 0
   386  000066                     pad@buf:
   387                           	callstack 0
   388  000066                     _atoi$1006:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x6
   392  000066                     	ds	1
   393  000067                     ___fldiv@grs:
   394                           	callstack 0
   395  000067                     ___flmul@prod:
   396                           	callstack 0
   397                           
   398                           ; 4 bytes @ 0x7
   399  000067                     	ds	1
   400  000068                     pad@p:
   401                           	callstack 0
   402  000068                     _atoi$1008:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x8
   406  000068                     	ds	2
   407  00006A                     ??_pad:
   408  00006A                     _atoi$1007:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0xA
   412  00006A                     	ds	1
   413  00006B                     ___fldiv@bexp:
   414                           	callstack 0
   415  00006B                     ___flmul@temp:
   416                           	callstack 0
   417  00006B                     pad@i:
   418                           	callstack 0
   419  00006B                     atoi@n:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0xB
   423  00006B                     	ds	1
   424  00006C                     ___fldiv@aexp:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0xC
   428  00006C                     	ds	1
   429  00006D                     ?___flsub:
   430                           	callstack 0
   431  00006D                     ?_floorf:
   432                           	callstack 0
   433  00006D                     pad@w:
   434                           	callstack 0
   435  00006D                     ___flge@ff1:
   436                           	callstack 0
   437  00006D                     ___flsub@b:
   438                           	callstack 0
   439  00006D                     floorf@x:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0xD
   443  00006D                     	ds	4
   444  000071                     ??_floorf:
   445  000071                     ___flge@ff2:
   446                           	callstack 0
   447  000071                     ___flsub@a:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x11
   451  000071                     	ds	4
   452  000075                     ??___flge:
   453                           
   454                           ; 1 bytes @ 0x15
   455  000075                     	ds	2
   456  000077                     floorf@m:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x17
   460  000077                     	ds	4
   461  00007B                     floorf@e:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x1B
   465  00007B                     	ds	2
   466  00007D                     floorf@u:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x1D
   470  00007D                     	ds	4
   471  000081                     ?_efgtoa:
   472                           	callstack 0
   473  000081                     efgtoa@fp:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x21
   477  000081                     	ds	2
   478  000083                     efgtoa@f:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x23
   482  000083                     	ds	4
   483  000087                     efgtoa@c:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x27
   487  000087                     	ds	1
   488  000088                     ??_efgtoa:
   489                           
   490                           ; 1 bytes @ 0x28
   491  000088                     	ds	5
   492  00008D                     _efgtoa$941:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x2D
   496  00008D                     	ds	2
   497  00008F                     _efgtoa$942:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x2F
   501  00008F                     	ds	2
   502  000091                     _efgtoa$947:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x31
   506  000091                     	ds	2
   507  000093                     _efgtoa$951:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x33
   511  000093                     	ds	2
   512  000095                     _efgtoa$952:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x35
   516  000095                     	ds	2
   517  000097                     _efgtoa$953:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x37
   521  000097                     	ds	2
   522  000099                     efgtoa@t:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x39
   526  000099                     	ds	2
   527  00009B                     efgtoa@pp:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x3B
   531  00009B                     	ds	2
   532  00009D                     efgtoa@ne:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x3D
   536  00009D                     	ds	2
   537  00009F                     efgtoa@m:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x3F
   541  00009F                     	ds	2
   542  0000A1                     efgtoa@ou:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x41
   546  0000A1                     	ds	4
   547  0000A5                     efgtoa@d:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x45
   551  0000A5                     	ds	2
   552  0000A7                     efgtoa@sign:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x47
   556  0000A7                     	ds	2
   557  0000A9                     efgtoa@p:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x49
   561  0000A9                     	ds	2
   562  0000AB                     efgtoa@w:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x4B
   566  0000AB                     	ds	2
   567  0000AD                     efgtoa@nmode:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x4D
   571  0000AD                     	ds	1
   572  0000AE                     efgtoa@mode:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x4E
   576  0000AE                     	ds	1
   577  0000AF                     efgtoa@h:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x4F
   581  0000AF                     	ds	4
   582  0000B3                     efgtoa@l:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x53
   586  0000B3                     	ds	4
   587  0000B7                     efgtoa@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x57
   591  0000B7                     	ds	2
   592  0000B9                     efgtoa@g:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x59
   596  0000B9                     	ds	4
   597  0000BD                     efgtoa@e:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x5D
   601  0000BD                     	ds	2
   602  0000BF                     efgtoa@n:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x5F
   606  0000BF                     	ds	2
   607  0000C1                     efgtoa@u:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x61
   611  0000C1                     	ds	4
   612  0000C5                     ?_vfpfcnvrt:
   613                           	callstack 0
   614  0000C5                     vfpfcnvrt@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x65
   618  0000C5                     	ds	2
   619  0000C7                     vfpfcnvrt@fmt:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x67
   623  0000C7                     	ds	2
   624  0000C9                     vfpfcnvrt@ap:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x69
   628  0000C9                     	ds	2
   629  0000CB                     ??_vfpfcnvrt:
   630                           
   631                           ; 1 bytes @ 0x6B
   632  0000CB                     	ds	4
   633  0000CF                     _vfpfcnvrt$967:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x6F
   637  0000CF                     	ds	2
   638  0000D1                     _vfpfcnvrt$968:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x71
   642  0000D1                     	ds	2
   643  0000D3                     _vfpfcnvrt$972:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x73
   647  0000D3                     	ds	2
   648  0000D5                     vfpfcnvrt@f:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x75
   652  0000D5                     	ds	4
   653  0000D9                     vfpfcnvrt@ct:
   654                           	callstack 0
   655                           
   656                           ; 3 bytes @ 0x79
   657  0000D9                     	ds	3
   658  0000DC                     vfpfcnvrt@c:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x7C
   662  0000DC                     	ds	1
   663  0000DD                     ?_vfprintf:
   664                           	callstack 0
   665  0000DD                     vfprintf@fp:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x7D
   669  0000DD                     	ds	2
   670  0000DF                     vfprintf@fmt:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x7F
   674  0000DF                     	ds	2
   675  0000E1                     vfprintf@ap:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x81
   679  0000E1                     	ds	2
   680  0000E3                     vfprintf@cfmt:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x83
   684  0000E3                     	ds	2
   685  0000E5                     ?_sprintf:
   686                           	callstack 0
   687  0000E5                     sprintf@s:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x85
   691  0000E5                     	ds	2
   692  0000E7                     sprintf@fmt:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x87
   696  0000E7                     	ds	6
   697  0000ED                     ??_main:
   698                           
   699                           ; 1 bytes @ 0x8D
   700  0000ED                     	ds	2
   701                           
   702                           	psect	cstackCOMRAM
   703  000001                     __pcstackCOMRAM:
   704                           	callstack 0
   705  000001                     ?i2_strlen:
   706                           	callstack 0
   707  000001                     ?i2___fladd:
   708                           	callstack 0
   709  000001                     i2comando_lcd@comando:
   710                           	callstack 0
   711  000001                     i2dado_lcd@dado:
   712                           	callstack 0
   713  000001                     i2strlen@s:
   714                           	callstack 0
   715  000001                     i2___flge@ff1:
   716                           	callstack 0
   717  000001                     i2___fladd@b:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x0
   721  000001                     	ds	2
   722  000003                     ??i2_comando_lcd:
   723  000003                     ??i2_dado_lcd:
   724  000003                     i2strlen@a:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x2
   728  000003                     	ds	1
   729  000004                     
   730                           ; 1 bytes @ 0x3
   731  000004                     	ds	1
   732  000005                     i2imprime_lcd@frase:
   733                           	callstack 0
   734  000005                     i2___flge@ff2:
   735                           	callstack 0
   736  000005                     i2___fladd@a:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0x4
   740  000005                     	ds	2
   741  000007                     ??i2_imprime_lcd:
   742                           
   743                           ; 1 bytes @ 0x6
   744  000007                     	ds	2
   745  000009                     ??i2___flge:
   746  000009                     ??i2___fladd:
   747                           
   748                           ; 1 bytes @ 0x8
   749  000009                     	ds	1
   750  00000A                     i2imprime_lcd@tamanho:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x9
   754  00000A                     	ds	2
   755  00000C                     i2imprime_lcd@indice:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0xB
   759  00000C                     	ds	1
   760  00000D                     i2___fladd@signs:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0xC
   764  00000D                     	ds	1
   765  00000E                     ??_alerta:
   766  00000E                     i2___fladd@aexp:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0xD
   770  00000E                     	ds	1
   771  00000F                     i2___fladd@bexp:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0xE
   775  00000F                     	ds	1
   776  000010                     i2___fladd@grs:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0xF
   780  000010                     	ds	1
   781  000011                     ?i2___flsub:
   782                           	callstack 0
   783  000011                     i2___flsub@b:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x10
   787  000011                     	ds	4
   788  000015                     i2___flsub@a:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x14
   792  000015                     	ds	4
   793  000019                     ??_isr:
   794  000019                     
   795                           ; 1 bytes @ 0x18
   796  000019                     	ds	6
   797  00001F                     ?_strlen:
   798                           	callstack 0
   799  00001F                     ?___fpclassifyf:
   800                           	callstack 0
   801  00001F                     ?_isupper:
   802                           	callstack 0
   803  00001F                     ?_isdigit:
   804                           	callstack 0
   805  00001F                     ?_strncmp:
   806                           	callstack 0
   807  00001F                     ?_isspace:
   808                           	callstack 0
   809  00001F                     ?___wmul:
   810                           	callstack 0
   811  00001F                     ?___awdiv:
   812                           	callstack 0
   813  00001F                     ?___awmod:
   814                           	callstack 0
   815  00001F                     ?___fladd:
   816                           	callstack 0
   817  00001F                     ?___fldiv:
   818                           	callstack 0
   819  00001F                     ?___flmul:
   820                           	callstack 0
   821  00001F                     ?___flneg:
   822                           	callstack 0
   823  00001F                     ?___fltol:
   824                           	callstack 0
   825  00001F                     comando_lcd@comando:
   826                           	callstack 0
   827  00001F                     dado_lcd@dado:
   828                           	callstack 0
   829  00001F                     ___wmul@multiplier:
   830                           	callstack 0
   831  00001F                     ___awdiv@dividend:
   832                           	callstack 0
   833  00001F                     ___awmod@dividend:
   834                           	callstack 0
   835  00001F                     isdigit@c:
   836                           	callstack 0
   837  00001F                     isspace@c:
   838                           	callstack 0
   839  00001F                     isupper@c:
   840                           	callstack 0
   841  00001F                     fputc@c:
   842                           	callstack 0
   843  00001F                     strcpy@dest:
   844                           	callstack 0
   845  00001F                     strlen@s:
   846                           	callstack 0
   847  00001F                     strncmp@_l:
   848                           	callstack 0
   849  00001F                     ___fleq@ff1:
   850                           	callstack 0
   851  00001F                     ___flneg@f1:
   852                           	callstack 0
   853  00001F                     ___fltol@f1:
   854                           	callstack 0
   855  00001F                     ___fladd@b:
   856                           	callstack 0
   857  00001F                     ___fldiv@b:
   858                           	callstack 0
   859  00001F                     ___flmul@b:
   860                           	callstack 0
   861  00001F                     ___fpclassifyf@x:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x1E
   865  00001F                     	ds	2
   866  000021                     ??_isupper:
   867  000021                     ??_isdigit:
   868  000021                     ??_isspace:
   869  000021                     ??_comando_lcd:
   870  000021                     ??_dado_lcd:
   871  000021                     ___wmul@multiplicand:
   872                           	callstack 0
   873  000021                     ___awdiv@divisor:
   874                           	callstack 0
   875  000021                     ___awmod@divisor:
   876                           	callstack 0
   877  000021                     fputc@fp:
   878                           	callstack 0
   879  000021                     strcpy@src:
   880                           	callstack 0
   881  000021                     strlen@a:
   882                           	callstack 0
   883  000021                     strncmp@_r:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x20
   887  000021                     	ds	1
   888  000022                     
   889                           ; 1 bytes @ 0x21
   890  000022                     	ds	1
   891  000023                     ??_fputc:
   892  000023                     ??___fpclassifyf:
   893  000023                     ??_strcpy:
   894  000023                     ??___fltol:
   895  000023                     ___awdiv@counter:
   896                           	callstack 0
   897  000023                     ___awmod@counter:
   898                           	callstack 0
   899  000023                     imprime_lcd@frase:
   900                           	callstack 0
   901  000023                     ___wmul@product:
   902                           	callstack 0
   903  000023                     strncmp@n:
   904                           	callstack 0
   905  000023                     ___fleq@ff2:
   906                           	callstack 0
   907  000023                     ___fladd@a:
   908                           	callstack 0
   909  000023                     ___fldiv@a:
   910                           	callstack 0
   911  000023                     ___flmul@a:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x22
   915  000023                     	ds	1
   916  000024                     ___awdiv@sign:
   917                           	callstack 0
   918  000024                     ___awmod@sign:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x23
   922  000024                     	ds	1
   923  000025                     ??_strncmp:
   924  000025                     ??_imprime_lcd:
   925  000025                     ?_tolower:
   926                           	callstack 0
   927  000025                     _isspace$1037:
   928                           	callstack 0
   929  000025                     ___awdiv@quotient:
   930                           	callstack 0
   931  000025                     strcpy@s:
   932                           	callstack 0
   933  000025                     tolower@c:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x24
   937  000025                     	ds	1
   938  000026                     ?_atoi:
   939                           	callstack 0
   940  000026                     atoi@s:
   941                           	callstack 0
   942  000026                     strncmp@l:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x25
   946  000026                     	ds	1
   947  000027                     ??___fladd:
   948  000027                     ??___fldiv:
   949  000027                     ??___flmul:
   950  000027                     ??_tolower:
   951  000027                     ??___fleq:
   952  000027                     ___fltol@sign1:
   953                           	callstack 0
   954  000027                     strcpy@d:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x26
   958  000027                     	ds	1
   959  000028                     ___fltol@exp1:
   960                           	callstack 0
   961  000028                     fputs@c:
   962                           	callstack 0
   963  000028                     strncmp@r:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x27
   967  000028                     	ds	1
   968  000029                     fputs@i:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x28
   972  000029                     	ds	2
   973  00002B                     
   974                           ; 1 bytes @ 0x2A
   975 ;;
   976 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   977 ;;
   978 ;; *************** function _main *****************
   979 ;; Defined at:
   980 ;;		line 73 in file "lcd.frase.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  2   78[None  ] int 
   987 ;; Registers used:
   988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   994 ;;      Params:         0       0       0       0       0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0       0       0       0
   996 ;;      Temps:          0       2       0       0       0       0       0       0       0
   997 ;;      Totals:         0       2       0       0       0       0       0       0       0
   998 ;;Total ram usage:        2 bytes
   999 ;; Hardware stack levels required when called: 12
  1000 ;; This function calls:
  1001 ;;		_comando_lcd
  1002 ;;		_imprime_lcd
  1003 ;;		_limpa_lcd
  1004 ;;		_sprintf
  1005 ;; This function is called by:
  1006 ;;		Startup code after reset
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text0
  1011  0034B8                     __ptext0:
  1012                           	callstack 0
  1013  0034B8                     _main:
  1014                           	callstack 19
  1015  0034B8                     
  1016                           ;lcd.frase.c: 74:     PORTAbits.RA4 = 0;
  1017  0034B8  9880               	bcf	128,4,c	;volatile
  1018                           
  1019                           ;lcd.frase.c: 76:     INTCONbits.GIE =1;
  1020  0034BA  8EF2               	bsf	242,7,c	;volatile
  1021                           
  1022                           ;lcd.frase.c: 77:     INTCONbits.TMR0IE = 1;
  1023  0034BC  8AF2               	bsf	242,5,c	;volatile
  1024  0034BE                     
  1025                           ;lcd.frase.c: 79:  T0CON = 0B11000111;
  1026  0034BE  0EC7               	movlw	199
  1027  0034C0  6ED5               	movwf	213,c	;volatile
  1028                           
  1029                           ;lcd.frase.c: 80:     TMR0L = 5;
  1030  0034C2  0E05               	movlw	5
  1031  0034C4  6ED6               	movwf	214,c	;volatile
  1032                           
  1033                           ;lcd.frase.c: 82:     TRISD = 0;
  1034  0034C6  0E00               	movlw	0
  1035  0034C8  6E95               	movwf	149,c	;volatile
  1036                           
  1037                           ;lcd.frase.c: 83:     TRISE = 0;
  1038  0034CA  0E00               	movlw	0
  1039  0034CC  6E96               	movwf	150,c	;volatile
  1040                           
  1041                           ;lcd.frase.c: 84:     ADCON1 = 15;
  1042  0034CE  0E0F               	movlw	15
  1043  0034D0  6EC1               	movwf	193,c	;volatile
  1044  0034D2                     
  1045                           ;lcd.frase.c: 86:     INTCON3bits.INT1IE = 1;
  1046  0034D2  86F0               	bsf	240,3,c	;volatile
  1047  0034D4                     
  1048                           ;lcd.frase.c: 87:     INTCON3bits.INT1IF = 0;
  1049  0034D4  90F0               	bcf	240,0,c	;volatile
  1050  0034D6                     
  1051                           ;lcd.frase.c: 88:     INTCON2bits.INTEDG1 = 1;
  1052  0034D6  8AF1               	bsf	241,5,c	;volatile
  1053  0034D8                     
  1054                           ;lcd.frase.c: 90:     comando_lcd(0b00111100);
  1055  0034D8  0E00               	movlw	0
  1056  0034DA  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1057  0034DC  0E3C               	movlw	60
  1058  0034DE  6E1F               	movwf	comando_lcd@comando^0,c
  1059  0034E0  EC8B  F020         	call	_comando_lcd	;wreg free
  1060  0034E4                     
  1061                           ;lcd.frase.c: 91:     comando_lcd(0b00001100);
  1062  0034E4  0E00               	movlw	0
  1063  0034E6  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1064  0034E8  0E0C               	movlw	12
  1065  0034EA  6E1F               	movwf	comando_lcd@comando^0,c
  1066  0034EC  EC8B  F020         	call	_comando_lcd	;wreg free
  1067  0034F0                     
  1068                           ;lcd.frase.c: 93:     limpa_lcd( );
  1069  0034F0  ECBF  F020         	call	_limpa_lcd	;wreg free
  1070  0034F4                     
  1071                           ;lcd.frase.c: 95:     comando_lcd(128);
  1072  0034F4  0E00               	movlw	0
  1073  0034F6  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1074  0034F8  0E80               	movlw	128
  1075  0034FA  6E1F               	movwf	comando_lcd@comando^0,c
  1076  0034FC  EC8B  F020         	call	_comando_lcd	;wreg free
  1077  003500                     
  1078                           ;lcd.frase.c: 96:     imprime_lcd("CTRL Temperatura");
  1079  003500  0E01               	movlw	low STR_2
  1080  003502  6E23               	movwf	imprime_lcd@frase^0,c
  1081  003504  0E08               	movlw	high STR_2
  1082  003506  6E24               	movwf	(imprime_lcd@frase+1)^0,c
  1083  003508  ECDE  F01D         	call	_imprime_lcd	;wreg free
  1084  00350C                     
  1085                           ;lcd.frase.c: 97:     temperatura = 40.0;
  1086  00350C  0E00               	movlw	0
  1087  00350E  6E33               	movwf	_temperatura^0,c
  1088  003510  0E00               	movlw	0
  1089  003512  6E34               	movwf	(_temperatura+1)^0,c
  1090  003514  0E20               	movlw	32
  1091  003516  6E35               	movwf	(_temperatura+2)^0,c
  1092  003518  0E42               	movlw	66
  1093  00351A  6E36               	movwf	(_temperatura+3)^0,c
  1094  00351C                     l5777:
  1095                           
  1096                           ;lcd.frase.c: 100:         limpa_lcd( );
  1097  00351C  ECBF  F020         	call	_limpa_lcd	;wreg free
  1098  003520                     
  1099                           ;lcd.frase.c: 101:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1100  003520  0E06               	movlw	6
  1101  003522  0100               	movlb	0	; () banked
  1102  003524  6FEE               	movwf	(??_main+1)& (0+255),b
  1103  003526  0E13               	movlw	19
  1104  003528  6FED               	movwf	??_main& (0+255),b
  1105  00352A  0EAD               	movlw	173
  1106  00352C                     u8237:
  1107  00352C  2EE8               	decfsz	wreg,f,c
  1108  00352E  D7FE               	bra	u8237
  1109  003530  2FED               	decfsz	??_main& (0+255),f,b
  1110  003532  D7FC               	bra	u8237
  1111  003534  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1112  003536  D7FA               	bra	u8237
  1113  003538  D000               	nop2	
  1114  00353A                     
  1115                           ;lcd.frase.c: 102:         comando_lcd(128);
  1116  00353A  0E00               	movlw	0
  1117  00353C  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1118  00353E  0E80               	movlw	128
  1119  003540  6E1F               	movwf	comando_lcd@comando^0,c
  1120  003542  EC8B  F020         	call	_comando_lcd	;wreg free
  1121  003546                     
  1122                           ;lcd.frase.c: 103:         imprime_lcd("Temperatura");
  1123  003546  0E06               	movlw	low (STR_2+5)
  1124  003548  6E23               	movwf	imprime_lcd@frase^0,c
  1125  00354A  0E08               	movlw	high (STR_2+5)
  1126  00354C  6E24               	movwf	(imprime_lcd@frase+1)^0,c
  1127  00354E  ECDE  F01D         	call	_imprime_lcd	;wreg free
  1128  003552                     
  1129                           ;lcd.frase.c: 105:         comando_lcd(192);
  1130  003552  0E00               	movlw	0
  1131  003554  6E20               	movwf	(comando_lcd@comando+1)^0,c
  1132  003556  0EC0               	movlw	192
  1133  003558  6E1F               	movwf	comando_lcd@comando^0,c
  1134  00355A  EC8B  F020         	call	_comando_lcd	;wreg free
  1135  00355E                     
  1136                           ;lcd.frase.c: 106:         sprintf(temperature, "%3.2f", temperatura);
  1137  00355E  0EF5               	movlw	low _temperature
  1138  003560  0100               	movlb	0	; () banked
  1139  003562  6FE5               	movwf	sprintf@s& (0+255),b
  1140  003564  0E00               	movlw	high _temperature
  1141  003566  6FE6               	movwf	(sprintf@s+1)& (0+255),b
  1142  003568  0E23               	movlw	low STR_4
  1143  00356A  6FE7               	movwf	sprintf@fmt& (0+255),b
  1144  00356C  0E08               	movlw	high STR_4
  1145  00356E  6FE8               	movwf	(sprintf@fmt+1)& (0+255),b
  1146  003570  C033  F0E9         	movff	_temperatura,?_sprintf+4
  1147  003574  C034  F0EA         	movff	_temperatura+1,?_sprintf+5
  1148  003578  C035  F0EB         	movff	_temperatura+2,?_sprintf+6
  1149  00357C  C036  F0EC         	movff	_temperatura+3,?_sprintf+7
  1150  003580  ECED  F01E         	call	_sprintf	;wreg free
  1151  003584                     
  1152                           ;lcd.frase.c: 107:         imprime_lcd(temperature);
  1153  003584  0EF5               	movlw	low _temperature
  1154  003586  6E23               	movwf	imprime_lcd@frase^0,c
  1155  003588  0E00               	movlw	high _temperature
  1156  00358A  6E24               	movwf	(imprime_lcd@frase+1)^0,c
  1157  00358C  ECDE  F01D         	call	_imprime_lcd	;wreg free
  1158  003590                     
  1159                           ;lcd.frase.c: 108:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1160  003590  0E06               	movlw	6
  1161  003592  0100               	movlb	0	; () banked
  1162  003594  6FEE               	movwf	(??_main+1)& (0+255),b
  1163  003596  0E13               	movlw	19
  1164  003598  6FED               	movwf	??_main& (0+255),b
  1165  00359A  0EAD               	movlw	173
  1166  00359C                     u8247:
  1167  00359C  2EE8               	decfsz	wreg,f,c
  1168  00359E  D7FE               	bra	u8247
  1169  0035A0  2FED               	decfsz	??_main& (0+255),f,b
  1170  0035A2  D7FC               	bra	u8247
  1171  0035A4  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1172  0035A6  D7FA               	bra	u8247
  1173  0035A8  D000               	nop2	
  1174  0035AA  EF8E  F01A         	goto	l5777
  1175  0035AE  EF07  F000         	goto	start
  1176  0035B2                     __end_of_main:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _sprintf *****************
  1180 ;; Defined at:
  1181 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  s               2  133[BANK0 ] PTR unsigned char 
  1184 ;;		 -> temperature(8), 
  1185 ;;  fmt             2  135[BANK0 ] PTR const unsigned char 
  1186 ;;		 -> STR_4(6), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  f               6    2[BANK1 ] struct _IO_FILE
  1189 ;;  ap              2    0[BANK1 ] PTR void [1]
  1190 ;;		 -> ?_sprintf(2), 
  1191 ;;  ret             2    0        int 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  2  133[BANK0 ] int 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1201 ;;      Params:         0       8       0       0       0       0       0       0       0
  1202 ;;      Locals:         0       0       8       0       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1204 ;;      Totals:         0       8       8       0       0       0       0       0       0
  1205 ;;Total ram usage:       16 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 11
  1208 ;; This function calls:
  1209 ;;		_vfprintf
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text1
  1216  003DDA                     __ptext1:
  1217                           	callstack 0
  1218  003DDA                     _sprintf:
  1219                           	callstack 19
  1220  003DDA  0EE9               	movlw	low (?_sprintf+4)
  1221  003DDC  0101               	movlb	1	; () banked
  1222  003DDE  6F50               	movwf	sprintf@ap& (0+255),b
  1223  003DE0  0E00               	movlw	high (?_sprintf+4)
  1224  003DE2  6F51               	movwf	(sprintf@ap+1)& (0+255),b
  1225  003DE4  C0E5  F152         	movff	sprintf@s,sprintf@f
  1226  003DE8  C0E6  F153         	movff	sprintf@s+1,sprintf@f+1
  1227  003DEC                     
  1228                           ; BSR set to: 1
  1229  003DEC  0E00               	movlw	0
  1230  003DEE  6F55               	movwf	(sprintf@f+3)& (0+255),b
  1231  003DF0  0E00               	movlw	0
  1232  003DF2  6F54               	movwf	(sprintf@f+2)& (0+255),b
  1233  003DF4                     
  1234                           ; BSR set to: 1
  1235  003DF4  0E00               	movlw	0
  1236  003DF6  6F57               	movwf	(sprintf@f+5)& (0+255),b
  1237  003DF8  0E00               	movlw	0
  1238  003DFA  6F56               	movwf	(sprintf@f+4)& (0+255),b
  1239  003DFC                     
  1240                           ; BSR set to: 1
  1241  003DFC  0E52               	movlw	low sprintf@f
  1242  003DFE  0100               	movlb	0	; () banked
  1243  003E00  6FDD               	movwf	vfprintf@fp& (0+255),b
  1244  003E02  0E01               	movlw	high sprintf@f
  1245  003E04  6FDE               	movwf	(vfprintf@fp+1)& (0+255),b
  1246  003E06  C0E7  F0DF         	movff	sprintf@fmt,vfprintf@fmt
  1247  003E0A  C0E8  F0E0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1248  003E0E  0E50               	movlw	low sprintf@ap
  1249  003E10  6FE1               	movwf	vfprintf@ap& (0+255),b
  1250  003E12  0E01               	movlw	high sprintf@ap
  1251  003E14  6FE2               	movwf	(vfprintf@ap+1)& (0+255),b
  1252  003E16  EC5D  F01E         	call	_vfprintf	;wreg free
  1253  003E1A  0101               	movlb	1	; () banked
  1254  003E1C  5154               	movf	(sprintf@f+2)& (0+255),w,b
  1255  003E1E  0100               	movlb	0	; () banked
  1256  003E20  25E5               	addwf	sprintf@s& (0+255),w,b
  1257  003E22  6ED9               	movwf	fsr2l,c
  1258  003E24  0101               	movlb	1	; () banked
  1259  003E26  5155               	movf	(sprintf@f+3)& (0+255),w,b
  1260  003E28  0100               	movlb	0	; () banked
  1261  003E2A  21E6               	addwfc	(sprintf@s+1)& (0+255),w,b
  1262  003E2C  6EDA               	movwf	fsr2h,c
  1263  003E2E  0E00               	movlw	0
  1264  003E30  6EDF               	movwf	indf2,c
  1265  003E32                     
  1266                           ; BSR set to: 0
  1267  003E32  0012               	return		;funcret
  1268  003E34                     __end_of_sprintf:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function _vfprintf *****************
  1272 ;; Defined at:
  1273 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  fp              2  125[BANK0 ] PTR struct _IO_FILE
  1276 ;;		 -> sprintf@f(6), 
  1277 ;;  fmt             2  127[BANK0 ] PTR const unsigned char 
  1278 ;;		 -> STR_4(6), 
  1279 ;;  ap              2  129[BANK0 ] PTR PTR void 
  1280 ;;		 -> sprintf@ap(2), 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  1283 ;;		 -> STR_4(6), 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  2  125[BANK0 ] int 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         0       6       0       0       0       0       0       0       0
  1294 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        8 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; Hardware stack levels required when called: 10
  1300 ;; This function calls:
  1301 ;;		_vfpfcnvrt
  1302 ;; This function is called by:
  1303 ;;		_sprintf
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text2
  1308  003CBA                     __ptext2:
  1309                           	callstack 0
  1310  003CBA                     _vfprintf:
  1311                           	callstack 19
  1312  003CBA                     
  1313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1314  003CBA  C0DF  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  1315  003CBE  C0E0  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1316  003CC2                     
  1317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1318  003CC2  0E00               	movlw	0
  1319  003CC4  0100               	movlb	0	; () banked
  1320  003CC6  6FF0               	movwf	(_nout+1)& (0+255),b
  1321  003CC8  0E00               	movlw	0
  1322  003CCA  6FEF               	movwf	_nout& (0+255),b
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1325  003CCC  EF7B  F01E         	goto	l5731
  1326  003CD0                     l5729:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1330  003CD0  C0DD  F0C5         	movff	vfprintf@fp,vfpfcnvrt@fp
  1331  003CD4  C0DE  F0C6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1332  003CD8  0EE3               	movlw	low vfprintf@cfmt
  1333  003CDA  6FC7               	movwf	vfpfcnvrt@fmt& (0+255),b
  1334  003CDC  0E00               	movlw	high vfprintf@cfmt
  1335  003CDE  6FC8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1336  003CE0  C0E1  F0C9         	movff	vfprintf@ap,vfpfcnvrt@ap
  1337  003CE4  C0E2  F0CA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1338  003CE8  EC4E  F00A         	call	_vfpfcnvrt	;wreg free
  1339  003CEC  0100               	movlb	0	; () banked
  1340  003CEE  51C5               	movf	?_vfpfcnvrt& (0+255),w,b
  1341  003CF0  27EF               	addwf	_nout& (0+255),f,b
  1342  003CF2  51C6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1343  003CF4  23F0               	addwfc	(_nout+1)& (0+255),f,b
  1344  003CF6                     l5731:
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1348  003CF6  C0E3  FFF6         	movff	vfprintf@cfmt,tblptrl
  1349  003CFA  C0E4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1350  003CFE                     	if	0	;tblptru may be non-zero
  1351  003CFE                     	endif
  1352  003CFE                     	if	0	;tblptru may be non-zero
  1353  003CFE                     	endif
  1354  003CFE  0008               	tblrd		*
  1355  003D00  50F5               	movf	tablat,w,c
  1356  003D02  0900               	iorlw	0
  1357  003D04  A4D8               	btfss	status,2,c
  1358  003D06  EF87  F01E         	goto	u8201
  1359  003D0A  EF89  F01E         	goto	u8200
  1360  003D0E                     u8201:
  1361  003D0E  EF68  F01E         	goto	l5729
  1362  003D12                     u8200:
  1363  003D12                     
  1364                           ; BSR set to: 0
  1365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1366  003D12  C0EF  F0DD         	movff	_nout,?_vfprintf
  1367  003D16  C0F0  F0DE         	movff	_nout+1,?_vfprintf+1
  1368  003D1A                     
  1369                           ; BSR set to: 0
  1370  003D1A  0012               	return		;funcret
  1371  003D1C                     __end_of_vfprintf:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _vfpfcnvrt *****************
  1375 ;; Defined at:
  1376 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  1379 ;;		 -> sprintf@f(6), 
  1380 ;;  fmt             2  103[BANK0 ] PTR PTR unsigned char 
  1381 ;;		 -> vfprintf@cfmt(2), 
  1382 ;;  ap              2  105[BANK0 ] PTR PTR void 
  1383 ;;		 -> sprintf@ap(2), 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  llu             8    0        unsigned long long 
  1386 ;;  ll              8    0        long long 
  1387 ;;  f               4  117[BANK0 ] long long 
  1388 ;;  ct              3  121[BANK0 ] unsigned char [3]
  1389 ;;  vp              3    0        PTR void 
  1390 ;;  cp              3    0        PTR unsigned char 
  1391 ;;  i               2    0        int 
  1392 ;;  done            2    0        int 
  1393 ;;  c               1  124[BANK0 ] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  2  101[BANK0 ] int 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1403 ;;      Params:         0       6       0       0       0       0       0       0       0
  1404 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1405 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1406 ;;      Totals:         0      24       0       0       0       0       0       0       0
  1407 ;;Total ram usage:       24 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 9
  1410 ;; This function calls:
  1411 ;;		_atoi
  1412 ;;		_efgtoa
  1413 ;;		_fputc
  1414 ;;		_isdigit
  1415 ;;		_isupper
  1416 ;;		_strncmp
  1417 ;;		_tolower
  1418 ;; This function is called by:
  1419 ;;		_vfprintf
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text3
  1424  00149C                     __ptext3:
  1425                           	callstack 0
  1426  00149C                     _vfpfcnvrt:
  1427                           	callstack 19
  1428  00149C                     
  1429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1430  00149C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1431  0014A0  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1432  0014A4  CFDE FFF6          	movff	postinc2,tblptrl
  1433  0014A8  CFDD FFF7          	movff	postdec2,tblptrh
  1434  0014AC                     	if	0	;tblptru may be non-zero
  1435  0014AC                     	endif
  1436  0014AC                     	if	0	;tblptru may be non-zero
  1437  0014AC                     	endif
  1438  0014AC  0008               	tblrd		*
  1439  0014AE  50F5               	movf	tablat,w,c
  1440  0014B0  0A25               	xorlw	37
  1441  0014B2  A4D8               	btfss	status,2,c
  1442  0014B4  EF5E  F00A         	goto	u8011
  1443  0014B8  EF60  F00A         	goto	u8010
  1444  0014BC                     u8011:
  1445  0014BC  EFE8  F00C         	goto	l5711
  1446  0014C0                     u8010:
  1447  0014C0                     
  1448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1449  0014C0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1450  0014C4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1451  0014C8  2ADE               	incf	postinc2,f,c
  1452  0014CA  0E00               	movlw	0
  1453  0014CC  22DD               	addwfc	postdec2,f,c
  1454  0014CE                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1456  0014CE  0E00               	movlw	0
  1457  0014D0  0100               	movlb	0	; () banked
  1458  0014D2  6FF2               	movwf	(_width+1)& (0+255),b
  1459  0014D4  0E00               	movlw	0
  1460  0014D6  6FF1               	movwf	_width& (0+255),b
  1461  0014D8  C0F1  F037         	movff	_width,_flags
  1462  0014DC  C0F2  F038         	movff	_width+1,_flags+1
  1463  0014E0                     
  1464                           ; BSR set to: 0
  1465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1466  0014E0  69F3               	setf	_prec& (0+255),b
  1467  0014E2  69F4               	setf	(_prec+1)& (0+255),b
  1468  0014E4                     
  1469                           ; BSR set to: 0
  1470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1471  0014E4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1472  0014E8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1473  0014EC  CFDE FFF6          	movff	postinc2,tblptrl
  1474  0014F0  CFDD FFF7          	movff	postdec2,tblptrh
  1475  0014F4                     	if	0	;tblptru may be non-zero
  1476  0014F4                     	endif
  1477  0014F4                     	if	0	;tblptru may be non-zero
  1478  0014F4                     	endif
  1479  0014F4  0008               	tblrd		*
  1480  0014F6  50F5               	movf	tablat,w,c
  1481  0014F8  0A2A               	xorlw	42
  1482  0014FA  A4D8               	btfss	status,2,c
  1483  0014FC  EF82  F00A         	goto	u8021
  1484  001500  EF84  F00A         	goto	u8020
  1485  001504                     u8021:
  1486  001504  EFAD  F00A         	goto	l5627
  1487  001508                     u8020:
  1488  001508                     
  1489                           ; BSR set to: 0
  1490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1491  001508  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1492  00150C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1493  001510  2ADE               	incf	postinc2,f,c
  1494  001512  0E00               	movlw	0
  1495  001514  22DD               	addwfc	postdec2,f,c
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1498  001516  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1499  00151A  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1500  00151E  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  1501  001522  0E02               	movlw	2
  1502  001524  26DE               	addwf	postinc2,f,c
  1503  001526  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  1504  00152A  0E00               	movlw	0
  1505  00152C  22DD               	addwfc	postdec2,f,c
  1506  00152E  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1507  001532  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1508  001536  CFDE F0F1          	movff	postinc2,_width
  1509  00153A  CFDD F0F2          	movff	postdec2,_width+1
  1510  00153E                     
  1511                           ; BSR set to: 0
  1512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1513  00153E  BFF2               	btfsc	(_width+1)& (0+255),7,b
  1514  001540  EFA6  F00A         	goto	u8030
  1515  001544  EFA4  F00A         	goto	u8031
  1516  001548                     u8031:
  1517  001548  EFF1  F00A         	goto	l5637
  1518  00154C                     u8030:
  1519  00154C                     
  1520                           ; BSR set to: 0
  1521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1522  00154C  8037               	bsf	_flags^0,0,c
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1525  00154E  6DF1               	negf	_width& (0+255),b
  1526  001550  1FF2               	comf	(_width+1)& (0+255),f,b
  1527  001552  B0D8               	btfsc	status,0,c
  1528  001554  2BF2               	incf	(_width+1)& (0+255),f,b
  1529  001556  EFF1  F00A         	goto	l5637
  1530  00155A                     l5627:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1534  00155A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1535  00155E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1536  001562  CFDE F026          	movff	postinc2,atoi@s
  1537  001566  CFDD F027          	movff	postdec2,atoi@s+1
  1538  00156A  EC8A  F017         	call	_atoi	;wreg free
  1539  00156E  C026  F0F1         	movff	?_atoi,_width
  1540  001572  C027  F0F2         	movff	?_atoi+1,_width+1
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1543  001576  EFC4  F00A         	goto	l5631
  1544  00157A                     l5629:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1548  00157A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1549  00157E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1550  001582  2ADE               	incf	postinc2,f,c
  1551  001584  0E00               	movlw	0
  1552  001586  22DD               	addwfc	postdec2,f,c
  1553  001588                     l5631:
  1554  001588  0ED0               	movlw	208
  1555  00158A  0100               	movlb	0	; () banked
  1556  00158C  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  1557  00158E  0EFF               	movlw	255
  1558  001590  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1559  001592  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1560  001596  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1561  00159A  CFDE FFF6          	movff	postinc2,tblptrl
  1562  00159E  CFDD FFF7          	movff	postdec2,tblptrh
  1563  0015A2                     	if	0	;tblptru may be non-zero
  1564  0015A2                     	endif
  1565  0015A2                     	if	0	;tblptru may be non-zero
  1566  0015A2                     	endif
  1567  0015A2  0008               	tblrd		*
  1568  0015A4  50F5               	movf	tablat,w,c
  1569  0015A6  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1570  0015A8  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1571  0015AA  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  1572  0015AC  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1573  0015AE  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1574  0015B0  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1575  0015B2  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1576  0015B4  E10A               	bnz	u8040
  1577  0015B6  0E0A               	movlw	10
  1578  0015B8  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1579  0015BA  A0D8               	btfss	status,0,c
  1580  0015BC  EFE2  F00A         	goto	u8041
  1581  0015C0  EFE5  F00A         	goto	u8040
  1582  0015C4                     u8041:
  1583  0015C4  0E01               	movlw	1
  1584  0015C6  EFE6  F00A         	goto	u8050
  1585  0015CA                     u8040:
  1586  0015CA  0E00               	movlw	0
  1587  0015CC                     u8050:
  1588  0015CC  6FCF               	movwf	_vfpfcnvrt$967& (0+255),b
  1589  0015CE  6BD0               	clrf	(_vfpfcnvrt$967+1)& (0+255),b
  1590  0015D0                     
  1591                           ; BSR set to: 0
  1592  0015D0  51CF               	movf	_vfpfcnvrt$967& (0+255),w,b
  1593  0015D2  11D0               	iorwf	(_vfpfcnvrt$967+1)& (0+255),w,b
  1594  0015D4  A4D8               	btfss	status,2,c
  1595  0015D6  EFEF  F00A         	goto	u8061
  1596  0015DA  EFF1  F00A         	goto	u8060
  1597  0015DE                     u8061:
  1598  0015DE  EFBD  F00A         	goto	l5629
  1599  0015E2                     u8060:
  1600  0015E2                     l5637:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1604  0015E2  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1605  0015E6  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1606  0015EA  CFDE FFF6          	movff	postinc2,tblptrl
  1607  0015EE  CFDD FFF7          	movff	postdec2,tblptrh
  1608  0015F2                     	if	0	;tblptru may be non-zero
  1609  0015F2                     	endif
  1610  0015F2                     	if	0	;tblptru may be non-zero
  1611  0015F2                     	endif
  1612  0015F2  0008               	tblrd		*
  1613  0015F4  50F5               	movf	tablat,w,c
  1614  0015F6  0A2E               	xorlw	46
  1615  0015F8  A4D8               	btfss	status,2,c
  1616  0015FA  EF01  F00B         	goto	u8071
  1617  0015FE  EF03  F00B         	goto	u8070
  1618  001602                     u8071:
  1619  001602  EF81  F00B         	goto	l5657
  1620  001606                     u8070:
  1621  001606                     
  1622                           ; BSR set to: 0
  1623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1624  001606  0E00               	movlw	0
  1625  001608  6FF4               	movwf	(_prec+1)& (0+255),b
  1626  00160A  0E00               	movlw	0
  1627  00160C  6FF3               	movwf	_prec& (0+255),b
  1628  00160E                     
  1629                           ; BSR set to: 0
  1630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1631  00160E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1632  001612  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1633  001616  2ADE               	incf	postinc2,f,c
  1634  001618  0E00               	movlw	0
  1635  00161A  22DD               	addwfc	postdec2,f,c
  1636  00161C                     
  1637                           ; BSR set to: 0
  1638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1639  00161C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640  001620  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641  001624  CFDE FFF6          	movff	postinc2,tblptrl
  1642  001628  CFDD FFF7          	movff	postdec2,tblptrh
  1643  00162C                     	if	0	;tblptru may be non-zero
  1644  00162C                     	endif
  1645  00162C                     	if	0	;tblptru may be non-zero
  1646  00162C                     	endif
  1647  00162C  0008               	tblrd		*
  1648  00162E  50F5               	movf	tablat,w,c
  1649  001630  0A2A               	xorlw	42
  1650  001632  A4D8               	btfss	status,2,c
  1651  001634  EF1E  F00B         	goto	u8081
  1652  001638  EF20  F00B         	goto	u8080
  1653  00163C                     u8081:
  1654  00163C  EF3D  F00B         	goto	l5647
  1655  001640                     u8080:
  1656  001640                     
  1657                           ; BSR set to: 0
  1658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1659  001640  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1660  001644  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1661  001648  2ADE               	incf	postinc2,f,c
  1662  00164A  0E00               	movlw	0
  1663  00164C  22DD               	addwfc	postdec2,f,c
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1666  00164E  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1667  001652  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1668  001656  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  1669  00165A  0E02               	movlw	2
  1670  00165C  26DE               	addwf	postinc2,f,c
  1671  00165E  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  1672  001662  0E00               	movlw	0
  1673  001664  22DD               	addwfc	postdec2,f,c
  1674  001666  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1675  00166A  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1676  00166E  CFDE F0F3          	movff	postinc2,_prec
  1677  001672  CFDD F0F4          	movff	postdec2,_prec+1
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1680  001676  EF81  F00B         	goto	l5657
  1681  00167A                     l5647:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1685  00167A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1686  00167E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1687  001682  CFDE F026          	movff	postinc2,atoi@s
  1688  001686  CFDD F027          	movff	postdec2,atoi@s+1
  1689  00168A  EC8A  F017         	call	_atoi	;wreg free
  1690  00168E  C026  F0F3         	movff	?_atoi,_prec
  1691  001692  C027  F0F4         	movff	?_atoi+1,_prec+1
  1692                           
  1693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1694  001696  EF54  F00B         	goto	l5651
  1695  00169A                     l5649:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1699  00169A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1700  00169E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1701  0016A2  2ADE               	incf	postinc2,f,c
  1702  0016A4  0E00               	movlw	0
  1703  0016A6  22DD               	addwfc	postdec2,f,c
  1704  0016A8                     l5651:
  1705  0016A8  0ED0               	movlw	208
  1706  0016AA  0100               	movlb	0	; () banked
  1707  0016AC  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  1708  0016AE  0EFF               	movlw	255
  1709  0016B0  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1710  0016B2  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1711  0016B6  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1712  0016BA  CFDE FFF6          	movff	postinc2,tblptrl
  1713  0016BE  CFDD FFF7          	movff	postdec2,tblptrh
  1714  0016C2                     	if	0	;tblptru may be non-zero
  1715  0016C2                     	endif
  1716  0016C2                     	if	0	;tblptru may be non-zero
  1717  0016C2                     	endif
  1718  0016C2  0008               	tblrd		*
  1719  0016C4  50F5               	movf	tablat,w,c
  1720  0016C6  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1721  0016C8  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1722  0016CA  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  1723  0016CC  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1724  0016CE  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1725  0016D0  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1726  0016D2  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1727  0016D4  E10A               	bnz	u8090
  1728  0016D6  0E0A               	movlw	10
  1729  0016D8  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1730  0016DA  A0D8               	btfss	status,0,c
  1731  0016DC  EF72  F00B         	goto	u8091
  1732  0016E0  EF75  F00B         	goto	u8090
  1733  0016E4                     u8091:
  1734  0016E4  0E01               	movlw	1
  1735  0016E6  EF76  F00B         	goto	u8100
  1736  0016EA                     u8090:
  1737  0016EA  0E00               	movlw	0
  1738  0016EC                     u8100:
  1739  0016EC  6FD1               	movwf	_vfpfcnvrt$968& (0+255),b
  1740  0016EE  6BD2               	clrf	(_vfpfcnvrt$968+1)& (0+255),b
  1741  0016F0                     
  1742                           ; BSR set to: 0
  1743  0016F0  51D1               	movf	_vfpfcnvrt$968& (0+255),w,b
  1744  0016F2  11D2               	iorwf	(_vfpfcnvrt$968+1)& (0+255),w,b
  1745  0016F4  A4D8               	btfss	status,2,c
  1746  0016F6  EF7F  F00B         	goto	u8111
  1747  0016FA  EF81  F00B         	goto	u8110
  1748  0016FE                     u8111:
  1749  0016FE  EF4D  F00B         	goto	l5649
  1750  001702                     u8110:
  1751  001702                     l5657:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1755  001702  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1756  001706  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1757  00170A  CFDE FFF6          	movff	postinc2,tblptrl
  1758  00170E  CFDD FFF7          	movff	postdec2,tblptrh
  1759  001712                     	if	0	;tblptru may be non-zero
  1760  001712                     	endif
  1761  001712                     	if	0	;tblptru may be non-zero
  1762  001712                     	endif
  1763  001712  0008               	tblrd		*
  1764  001714  50F5               	movf	tablat,w,c
  1765  001716  6E25               	movwf	tolower@c^0,c
  1766  001718  6A26               	clrf	(tolower@c+1)^0,c
  1767  00171A  EC8E  F01E         	call	_tolower	;wreg free
  1768  00171E  5025               	movf	?_tolower^0,w,c
  1769  001720  0100               	movlb	0	; () banked
  1770  001722  6FD9               	movwf	vfpfcnvrt@ct& (0+255),b
  1771  001724                     
  1772                           ; BSR set to: 0
  1773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1774  001724  51D9               	movf	vfpfcnvrt@ct& (0+255),w,b
  1775  001726  B4D8               	btfsc	status,2,c
  1776  001728  EF98  F00B         	goto	u8121
  1777  00172C  EF9A  F00B         	goto	u8120
  1778  001730                     u8121:
  1779  001730  EFD4  F00B         	goto	l5667
  1780  001734                     u8120:
  1781  001734                     
  1782                           ; BSR set to: 0
  1783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1784  001734  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1785  001738  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1786  00173C  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  1787  001740  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  1788  001744  0E01               	movlw	1
  1789  001746  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  1790  001748  0E00               	movlw	0
  1791  00174A  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1792  00174C  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1793  001750  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1794  001754                     	if	0	;tblptru may be non-zero
  1795  001754                     	endif
  1796  001754                     	if	0	;tblptru may be non-zero
  1797  001754                     	endif
  1798  001754  0008               	tblrd		*
  1799  001756  50F5               	movf	tablat,w,c
  1800  001758  6E25               	movwf	tolower@c^0,c
  1801  00175A  6A26               	clrf	(tolower@c+1)^0,c
  1802  00175C  EC8E  F01E         	call	_tolower	;wreg free
  1803  001760  5025               	movf	?_tolower^0,w,c
  1804  001762  0100               	movlb	0	; () banked
  1805  001764  6FDA               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1806  001766                     
  1807                           ; BSR set to: 0
  1808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1809  001766  51DA               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1810  001768  B4D8               	btfsc	status,2,c
  1811  00176A  EFB9  F00B         	goto	u8131
  1812  00176E  EFBB  F00B         	goto	u8130
  1813  001772                     u8131:
  1814  001772  EFD4  F00B         	goto	l5667
  1815  001776                     u8130:
  1816  001776                     
  1817                           ; BSR set to: 0
  1818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1819  001776  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1820  00177A  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1821  00177E  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  1822  001782  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  1823  001786  0E02               	movlw	2
  1824  001788  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  1825  00178A  0E00               	movlw	0
  1826  00178C  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1827  00178E  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1828  001792  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1829  001796                     	if	0	;tblptru may be non-zero
  1830  001796                     	endif
  1831  001796                     	if	0	;tblptru may be non-zero
  1832  001796                     	endif
  1833  001796  0008               	tblrd		*
  1834  001798  50F5               	movf	tablat,w,c
  1835  00179A  6E25               	movwf	tolower@c^0,c
  1836  00179C  6A26               	clrf	(tolower@c+1)^0,c
  1837  00179E  EC8E  F01E         	call	_tolower	;wreg free
  1838  0017A2  5025               	movf	?_tolower^0,w,c
  1839  0017A4  0100               	movlb	0	; () banked
  1840  0017A6  6FDB               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1841  0017A8                     l5667:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1845  0017A8  0E66               	movlw	102
  1846  0017AA  19D9               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1847  0017AC  A4D8               	btfss	status,2,c
  1848  0017AE  EFDB  F00B         	goto	u8141
  1849  0017B2  EFDD  F00B         	goto	u8140
  1850  0017B6                     u8141:
  1851  0017B6  EF1D  F00C         	goto	l5679
  1852  0017BA                     u8140:
  1853  0017BA                     
  1854                           ; BSR set to: 0
  1855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1856  0017BA  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1857  0017BE  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1858  0017C2  CFDE FFF6          	movff	postinc2,tblptrl
  1859  0017C6  CFDD FFF7          	movff	postdec2,tblptrh
  1860  0017CA                     	if	0	;tblptru may be non-zero
  1861  0017CA                     	endif
  1862  0017CA                     	if	0	;tblptru may be non-zero
  1863  0017CA                     	endif
  1864  0017CA  0008               	tblrd		*
  1865  0017CC  CFF5 F0DC          	movff	tablat,vfpfcnvrt@c
  1866  0017D0                     
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1869  0017D0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1870  0017D4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1871  0017D8  2ADE               	incf	postinc2,f,c
  1872  0017DA  0E00               	movlw	0
  1873  0017DC  22DD               	addwfc	postdec2,f,c
  1874  0017DE                     
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1877  0017DE  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1878  0017E2  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1879  0017E6  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  1880  0017EA  0E04               	movlw	4
  1881  0017EC  26DE               	addwf	postinc2,f,c
  1882  0017EE  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  1883  0017F2  0E00               	movlw	0
  1884  0017F4  22DD               	addwfc	postdec2,f,c
  1885  0017F6  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1886  0017FA  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1887  0017FE  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f
  1888  001802  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+1
  1889  001806  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+2
  1890  00180A  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+3
  1891  00180E                     l5675:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1895  00180E  C0C5  F081         	movff	vfpfcnvrt@fp,efgtoa@fp
  1896  001812  C0C6  F082         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1897  001816  C0D5  F083         	movff	vfpfcnvrt@f,efgtoa@f
  1898  00181A  C0D6  F084         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1899  00181E  C0D7  F085         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1900  001822  C0D8  F086         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1901  001826  C0DC  F087         	movff	vfpfcnvrt@c,efgtoa@c
  1902  00182A  EC1F  F004         	call	_efgtoa	;wreg free
  1903  00182E  C081  F0C5         	movff	?_efgtoa,?_vfpfcnvrt
  1904  001832  C082  F0C6         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1905  001836  EF03  F00D         	goto	l929
  1906  00183A                     l5679:
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1910  00183A  0ED9               	movlw	low vfpfcnvrt@ct
  1911  00183C  6E1F               	movwf	strncmp@_l^0,c
  1912  00183E  0E00               	movlw	high vfpfcnvrt@ct
  1913  001840  6E20               	movwf	(strncmp@_l+1)^0,c
  1914  001842  0E39               	movlw	low STR_13
  1915  001844  6E21               	movwf	strncmp@_r^0,c
  1916  001846  0E08               	movlw	high STR_13
  1917  001848  6E22               	movwf	(strncmp@_r+1)^0,c
  1918  00184A  0E00               	movlw	0
  1919  00184C  6E24               	movwf	(strncmp@n+1)^0,c
  1920  00184E  0E02               	movlw	2
  1921  001850  6E23               	movwf	strncmp@n^0,c
  1922  001852  ECD9  F01A         	call	_strncmp	;wreg free
  1923  001856  501F               	movf	?_strncmp^0,w,c
  1924  001858  1020               	iorwf	(?_strncmp+1)^0,w,c
  1925  00185A  A4D8               	btfss	status,2,c
  1926  00185C  EF32  F00C         	goto	u8151
  1927  001860  EF34  F00C         	goto	u8150
  1928  001864                     u8151:
  1929  001864  EFB0  F00C         	goto	l5695
  1930  001868                     u8150:
  1931  001868                     
  1932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1933  001868  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1934  00186C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1935  001870  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  1936  001874  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  1937  001878  0E01               	movlw	1
  1938  00187A  0100               	movlb	0	; () banked
  1939  00187C  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  1940  00187E  0E00               	movlw	0
  1941  001880  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1942  001882  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1943  001886  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1944  00188A                     	if	0	;tblptru may be non-zero
  1945  00188A                     	endif
  1946  00188A                     	if	0	;tblptru may be non-zero
  1947  00188A                     	endif
  1948  00188A  0008               	tblrd		*
  1949  00188C  CFF5 F0DC          	movff	tablat,vfpfcnvrt@c
  1950  001890  0EBF               	movlw	191
  1951  001892  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  1952  001894  0EFF               	movlw	255
  1953  001896  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1954  001898  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1955  00189C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1956  0018A0  CFDE FFF6          	movff	postinc2,tblptrl
  1957  0018A4  CFDD FFF7          	movff	postdec2,tblptrh
  1958  0018A8                     	if	0	;tblptru may be non-zero
  1959  0018A8                     	endif
  1960  0018A8                     	if	0	;tblptru may be non-zero
  1961  0018A8                     	endif
  1962  0018A8  0008               	tblrd		*
  1963  0018AA  50F5               	movf	tablat,w,c
  1964  0018AC  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1965  0018AE  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1966  0018B0  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  1967  0018B2  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1968  0018B4  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1969  0018B6  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1970  0018B8  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1971  0018BA  E10A               	bnz	u8160
  1972  0018BC  0E1A               	movlw	26
  1973  0018BE  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1974  0018C0  A0D8               	btfss	status,0,c
  1975  0018C2  EF65  F00C         	goto	u8161
  1976  0018C6  EF68  F00C         	goto	u8160
  1977  0018CA                     u8161:
  1978  0018CA  0E01               	movlw	1
  1979  0018CC  EF69  F00C         	goto	u8170
  1980  0018D0                     u8160:
  1981  0018D0  0E00               	movlw	0
  1982  0018D2                     u8170:
  1983  0018D2  6FD3               	movwf	_vfpfcnvrt$972& (0+255),b
  1984  0018D4  6BD4               	clrf	(_vfpfcnvrt$972+1)& (0+255),b
  1985  0018D6                     
  1986                           ; BSR set to: 0
  1987  0018D6  51D3               	movf	_vfpfcnvrt$972& (0+255),w,b
  1988  0018D8  11D4               	iorwf	(_vfpfcnvrt$972+1)& (0+255),w,b
  1989  0018DA  B4D8               	btfsc	status,2,c
  1990  0018DC  EF72  F00C         	goto	u8181
  1991  0018E0  EF74  F00C         	goto	u8180
  1992  0018E4                     u8181:
  1993  0018E4  EF8E  F00C         	goto	l5689
  1994  0018E8                     u8180:
  1995  0018E8                     
  1996                           ; BSR set to: 0
  1997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1998  0018E8  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1999  0018EC  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2000  0018F0  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2001  0018F4  0E04               	movlw	4
  2002  0018F6  26DE               	addwf	postinc2,f,c
  2003  0018F8  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2004  0018FC  0E00               	movlw	0
  2005  0018FE  22DD               	addwfc	postdec2,f,c
  2006  001900  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2007  001904  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2008  001908  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f
  2009  00190C  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+1
  2010  001910  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+2
  2011  001914  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+3
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2014  001918  EFA6  F00C         	goto	l936
  2015  00191C                     l5689:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2019  00191C  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2020  001920  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2021  001924  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2022  001928  0E04               	movlw	4
  2023  00192A  26DE               	addwf	postinc2,f,c
  2024  00192C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2025  001930  0E00               	movlw	0
  2026  001932  22DD               	addwfc	postdec2,f,c
  2027  001934  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2028  001938  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2029  00193C  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f
  2030  001940  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+1
  2031  001944  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+2
  2032  001948  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+3
  2033  00194C                     l936:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2037  00194C  0E02               	movlw	2
  2038  00194E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2039  001952  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2040  001956  26DE               	addwf	postinc2,f,c
  2041  001958  0E00               	movlw	0
  2042  00195A  22DD               	addwfc	postdec2,f,c
  2043  00195C  EF07  F00C         	goto	l5675
  2044  001960                     l5695:
  2045                           
  2046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2047  001960  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2048  001964  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2049  001968  CFDE FFF6          	movff	postinc2,tblptrl
  2050  00196C  CFDD FFF7          	movff	postdec2,tblptrh
  2051  001970                     	if	0	;tblptru may be non-zero
  2052  001970                     	endif
  2053  001970                     	if	0	;tblptru may be non-zero
  2054  001970                     	endif
  2055  001970  0008               	tblrd		*
  2056  001972  50F5               	movf	tablat,w,c
  2057  001974  0A25               	xorlw	37
  2058  001976  A4D8               	btfss	status,2,c
  2059  001978  EFC0  F00C         	goto	u8191
  2060  00197C  EFC2  F00C         	goto	u8190
  2061  001980                     u8191:
  2062  001980  EFDA  F00C         	goto	l5705
  2063  001984                     u8190:
  2064  001984                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2066  001984  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2067  001988  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2068  00198C  2ADE               	incf	postinc2,f,c
  2069  00198E  0E00               	movlw	0
  2070  001990  22DD               	addwfc	postdec2,f,c
  2071  001992                     
  2072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2073  001992  0E00               	movlw	0
  2074  001994  6E20               	movwf	(fputc@c+1)^0,c
  2075  001996  0E25               	movlw	37
  2076  001998  6E1F               	movwf	fputc@c^0,c
  2077  00199A  C0C5  F021         	movff	vfpfcnvrt@fp,fputc@fp
  2078  00199E  C0C6  F022         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2079  0019A2  ECAD  F01B         	call	_fputc	;wreg free
  2080  0019A6                     l5701:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2083  0019A6  0E00               	movlw	0
  2084  0019A8  0100               	movlb	0	; () banked
  2085  0019AA  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2086  0019AC  0E01               	movlw	1
  2087  0019AE  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2088  0019B0  EF03  F00D         	goto	l929
  2089  0019B4                     l5705:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2092  0019B4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2093  0019B8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2094  0019BC  2ADE               	incf	postinc2,f,c
  2095  0019BE  0E00               	movlw	0
  2096  0019C0  22DD               	addwfc	postdec2,f,c
  2097  0019C2                     
  2098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2099  0019C2  0E00               	movlw	0
  2100  0019C4  0100               	movlb	0	; () banked
  2101  0019C6  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2102  0019C8  0E00               	movlw	0
  2103  0019CA  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2104  0019CC  EF03  F00D         	goto	l929
  2105  0019D0                     l5711:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2108  0019D0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2109  0019D4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2110  0019D8  CFDE FFF6          	movff	postinc2,tblptrl
  2111  0019DC  CFDD FFF7          	movff	postdec2,tblptrh
  2112  0019E0                     	if	0	;tblptru may be non-zero
  2113  0019E0                     	endif
  2114  0019E0                     	if	0	;tblptru may be non-zero
  2115  0019E0                     	endif
  2116  0019E0  0008               	tblrd		*
  2117  0019E2  50F5               	movf	tablat,w,c
  2118  0019E4  6E1F               	movwf	fputc@c^0,c
  2119  0019E6  6A20               	clrf	(fputc@c+1)^0,c
  2120  0019E8  C0C5  F021         	movff	vfpfcnvrt@fp,fputc@fp
  2121  0019EC  C0C6  F022         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2122  0019F0  ECAD  F01B         	call	_fputc	;wreg free
  2123  0019F4                     
  2124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2125  0019F4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2126  0019F8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2127  0019FC  2ADE               	incf	postinc2,f,c
  2128  0019FE  0E00               	movlw	0
  2129  001A00  22DD               	addwfc	postdec2,f,c
  2130  001A02  EFD3  F00C         	goto	l5701
  2131  001A06                     l929:
  2132  001A06  0012               	return		;funcret
  2133  001A08                     __end_of_vfpfcnvrt:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _strncmp *****************
  2137 ;; Defined at:
  2138 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  _l              2   30[COMRAM] PTR const unsigned char 
  2141 ;;		 -> vfpfcnvrt@ct(3), 
  2142 ;;  _r              2   32[COMRAM] PTR const unsigned char 
  2143 ;;		 -> STR_15(3), 
  2144 ;;  n               2   34[COMRAM] unsigned int 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  r               2   39[COMRAM] PTR const unsigned char 
  2147 ;;		 -> STR_15(3), 
  2148 ;;  l               2   37[COMRAM] PTR const unsigned char 
  2149 ;;		 -> vfpfcnvrt@ct(3), 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  2   30[COMRAM] int 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2159 ;;      Params:         6       0       0       0       0       0       0       0       0
  2160 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2161 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2162 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2163 ;;Total ram usage:       11 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 4
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_vfpfcnvrt
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text4
  2174  0035B2                     __ptext4:
  2175                           	callstack 0
  2176  0035B2                     _strncmp:
  2177                           	callstack 23
  2178  0035B2  C01F  F026         	movff	strncmp@_l,strncmp@l
  2179  0035B6  C020  F027         	movff	strncmp@_l+1,strncmp@l+1
  2180  0035BA  C021  F028         	movff	strncmp@_r,strncmp@r
  2181  0035BE  C022  F029         	movff	strncmp@_r+1,strncmp@r+1
  2182  0035C2  0623               	decf	strncmp@n^0,f,c
  2183  0035C4  A0D8               	btfss	status,0,c
  2184  0035C6  0624               	decf	(strncmp@n+1)^0,f,c
  2185  0035C8  2823               	incf	strncmp@n^0,w,c
  2186  0035CA  E106               	bnz	u7961
  2187  0035CC  2824               	incf	(strncmp@n+1)^0,w,c
  2188  0035CE  A4D8               	btfss	status,2,c
  2189  0035D0  EFEC  F01A         	goto	u7961
  2190  0035D4  EFEE  F01A         	goto	u7960
  2191  0035D8                     u7961:
  2192  0035D8  EFFB  F01A         	goto	l5599
  2193  0035DC                     u7960:
  2194  0035DC  0E00               	movlw	0
  2195  0035DE  6E20               	movwf	(?_strncmp+1)^0,c
  2196  0035E0  0E00               	movlw	0
  2197  0035E2  6E1F               	movwf	?_strncmp^0,c
  2198  0035E4  EF43  F01B         	goto	l1057
  2199  0035E8                     l5597:
  2200  0035E8  4A26               	infsnz	strncmp@l^0,f,c
  2201  0035EA  2A27               	incf	(strncmp@l+1)^0,f,c
  2202  0035EC  4A28               	infsnz	strncmp@r^0,f,c
  2203  0035EE  2A29               	incf	(strncmp@r+1)^0,f,c
  2204  0035F0  0623               	decf	strncmp@n^0,f,c
  2205  0035F2  A0D8               	btfss	status,0,c
  2206  0035F4  0624               	decf	(strncmp@n+1)^0,f,c
  2207  0035F6                     l5599:
  2208  0035F6  C026  FFD9         	movff	strncmp@l,fsr2l
  2209  0035FA  C027  FFDA         	movff	strncmp@l+1,fsr2h
  2210  0035FE  50DF               	movf	indf2,w,c
  2211  003600  B4D8               	btfsc	status,2,c
  2212  003602  EF05  F01B         	goto	u7971
  2213  003606  EF07  F01B         	goto	u7970
  2214  00360A                     u7971:
  2215  00360A  EF32  F01B         	goto	l5607
  2216  00360E                     u7970:
  2217  00360E  C028  FFF6         	movff	strncmp@r,tblptrl
  2218  003612  C029  FFF7         	movff	strncmp@r+1,tblptrh
  2219  003616                     	if	0	;tblptru may be non-zero
  2220  003616                     	endif
  2221  003616                     	if	0	;tblptru may be non-zero
  2222  003616                     	endif
  2223  003616  0008               	tblrd		*
  2224  003618  50F5               	movf	tablat,w,c
  2225  00361A  0900               	iorlw	0
  2226  00361C  B4D8               	btfsc	status,2,c
  2227  00361E  EF13  F01B         	goto	u7981
  2228  003622  EF15  F01B         	goto	u7980
  2229  003626                     u7981:
  2230  003626  EF32  F01B         	goto	l5607
  2231  00362A                     u7980:
  2232  00362A  5023               	movf	strncmp@n^0,w,c
  2233  00362C  1024               	iorwf	(strncmp@n+1)^0,w,c
  2234  00362E  B4D8               	btfsc	status,2,c
  2235  003630  EF1C  F01B         	goto	u7991
  2236  003634  EF1E  F01B         	goto	u7990
  2237  003638                     u7991:
  2238  003638  EF32  F01B         	goto	l5607
  2239  00363C                     u7990:
  2240  00363C  C026  FFD9         	movff	strncmp@l,fsr2l
  2241  003640  C027  FFDA         	movff	strncmp@l+1,fsr2h
  2242  003644  50DF               	movf	indf2,w,c
  2243  003646  6E25               	movwf	??_strncmp^0,c
  2244  003648  C028  FFF6         	movff	strncmp@r,tblptrl
  2245  00364C  C029  FFF7         	movff	strncmp@r+1,tblptrh
  2246  003650                     	if	0	;tblptru may be non-zero
  2247  003650                     	endif
  2248  003650                     	if	0	;tblptru may be non-zero
  2249  003650                     	endif
  2250  003650  0008               	tblrd		*
  2251  003652  50F5               	movf	tablat,w,c
  2252  003654  1825               	xorwf	??_strncmp^0,w,c
  2253  003656  B4D8               	btfsc	status,2,c
  2254  003658  EF30  F01B         	goto	u8001
  2255  00365C  EF32  F01B         	goto	u8000
  2256  003660                     u8001:
  2257  003660  EFF4  F01A         	goto	l5597
  2258  003664                     u8000:
  2259  003664                     l5607:
  2260  003664  C026  FFD9         	movff	strncmp@l,fsr2l
  2261  003668  C027  FFDA         	movff	strncmp@l+1,fsr2h
  2262  00366C  50DF               	movf	indf2,w,c
  2263  00366E  6E25               	movwf	??_strncmp^0,c
  2264  003670  C028  FFF6         	movff	strncmp@r,tblptrl
  2265  003674  C029  FFF7         	movff	strncmp@r+1,tblptrh
  2266  003678                     	if	0	;tblptru may be non-zero
  2267  003678                     	endif
  2268  003678                     	if	0	;tblptru may be non-zero
  2269  003678                     	endif
  2270  003678  0008               	tblrd		*
  2271  00367A  50F5               	movf	tablat,w,c
  2272  00367C  5C25               	subwf	??_strncmp^0,w,c
  2273  00367E  6E1F               	movwf	?_strncmp^0,c
  2274  003680  6A20               	clrf	(?_strncmp+1)^0,c
  2275  003682  A0D8               	btfss	status,0,c
  2276  003684  0620               	decf	(?_strncmp+1)^0,f,c
  2277  003686                     l1057:
  2278  003686  0012               	return		;funcret
  2279  003688                     __end_of_strncmp:
  2280                           	callstack 0
  2281                           
  2282 ;; *************** function _efgtoa *****************
  2283 ;; Defined at:
  2284 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  fp              2   33[BANK0 ] PTR struct _IO_FILE
  2287 ;;		 -> sprintf@f(6), 
  2288 ;;  f               4   35[BANK0 ] PTR struct _IO_FILE
  2289 ;;  c               1   39[BANK0 ] unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  u               4   97[BANK0 ] unsigned char 
  2292 ;;  g               4   89[BANK0 ] unsigned char 
  2293 ;;  l               4   83[BANK0 ] unsigned char 
  2294 ;;  h               4   79[BANK0 ] unsigned char 
  2295 ;;  ou              4   65[BANK0 ] unsigned char 
  2296 ;;  n               2   95[BANK0 ] int 
  2297 ;;  e               2   93[BANK0 ] int 
  2298 ;;  i               2   87[BANK0 ] int 
  2299 ;;  w               2   75[BANK0 ] int 
  2300 ;;  p               2   73[BANK0 ] int 
  2301 ;;  sign            2   71[BANK0 ] int 
  2302 ;;  d               2   69[BANK0 ] int 
  2303 ;;  m               2   63[BANK0 ] int 
  2304 ;;  ne              2   61[BANK0 ] int 
  2305 ;;  pp              2   59[BANK0 ] int 
  2306 ;;  t               2   57[BANK0 ] int 
  2307 ;;  mode            1   78[BANK0 ] unsigned char 
  2308 ;;  nmode           1   77[BANK0 ] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  2   33[BANK0 ] int 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2318 ;;      Params:         0       7       0       0       0       0       0       0       0
  2319 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2320 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2321 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2322 ;;Total ram usage:       68 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 8
  2325 ;; This function calls:
  2326 ;;		___awdiv
  2327 ;;		___awmod
  2328 ;;		___fladd
  2329 ;;		___fldiv
  2330 ;;		___fleq
  2331 ;;		___flge
  2332 ;;		___flmul
  2333 ;;		___flneg
  2334 ;;		___flsub
  2335 ;;		___fltol
  2336 ;;		___fpclassifyf
  2337 ;;		_floorf
  2338 ;;		_isupper
  2339 ;;		_pad
  2340 ;;		_strcpy
  2341 ;;		_tolower
  2342 ;; This function is called by:
  2343 ;;		_vfpfcnvrt
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text5
  2348  00083E                     __ptext5:
  2349                           	callstack 0
  2350  00083E                     _efgtoa:
  2351                           	callstack 19
  2352  00083E                     
  2353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2354  00083E  0E00               	movlw	0
  2355  000840  0100               	movlb	0	; () banked
  2356  000842  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  2357  000844  0E00               	movlw	0
  2358  000846  6FA7               	movwf	efgtoa@sign& (0+255),b
  2359  000848                     
  2360                           ; BSR set to: 0
  2361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2362  000848  C083  F0B9         	movff	efgtoa@f,efgtoa@g
  2363  00084C  C084  F0BA         	movff	efgtoa@f+1,efgtoa@g+1
  2364  000850  C085  F0BB         	movff	efgtoa@f+2,efgtoa@g+2
  2365  000854  C086  F0BC         	movff	efgtoa@f+3,efgtoa@g+3
  2366  000858                     
  2367                           ; BSR set to: 0
  2368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2369  000858  BFBC               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2370  00085A  EF33  F004         	goto	u7350
  2371  00085E  EF31  F004         	goto	u7351
  2372  000862                     u7351:
  2373  000862  EF49  F004         	goto	l5249
  2374  000866                     u7350:
  2375  000866                     
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2378  000866  0E00               	movlw	0
  2379  000868  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  2380  00086A  0E01               	movlw	1
  2381  00086C  6FA7               	movwf	efgtoa@sign& (0+255),b
  2382  00086E                     
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2385  00086E  C0B9  F01F         	movff	efgtoa@g,___flneg@f1
  2386  000872  C0BA  F020         	movff	efgtoa@g+1,___flneg@f1+1
  2387  000876  C0BB  F021         	movff	efgtoa@g+2,___flneg@f1+2
  2388  00087A  C0BC  F022         	movff	efgtoa@g+3,___flneg@f1+3
  2389  00087E  EC40  F020         	call	___flneg	;wreg free
  2390  000882  C01F  F0B9         	movff	?___flneg,efgtoa@g
  2391  000886  C020  F0BA         	movff	?___flneg+1,efgtoa@g+1
  2392  00088A  C021  F0BB         	movff	?___flneg+2,efgtoa@g+2
  2393  00088E  C022  F0BC         	movff	?___flneg+3,efgtoa@g+3
  2394  000892                     l5249:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2397  000892  0E00               	movlw	0
  2398  000894  0100               	movlb	0	; () banked
  2399  000896  6FC0               	movwf	(efgtoa@n+1)& (0+255),b
  2400  000898  0E00               	movlw	0
  2401  00089A  6FBF               	movwf	efgtoa@n& (0+255),b
  2402  00089C                     
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2405  00089C  C0F1  F0AB         	movff	_width,efgtoa@w
  2406  0008A0  C0F2  F0AC         	movff	_width+1,efgtoa@w+1
  2407  0008A4                     
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2410  0008A4  51A7               	movf	efgtoa@sign& (0+255),w,b
  2411  0008A6  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2412  0008A8  A4D8               	btfss	status,2,c
  2413  0008AA  EF59  F004         	goto	u7361
  2414  0008AE  EF5B  F004         	goto	u7360
  2415  0008B2                     u7361:
  2416  0008B2  EF62  F004         	goto	l5257
  2417  0008B6                     u7360:
  2418  0008B6                     
  2419                           ; BSR set to: 0
  2420  0008B6  A437               	btfss	_flags^0,2,c
  2421  0008B8  EF60  F004         	goto	u7371
  2422  0008BC  EF62  F004         	goto	u7370
  2423  0008C0                     u7371:
  2424  0008C0  EF7C  F004         	goto	l5269
  2425  0008C4                     u7370:
  2426  0008C4                     l5257:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2430  0008C4  51A7               	movf	efgtoa@sign& (0+255),w,b
  2431  0008C6  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2432  0008C8  A4D8               	btfss	status,2,c
  2433  0008CA  EF69  F004         	goto	u7381
  2434  0008CE  EF6B  F004         	goto	u7380
  2435  0008D2                     u7381:
  2436  0008D2  EF71  F004         	goto	l5261
  2437  0008D6                     u7380:
  2438  0008D6                     
  2439                           ; BSR set to: 0
  2440  0008D6  0E00               	movlw	0
  2441  0008D8  6F8E               	movwf	(_efgtoa$941+1)& (0+255),b
  2442  0008DA  0E2B               	movlw	43
  2443  0008DC  6F8D               	movwf	_efgtoa$941& (0+255),b
  2444  0008DE  EF75  F004         	goto	l5263
  2445  0008E2                     l5261:
  2446                           
  2447                           ; BSR set to: 0
  2448  0008E2  0E00               	movlw	0
  2449  0008E4  6F8E               	movwf	(_efgtoa$941+1)& (0+255),b
  2450  0008E6  0E2D               	movlw	45
  2451  0008E8  6F8D               	movwf	_efgtoa$941& (0+255),b
  2452  0008EA                     l5263:
  2453                           
  2454                           ; BSR set to: 0
  2455  0008EA  C08D  F100         	movff	_efgtoa$941,_dbuf
  2456  0008EE                     
  2457                           ; BSR set to: 0
  2458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2459  0008EE  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  2460  0008F0  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  2461  0008F2                     
  2462                           ; BSR set to: 0
  2463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2464  0008F2  07AB               	decf	efgtoa@w& (0+255),f,b
  2465  0008F4  A0D8               	btfss	status,0,c
  2466  0008F6  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  2467  0008F8                     l5269:
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2471  0008F8  C0B9  F01F         	movff	efgtoa@g,___fpclassifyf@x
  2472  0008FC  C0BA  F020         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2473  000900  C0BB  F021         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2474  000904  C0BC  F022         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2475  000908  ECDC  F019         	call	___fpclassifyf	;wreg free
  2476  00090C  041F               	decf	?___fpclassifyf^0,w,c
  2477  00090E  1020               	iorwf	(?___fpclassifyf+1)^0,w,c
  2478  000910  A4D8               	btfss	status,2,c
  2479  000912  EF8D  F004         	goto	u7391
  2480  000916  EF8F  F004         	goto	u7390
  2481  00091A                     u7391:
  2482  00091A  EFE7  F004         	goto	l5287
  2483  00091E                     u7390:
  2484  00091E  0EBF               	movlw	191
  2485  000920  0100               	movlb	0	; () banked
  2486  000922  6F88               	movwf	??_efgtoa& (0+255),b
  2487  000924  0EFF               	movlw	255
  2488  000926  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  2489  000928  5187               	movf	efgtoa@c& (0+255),w,b
  2490  00092A  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  2491  00092C  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  2492  00092E  5188               	movf	??_efgtoa& (0+255),w,b
  2493  000930  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  2494  000932  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  2495  000934  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2496  000936  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  2497  000938  E10A               	bnz	u7400
  2498  00093A  0E1A               	movlw	26
  2499  00093C  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  2500  00093E  A0D8               	btfss	status,0,c
  2501  000940  EFA4  F004         	goto	u7401
  2502  000944  EFA7  F004         	goto	u7400
  2503  000948                     u7401:
  2504  000948  0E01               	movlw	1
  2505  00094A  EFA8  F004         	goto	u7410
  2506  00094E                     u7400:
  2507  00094E  0E00               	movlw	0
  2508  000950                     u7410:
  2509  000950  6F8F               	movwf	_efgtoa$942& (0+255),b
  2510  000952  6B90               	clrf	(_efgtoa$942+1)& (0+255),b
  2511  000954                     
  2512                           ; BSR set to: 0
  2513  000954  518F               	movf	_efgtoa$942& (0+255),w,b
  2514  000956  1190               	iorwf	(_efgtoa$942+1)& (0+255),w,b
  2515  000958  B4D8               	btfsc	status,2,c
  2516  00095A  EFB1  F004         	goto	u7421
  2517  00095E  EFB3  F004         	goto	u7420
  2518  000962                     u7421:
  2519  000962  EFC1  F004         	goto	l5279
  2520  000966                     u7420:
  2521  000966                     
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2524  000966  0E00               	movlw	low _dbuf
  2525  000968  25BF               	addwf	efgtoa@n& (0+255),w,b
  2526  00096A  6E1F               	movwf	strcpy@dest^0,c
  2527  00096C  0E01               	movlw	high _dbuf
  2528  00096E  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2529  000970  6E20               	movwf	(strcpy@dest+1)^0,c
  2530  000972  0E29               	movlw	low STR_5
  2531  000974  6E21               	movwf	strcpy@src^0,c
  2532  000976  0E08               	movlw	high STR_5
  2533  000978  6E22               	movwf	(strcpy@src+1)^0,c
  2534  00097A  ECBF  F01E         	call	_strcpy	;wreg free
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2537  00097E  EFCD  F004         	goto	l5281
  2538  000982                     l5279:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2542  000982  0E00               	movlw	low _dbuf
  2543  000984  25BF               	addwf	efgtoa@n& (0+255),w,b
  2544  000986  6E1F               	movwf	strcpy@dest^0,c
  2545  000988  0E01               	movlw	high _dbuf
  2546  00098A  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2547  00098C  6E20               	movwf	(strcpy@dest+1)^0,c
  2548  00098E  0E31               	movlw	low STR_6
  2549  000990  6E21               	movwf	strcpy@src^0,c
  2550  000992  0E08               	movlw	high STR_6
  2551  000994  6E22               	movwf	(strcpy@src+1)^0,c
  2552  000996  ECBF  F01E         	call	_strcpy	;wreg free
  2553  00099A                     l5281:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2556  00099A  0100               	movlb	0	; () banked
  2557  00099C  0EFD               	movlw	253
  2558  00099E  27AB               	addwf	efgtoa@w& (0+255),f,b
  2559  0009A0  0EFF               	movlw	255
  2560  0009A2  23AC               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2561  0009A4                     l5283:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2564  0009A4  C081  F064         	movff	efgtoa@fp,pad@fp
  2565  0009A8  C082  F065         	movff	efgtoa@fp+1,pad@fp+1
  2566  0009AC  0E00               	movlw	low _dbuf
  2567  0009AE  0100               	movlb	0	; () banked
  2568  0009B0  6F66               	movwf	pad@buf& (0+255),b
  2569  0009B2  0E01               	movlw	high _dbuf
  2570  0009B4  6F67               	movwf	(pad@buf+1)& (0+255),b
  2571  0009B6  C0AB  F068         	movff	efgtoa@w,pad@p
  2572  0009BA  C0AC  F069         	movff	efgtoa@w+1,pad@p+1
  2573  0009BE  EC12  F01C         	call	_pad	;wreg free
  2574  0009C2  C064  F081         	movff	?_pad,?_efgtoa
  2575  0009C6  C065  F082         	movff	?_pad+1,?_efgtoa+1
  2576  0009CA  EF4D  F00A         	goto	l827
  2577  0009CE                     l5287:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2580  0009CE  C0B9  F01F         	movff	efgtoa@g,___fpclassifyf@x
  2581  0009D2  C0BA  F020         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2582  0009D6  C0BB  F021         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2583  0009DA  C0BC  F022         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2584  0009DE  ECDC  F019         	call	___fpclassifyf	;wreg free
  2585  0009E2  501F               	movf	?___fpclassifyf^0,w,c
  2586  0009E4  1020               	iorwf	(?___fpclassifyf+1)^0,w,c
  2587  0009E6  A4D8               	btfss	status,2,c
  2588  0009E8  EFF8  F004         	goto	u7431
  2589  0009EC  EFFA  F004         	goto	u7430
  2590  0009F0                     u7431:
  2591  0009F0  EF3A  F005         	goto	l5305
  2592  0009F4                     u7430:
  2593  0009F4  0EBF               	movlw	191
  2594  0009F6  0100               	movlb	0	; () banked
  2595  0009F8  6F88               	movwf	??_efgtoa& (0+255),b
  2596  0009FA  0EFF               	movlw	255
  2597  0009FC  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  2598  0009FE  5187               	movf	efgtoa@c& (0+255),w,b
  2599  000A00  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  2600  000A02  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  2601  000A04  5188               	movf	??_efgtoa& (0+255),w,b
  2602  000A06  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  2603  000A08  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  2604  000A0A  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2605  000A0C  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  2606  000A0E  E10A               	bnz	u7440
  2607  000A10  0E1A               	movlw	26
  2608  000A12  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  2609  000A14  A0D8               	btfss	status,0,c
  2610  000A16  EF0F  F005         	goto	u7441
  2611  000A1A  EF12  F005         	goto	u7440
  2612  000A1E                     u7441:
  2613  000A1E  0E01               	movlw	1
  2614  000A20  EF13  F005         	goto	u7450
  2615  000A24                     u7440:
  2616  000A24  0E00               	movlw	0
  2617  000A26                     u7450:
  2618  000A26  6F91               	movwf	_efgtoa$947& (0+255),b
  2619  000A28  6B92               	clrf	(_efgtoa$947+1)& (0+255),b
  2620  000A2A                     
  2621                           ; BSR set to: 0
  2622  000A2A  5191               	movf	_efgtoa$947& (0+255),w,b
  2623  000A2C  1192               	iorwf	(_efgtoa$947+1)& (0+255),w,b
  2624  000A2E  B4D8               	btfsc	status,2,c
  2625  000A30  EF1C  F005         	goto	u7461
  2626  000A34  EF1E  F005         	goto	u7460
  2627  000A38                     u7461:
  2628  000A38  EF2C  F005         	goto	l5297
  2629  000A3C                     u7460:
  2630  000A3C                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2633  000A3C  0E00               	movlw	low _dbuf
  2634  000A3E  25BF               	addwf	efgtoa@n& (0+255),w,b
  2635  000A40  6E1F               	movwf	strcpy@dest^0,c
  2636  000A42  0E01               	movlw	high _dbuf
  2637  000A44  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2638  000A46  6E20               	movwf	(strcpy@dest+1)^0,c
  2639  000A48  0E2D               	movlw	low STR_9
  2640  000A4A  6E21               	movwf	strcpy@src^0,c
  2641  000A4C  0E08               	movlw	high STR_9
  2642  000A4E  6E22               	movwf	(strcpy@src+1)^0,c
  2643  000A50  ECBF  F01E         	call	_strcpy	;wreg free
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2646  000A54  EFCD  F004         	goto	l5281
  2647  000A58                     l5297:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2651  000A58  0E00               	movlw	low _dbuf
  2652  000A5A  25BF               	addwf	efgtoa@n& (0+255),w,b
  2653  000A5C  6E1F               	movwf	strcpy@dest^0,c
  2654  000A5E  0E01               	movlw	high _dbuf
  2655  000A60  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2656  000A62  6E20               	movwf	(strcpy@dest+1)^0,c
  2657  000A64  0E35               	movlw	low STR_10
  2658  000A66  6E21               	movwf	strcpy@src^0,c
  2659  000A68  0E08               	movlw	high STR_10
  2660  000A6A  6E22               	movwf	(strcpy@src+1)^0,c
  2661  000A6C  ECBF  F01E         	call	_strcpy	;wreg free
  2662  000A70  EFCD  F004         	goto	l5281
  2663  000A74                     l5305:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2666  000A74  0E00               	movlw	0
  2667  000A76  0100               	movlb	0	; () banked
  2668  000A78  6FC1               	movwf	efgtoa@u& (0+255),b
  2669  000A7A  0E00               	movlw	0
  2670  000A7C  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  2671  000A7E  0E80               	movlw	128
  2672  000A80  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  2673  000A82  0E3F               	movlw	63
  2674  000A84  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2677  000A86  0E00               	movlw	0
  2678  000A88  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  2679  000A8A  0E00               	movlw	0
  2680  000A8C  6FBD               	movwf	efgtoa@e& (0+255),b
  2681  000A8E                     
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2684  000A8E  C0B9  F01F         	movff	efgtoa@g,___fleq@ff1
  2685  000A92  C0BA  F020         	movff	efgtoa@g+1,___fleq@ff1+1
  2686  000A96  C0BB  F021         	movff	efgtoa@g+2,___fleq@ff1+2
  2687  000A9A  C0BC  F022         	movff	efgtoa@g+3,___fleq@ff1+3
  2688  000A9E  0E00               	movlw	0
  2689  000AA0  6E23               	movwf	___fleq@ff2^0,c
  2690  000AA2  0E00               	movlw	0
  2691  000AA4  6E24               	movwf	(___fleq@ff2+1)^0,c
  2692  000AA6  0E00               	movlw	0
  2693  000AA8  6E25               	movwf	(___fleq@ff2+2)^0,c
  2694  000AAA  0E00               	movlw	0
  2695  000AAC  6E26               	movwf	(___fleq@ff2+3)^0,c
  2696  000AAE  EC89  F01D         	call	___fleq	;wreg free
  2697  000AB2  B0D8               	btfsc	status,0,c
  2698  000AB4  EF5E  F005         	goto	u7471
  2699  000AB8  EF60  F005         	goto	u7470
  2700  000ABC                     u7471:
  2701  000ABC  EFE5  F005         	goto	l5323
  2702  000AC0                     u7470:
  2703  000AC0  EF7F  F005         	goto	l5315
  2704  000AC4                     l5311:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2708  000AC4  C0C1  F01F         	movff	efgtoa@u,___flmul@b
  2709  000AC8  C0C2  F020         	movff	efgtoa@u+1,___flmul@b+1
  2710  000ACC  C0C3  F021         	movff	efgtoa@u+2,___flmul@b+2
  2711  000AD0  C0C4  F022         	movff	efgtoa@u+3,___flmul@b+3
  2712  000AD4  0E00               	movlw	0
  2713  000AD6  6E23               	movwf	___flmul@a^0,c
  2714  000AD8  0E00               	movlw	0
  2715  000ADA  6E24               	movwf	(___flmul@a+1)^0,c
  2716  000ADC  0E20               	movlw	32
  2717  000ADE  6E25               	movwf	(___flmul@a+2)^0,c
  2718  000AE0  0E41               	movlw	65
  2719  000AE2  6E26               	movwf	(___flmul@a+3)^0,c
  2720  000AE4  ECC5  F011         	call	___flmul	;wreg free
  2721  000AE8  C01F  F0C1         	movff	?___flmul,efgtoa@u
  2722  000AEC  C020  F0C2         	movff	?___flmul+1,efgtoa@u+1
  2723  000AF0  C021  F0C3         	movff	?___flmul+2,efgtoa@u+2
  2724  000AF4  C022  F0C4         	movff	?___flmul+3,efgtoa@u+3
  2725  000AF8                     
  2726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2727  000AF8  0100               	movlb	0	; () banked
  2728  000AFA  4BBD               	infsnz	efgtoa@e& (0+255),f,b
  2729  000AFC  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  2730  000AFE                     l5315:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2733  000AFE  C0B9  F06D         	movff	efgtoa@g,___flge@ff1
  2734  000B02  C0BA  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  2735  000B06  C0BB  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  2736  000B0A  C0BC  F070         	movff	efgtoa@g+3,___flge@ff1+3
  2737  000B0E  0E00               	movlw	0
  2738  000B10  6E23               	movwf	___flmul@a^0,c
  2739  000B12  0E00               	movlw	0
  2740  000B14  6E24               	movwf	(___flmul@a+1)^0,c
  2741  000B16  0E20               	movlw	32
  2742  000B18  6E25               	movwf	(___flmul@a+2)^0,c
  2743  000B1A  0E41               	movlw	65
  2744  000B1C  6E26               	movwf	(___flmul@a+3)^0,c
  2745  000B1E  C0C1  F01F         	movff	efgtoa@u,___flmul@b
  2746  000B22  C0C2  F020         	movff	efgtoa@u+1,___flmul@b+1
  2747  000B26  C0C3  F021         	movff	efgtoa@u+2,___flmul@b+2
  2748  000B2A  C0C4  F022         	movff	efgtoa@u+3,___flmul@b+3
  2749  000B2E  ECC5  F011         	call	___flmul	;wreg free
  2750  000B32  C01F  F071         	movff	?___flmul,___flge@ff2
  2751  000B36  C020  F072         	movff	?___flmul+1,___flge@ff2+1
  2752  000B3A  C021  F073         	movff	?___flmul+2,___flge@ff2+2
  2753  000B3E  C022  F074         	movff	?___flmul+3,___flge@ff2+3
  2754  000B42  ECD7  F018         	call	___flge	;wreg free
  2755  000B46  0100               	movlb	0	; () banked
  2756  000B48  B0D8               	btfsc	status,0,c
  2757  000B4A  EFA9  F005         	goto	u7481
  2758  000B4E  EFAB  F005         	goto	u7480
  2759  000B52                     u7481:
  2760  000B52  EF62  F005         	goto	l5311
  2761  000B56                     u7480:
  2762  000B56  EFCB  F005         	goto	l5321
  2763  000B5A                     l5317:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2767  000B5A  C0C1  F01F         	movff	efgtoa@u,___fldiv@b
  2768  000B5E  C0C2  F020         	movff	efgtoa@u+1,___fldiv@b+1
  2769  000B62  C0C3  F021         	movff	efgtoa@u+2,___fldiv@b+2
  2770  000B66  C0C4  F022         	movff	efgtoa@u+3,___fldiv@b+3
  2771  000B6A  0E00               	movlw	0
  2772  000B6C  6E23               	movwf	___fldiv@a^0,c
  2773  000B6E  0E00               	movlw	0
  2774  000B70  6E24               	movwf	(___fldiv@a+1)^0,c
  2775  000B72  0E20               	movlw	32
  2776  000B74  6E25               	movwf	(___fldiv@a+2)^0,c
  2777  000B76  0E41               	movlw	65
  2778  000B78  6E26               	movwf	(___fldiv@a+3)^0,c
  2779  000B7A  ECDB  F013         	call	___fldiv	;wreg free
  2780  000B7E  C01F  F0C1         	movff	?___fldiv,efgtoa@u
  2781  000B82  C020  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  2782  000B86  C021  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  2783  000B8A  C022  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  2784  000B8E                     
  2785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2786  000B8E  0100               	movlb	0	; () banked
  2787  000B90  07BD               	decf	efgtoa@e& (0+255),f,b
  2788  000B92  A0D8               	btfss	status,0,c
  2789  000B94  07BE               	decf	(efgtoa@e+1)& (0+255),f,b
  2790  000B96                     l5321:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2794  000B96  C0B9  F06D         	movff	efgtoa@g,___flge@ff1
  2795  000B9A  C0BA  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  2796  000B9E  C0BB  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  2797  000BA2  C0BC  F070         	movff	efgtoa@g+3,___flge@ff1+3
  2798  000BA6  C0C1  F071         	movff	efgtoa@u,___flge@ff2
  2799  000BAA  C0C2  F072         	movff	efgtoa@u+1,___flge@ff2+1
  2800  000BAE  C0C3  F073         	movff	efgtoa@u+2,___flge@ff2+2
  2801  000BB2  C0C4  F074         	movff	efgtoa@u+3,___flge@ff2+3
  2802  000BB6  ECD7  F018         	call	___flge	;wreg free
  2803  000BBA  0100               	movlb	0	; () banked
  2804  000BBC  A0D8               	btfss	status,0,c
  2805  000BBE  EFE3  F005         	goto	u7491
  2806  000BC2  EFE5  F005         	goto	u7490
  2807  000BC6                     u7491:
  2808  000BC6  EFAD  F005         	goto	l5317
  2809  000BCA                     u7490:
  2810  000BCA                     l5323:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2813  000BCA  C087  F025         	movff	efgtoa@c,tolower@c
  2814  000BCE  6A26               	clrf	(tolower@c+1)^0,c
  2815  000BD0  EC8E  F01E         	call	_tolower	;wreg free
  2816  000BD4  5025               	movf	?_tolower^0,w,c
  2817  000BD6  0100               	movlb	0	; () banked
  2818  000BD8  6FAE               	movwf	efgtoa@mode& (0+255),b
  2819  000BDA                     
  2820                           ; BSR set to: 0
  2821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2822  000BDA  C0AE  F0AD         	movff	efgtoa@mode,efgtoa@nmode
  2823  000BDE                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2826  000BDE  0E67               	movlw	103
  2827  000BE0  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  2828  000BE2  A4D8               	btfss	status,2,c
  2829  000BE4  EFF6  F005         	goto	u7501
  2830  000BE8  EFF8  F005         	goto	u7500
  2831  000BEC                     u7501:
  2832  000BEC  EF1E  F006         	goto	l5337
  2833  000BF0                     u7500:
  2834  000BF0                     
  2835                           ; BSR set to: 0
  2836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2837  000BF0  51F3               	movf	_prec& (0+255),w,b
  2838  000BF2  11F4               	iorwf	(_prec+1)& (0+255),w,b
  2839  000BF4  A4D8               	btfss	status,2,c
  2840  000BF6  EFFF  F005         	goto	u7511
  2841  000BFA  EF01  F006         	goto	u7510
  2842  000BFE                     u7511:
  2843  000BFE  EF05  F006         	goto	l5333
  2844  000C02                     u7510:
  2845  000C02                     
  2846                           ; BSR set to: 0
  2847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2848  000C02  0E00               	movlw	0
  2849  000C04  6FF4               	movwf	(_prec+1)& (0+255),b
  2850  000C06  0E01               	movlw	1
  2851  000C08  6FF3               	movwf	_prec& (0+255),b
  2852  000C0A                     l5333:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2856  000C0A  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  2857  000C0C  EF12  F006         	goto	u7520
  2858  000C10  51F4               	movf	(_prec+1)& (0+255),w,b
  2859  000C12  E106               	bnz	u7521
  2860  000C14  05F3               	decf	_prec& (0+255),w,b
  2861  000C16  B0D8               	btfsc	status,0,c
  2862  000C18  EF10  F006         	goto	u7521
  2863  000C1C  EF12  F006         	goto	u7520
  2864  000C20                     u7521:
  2865  000C20  EF18  F006         	goto	l845
  2866  000C24                     u7520:
  2867  000C24                     l5335:
  2868                           
  2869                           ; BSR set to: 0
  2870  000C24  0E00               	movlw	0
  2871  000C26  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  2872  000C28  0E06               	movlw	6
  2873  000C2A  6FA9               	movwf	efgtoa@p& (0+255),b
  2874  000C2C  EF27  F006         	goto	l5343
  2875  000C30                     l845:
  2876                           
  2877                           ; BSR set to: 0
  2878  000C30  C0F3  F0A9         	movff	_prec,efgtoa@p
  2879  000C34  C0F4  F0AA         	movff	_prec+1,efgtoa@p+1
  2880  000C38  EF27  F006         	goto	l5343
  2881  000C3C                     l5337:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2885  000C3C  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  2886  000C3E  EF23  F006         	goto	u7531
  2887  000C42  EF25  F006         	goto	u7530
  2888  000C46                     u7531:
  2889  000C46  EF12  F006         	goto	l5335
  2890  000C4A                     u7530:
  2891  000C4A  EF18  F006         	goto	l845
  2892  000C4E                     l5343:
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2896  000C4E  0E67               	movlw	103
  2897  000C50  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  2898  000C52  A4D8               	btfss	status,2,c
  2899  000C54  EF2E  F006         	goto	u7541
  2900  000C58  EF30  F006         	goto	u7540
  2901  000C5C                     u7541:
  2902  000C5C  EF5F  F006         	goto	l5353
  2903  000C60                     u7540:
  2904  000C60                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2907  000C60  AFBE               	btfss	(efgtoa@e+1)& (0+255),7,b
  2908  000C62  EF3E  F006         	goto	u7550
  2909  000C66  0EFC               	movlw	252
  2910  000C68  5DBD               	subwf	efgtoa@e& (0+255),w,b
  2911  000C6A  0EFF               	movlw	255
  2912  000C6C  59BE               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2913  000C6E  A0D8               	btfss	status,0,c
  2914  000C70  EF3C  F006         	goto	u7551
  2915  000C74  EF3E  F006         	goto	u7550
  2916  000C78                     u7551:
  2917  000C78  EF5D  F006         	goto	l5351
  2918  000C7C                     u7550:
  2919  000C7C                     
  2920                           ; BSR set to: 0
  2921  000C7C  0EFF               	movlw	255
  2922  000C7E  6F88               	movwf	??_efgtoa& (0+255),b
  2923  000C80  0EFF               	movlw	255
  2924  000C82  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  2925  000C84  C0A9  F08A         	movff	efgtoa@p,??_efgtoa+2
  2926  000C88  C0AA  F08B         	movff	efgtoa@p+1,??_efgtoa+3
  2927  000C8C  5188               	movf	??_efgtoa& (0+255),w,b
  2928  000C8E  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  2929  000C90  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  2930  000C92  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2931  000C94  51BD               	movf	efgtoa@e& (0+255),w,b
  2932  000C96  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  2933  000C98  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  2934  000C9A  0A80               	xorlw	128
  2935  000C9C  6F8C               	movwf	(??_efgtoa+4)& (0+255),b
  2936  000C9E  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  2937  000CA0  0A80               	xorlw	128
  2938  000CA2  598C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2939  000CA4  A0D8               	btfss	status,0,c
  2940  000CA6  EF57  F006         	goto	u7561
  2941  000CAA  EF59  F006         	goto	u7560
  2942  000CAE                     u7561:
  2943  000CAE  EF5D  F006         	goto	l5351
  2944  000CB2                     u7560:
  2945  000CB2                     
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2948  000CB2  0E66               	movlw	102
  2949  000CB4  6FAD               	movwf	efgtoa@nmode& (0+255),b
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2952  000CB6  EF5F  F006         	goto	l5353
  2953  000CBA                     l5351:
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2957  000CBA  0E65               	movlw	101
  2958  000CBC  6FAD               	movwf	efgtoa@nmode& (0+255),b
  2959  000CBE                     l5353:
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2963  000CBE  C0A9  F09F         	movff	efgtoa@p,efgtoa@m
  2964  000CC2  C0AA  F0A0         	movff	efgtoa@p+1,efgtoa@m+1
  2965  000CC6                     
  2966                           ; BSR set to: 0
  2967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2968  000CC6  0E67               	movlw	103
  2969  000CC8  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  2970  000CCA  A4D8               	btfss	status,2,c
  2971  000CCC  EF6A  F006         	goto	u7571
  2972  000CD0  EF6C  F006         	goto	u7570
  2973  000CD4                     u7571:
  2974  000CD4  EF7C  F006         	goto	l5361
  2975  000CD8                     u7570:
  2976  000CD8                     
  2977                           ; BSR set to: 0
  2978  000CD8  0E66               	movlw	102
  2979  000CDA  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  2980  000CDC  A4D8               	btfss	status,2,c
  2981  000CDE  EF73  F006         	goto	u7581
  2982  000CE2  EF75  F006         	goto	u7580
  2983  000CE6                     u7581:
  2984  000CE6  EF7E  F006         	goto	l5363
  2985  000CEA                     u7580:
  2986  000CEA                     
  2987                           ; BSR set to: 0
  2988  000CEA  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2989  000CEC  EF7C  F006         	goto	u7590
  2990  000CF0  EF7A  F006         	goto	u7591
  2991  000CF4                     u7591:
  2992  000CF4  EF7E  F006         	goto	l5363
  2993  000CF8                     u7590:
  2994  000CF8                     l5361:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2998  000CF8  4B9F               	infsnz	efgtoa@m& (0+255),f,b
  2999  000CFA  2BA0               	incf	(efgtoa@m+1)& (0+255),f,b
  3000  000CFC                     l5363:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3004  000CFC  0E66               	movlw	102
  3005  000CFE  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3006  000D00  A4D8               	btfss	status,2,c
  3007  000D02  EF85  F006         	goto	u7601
  3008  000D06  EF87  F006         	goto	u7600
  3009  000D0A                     u7601:
  3010  000D0A  EFA7  F006         	goto	l5373
  3011  000D0E                     u7600:
  3012  000D0E                     
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3015  000D0E  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3016  000D10  EF8E  F006         	goto	u7610
  3017  000D14  EF8C  F006         	goto	u7611
  3018  000D18                     u7611:
  3019  000D18  EF9A  F006         	goto	l5369
  3020  000D1C                     u7610:
  3021  000D1C                     
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3024  000D1C  0E00               	movlw	0
  3025  000D1E  6FC1               	movwf	efgtoa@u& (0+255),b
  3026  000D20  0E00               	movlw	0
  3027  000D22  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  3028  000D24  0E80               	movlw	128
  3029  000D26  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  3030  000D28  0E3F               	movlw	63
  3031  000D2A  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3034  000D2C  0E00               	movlw	0
  3035  000D2E  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  3036  000D30  0E00               	movlw	0
  3037  000D32  6FBD               	movwf	efgtoa@e& (0+255),b
  3038  000D34                     l5369:
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3042  000D34  0E67               	movlw	103
  3043  000D36  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3044  000D38  B4D8               	btfsc	status,2,c
  3045  000D3A  EFA1  F006         	goto	u7621
  3046  000D3E  EFA3  F006         	goto	u7620
  3047  000D42                     u7621:
  3048  000D42  EFA7  F006         	goto	l5373
  3049  000D46                     u7620:
  3050  000D46                     
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3053  000D46  51BD               	movf	efgtoa@e& (0+255),w,b
  3054  000D48  279F               	addwf	efgtoa@m& (0+255),f,b
  3055  000D4A  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  3056  000D4C  23A0               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3057  000D4E                     l5373:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3061  000D4E  0E00               	movlw	0
  3062  000D50  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3063  000D52  0E00               	movlw	0
  3064  000D54  6FB7               	movwf	efgtoa@i& (0+255),b
  3065  000D56                     
  3066                           ; BSR set to: 0
  3067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3068  000D56  C0B9  F0AF         	movff	efgtoa@g,efgtoa@h
  3069  000D5A  C0BA  F0B0         	movff	efgtoa@g+1,efgtoa@h+1
  3070  000D5E  C0BB  F0B1         	movff	efgtoa@g+2,efgtoa@h+2
  3071  000D62  C0BC  F0B2         	movff	efgtoa@g+3,efgtoa@h+3
  3072  000D66                     
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3075  000D66  C0C1  F0A1         	movff	efgtoa@u,efgtoa@ou
  3076  000D6A  C0C2  F0A2         	movff	efgtoa@u+1,efgtoa@ou+1
  3077  000D6E  C0C3  F0A3         	movff	efgtoa@u+2,efgtoa@ou+2
  3078  000D72  C0C4  F0A4         	movff	efgtoa@u+3,efgtoa@ou+3
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3081  000D76  EF38  F007         	goto	l5387
  3082  000D7A                     l5379:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3086  000D7A  C0AF  F01F         	movff	efgtoa@h,___fldiv@b
  3087  000D7E  C0B0  F020         	movff	efgtoa@h+1,___fldiv@b+1
  3088  000D82  C0B1  F021         	movff	efgtoa@h+2,___fldiv@b+2
  3089  000D86  C0B2  F022         	movff	efgtoa@h+3,___fldiv@b+3
  3090  000D8A  C0C1  F023         	movff	efgtoa@u,___fldiv@a
  3091  000D8E  C0C2  F024         	movff	efgtoa@u+1,___fldiv@a+1
  3092  000D92  C0C3  F025         	movff	efgtoa@u+2,___fldiv@a+2
  3093  000D96  C0C4  F026         	movff	efgtoa@u+3,___fldiv@a+3
  3094  000D9A  ECDB  F013         	call	___fldiv	;wreg free
  3095  000D9E  C01F  F06D         	movff	?___fldiv,floorf@x
  3096  000DA2  C020  F06E         	movff	?___fldiv+1,floorf@x+1
  3097  000DA6  C021  F06F         	movff	?___fldiv+2,floorf@x+2
  3098  000DAA  C022  F070         	movff	?___fldiv+3,floorf@x+3
  3099  000DAE  ECA9  F015         	call	_floorf	;wreg free
  3100  000DB2  C06D  F0B3         	movff	?_floorf,efgtoa@l
  3101  000DB6  C06E  F0B4         	movff	?_floorf+1,efgtoa@l+1
  3102  000DBA  C06F  F0B5         	movff	?_floorf+2,efgtoa@l+2
  3103  000DBE  C070  F0B6         	movff	?_floorf+3,efgtoa@l+3
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3106  000DC2  C0B3  F01F         	movff	efgtoa@l,___fltol@f1
  3107  000DC6  C0B4  F020         	movff	efgtoa@l+1,___fltol@f1+1
  3108  000DCA  C0B5  F021         	movff	efgtoa@l+2,___fltol@f1+2
  3109  000DCE  C0B6  F022         	movff	efgtoa@l+3,___fltol@f1+3
  3110  000DD2  EC54  F018         	call	___fltol	;wreg free
  3111  000DD6  C01F  F0A5         	movff	?___fltol,efgtoa@d
  3112  000DDA  C020  F0A6         	movff	?___fltol+1,efgtoa@d+1
  3113  000DDE                     
  3114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3115  000DDE  C0AF  F06D         	movff	efgtoa@h,___flsub@b
  3116  000DE2  C0B0  F06E         	movff	efgtoa@h+1,___flsub@b+1
  3117  000DE6  C0B1  F06F         	movff	efgtoa@h+2,___flsub@b+2
  3118  000DEA  C0B2  F070         	movff	efgtoa@h+3,___flsub@b+3
  3119  000DEE  C0C1  F023         	movff	efgtoa@u,___flmul@a
  3120  000DF2  C0C2  F024         	movff	efgtoa@u+1,___flmul@a+1
  3121  000DF6  C0C3  F025         	movff	efgtoa@u+2,___flmul@a+2
  3122  000DFA  C0C4  F026         	movff	efgtoa@u+3,___flmul@a+3
  3123  000DFE  C0B3  F01F         	movff	efgtoa@l,___flmul@b
  3124  000E02  C0B4  F020         	movff	efgtoa@l+1,___flmul@b+1
  3125  000E06  C0B5  F021         	movff	efgtoa@l+2,___flmul@b+2
  3126  000E0A  C0B6  F022         	movff	efgtoa@l+3,___flmul@b+3
  3127  000E0E  ECC5  F011         	call	___flmul	;wreg free
  3128  000E12  C01F  F071         	movff	?___flmul,___flsub@a
  3129  000E16  C020  F072         	movff	?___flmul+1,___flsub@a+1
  3130  000E1A  C021  F073         	movff	?___flmul+2,___flsub@a+2
  3131  000E1E  C022  F074         	movff	?___flmul+3,___flsub@a+3
  3132  000E22  ECBA  F01F         	call	___flsub	;wreg free
  3133  000E26  C06D  F0AF         	movff	?___flsub,efgtoa@h
  3134  000E2A  C06E  F0B0         	movff	?___flsub+1,efgtoa@h+1
  3135  000E2E  C06F  F0B1         	movff	?___flsub+2,efgtoa@h+2
  3136  000E32  C070  F0B2         	movff	?___flsub+3,efgtoa@h+3
  3137  000E36                     
  3138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3139  000E36  C0C1  F01F         	movff	efgtoa@u,___fldiv@b
  3140  000E3A  C0C2  F020         	movff	efgtoa@u+1,___fldiv@b+1
  3141  000E3E  C0C3  F021         	movff	efgtoa@u+2,___fldiv@b+2
  3142  000E42  C0C4  F022         	movff	efgtoa@u+3,___fldiv@b+3
  3143  000E46  0E00               	movlw	0
  3144  000E48  6E23               	movwf	___fldiv@a^0,c
  3145  000E4A  0E00               	movlw	0
  3146  000E4C  6E24               	movwf	(___fldiv@a+1)^0,c
  3147  000E4E  0E20               	movlw	32
  3148  000E50  6E25               	movwf	(___fldiv@a+2)^0,c
  3149  000E52  0E41               	movlw	65
  3150  000E54  6E26               	movwf	(___fldiv@a+3)^0,c
  3151  000E56  ECDB  F013         	call	___fldiv	;wreg free
  3152  000E5A  C01F  F0C1         	movff	?___fldiv,efgtoa@u
  3153  000E5E  C020  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3154  000E62  C021  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3155  000E66  C022  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3156  000E6A                     
  3157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3158  000E6A  0100               	movlb	0	; () banked
  3159  000E6C  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  3160  000E6E  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  3161  000E70                     l5387:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3165  000E70  519F               	movf	efgtoa@m& (0+255),w,b
  3166  000E72  5DB7               	subwf	efgtoa@i& (0+255),w,b
  3167  000E74  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  3168  000E76  0A80               	xorlw	128
  3169  000E78  6F88               	movwf	??_efgtoa& (0+255),b
  3170  000E7A  51A0               	movf	(efgtoa@m+1)& (0+255),w,b
  3171  000E7C  0A80               	xorlw	128
  3172  000E7E  5988               	subwfb	??_efgtoa& (0+255),w,b
  3173  000E80  A0D8               	btfss	status,0,c
  3174  000E82  EF45  F007         	goto	u7631
  3175  000E86  EF47  F007         	goto	u7630
  3176  000E8A                     u7631:
  3177  000E8A  EFBD  F006         	goto	l5379
  3178  000E8E                     u7630:
  3179  000E8E                     
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3182  000E8E  C0C1  F01F         	movff	efgtoa@u,___flmul@b
  3183  000E92  C0C2  F020         	movff	efgtoa@u+1,___flmul@b+1
  3184  000E96  C0C3  F021         	movff	efgtoa@u+2,___flmul@b+2
  3185  000E9A  C0C4  F022         	movff	efgtoa@u+3,___flmul@b+3
  3186  000E9E  0E00               	movlw	0
  3187  000EA0  6E23               	movwf	___flmul@a^0,c
  3188  000EA2  0E00               	movlw	0
  3189  000EA4  6E24               	movwf	(___flmul@a+1)^0,c
  3190  000EA6  0EA0               	movlw	160
  3191  000EA8  6E25               	movwf	(___flmul@a+2)^0,c
  3192  000EAA  0E40               	movlw	64
  3193  000EAC  6E26               	movwf	(___flmul@a+3)^0,c
  3194  000EAE  ECC5  F011         	call	___flmul	;wreg free
  3195  000EB2  C01F  F0B3         	movff	?___flmul,efgtoa@l
  3196  000EB6  C020  F0B4         	movff	?___flmul+1,efgtoa@l+1
  3197  000EBA  C021  F0B5         	movff	?___flmul+2,efgtoa@l+2
  3198  000EBE  C022  F0B6         	movff	?___flmul+3,efgtoa@l+3
  3199  000EC2                     
  3200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3201  000EC2  C0AF  F06D         	movff	efgtoa@h,___flge@ff1
  3202  000EC6  C0B0  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  3203  000ECA  C0B1  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  3204  000ECE  C0B2  F070         	movff	efgtoa@h+3,___flge@ff1+3
  3205  000ED2  C0B3  F071         	movff	efgtoa@l,___flge@ff2
  3206  000ED6  C0B4  F072         	movff	efgtoa@l+1,___flge@ff2+1
  3207  000EDA  C0B5  F073         	movff	efgtoa@l+2,___flge@ff2+2
  3208  000EDE  C0B6  F074         	movff	efgtoa@l+3,___flge@ff2+3
  3209  000EE2  ECD7  F018         	call	___flge	;wreg free
  3210  000EE6  0100               	movlb	0	; () banked
  3211  000EE8  B0D8               	btfsc	status,0,c
  3212  000EEA  EF79  F007         	goto	u7641
  3213  000EEE  EF7B  F007         	goto	u7640
  3214  000EF2                     u7641:
  3215  000EF2  EF85  F007         	goto	l5395
  3216  000EF6                     u7640:
  3217  000EF6                     
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3220  000EF6  0E00               	movlw	0
  3221  000EF8  6FB3               	movwf	efgtoa@l& (0+255),b
  3222  000EFA  0E00               	movlw	0
  3223  000EFC  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3224  000EFE  0E00               	movlw	0
  3225  000F00  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3226  000F02  0E00               	movlw	0
  3227  000F04  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3228                           
  3229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3230  000F06  EFAE  F007         	goto	l5401
  3231  000F0A                     l5395:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3235  000F0A  C0AF  F01F         	movff	efgtoa@h,___fleq@ff1
  3236  000F0E  C0B0  F020         	movff	efgtoa@h+1,___fleq@ff1+1
  3237  000F12  C0B1  F021         	movff	efgtoa@h+2,___fleq@ff1+2
  3238  000F16  C0B2  F022         	movff	efgtoa@h+3,___fleq@ff1+3
  3239  000F1A  C0B3  F023         	movff	efgtoa@l,___fleq@ff2
  3240  000F1E  C0B4  F024         	movff	efgtoa@l+1,___fleq@ff2+1
  3241  000F22  C0B5  F025         	movff	efgtoa@l+2,___fleq@ff2+2
  3242  000F26  C0B6  F026         	movff	efgtoa@l+3,___fleq@ff2+3
  3243  000F2A  EC89  F01D         	call	___fleq	;wreg free
  3244  000F2E  A0D8               	btfss	status,0,c
  3245  000F30  EF9C  F007         	goto	u7651
  3246  000F34  EF9E  F007         	goto	u7650
  3247  000F38                     u7651:
  3248  000F38  EFAE  F007         	goto	l5401
  3249  000F3C                     u7650:
  3250  000F3C  0100               	movlb	0	; () banked
  3251  000F3E  B1A5               	btfsc	efgtoa@d& (0+255),0,b
  3252  000F40  EFA4  F007         	goto	u7661
  3253  000F44  EFA6  F007         	goto	u7660
  3254  000F48                     u7661:
  3255  000F48  EFAE  F007         	goto	l5401
  3256  000F4C                     u7660:
  3257  000F4C                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3260  000F4C  0E00               	movlw	0
  3261  000F4E  6FB3               	movwf	efgtoa@l& (0+255),b
  3262  000F50  0E00               	movlw	0
  3263  000F52  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3264  000F54  0E00               	movlw	0
  3265  000F56  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3266  000F58  0E00               	movlw	0
  3267  000F5A  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3268  000F5C                     l5401:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3271  000F5C  C0B9  F01F         	movff	efgtoa@g,___fladd@b
  3272  000F60  C0BA  F020         	movff	efgtoa@g+1,___fladd@b+1
  3273  000F64  C0BB  F021         	movff	efgtoa@g+2,___fladd@b+2
  3274  000F68  C0BC  F022         	movff	efgtoa@g+3,___fladd@b+3
  3275  000F6C  C0B3  F023         	movff	efgtoa@l,___fladd@a
  3276  000F70  C0B4  F024         	movff	efgtoa@l+1,___fladd@a+1
  3277  000F74  C0B5  F025         	movff	efgtoa@l+2,___fladd@a+2
  3278  000F78  C0B6  F026         	movff	efgtoa@l+3,___fladd@a+3
  3279  000F7C  EC04  F00D         	call	___fladd	;wreg free
  3280  000F80  C01F  F0AF         	movff	?___fladd,efgtoa@h
  3281  000F84  C020  F0B0         	movff	?___fladd+1,efgtoa@h+1
  3282  000F88  C021  F0B1         	movff	?___fladd+2,efgtoa@h+2
  3283  000F8C  C022  F0B2         	movff	?___fladd+3,efgtoa@h+3
  3284  000F90                     
  3285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3286  000F90  C0AF  F06D         	movff	efgtoa@h,___flge@ff1
  3287  000F94  C0B0  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  3288  000F98  C0B1  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  3289  000F9C  C0B2  F070         	movff	efgtoa@h+3,___flge@ff1+3
  3290  000FA0  0E00               	movlw	0
  3291  000FA2  6E23               	movwf	___flmul@a^0,c
  3292  000FA4  0E00               	movlw	0
  3293  000FA6  6E24               	movwf	(___flmul@a+1)^0,c
  3294  000FA8  0E20               	movlw	32
  3295  000FAA  6E25               	movwf	(___flmul@a+2)^0,c
  3296  000FAC  0E41               	movlw	65
  3297  000FAE  6E26               	movwf	(___flmul@a+3)^0,c
  3298  000FB0  C0A1  F01F         	movff	efgtoa@ou,___flmul@b
  3299  000FB4  C0A2  F020         	movff	efgtoa@ou+1,___flmul@b+1
  3300  000FB8  C0A3  F021         	movff	efgtoa@ou+2,___flmul@b+2
  3301  000FBC  C0A4  F022         	movff	efgtoa@ou+3,___flmul@b+3
  3302  000FC0  ECC5  F011         	call	___flmul	;wreg free
  3303  000FC4  C01F  F071         	movff	?___flmul,___flge@ff2
  3304  000FC8  C020  F072         	movff	?___flmul+1,___flge@ff2+1
  3305  000FCC  C021  F073         	movff	?___flmul+2,___flge@ff2+2
  3306  000FD0  C022  F074         	movff	?___flmul+3,___flge@ff2+3
  3307  000FD4  ECD7  F018         	call	___flge	;wreg free
  3308  000FD8  0100               	movlb	0	; () banked
  3309  000FDA  A0D8               	btfss	status,0,c
  3310  000FDC  EFF2  F007         	goto	u7671
  3311  000FE0  EFF4  F007         	goto	u7670
  3312  000FE4                     u7671:
  3313  000FE4  EF1C  F008         	goto	l5413
  3314  000FE8                     u7670:
  3315  000FE8                     
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3318  000FE8  4BBD               	infsnz	efgtoa@e& (0+255),f,b
  3319  000FEA  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  3320  000FEC                     
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3323  000FEC  C0A1  F01F         	movff	efgtoa@ou,___flmul@b
  3324  000FF0  C0A2  F020         	movff	efgtoa@ou+1,___flmul@b+1
  3325  000FF4  C0A3  F021         	movff	efgtoa@ou+2,___flmul@b+2
  3326  000FF8  C0A4  F022         	movff	efgtoa@ou+3,___flmul@b+3
  3327  000FFC  0E00               	movlw	0
  3328  000FFE  6E23               	movwf	___flmul@a^0,c
  3329  001000  0E00               	movlw	0
  3330  001002  6E24               	movwf	(___flmul@a+1)^0,c
  3331  001004  0E20               	movlw	32
  3332  001006  6E25               	movwf	(___flmul@a+2)^0,c
  3333  001008  0E41               	movlw	65
  3334  00100A  6E26               	movwf	(___flmul@a+3)^0,c
  3335  00100C  ECC5  F011         	call	___flmul	;wreg free
  3336  001010  C01F  F0A1         	movff	?___flmul,efgtoa@ou
  3337  001014  C020  F0A2         	movff	?___flmul+1,efgtoa@ou+1
  3338  001018  C021  F0A3         	movff	?___flmul+2,efgtoa@ou+2
  3339  00101C  C022  F0A4         	movff	?___flmul+3,efgtoa@ou+3
  3340  001020                     
  3341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3342  001020  0E66               	movlw	102
  3343  001022  0100               	movlb	0	; () banked
  3344  001024  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3345  001026  A4D8               	btfss	status,2,c
  3346  001028  EF18  F008         	goto	u7681
  3347  00102C  EF1A  F008         	goto	u7680
  3348  001030                     u7681:
  3349  001030  EF1C  F008         	goto	l5413
  3350  001034                     u7680:
  3351  001034                     
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3354  001034  4B9F               	infsnz	efgtoa@m& (0+255),f,b
  3355  001036  2BA0               	incf	(efgtoa@m+1)& (0+255),f,b
  3356  001038                     l5413:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3360  001038  C0A1  F0C1         	movff	efgtoa@ou,efgtoa@u
  3361  00103C  C0A2  F0C2         	movff	efgtoa@ou+1,efgtoa@u+1
  3362  001040  C0A3  F0C3         	movff	efgtoa@ou+2,efgtoa@u+2
  3363  001044  C0A4  F0C4         	movff	efgtoa@ou+3,efgtoa@u+3
  3364  001048                     
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3367  001048  0E65               	movlw	101
  3368  00104A  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3369  00104C  B4D8               	btfsc	status,2,c
  3370  00104E  EF2B  F008         	goto	u7691
  3371  001052  EF2D  F008         	goto	u7690
  3372  001056                     u7691:
  3373  001056  EF33  F008         	goto	l5419
  3374  00105A                     u7690:
  3375  00105A                     
  3376                           ; BSR set to: 0
  3377  00105A  C0BD  F09D         	movff	efgtoa@e,efgtoa@ne
  3378  00105E  C0BE  F09E         	movff	efgtoa@e+1,efgtoa@ne+1
  3379  001062  EF37  F008         	goto	l873
  3380  001066                     l5419:
  3381                           
  3382                           ; BSR set to: 0
  3383  001066  0E00               	movlw	0
  3384  001068  6F9E               	movwf	(efgtoa@ne+1)& (0+255),b
  3385  00106A  0E00               	movlw	0
  3386  00106C  6F9D               	movwf	efgtoa@ne& (0+255),b
  3387  00106E                     l873:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3391  00106E  0E00               	movlw	0
  3392  001070  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  3393  001072  0E00               	movlw	0
  3394  001074  6F9B               	movwf	efgtoa@pp& (0+255),b
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3397  001076  0E00               	movlw	0
  3398  001078  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  3399  00107A  0E00               	movlw	0
  3400  00107C  6F99               	movwf	efgtoa@t& (0+255),b
  3401                           
  3402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3403  00107E  0E00               	movlw	0
  3404  001080  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3405  001082  0E00               	movlw	0
  3406  001084  6FB7               	movwf	efgtoa@i& (0+255),b
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3409  001086  EF33  F009         	goto	l5469
  3410  00108A                     l5421:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3414  00108A  C0AF  F01F         	movff	efgtoa@h,___fldiv@b
  3415  00108E  C0B0  F020         	movff	efgtoa@h+1,___fldiv@b+1
  3416  001092  C0B1  F021         	movff	efgtoa@h+2,___fldiv@b+2
  3417  001096  C0B2  F022         	movff	efgtoa@h+3,___fldiv@b+3
  3418  00109A  C0C1  F023         	movff	efgtoa@u,___fldiv@a
  3419  00109E  C0C2  F024         	movff	efgtoa@u+1,___fldiv@a+1
  3420  0010A2  C0C3  F025         	movff	efgtoa@u+2,___fldiv@a+2
  3421  0010A6  C0C4  F026         	movff	efgtoa@u+3,___fldiv@a+3
  3422  0010AA  ECDB  F013         	call	___fldiv	;wreg free
  3423  0010AE  C01F  F06D         	movff	?___fldiv,floorf@x
  3424  0010B2  C020  F06E         	movff	?___fldiv+1,floorf@x+1
  3425  0010B6  C021  F06F         	movff	?___fldiv+2,floorf@x+2
  3426  0010BA  C022  F070         	movff	?___fldiv+3,floorf@x+3
  3427  0010BE  ECA9  F015         	call	_floorf	;wreg free
  3428  0010C2  C06D  F0B3         	movff	?_floorf,efgtoa@l
  3429  0010C6  C06E  F0B4         	movff	?_floorf+1,efgtoa@l+1
  3430  0010CA  C06F  F0B5         	movff	?_floorf+2,efgtoa@l+2
  3431  0010CE  C070  F0B6         	movff	?_floorf+3,efgtoa@l+3
  3432                           
  3433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3434  0010D2  C0B3  F01F         	movff	efgtoa@l,___fltol@f1
  3435  0010D6  C0B4  F020         	movff	efgtoa@l+1,___fltol@f1+1
  3436  0010DA  C0B5  F021         	movff	efgtoa@l+2,___fltol@f1+2
  3437  0010DE  C0B6  F022         	movff	efgtoa@l+3,___fltol@f1+3
  3438  0010E2  EC54  F018         	call	___fltol	;wreg free
  3439  0010E6  C01F  F0A5         	movff	?___fltol,efgtoa@d
  3440  0010EA  C020  F0A6         	movff	?___fltol+1,efgtoa@d+1
  3441  0010EE                     
  3442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3443  0010EE  B837               	btfsc	_flags^0,4,c
  3444  0010F0  EF7C  F008         	goto	u7701
  3445  0010F4  EF7E  F008         	goto	u7700
  3446  0010F8                     u7701:
  3447  0010F8  EF9C  F008         	goto	l5433
  3448  0010FC                     u7700:
  3449  0010FC  0100               	movlb	0	; () banked
  3450  0010FE  51A5               	movf	efgtoa@d& (0+255),w,b
  3451  001100  11A6               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3452  001102  A4D8               	btfss	status,2,c
  3453  001104  EF86  F008         	goto	u7711
  3454  001108  EF88  F008         	goto	u7710
  3455  00110C                     u7711:
  3456  00110C  EF9C  F008         	goto	l5433
  3457  001110                     u7710:
  3458  001110                     
  3459                           ; BSR set to: 0
  3460  001110  0E67               	movlw	103
  3461  001112  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3462  001114  A4D8               	btfss	status,2,c
  3463  001116  EF8F  F008         	goto	u7721
  3464  00111A  EF91  F008         	goto	u7720
  3465  00111E                     u7721:
  3466  00111E  EF9C  F008         	goto	l5433
  3467  001122                     u7720:
  3468  001122                     
  3469                           ; BSR set to: 0
  3470  001122  BF9E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3471  001124  EF98  F008         	goto	u7730
  3472  001128  EF96  F008         	goto	u7731
  3473  00112C                     u7731:
  3474  00112C  EF9C  F008         	goto	l5433
  3475  001130                     u7730:
  3476  001130                     
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3479  001130  4B99               	infsnz	efgtoa@t& (0+255),f,b
  3480  001132  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3483  001134  EFE7  F008         	goto	l5461
  3484  001138                     l5433:
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3487  001138  0100               	movlb	0	; () banked
  3488  00113A  519B               	movf	efgtoa@pp& (0+255),w,b
  3489  00113C  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3490  00113E  A4D8               	btfss	status,2,c
  3491  001140  EFA4  F008         	goto	u7741
  3492  001144  EFA6  F008         	goto	u7740
  3493  001148                     u7741:
  3494  001148  EFD0  F008         	goto	l5453
  3495  00114C                     u7740:
  3496  00114C                     
  3497                           ; BSR set to: 0
  3498  00114C  BF9E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3499  00114E  EFAD  F008         	goto	u7750
  3500  001152  EFAB  F008         	goto	u7751
  3501  001156                     u7751:
  3502  001156  EFD0  F008         	goto	l5453
  3503  00115A                     u7750:
  3504  00115A                     
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3507  00115A  0E00               	movlw	low _dbuf
  3508  00115C  25BF               	addwf	efgtoa@n& (0+255),w,b
  3509  00115E  6ED9               	movwf	fsr2l,c
  3510  001160  0E01               	movlw	high _dbuf
  3511  001162  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3512  001164  6EDA               	movwf	fsr2h,c
  3513  001166  0E2E               	movlw	46
  3514  001168  6EDF               	movwf	indf2,c
  3515  00116A                     
  3516                           ; BSR set to: 0
  3517  00116A  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3518  00116C  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3519  00116E                     
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3522  00116E  07AB               	decf	efgtoa@w& (0+255),f,b
  3523  001170  A0D8               	btfss	status,0,c
  3524  001172  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3525  001174                     
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3528  001174  0E00               	movlw	0
  3529  001176  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  3530  001178  0E01               	movlw	1
  3531  00117A  6F9B               	movwf	efgtoa@pp& (0+255),b
  3532  00117C  EFD0  F008         	goto	l5453
  3533  001180                     l5445:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3537  001180  0E00               	movlw	low _dbuf
  3538  001182  25BF               	addwf	efgtoa@n& (0+255),w,b
  3539  001184  6ED9               	movwf	fsr2l,c
  3540  001186  0E01               	movlw	high _dbuf
  3541  001188  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3542  00118A  6EDA               	movwf	fsr2h,c
  3543  00118C  0E30               	movlw	48
  3544  00118E  6EDF               	movwf	indf2,c
  3545  001190                     
  3546                           ; BSR set to: 0
  3547  001190  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3548  001192  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3549  001194                     
  3550                           ; BSR set to: 0
  3551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3552  001194  07AB               	decf	efgtoa@w& (0+255),f,b
  3553  001196  A0D8               	btfss	status,0,c
  3554  001198  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3555  00119A                     
  3556                           ; BSR set to: 0
  3557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3558  00119A  0799               	decf	efgtoa@t& (0+255),f,b
  3559  00119C  A0D8               	btfss	status,0,c
  3560  00119E  079A               	decf	(efgtoa@t+1)& (0+255),f,b
  3561  0011A0                     l5453:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3565  0011A0  5199               	movf	efgtoa@t& (0+255),w,b
  3566  0011A2  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3567  0011A4  A4D8               	btfss	status,2,c
  3568  0011A6  EFD7  F008         	goto	u7761
  3569  0011AA  EFD9  F008         	goto	u7760
  3570  0011AE                     u7761:
  3571  0011AE  EFC0  F008         	goto	l5445
  3572  0011B2                     u7760:
  3573  0011B2                     
  3574                           ; BSR set to: 0
  3575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3576  0011B2  0E00               	movlw	low _dbuf
  3577  0011B4  25BF               	addwf	efgtoa@n& (0+255),w,b
  3578  0011B6  6ED9               	movwf	fsr2l,c
  3579  0011B8  0E01               	movlw	high _dbuf
  3580  0011BA  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3581  0011BC  6EDA               	movwf	fsr2h,c
  3582  0011BE  51A5               	movf	efgtoa@d& (0+255),w,b
  3583  0011C0  0F30               	addlw	48
  3584  0011C2  6EDF               	movwf	indf2,c
  3585  0011C4                     
  3586                           ; BSR set to: 0
  3587  0011C4  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3588  0011C6  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3589  0011C8                     
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3592  0011C8  07AB               	decf	efgtoa@w& (0+255),f,b
  3593  0011CA  A0D8               	btfss	status,0,c
  3594  0011CC  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3595  0011CE                     l5461:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3599  0011CE  C0AF  F06D         	movff	efgtoa@h,___flsub@b
  3600  0011D2  C0B0  F06E         	movff	efgtoa@h+1,___flsub@b+1
  3601  0011D6  C0B1  F06F         	movff	efgtoa@h+2,___flsub@b+2
  3602  0011DA  C0B2  F070         	movff	efgtoa@h+3,___flsub@b+3
  3603  0011DE  C0C1  F023         	movff	efgtoa@u,___flmul@a
  3604  0011E2  C0C2  F024         	movff	efgtoa@u+1,___flmul@a+1
  3605  0011E6  C0C3  F025         	movff	efgtoa@u+2,___flmul@a+2
  3606  0011EA  C0C4  F026         	movff	efgtoa@u+3,___flmul@a+3
  3607  0011EE  C0B3  F01F         	movff	efgtoa@l,___flmul@b
  3608  0011F2  C0B4  F020         	movff	efgtoa@l+1,___flmul@b+1
  3609  0011F6  C0B5  F021         	movff	efgtoa@l+2,___flmul@b+2
  3610  0011FA  C0B6  F022         	movff	efgtoa@l+3,___flmul@b+3
  3611  0011FE  ECC5  F011         	call	___flmul	;wreg free
  3612  001202  C01F  F071         	movff	?___flmul,___flsub@a
  3613  001206  C020  F072         	movff	?___flmul+1,___flsub@a+1
  3614  00120A  C021  F073         	movff	?___flmul+2,___flsub@a+2
  3615  00120E  C022  F074         	movff	?___flmul+3,___flsub@a+3
  3616  001212  ECBA  F01F         	call	___flsub	;wreg free
  3617  001216  C06D  F0AF         	movff	?___flsub,efgtoa@h
  3618  00121A  C06E  F0B0         	movff	?___flsub+1,efgtoa@h+1
  3619  00121E  C06F  F0B1         	movff	?___flsub+2,efgtoa@h+2
  3620  001222  C070  F0B2         	movff	?___flsub+3,efgtoa@h+3
  3621  001226                     
  3622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3623  001226  C0C1  F01F         	movff	efgtoa@u,___fldiv@b
  3624  00122A  C0C2  F020         	movff	efgtoa@u+1,___fldiv@b+1
  3625  00122E  C0C3  F021         	movff	efgtoa@u+2,___fldiv@b+2
  3626  001232  C0C4  F022         	movff	efgtoa@u+3,___fldiv@b+3
  3627  001236  0E00               	movlw	0
  3628  001238  6E23               	movwf	___fldiv@a^0,c
  3629  00123A  0E00               	movlw	0
  3630  00123C  6E24               	movwf	(___fldiv@a+1)^0,c
  3631  00123E  0E20               	movlw	32
  3632  001240  6E25               	movwf	(___fldiv@a+2)^0,c
  3633  001242  0E41               	movlw	65
  3634  001244  6E26               	movwf	(___fldiv@a+3)^0,c
  3635  001246  ECDB  F013         	call	___fldiv	;wreg free
  3636  00124A  C01F  F0C1         	movff	?___fldiv,efgtoa@u
  3637  00124E  C020  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3638  001252  C021  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3639  001256  C022  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3640  00125A                     
  3641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3642  00125A  0100               	movlb	0	; () banked
  3643  00125C  079D               	decf	efgtoa@ne& (0+255),f,b
  3644  00125E  A0D8               	btfss	status,0,c
  3645  001260  079E               	decf	(efgtoa@ne+1)& (0+255),f,b
  3646  001262                     
  3647                           ; BSR set to: 0
  3648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3649  001262  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  3650  001264  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  3651  001266                     l5469:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3655  001266  519F               	movf	efgtoa@m& (0+255),w,b
  3656  001268  5DB7               	subwf	efgtoa@i& (0+255),w,b
  3657  00126A  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  3658  00126C  0A80               	xorlw	128
  3659  00126E  6F88               	movwf	??_efgtoa& (0+255),b
  3660  001270  51A0               	movf	(efgtoa@m+1)& (0+255),w,b
  3661  001272  0A80               	xorlw	128
  3662  001274  5988               	subwfb	??_efgtoa& (0+255),w,b
  3663  001276  B0D8               	btfsc	status,0,c
  3664  001278  EF40  F009         	goto	u7771
  3665  00127C  EF42  F009         	goto	u7770
  3666  001280                     u7771:
  3667  001280  EF50  F009         	goto	l5473
  3668  001284                     u7770:
  3669  001284                     
  3670                           ; BSR set to: 0
  3671  001284  BFC0               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3672  001286  EF4E  F009         	goto	u7781
  3673  00128A  51C0               	movf	(efgtoa@n+1)& (0+255),w,b
  3674  00128C  E109               	bnz	u7780
  3675  00128E  0E4B               	movlw	75
  3676  001290  5DBF               	subwf	efgtoa@n& (0+255),w,b
  3677  001292  A0D8               	btfss	status,0,c
  3678  001294  EF4E  F009         	goto	u7781
  3679  001298  EF50  F009         	goto	u7780
  3680  00129C                     u7781:
  3681  00129C  EF45  F008         	goto	l5421
  3682  0012A0                     u7780:
  3683  0012A0                     l5473:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3687  0012A0  519B               	movf	efgtoa@pp& (0+255),w,b
  3688  0012A2  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3689  0012A4  A4D8               	btfss	status,2,c
  3690  0012A6  EF57  F009         	goto	u7791
  3691  0012AA  EF59  F009         	goto	u7790
  3692  0012AE                     u7791:
  3693  0012AE  EF6A  F009         	goto	l5481
  3694  0012B2                     u7790:
  3695  0012B2                     
  3696                           ; BSR set to: 0
  3697  0012B2  A837               	btfss	_flags^0,4,c
  3698  0012B4  EF5E  F009         	goto	u7801
  3699  0012B8  EF60  F009         	goto	u7800
  3700  0012BC                     u7801:
  3701  0012BC  EF6A  F009         	goto	l5481
  3702  0012C0                     u7800:
  3703  0012C0                     
  3704                           ; BSR set to: 0
  3705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3706  0012C0  0E00               	movlw	low _dbuf
  3707  0012C2  25BF               	addwf	efgtoa@n& (0+255),w,b
  3708  0012C4  6ED9               	movwf	fsr2l,c
  3709  0012C6  0E01               	movlw	high _dbuf
  3710  0012C8  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3711  0012CA  6EDA               	movwf	fsr2h,c
  3712  0012CC  0E2E               	movlw	46
  3713  0012CE  6EDF               	movwf	indf2,c
  3714  0012D0                     
  3715                           ; BSR set to: 0
  3716  0012D0  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3717  0012D2  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3718  0012D4                     l5481:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3722  0012D4  0E00               	movlw	low _dbuf
  3723  0012D6  25BF               	addwf	efgtoa@n& (0+255),w,b
  3724  0012D8  6ED9               	movwf	fsr2l,c
  3725  0012DA  0E01               	movlw	high _dbuf
  3726  0012DC  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3727  0012DE  6EDA               	movwf	fsr2h,c
  3728  0012E0  0E00               	movlw	0
  3729  0012E2  6EDF               	movwf	indf2,c
  3730  0012E4                     
  3731                           ; BSR set to: 0
  3732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3733  0012E4  0E65               	movlw	101
  3734  0012E6  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3735  0012E8  A4D8               	btfss	status,2,c
  3736  0012EA  EF79  F009         	goto	u7811
  3737  0012EE  EF7B  F009         	goto	u7810
  3738  0012F2                     u7811:
  3739  0012F2  EFD2  F004         	goto	l5283
  3740  0012F6                     u7810:
  3741  0012F6                     
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3744  0012F6  0E00               	movlw	0
  3745  0012F8  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3746  0012FA  0E4F               	movlw	79
  3747  0012FC  6FB7               	movwf	efgtoa@i& (0+255),b
  3748  0012FE                     
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3751  0012FE  0E00               	movlw	low _dbuf
  3752  001300  25B7               	addwf	efgtoa@i& (0+255),w,b
  3753  001302  6ED9               	movwf	fsr2l,c
  3754  001304  0E01               	movlw	high _dbuf
  3755  001306  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3756  001308  6EDA               	movwf	fsr2h,c
  3757  00130A  0E00               	movlw	0
  3758  00130C  6EDF               	movwf	indf2,c
  3759  00130E                     
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3762  00130E  0E00               	movlw	0
  3763  001310  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  3764  001312  0E00               	movlw	0
  3765  001314  6FA7               	movwf	efgtoa@sign& (0+255),b
  3766  001316                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3769  001316  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3770  001318  EF92  F009         	goto	u7820
  3771  00131C  EF90  F009         	goto	u7821
  3772  001320                     u7821:
  3773  001320  EF9A  F009         	goto	l5497
  3774  001324                     u7820:
  3775  001324                     
  3776                           ; BSR set to: 0
  3777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3778  001324  0E00               	movlw	0
  3779  001326  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  3780  001328  0E01               	movlw	1
  3781  00132A  6FA7               	movwf	efgtoa@sign& (0+255),b
  3782  00132C                     
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3785  00132C  6DBD               	negf	efgtoa@e& (0+255),b
  3786  00132E  1FBE               	comf	(efgtoa@e+1)& (0+255),f,b
  3787  001330  B0D8               	btfsc	status,0,c
  3788  001332  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  3789  001334                     l5497:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3793  001334  0E00               	movlw	0
  3794  001336  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  3795  001338  0E02               	movlw	2
  3796  00133A  6FA9               	movwf	efgtoa@p& (0+255),b
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3799  00133C  EFCB  F009         	goto	l5509
  3800  001340                     l5499:
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3804  001340  07B7               	decf	efgtoa@i& (0+255),f,b
  3805  001342  A0D8               	btfss	status,0,c
  3806  001344  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  3807  001346                     
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3810  001346  0E00               	movlw	low _dbuf
  3811  001348  25B7               	addwf	efgtoa@i& (0+255),w,b
  3812  00134A  6ED9               	movwf	fsr2l,c
  3813  00134C  0E01               	movlw	high _dbuf
  3814  00134E  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3815  001350  6EDA               	movwf	fsr2h,c
  3816  001352  C0BD  F01F         	movff	efgtoa@e,___awmod@dividend
  3817  001356  C0BE  F020         	movff	efgtoa@e+1,___awmod@dividend+1
  3818  00135A  0E00               	movlw	0
  3819  00135C  6E22               	movwf	(___awmod@divisor+1)^0,c
  3820  00135E  0E0A               	movlw	10
  3821  001360  6E21               	movwf	___awmod@divisor^0,c
  3822  001362  EC31  F01D         	call	___awmod	;wreg free
  3823  001366  501F               	movf	?___awmod^0,w,c
  3824  001368  0F30               	addlw	48
  3825  00136A  6EDF               	movwf	indf2,c
  3826  00136C                     
  3827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3828  00136C  C0BD  F01F         	movff	efgtoa@e,___awdiv@dividend
  3829  001370  C0BE  F020         	movff	efgtoa@e+1,___awdiv@dividend+1
  3830  001374  0E00               	movlw	0
  3831  001376  6E22               	movwf	(___awdiv@divisor+1)^0,c
  3832  001378  0E0A               	movlw	10
  3833  00137A  6E21               	movwf	___awdiv@divisor^0,c
  3834  00137C  EC76  F01C         	call	___awdiv	;wreg free
  3835  001380  C01F  F0BD         	movff	?___awdiv,efgtoa@e
  3836  001384  C020  F0BE         	movff	?___awdiv+1,efgtoa@e+1
  3837  001388                     
  3838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3839  001388  0100               	movlb	0	; () banked
  3840  00138A  07A9               	decf	efgtoa@p& (0+255),f,b
  3841  00138C  A0D8               	btfss	status,0,c
  3842  00138E  07AA               	decf	(efgtoa@p+1)& (0+255),f,b
  3843  001390                     
  3844                           ; BSR set to: 0
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3846  001390  07AB               	decf	efgtoa@w& (0+255),f,b
  3847  001392  A0D8               	btfss	status,0,c
  3848  001394  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3849  001396                     l5509:
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3853  001396  51BD               	movf	efgtoa@e& (0+255),w,b
  3854  001398  11BE               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3855  00139A  A4D8               	btfss	status,2,c
  3856  00139C  EFD2  F009         	goto	u7831
  3857  0013A0  EFD4  F009         	goto	u7830
  3858  0013A4                     u7831:
  3859  0013A4  EFA0  F009         	goto	l5499
  3860  0013A8                     u7830:
  3861  0013A8                     
  3862                           ; BSR set to: 0
  3863  0013A8  BFAA               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3864  0013AA  EFE1  F009         	goto	u7840
  3865  0013AE  51AA               	movf	(efgtoa@p+1)& (0+255),w,b
  3866  0013B0  E106               	bnz	u7841
  3867  0013B2  05A9               	decf	efgtoa@p& (0+255),w,b
  3868  0013B4  B0D8               	btfsc	status,0,c
  3869  0013B6  EFDF  F009         	goto	u7841
  3870  0013BA  EFE1  F009         	goto	u7840
  3871  0013BE                     u7841:
  3872  0013BE  EFA0  F009         	goto	l5499
  3873  0013C2                     u7840:
  3874  0013C2                     
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  3877  0013C2  07B7               	decf	efgtoa@i& (0+255),f,b
  3878  0013C4  A0D8               	btfss	status,0,c
  3879  0013C6  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  3880  0013C8                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3883  0013C8  51A7               	movf	efgtoa@sign& (0+255),w,b
  3884  0013CA  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3885  0013CC  A4D8               	btfss	status,2,c
  3886  0013CE  EFEB  F009         	goto	u7851
  3887  0013D2  EFED  F009         	goto	u7850
  3888  0013D6                     u7851:
  3889  0013D6  EFF3  F009         	goto	l5519
  3890  0013DA                     u7850:
  3891  0013DA                     
  3892                           ; BSR set to: 0
  3893  0013DA  0E00               	movlw	0
  3894  0013DC  6F94               	movwf	(_efgtoa$951+1)& (0+255),b
  3895  0013DE  0E2B               	movlw	43
  3896  0013E0  6F93               	movwf	_efgtoa$951& (0+255),b
  3897  0013E2  EFF7  F009         	goto	l5521
  3898  0013E6                     l5519:
  3899                           
  3900                           ; BSR set to: 0
  3901  0013E6  0E00               	movlw	0
  3902  0013E8  6F94               	movwf	(_efgtoa$951+1)& (0+255),b
  3903  0013EA  0E2D               	movlw	45
  3904  0013EC  6F93               	movwf	_efgtoa$951& (0+255),b
  3905  0013EE                     l5521:
  3906                           
  3907                           ; BSR set to: 0
  3908  0013EE  0E00               	movlw	low _dbuf
  3909  0013F0  25B7               	addwf	efgtoa@i& (0+255),w,b
  3910  0013F2  6ED9               	movwf	fsr2l,c
  3911  0013F4  0E01               	movlw	high _dbuf
  3912  0013F6  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3913  0013F8  6EDA               	movwf	fsr2h,c
  3914  0013FA  C093  FFDF         	movff	_efgtoa$951,indf2
  3915  0013FE                     
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  3918  0013FE  07AB               	decf	efgtoa@w& (0+255),f,b
  3919  001400  A0D8               	btfss	status,0,c
  3920  001402  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3921  001404                     
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3924  001404  07B7               	decf	efgtoa@i& (0+255),f,b
  3925  001406  A0D8               	btfss	status,0,c
  3926  001408  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  3927  00140A                     
  3928                           ; BSR set to: 0
  3929  00140A  0EBF               	movlw	191
  3930  00140C  6F88               	movwf	??_efgtoa& (0+255),b
  3931  00140E  0EFF               	movlw	255
  3932  001410  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3933  001412  5187               	movf	efgtoa@c& (0+255),w,b
  3934  001414  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  3935  001416  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  3936  001418  5188               	movf	??_efgtoa& (0+255),w,b
  3937  00141A  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3938  00141C  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3939  00141E  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3940  001420  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3941  001422  E10A               	bnz	u7860
  3942  001424  0E1A               	movlw	26
  3943  001426  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3944  001428  A0D8               	btfss	status,0,c
  3945  00142A  EF19  F00A         	goto	u7861
  3946  00142E  EF1C  F00A         	goto	u7860
  3947  001432                     u7861:
  3948  001432  0E01               	movlw	1
  3949  001434  EF1D  F00A         	goto	u7870
  3950  001438                     u7860:
  3951  001438  0E00               	movlw	0
  3952  00143A                     u7870:
  3953  00143A  6F97               	movwf	_efgtoa$953& (0+255),b
  3954  00143C  6B98               	clrf	(_efgtoa$953+1)& (0+255),b
  3955  00143E                     
  3956                           ; BSR set to: 0
  3957  00143E  5197               	movf	_efgtoa$953& (0+255),w,b
  3958  001440  1198               	iorwf	(_efgtoa$953+1)& (0+255),w,b
  3959  001442  A4D8               	btfss	status,2,c
  3960  001444  EF26  F00A         	goto	u7881
  3961  001448  EF28  F00A         	goto	u7880
  3962  00144C                     u7881:
  3963  00144C  EF2E  F00A         	goto	l5535
  3964  001450                     u7880:
  3965  001450                     
  3966                           ; BSR set to: 0
  3967  001450  0E00               	movlw	0
  3968  001452  6F96               	movwf	(_efgtoa$952+1)& (0+255),b
  3969  001454  0E65               	movlw	101
  3970  001456  6F95               	movwf	_efgtoa$952& (0+255),b
  3971  001458  EF32  F00A         	goto	l5537
  3972  00145C                     l5535:
  3973                           
  3974                           ; BSR set to: 0
  3975  00145C  0E00               	movlw	0
  3976  00145E  6F96               	movwf	(_efgtoa$952+1)& (0+255),b
  3977  001460  0E45               	movlw	69
  3978  001462  6F95               	movwf	_efgtoa$952& (0+255),b
  3979  001464                     l5537:
  3980                           
  3981                           ; BSR set to: 0
  3982  001464  0E00               	movlw	low _dbuf
  3983  001466  25B7               	addwf	efgtoa@i& (0+255),w,b
  3984  001468  6ED9               	movwf	fsr2l,c
  3985  00146A  0E01               	movlw	high _dbuf
  3986  00146C  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3987  00146E  6EDA               	movwf	fsr2h,c
  3988  001470  C095  FFDF         	movff	_efgtoa$952,indf2
  3989  001474                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  3992  001474  07AB               	decf	efgtoa@w& (0+255),f,b
  3993  001476  A0D8               	btfss	status,0,c
  3994  001478  07AC               	decf	(efgtoa@w+1)& (0+255),f,b
  3995  00147A                     
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3998  00147A  0E00               	movlw	low _dbuf
  3999  00147C  25BF               	addwf	efgtoa@n& (0+255),w,b
  4000  00147E  6E1F               	movwf	strcpy@dest^0,c
  4001  001480  0E01               	movlw	high _dbuf
  4002  001482  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4003  001484  6E20               	movwf	(strcpy@dest+1)^0,c
  4004  001486  0E00               	movlw	low _dbuf
  4005  001488  25B7               	addwf	efgtoa@i& (0+255),w,b
  4006  00148A  6E21               	movwf	strcpy@src^0,c
  4007  00148C  0E01               	movlw	high _dbuf
  4008  00148E  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4009  001490  6E22               	movwf	(strcpy@src+1)^0,c
  4010  001492  ECBF  F01E         	call	_strcpy	;wreg free
  4011  001496  EFD2  F004         	goto	l5283
  4012  00149A                     l827:
  4013  00149A  0012               	return		;funcret
  4014  00149C                     __end_of_efgtoa:
  4015                           	callstack 0
  4016                           
  4017 ;; *************** function _tolower *****************
  4018 ;; Defined at:
  4019 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  c               2   36[COMRAM] int 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  2   36[COMRAM] int 
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4033 ;;      Params:         2       0       0       0       0       0       0       0       0
  4034 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4035 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4036 ;;      Totals:         6       2       0       0       0       0       0       0       0
  4037 ;;Total ram usage:        8 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 5
  4040 ;; This function calls:
  4041 ;;		_isupper
  4042 ;; This function is called by:
  4043 ;;		_efgtoa
  4044 ;;		_vfpfcnvrt
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text6
  4049  003D1C                     __ptext6:
  4050                           	callstack 0
  4051  003D1C                     _tolower:
  4052                           	callstack 22
  4053  003D1C  0EBF               	movlw	191
  4054  003D1E  6E27               	movwf	??_tolower^0,c
  4055  003D20  0EFF               	movlw	255
  4056  003D22  6E28               	movwf	(??_tolower+1)^0,c
  4057  003D24  C025  F029         	movff	tolower@c,??_tolower+2
  4058  003D28  C026  F02A         	movff	tolower@c+1,??_tolower+3
  4059  003D2C  5027               	movf	??_tolower^0,w,c
  4060  003D2E  2629               	addwf	(??_tolower+2)^0,f,c
  4061  003D30  5028               	movf	(??_tolower+1)^0,w,c
  4062  003D32  222A               	addwfc	(??_tolower+3)^0,f,c
  4063  003D34  502A               	movf	(??_tolower+3)^0,w,c
  4064  003D36  E10A               	bnz	u7180
  4065  003D38  0E1A               	movlw	26
  4066  003D3A  5C29               	subwf	(??_tolower+2)^0,w,c
  4067  003D3C  A0D8               	btfss	status,0,c
  4068  003D3E  EFA3  F01E         	goto	u7181
  4069  003D42  EFA6  F01E         	goto	u7180
  4070  003D46                     u7181:
  4071  003D46  0E01               	movlw	1
  4072  003D48  EFA7  F01E         	goto	u7190
  4073  003D4C                     u7180:
  4074  003D4C  0E00               	movlw	0
  4075  003D4E                     u7190:
  4076  003D4E  0100               	movlb	0	; () banked
  4077  003D50  6F60               	movwf	_tolower$1101& (0+255),b
  4078  003D52  6B61               	clrf	(_tolower$1101+1)& (0+255),b
  4079  003D54                     
  4080                           ; BSR set to: 0
  4081  003D54  5160               	movf	_tolower$1101& (0+255),w,b
  4082  003D56  1161               	iorwf	(_tolower$1101+1)& (0+255),w,b
  4083  003D58  B4D8               	btfsc	status,2,c
  4084  003D5A  EFB1  F01E         	goto	u7201
  4085  003D5E  EFB3  F01E         	goto	u7200
  4086  003D62                     u7201:
  4087  003D62  EFBA  F01E         	goto	l1067
  4088  003D66                     u7200:
  4089  003D66                     
  4090                           ; BSR set to: 0
  4091  003D66  0E20               	movlw	32
  4092  003D68  1025               	iorwf	tolower@c^0,w,c
  4093  003D6A  6E25               	movwf	?_tolower^0,c
  4094  003D6C  5026               	movf	(tolower@c+1)^0,w,c
  4095  003D6E  6E26               	movwf	(?_tolower+1)^0,c
  4096  003D70  EFBE  F01E         	goto	l1072
  4097  003D74                     l1067:
  4098                           
  4099                           ; BSR set to: 0
  4100  003D74  C025  F025         	movff	tolower@c,?_tolower
  4101  003D78  C026  F026         	movff	tolower@c+1,?_tolower+1
  4102  003D7C                     l1072:
  4103                           
  4104                           ; BSR set to: 0
  4105  003D7C  0012               	return		;funcret
  4106  003D7E                     __end_of_tolower:
  4107                           	callstack 0
  4108                           
  4109 ;; *************** function _isupper *****************
  4110 ;; Defined at:
  4111 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  c               2   30[COMRAM] int 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  2   30[COMRAM] int 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4125 ;;      Params:         2       0       0       0       0       0       0       0       0
  4126 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4127 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4128 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4129 ;;Total ram usage:        6 bytes
  4130 ;; Hardware stack levels used: 1
  4131 ;; Hardware stack levels required when called: 4
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_efgtoa
  4136 ;;		_vfpfcnvrt
  4137 ;;		_tolower
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text7
  4142  004048                     __ptext7:
  4143                           	callstack 0
  4144  004048                     _isupper:
  4145                           	callstack 22
  4146  004048  0EBF               	movlw	191
  4147  00404A  6E21               	movwf	??_isupper^0,c
  4148  00404C  0EFF               	movlw	255
  4149  00404E  6E22               	movwf	(??_isupper+1)^0,c
  4150  004050  C01F  F023         	movff	isupper@c,??_isupper+2
  4151  004054  C020  F024         	movff	isupper@c+1,??_isupper+3
  4152  004058  5021               	movf	??_isupper^0,w,c
  4153  00405A  2623               	addwf	(??_isupper+2)^0,f,c
  4154  00405C  5022               	movf	(??_isupper+1)^0,w,c
  4155  00405E  2224               	addwfc	(??_isupper+3)^0,f,c
  4156  004060  5024               	movf	(??_isupper+3)^0,w,c
  4157  004062  E10A               	bnz	u6330
  4158  004064  0E1A               	movlw	26
  4159  004066  5C23               	subwf	(??_isupper+2)^0,w,c
  4160  004068  A0D8               	btfss	status,0,c
  4161  00406A  EF39  F020         	goto	u6331
  4162  00406E  EF3C  F020         	goto	u6330
  4163  004072                     u6331:
  4164  004072  0E01               	movlw	1
  4165  004074  EF3D  F020         	goto	u6340
  4166  004078                     u6330:
  4167  004078  0E00               	movlw	0
  4168  00407A                     u6340:
  4169  00407A  6E1F               	movwf	?_isupper^0,c
  4170  00407C  6A20               	clrf	(?_isupper+1)^0,c
  4171  00407E  0012               	return		;funcret
  4172  004080                     __end_of_isupper:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _strcpy *****************
  4176 ;; Defined at:
  4177 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  dest            2   30[COMRAM] PTR unsigned char 
  4180 ;;		 -> dbuf(80), 
  4181 ;;  src             2   32[COMRAM] PTR const unsigned char 
  4182 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4183 ;;		 -> dbuf(80), 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  d               2   38[COMRAM] PTR unsigned char 
  4186 ;;		 -> dbuf(80), 
  4187 ;;  s               2   36[COMRAM] PTR const unsigned char 
  4188 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4189 ;;		 -> dbuf(80), 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  2   30[COMRAM] PTR unsigned char 
  4192 ;; Registers used:
  4193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4199 ;;      Params:         4       0       0       0       0       0       0       0       0
  4200 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4201 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4202 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4203 ;;Total ram usage:       10 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; Hardware stack levels required when called: 4
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_efgtoa
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text8
  4214  003D7E                     __ptext8:
  4215                           	callstack 0
  4216  003D7E                     _strcpy:
  4217                           	callstack 22
  4218  003D7E  C021  F025         	movff	strcpy@src,strcpy@s
  4219  003D82  C022  F026         	movff	strcpy@src+1,strcpy@s+1
  4220  003D86  C01F  F027         	movff	strcpy@dest,strcpy@d
  4221  003D8A  C020  F028         	movff	strcpy@dest+1,strcpy@d+1
  4222  003D8E                     l5183:
  4223  003D8E  5025               	movf	strcpy@s^0,w,c
  4224  003D90  6E23               	movwf	??_strcpy^0,c
  4225  003D92  5026               	movf	(strcpy@s+1)^0,w,c
  4226  003D94  6E24               	movwf	(??_strcpy+1)^0,c
  4227  003D96  4A25               	infsnz	strcpy@s^0,f,c
  4228  003D98  2A26               	incf	(strcpy@s+1)^0,f,c
  4229  003D9A  C023  FFF6         	movff	??_strcpy,tblptrl
  4230  003D9E  C024  FFF7         	movff	??_strcpy+1,tblptrh
  4231  003DA2  6AF8               	clrf	tblptru,c
  4232  003DA4  C027  FFD9         	movff	strcpy@d,fsr2l
  4233  003DA8  C028  FFDA         	movff	strcpy@d+1,fsr2h
  4234  003DAC  4A27               	infsnz	strcpy@d^0,f,c
  4235  003DAE  2A28               	incf	(strcpy@d+1)^0,f,c
  4236  003DB0  0E07               	movlw	(high __ramtop+-1)
  4237  003DB2  64F7               	cpfsgt	tblptrh,c
  4238  003DB4  D003               	bra	u7167
  4239  003DB6  0008               	tblrd		*
  4240  003DB8  50F5               	movf	tablat,w,c
  4241  003DBA  D005               	bra	u7160
  4242  003DBC                     u7167:
  4243  003DBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4244  003DC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4245  003DC4  50E7               	movf	indf1,w,c
  4246  003DC6                     u7160:
  4247  003DC6  6EDF               	movwf	indf2,c
  4248  003DC8  50DF               	movf	indf2,w,c
  4249  003DCA  A4D8               	btfss	status,2,c
  4250  003DCC  EFEA  F01E         	goto	u7171
  4251  003DD0  EFEC  F01E         	goto	u7170
  4252  003DD4                     u7171:
  4253  003DD4  EFC7  F01E         	goto	l5183
  4254  003DD8                     u7170:
  4255  003DD8  0012               	return		;funcret
  4256  003DDA                     __end_of_strcpy:
  4257                           	callstack 0
  4258                           
  4259 ;; *************** function _pad *****************
  4260 ;; Defined at:
  4261 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  4264 ;;		 -> sprintf@f(6), 
  4265 ;;  buf             2    6[BANK0 ] PTR unsigned char 
  4266 ;;		 -> dbuf(80), 
  4267 ;;  p               2    8[BANK0 ] int 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  w               2   13[BANK0 ] int 
  4270 ;;  i               2   11[BANK0 ] int 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2    4[BANK0 ] int 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4280 ;;      Params:         0       6       0       0       0       0       0       0       0
  4281 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4282 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4283 ;;      Totals:         0      11       0       0       0       0       0       0       0
  4284 ;;Total ram usage:       11 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 7
  4287 ;; This function calls:
  4288 ;;		_fputc
  4289 ;;		_fputs
  4290 ;;		_strlen
  4291 ;; This function is called by:
  4292 ;;		_efgtoa
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text9
  4297  003824                     __ptext9:
  4298                           	callstack 0
  4299  003824                     _pad:
  4300                           	callstack 19
  4301  003824                     
  4302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4303  003824  A037               	btfss	_flags^0,0,c
  4304  003826  EF17  F01C         	goto	u7051
  4305  00382A  EF19  F01C         	goto	u7050
  4306  00382E                     u7051:
  4307  00382E  EF23  F01C         	goto	l5141
  4308  003832                     u7050:
  4309  003832                     
  4310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4311  003832  C066  F060         	movff	pad@buf,fputs@s
  4312  003836  C067  F061         	movff	pad@buf+1,fputs@s+1
  4313  00383A  C064  F062         	movff	pad@fp,fputs@fp
  4314  00383E  C065  F063         	movff	pad@fp+1,fputs@fp+1
  4315  003842  ECDE  F01F         	call	_fputs	;wreg free
  4316  003846                     l5141:
  4317                           
  4318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4319  003846  0100               	movlb	0	; () banked
  4320  003848  BF69               	btfsc	(pad@p+1)& (0+255),7,b
  4321  00384A  EF29  F01C         	goto	u7061
  4322  00384E  EF2B  F01C         	goto	u7060
  4323  003852                     u7061:
  4324  003852  EF31  F01C         	goto	l5145
  4325  003856                     u7060:
  4326  003856                     
  4327                           ; BSR set to: 0
  4328  003856  C068  F06D         	movff	pad@p,pad@w
  4329  00385A  C069  F06E         	movff	pad@p+1,pad@w+1
  4330  00385E  EF35  F01C         	goto	l804
  4331  003862                     l5145:
  4332                           
  4333                           ; BSR set to: 0
  4334  003862  0E00               	movlw	0
  4335  003864  6F6E               	movwf	(pad@w+1)& (0+255),b
  4336  003866  0E00               	movlw	0
  4337  003868  6F6D               	movwf	pad@w& (0+255),b
  4338  00386A                     l804:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4342  00386A  0E00               	movlw	0
  4343  00386C  6F6C               	movwf	(pad@i+1)& (0+255),b
  4344  00386E  0E00               	movlw	0
  4345  003870  6F6B               	movwf	pad@i& (0+255),b
  4346                           
  4347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4348  003872  EF48  F01C         	goto	l5151
  4349  003876                     l5147:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4353  003876  0E00               	movlw	0
  4354  003878  6E20               	movwf	(fputc@c+1)^0,c
  4355  00387A  0E20               	movlw	32
  4356  00387C  6E1F               	movwf	fputc@c^0,c
  4357  00387E  C064  F021         	movff	pad@fp,fputc@fp
  4358  003882  C065  F022         	movff	pad@fp+1,fputc@fp+1
  4359  003886  ECAD  F01B         	call	_fputc	;wreg free
  4360  00388A                     
  4361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4362  00388A  0100               	movlb	0	; () banked
  4363  00388C  4B6B               	infsnz	pad@i& (0+255),f,b
  4364  00388E  2B6C               	incf	(pad@i+1)& (0+255),f,b
  4365  003890                     l5151:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4369  003890  516D               	movf	pad@w& (0+255),w,b
  4370  003892  5D6B               	subwf	pad@i& (0+255),w,b
  4371  003894  516C               	movf	(pad@i+1)& (0+255),w,b
  4372  003896  0A80               	xorlw	128
  4373  003898  6F6A               	movwf	??_pad& (0+255),b
  4374  00389A  516E               	movf	(pad@w+1)& (0+255),w,b
  4375  00389C  0A80               	xorlw	128
  4376  00389E  596A               	subwfb	??_pad& (0+255),w,b
  4377  0038A0  A0D8               	btfss	status,0,c
  4378  0038A2  EF55  F01C         	goto	u7071
  4379  0038A6  EF57  F01C         	goto	u7070
  4380  0038AA                     u7071:
  4381  0038AA  EF3B  F01C         	goto	l5147
  4382  0038AE                     u7070:
  4383  0038AE                     
  4384                           ; BSR set to: 0
  4385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4386  0038AE  B037               	btfsc	_flags^0,0,c
  4387  0038B0  EF5C  F01C         	goto	u7081
  4388  0038B4  EF5E  F01C         	goto	u7080
  4389  0038B8                     u7081:
  4390  0038B8  EF68  F01C         	goto	l5155
  4391  0038BC                     u7080:
  4392  0038BC                     
  4393                           ; BSR set to: 0
  4394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4395  0038BC  C066  F060         	movff	pad@buf,fputs@s
  4396  0038C0  C067  F061         	movff	pad@buf+1,fputs@s+1
  4397  0038C4  C064  F062         	movff	pad@fp,fputs@fp
  4398  0038C8  C065  F063         	movff	pad@fp+1,fputs@fp+1
  4399  0038CC  ECDE  F01F         	call	_fputs	;wreg free
  4400  0038D0                     l5155:
  4401                           
  4402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4403  0038D0  C066  F01F         	movff	pad@buf,strlen@s
  4404  0038D4  C067  F020         	movff	pad@buf+1,strlen@s+1
  4405  0038D8  EC6C  F01F         	call	_strlen	;wreg free
  4406  0038DC  0100               	movlb	0	; () banked
  4407  0038DE  516D               	movf	pad@w& (0+255),w,b
  4408  0038E0  241F               	addwf	?_strlen^0,w,c
  4409  0038E2  6F64               	movwf	?_pad& (0+255),b
  4410  0038E4  516E               	movf	(pad@w+1)& (0+255),w,b
  4411  0038E6  2020               	addwfc	(?_strlen+1)^0,w,c
  4412  0038E8  6F65               	movwf	(?_pad+1)& (0+255),b
  4413  0038EA                     
  4414                           ; BSR set to: 0
  4415  0038EA  0012               	return		;funcret
  4416  0038EC                     __end_of_pad:
  4417                           	callstack 0
  4418                           
  4419 ;; *************** function _fputs *****************
  4420 ;; Defined at:
  4421 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4424 ;;		 -> dbuf(80), 
  4425 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4426 ;;		 -> sprintf@f(6), 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  i               2   40[COMRAM] int 
  4429 ;;  c               1   39[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  2    0[BANK0 ] int 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4439 ;;      Params:         0       4       0       0       0       0       0       0       0
  4440 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4442 ;;      Totals:         3       4       0       0       0       0       0       0       0
  4443 ;;Total ram usage:        7 bytes
  4444 ;; Hardware stack levels used: 1
  4445 ;; Hardware stack levels required when called: 6
  4446 ;; This function calls:
  4447 ;;		_fputc
  4448 ;; This function is called by:
  4449 ;;		_pad
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text10
  4454  003FBC                     __ptext10:
  4455                           	callstack 0
  4456  003FBC                     _fputs:
  4457                           	callstack 19
  4458  003FBC  0E00               	movlw	0
  4459  003FBE  6E2A               	movwf	(fputs@i+1)^0,c
  4460  003FC0  0E00               	movlw	0
  4461  003FC2  6E29               	movwf	fputs@i^0,c
  4462  003FC4  EFEF  F01F         	goto	l4681
  4463  003FC8                     l4677:
  4464                           
  4465                           ; BSR set to: 0
  4466  003FC8  C028  F01F         	movff	fputs@c,fputc@c
  4467  003FCC  6A20               	clrf	(fputc@c+1)^0,c
  4468  003FCE  C062  F021         	movff	fputs@fp,fputc@fp
  4469  003FD2  C063  F022         	movff	fputs@fp+1,fputc@fp+1
  4470  003FD6  ECAD  F01B         	call	_fputc	;wreg free
  4471  003FDA  4A29               	infsnz	fputs@i^0,f,c
  4472  003FDC  2A2A               	incf	(fputs@i+1)^0,f,c
  4473  003FDE                     l4681:
  4474  003FDE  5029               	movf	fputs@i^0,w,c
  4475  003FE0  0100               	movlb	0	; () banked
  4476  003FE2  2560               	addwf	fputs@s& (0+255),w,b
  4477  003FE4  6ED9               	movwf	fsr2l,c
  4478  003FE6  502A               	movf	(fputs@i+1)^0,w,c
  4479  003FE8  2161               	addwfc	(fputs@s+1)& (0+255),w,b
  4480  003FEA  6EDA               	movwf	fsr2h,c
  4481  003FEC  50DF               	movf	indf2,w,c
  4482  003FEE  6E28               	movwf	fputs@c^0,c
  4483  003FF0  5028               	movf	fputs@c^0,w,c
  4484  003FF2  A4D8               	btfss	status,2,c
  4485  003FF4  EFFE  F01F         	goto	u6321
  4486  003FF8  EF00  F020         	goto	u6320
  4487  003FFC                     u6321:
  4488  003FFC  EFE4  F01F         	goto	l4677
  4489  004000                     u6320:
  4490  004000                     
  4491                           ; BSR set to: 0
  4492  004000  0012               	return		;funcret
  4493  004002                     __end_of_fputs:
  4494                           	callstack 0
  4495                           
  4496 ;; *************** function _fputc *****************
  4497 ;; Defined at:
  4498 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;  c               2   30[COMRAM] int 
  4501 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  4502 ;;		 -> sprintf@f(6), 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;		None
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2   30[COMRAM] int 
  4507 ;; Registers used:
  4508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4514 ;;      Params:         4       0       0       0       0       0       0       0       0
  4515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4516 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4517 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4518 ;;Total ram usage:        9 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; Hardware stack levels required when called: 5
  4521 ;; This function calls:
  4522 ;;		_putch
  4523 ;; This function is called by:
  4524 ;;		_pad
  4525 ;;		_vfpfcnvrt
  4526 ;;		_fputs
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text11
  4531  00375A                     __ptext11:
  4532                           	callstack 0
  4533  00375A                     _fputc:
  4534                           	callstack 22
  4535  00375A  5021               	movf	fputc@fp^0,w,c
  4536  00375C  1022               	iorwf	(fputc@fp+1)^0,w,c
  4537  00375E  B4D8               	btfsc	status,2,c
  4538  003760  EFB4  F01B         	goto	u5871
  4539  003764  EFB6  F01B         	goto	u5870
  4540  003768                     u5871:
  4541  003768  EFBF  F01B         	goto	l4453
  4542  00376C                     u5870:
  4543  00376C  5021               	movf	fputc@fp^0,w,c
  4544  00376E  1022               	iorwf	(fputc@fp+1)^0,w,c
  4545  003770  A4D8               	btfss	status,2,c
  4546  003772  EFBD  F01B         	goto	u5881
  4547  003776  EFBF  F01B         	goto	u5880
  4548  00377A                     u5881:
  4549  00377A  EFC4  F01B         	goto	l4455
  4550  00377E                     u5880:
  4551  00377E                     l4453:
  4552  00377E  501F               	movf	fputc@c^0,w,c
  4553  003780  ECD1  F020         	call	_putch
  4554  003784  EF11  F01C         	goto	l1030
  4555  003788                     l4455:
  4556  003788  EE20 F004          	lfsr	2,4
  4557  00378C  5021               	movf	fputc@fp^0,w,c
  4558  00378E  26D9               	addwf	fsr2l,f,c
  4559  003790  5022               	movf	(fputc@fp+1)^0,w,c
  4560  003792  22DA               	addwfc	fsr2h,f,c
  4561  003794  50DE               	movf	postinc2,w,c
  4562  003796  10DE               	iorwf	postinc2,w,c
  4563  003798  B4D8               	btfsc	status,2,c
  4564  00379A  EFD1  F01B         	goto	u5891
  4565  00379E  EFD3  F01B         	goto	u5890
  4566  0037A2                     u5891:
  4567  0037A2  EFEE  F01B         	goto	l4459
  4568  0037A6                     u5890:
  4569  0037A6  EE20 F004          	lfsr	2,4
  4570  0037AA  5021               	movf	fputc@fp^0,w,c
  4571  0037AC  26D9               	addwf	fsr2l,f,c
  4572  0037AE  5022               	movf	(fputc@fp+1)^0,w,c
  4573  0037B0  22DA               	addwfc	fsr2h,f,c
  4574  0037B2  EE10 F002          	lfsr	1,2
  4575  0037B6  5021               	movf	fputc@fp^0,w,c
  4576  0037B8  26E1               	addwf	fsr1l,f,c
  4577  0037BA  5022               	movf	(fputc@fp+1)^0,w,c
  4578  0037BC  22E2               	addwfc	fsr1h,f,c
  4579  0037BE  50DE               	movf	postinc2,w,c
  4580  0037C0  5CE6               	subwf	postinc1,w,c
  4581  0037C2  50E6               	movf	postinc1,w,c
  4582  0037C4  0A80               	xorlw	128
  4583  0037C6  6E27               	movwf	(??_fputc+4)^0,c
  4584  0037C8  50DE               	movf	postinc2,w,c
  4585  0037CA  0A80               	xorlw	128
  4586  0037CC  5827               	subwfb	(??_fputc+4)^0,w,c
  4587  0037CE  B0D8               	btfsc	status,0,c
  4588  0037D0  EFEC  F01B         	goto	u5901
  4589  0037D4  EFEE  F01B         	goto	u5900
  4590  0037D8                     u5901:
  4591  0037D8  EF11  F01C         	goto	l1030
  4592  0037DC                     u5900:
  4593  0037DC                     l4459:
  4594  0037DC  EE20 F002          	lfsr	2,2
  4595  0037E0  5021               	movf	fputc@fp^0,w,c
  4596  0037E2  26D9               	addwf	fsr2l,f,c
  4597  0037E4  5022               	movf	(fputc@fp+1)^0,w,c
  4598  0037E6  22DA               	addwfc	fsr2h,f,c
  4599  0037E8  CFDE F023          	movff	postinc2,??_fputc
  4600  0037EC  CFDD F024          	movff	postdec2,??_fputc+1
  4601  0037F0  C021  FFD9         	movff	fputc@fp,fsr2l
  4602  0037F4  C022  FFDA         	movff	fputc@fp+1,fsr2h
  4603  0037F8  CFDE F025          	movff	postinc2,??_fputc+2
  4604  0037FC  CFDD F026          	movff	postdec2,??_fputc+3
  4605  003800  5023               	movf	??_fputc^0,w,c
  4606  003802  2425               	addwf	(??_fputc+2)^0,w,c
  4607  003804  6ED9               	movwf	fsr2l,c
  4608  003806  5024               	movf	(??_fputc+1)^0,w,c
  4609  003808  2026               	addwfc	(??_fputc+3)^0,w,c
  4610  00380A  6EDA               	movwf	fsr2h,c
  4611  00380C  C01F  FFDF         	movff	fputc@c,indf2
  4612  003810  EE20 F002          	lfsr	2,2
  4613  003814  5021               	movf	fputc@fp^0,w,c
  4614  003816  26D9               	addwf	fsr2l,f,c
  4615  003818  5022               	movf	(fputc@fp+1)^0,w,c
  4616  00381A  22DA               	addwfc	fsr2h,f,c
  4617  00381C  2ADE               	incf	postinc2,f,c
  4618  00381E  0E00               	movlw	0
  4619  003820  22DD               	addwfc	postdec2,f,c
  4620  003822                     l1030:
  4621  003822  0012               	return		;funcret
  4622  003824                     __end_of_fputc:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function _putch *****************
  4626 ;; Defined at:
  4627 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  c               1    wreg     unsigned char 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  c               1    0[COMRAM] unsigned char 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used: 1
  4647 ;; Hardware stack levels required when called: 4
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_fputc
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text12
  4656  0041A2                     __ptext12:
  4657                           	callstack 0
  4658  0041A2                     _putch:
  4659                           	callstack 22
  4660  0041A2  0012               	return		;funcret
  4661  0041A4                     __end_of_putch:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function _floorf *****************
  4665 ;; Defined at:
  4666 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  x               4   13[BANK0 ] float 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  u               4   29[BANK0 ] struct .
  4671 ;;  m               4   23[BANK0 ] unsigned long 
  4672 ;;  e               2   27[BANK0 ] int 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  4   13[BANK0 ] float 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4682 ;;      Params:         0       4       0       0       0       0       0       0       0
  4683 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4684 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4685 ;;      Totals:         0      20       0       0       0       0       0       0       0
  4686 ;;Total ram usage:       20 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 4
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_efgtoa
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text13
  4697  002B52                     __ptext13:
  4698                           	callstack 0
  4699  002B52                     _floorf:
  4700                           	callstack 22
  4701  002B52  C02B  F07D         	movff	floorf@F527,floorf@u
  4702  002B56  C02C  F07E         	movff	floorf@F527+1,floorf@u+1
  4703  002B5A  C02D  F07F         	movff	floorf@F527+2,floorf@u+2
  4704  002B5E  C02E  F080         	movff	floorf@F527+3,floorf@u+3
  4705  002B62  C06D  F07D         	movff	floorf@x,floorf@u
  4706  002B66  C06E  F07E         	movff	floorf@x+1,floorf@u+1
  4707  002B6A  C06F  F07F         	movff	floorf@x+2,floorf@u+2
  4708  002B6E  C070  F080         	movff	floorf@x+3,floorf@u+3
  4709  002B72  0E81               	movlw	129
  4710  002B74  0100               	movlb	0	; () banked
  4711  002B76  6F71               	movwf	??_floorf& (0+255),b
  4712  002B78  0EFF               	movlw	255
  4713  002B7A  6F72               	movwf	(??_floorf+1)& (0+255),b
  4714  002B7C  C07D  F073         	movff	floorf@u,??_floorf+2
  4715  002B80  C07E  F074         	movff	floorf@u+1,??_floorf+3
  4716  002B84  C07F  F075         	movff	floorf@u+2,??_floorf+4
  4717  002B88  C080  F076         	movff	floorf@u+3,??_floorf+5
  4718  002B8C  0E18               	movlw	24
  4719  002B8E  EFCE  F015         	goto	u7210
  4720  002B92                     u7215:
  4721  002B92  90D8               	bcf	status,0,c
  4722  002B94  3376               	rrcf	(??_floorf+5)& (0+255),f,b
  4723  002B96  3375               	rrcf	(??_floorf+4)& (0+255),f,b
  4724  002B98  3374               	rrcf	(??_floorf+3)& (0+255),f,b
  4725  002B9A  3373               	rrcf	(??_floorf+2)& (0+255),f,b
  4726  002B9C                     u7210:
  4727  002B9C  2EE8               	decfsz	wreg,f,c
  4728  002B9E  EFC9  F015         	goto	u7215
  4729  002BA2  5173               	movf	(??_floorf+2)& (0+255),w,b
  4730  002BA4  2571               	addwf	??_floorf& (0+255),w,b
  4731  002BA6  6F7B               	movwf	floorf@e& (0+255),b
  4732  002BA8  0E00               	movlw	0
  4733  002BAA  2172               	addwfc	(??_floorf+1)& (0+255),w,b
  4734  002BAC  6F7C               	movwf	(floorf@e+1)& (0+255),b
  4735  002BAE  BF7C               	btfsc	(floorf@e+1)& (0+255),7,b
  4736  002BB0  EFE3  F015         	goto	u7221
  4737  002BB4  517C               	movf	(floorf@e+1)& (0+255),w,b
  4738  002BB6  E109               	bnz	u7220
  4739  002BB8  0E17               	movlw	23
  4740  002BBA  5D7B               	subwf	floorf@e& (0+255),w,b
  4741  002BBC  A0D8               	btfss	status,0,c
  4742  002BBE  EFE3  F015         	goto	u7221
  4743  002BC2  EFE5  F015         	goto	u7220
  4744  002BC6                     u7221:
  4745  002BC6  EFEF  F015         	goto	l5201
  4746  002BCA                     u7220:
  4747  002BCA                     l5199:
  4748                           
  4749                           ; BSR set to: 0
  4750  002BCA  C06D  F06D         	movff	floorf@x,?_floorf
  4751  002BCE  C06E  F06E         	movff	floorf@x+1,?_floorf+1
  4752  002BD2  C06F  F06F         	movff	floorf@x+2,?_floorf+2
  4753  002BD6  C070  F070         	movff	floorf@x+3,?_floorf+3
  4754  002BDA  EFB3  F016         	goto	l991
  4755  002BDE                     l5201:
  4756                           
  4757                           ; BSR set to: 0
  4758  002BDE  BF7C               	btfsc	(floorf@e+1)& (0+255),7,b
  4759  002BE0  EFF4  F015         	goto	u7231
  4760  002BE4  EFF6  F015         	goto	u7230
  4761  002BE8                     u7231:
  4762  002BE8  EF67  F016         	goto	l5211
  4763  002BEC                     u7230:
  4764  002BEC                     
  4765                           ; BSR set to: 0
  4766  002BEC  C07B  F071         	movff	floorf@e,??_floorf
  4767  002BF0  0EFF               	movlw	255
  4768  002BF2  6F72               	movwf	(??_floorf+1)& (0+255),b
  4769  002BF4  0EFF               	movlw	255
  4770  002BF6  6F73               	movwf	(??_floorf+2)& (0+255),b
  4771  002BF8  0E7F               	movlw	127
  4772  002BFA  6F74               	movwf	(??_floorf+3)& (0+255),b
  4773  002BFC  0E00               	movlw	0
  4774  002BFE  6F75               	movwf	(??_floorf+4)& (0+255),b
  4775  002C00                     u7245:
  4776  002C00  6771               	tstfsz	??_floorf& (0+255),b
  4777  002C02  EF05  F016         	goto	u7246
  4778  002C06  EF0D  F016         	goto	u7247
  4779  002C0A                     u7246:
  4780  002C0A  3575               	rlcf	(??_floorf+4)& (0+255),w,b
  4781  002C0C  3375               	rrcf	(??_floorf+4)& (0+255),f,b
  4782  002C0E  3374               	rrcf	(??_floorf+3)& (0+255),f,b
  4783  002C10  3373               	rrcf	(??_floorf+2)& (0+255),f,b
  4784  002C12  3372               	rrcf	(??_floorf+1)& (0+255),f,b
  4785  002C14  2F71               	decfsz	??_floorf& (0+255),f,b
  4786  002C16  EF00  F016         	goto	u7245
  4787  002C1A                     u7247:
  4788  002C1A  C072  F077         	movff	??_floorf+1,floorf@m
  4789  002C1E  C073  F078         	movff	??_floorf+2,floorf@m+1
  4790  002C22  C074  F079         	movff	??_floorf+3,floorf@m+2
  4791  002C26  C075  F07A         	movff	??_floorf+4,floorf@m+3
  4792  002C2A  0100               	movlb	0	; () banked
  4793  002C2C  5177               	movf	floorf@m& (0+255),w,b
  4794  002C2E  157D               	andwf	floorf@u& (0+255),w,b
  4795  002C30  6F71               	movwf	??_floorf& (0+255),b
  4796  002C32  5178               	movf	(floorf@m+1)& (0+255),w,b
  4797  002C34  157E               	andwf	(floorf@u+1)& (0+255),w,b
  4798  002C36  6F72               	movwf	(??_floorf+1)& (0+255),b
  4799  002C38  5179               	movf	(floorf@m+2)& (0+255),w,b
  4800  002C3A  157F               	andwf	(floorf@u+2)& (0+255),w,b
  4801  002C3C  6F73               	movwf	(??_floorf+2)& (0+255),b
  4802  002C3E  517A               	movf	(floorf@m+3)& (0+255),w,b
  4803  002C40  1580               	andwf	(floorf@u+3)& (0+255),w,b
  4804  002C42  6F74               	movwf	(??_floorf+3)& (0+255),b
  4805  002C44  5171               	movf	??_floorf& (0+255),w,b
  4806  002C46  1172               	iorwf	(??_floorf+1)& (0+255),w,b
  4807  002C48  1173               	iorwf	(??_floorf+2)& (0+255),w,b
  4808  002C4A  1174               	iorwf	(??_floorf+3)& (0+255),w,b
  4809  002C4C  A4D8               	btfss	status,2,c
  4810  002C4E  EF2B  F016         	goto	u7251
  4811  002C52  EF2D  F016         	goto	u7250
  4812  002C56                     u7251:
  4813  002C56  EF2F  F016         	goto	l5207
  4814  002C5A                     u7250:
  4815  002C5A  EFE5  F015         	goto	l5199
  4816  002C5E                     l5207:
  4817                           
  4818                           ; BSR set to: 0
  4819  002C5E  C07D  F071         	movff	floorf@u,??_floorf
  4820  002C62  C07E  F072         	movff	floorf@u+1,??_floorf+1
  4821  002C66  C07F  F073         	movff	floorf@u+2,??_floorf+2
  4822  002C6A  C080  F074         	movff	floorf@u+3,??_floorf+3
  4823  002C6E  0E20               	movlw	32
  4824  002C70  EF3F  F016         	goto	u7260
  4825  002C74                     u7265:
  4826  002C74  90D8               	bcf	status,0,c
  4827  002C76  3374               	rrcf	(??_floorf+3)& (0+255),f,b
  4828  002C78  3373               	rrcf	(??_floorf+2)& (0+255),f,b
  4829  002C7A  3372               	rrcf	(??_floorf+1)& (0+255),f,b
  4830  002C7C  3371               	rrcf	??_floorf& (0+255),f,b
  4831  002C7E                     u7260:
  4832  002C7E  2EE8               	decfsz	wreg,f,c
  4833  002C80  EF3A  F016         	goto	u7265
  4834  002C84  5171               	movf	??_floorf& (0+255),w,b
  4835  002C86  1172               	iorwf	(??_floorf+1)& (0+255),w,b
  4836  002C88  1173               	iorwf	(??_floorf+2)& (0+255),w,b
  4837  002C8A  1174               	iorwf	(??_floorf+3)& (0+255),w,b
  4838  002C8C  B4D8               	btfsc	status,2,c
  4839  002C8E  EF4B  F016         	goto	u7271
  4840  002C92  EF4D  F016         	goto	u7270
  4841  002C96                     u7271:
  4842  002C96  EF55  F016         	goto	l994
  4843  002C9A                     u7270:
  4844  002C9A                     
  4845                           ; BSR set to: 0
  4846  002C9A  5177               	movf	floorf@m& (0+255),w,b
  4847  002C9C  277D               	addwf	floorf@u& (0+255),f,b
  4848  002C9E  5178               	movf	(floorf@m+1)& (0+255),w,b
  4849  002CA0  237E               	addwfc	(floorf@u+1)& (0+255),f,b
  4850  002CA2  5179               	movf	(floorf@m+2)& (0+255),w,b
  4851  002CA4  237F               	addwfc	(floorf@u+2)& (0+255),f,b
  4852  002CA6  517A               	movf	(floorf@m+3)& (0+255),w,b
  4853  002CA8  2380               	addwfc	(floorf@u+3)& (0+255),f,b
  4854  002CAA                     l994:
  4855                           
  4856                           ; BSR set to: 0
  4857  002CAA  1D77               	comf	floorf@m& (0+255),w,b
  4858  002CAC  6F71               	movwf	??_floorf& (0+255),b
  4859  002CAE  1D78               	comf	(floorf@m+1)& (0+255),w,b
  4860  002CB0  6F72               	movwf	(??_floorf+1)& (0+255),b
  4861  002CB2  1D79               	comf	(floorf@m+2)& (0+255),w,b
  4862  002CB4  6F73               	movwf	(??_floorf+2)& (0+255),b
  4863  002CB6  1D7A               	comf	(floorf@m+3)& (0+255),w,b
  4864  002CB8  6F74               	movwf	(??_floorf+3)& (0+255),b
  4865  002CBA  5171               	movf	??_floorf& (0+255),w,b
  4866  002CBC  177D               	andwf	floorf@u& (0+255),f,b
  4867  002CBE  5172               	movf	(??_floorf+1)& (0+255),w,b
  4868  002CC0  177E               	andwf	(floorf@u+1)& (0+255),f,b
  4869  002CC2  5173               	movf	(??_floorf+2)& (0+255),w,b
  4870  002CC4  177F               	andwf	(floorf@u+2)& (0+255),f,b
  4871  002CC6  5174               	movf	(??_floorf+3)& (0+255),w,b
  4872  002CC8  1780               	andwf	(floorf@u+3)& (0+255),f,b
  4873  002CCA  EFAB  F016         	goto	l5219
  4874  002CCE                     l5211:
  4875                           
  4876                           ; BSR set to: 0
  4877  002CCE  C07D  F071         	movff	floorf@u,??_floorf
  4878  002CD2  C07E  F072         	movff	floorf@u+1,??_floorf+1
  4879  002CD6  C07F  F073         	movff	floorf@u+2,??_floorf+2
  4880  002CDA  C080  F074         	movff	floorf@u+3,??_floorf+3
  4881  002CDE  0E20               	movlw	32
  4882  002CE0  EF77  F016         	goto	u7280
  4883  002CE4                     u7285:
  4884  002CE4  90D8               	bcf	status,0,c
  4885  002CE6  3374               	rrcf	(??_floorf+3)& (0+255),f,b
  4886  002CE8  3373               	rrcf	(??_floorf+2)& (0+255),f,b
  4887  002CEA  3372               	rrcf	(??_floorf+1)& (0+255),f,b
  4888  002CEC  3371               	rrcf	??_floorf& (0+255),f,b
  4889  002CEE                     u7280:
  4890  002CEE  2EE8               	decfsz	wreg,f,c
  4891  002CF0  EF72  F016         	goto	u7285
  4892  002CF4  5171               	movf	??_floorf& (0+255),w,b
  4893  002CF6  1172               	iorwf	(??_floorf+1)& (0+255),w,b
  4894  002CF8  1173               	iorwf	(??_floorf+2)& (0+255),w,b
  4895  002CFA  1174               	iorwf	(??_floorf+3)& (0+255),w,b
  4896  002CFC  A4D8               	btfss	status,2,c
  4897  002CFE  EF83  F016         	goto	u7291
  4898  002D02  EF85  F016         	goto	u7290
  4899  002D06                     u7291:
  4900  002D06  EF8F  F016         	goto	l5215
  4901  002D0A                     u7290:
  4902  002D0A                     
  4903                           ; BSR set to: 0
  4904  002D0A  0E00               	movlw	0
  4905  002D0C  6F7D               	movwf	floorf@u& (0+255),b
  4906  002D0E  0E00               	movlw	0
  4907  002D10  6F7E               	movwf	(floorf@u+1)& (0+255),b
  4908  002D12  0E00               	movlw	0
  4909  002D14  6F7F               	movwf	(floorf@u+2)& (0+255),b
  4910  002D16  0E00               	movlw	0
  4911  002D18  6F80               	movwf	(floorf@u+3)& (0+255),b
  4912  002D1A  EFAB  F016         	goto	l5219
  4913  002D1E                     l5215:
  4914                           
  4915                           ; BSR set to: 0
  4916  002D1E  90D8               	bcf	status,0,c
  4917  002D20  357D               	rlcf	floorf@u& (0+255),w,b
  4918  002D22  6F71               	movwf	??_floorf& (0+255),b
  4919  002D24  357E               	rlcf	(floorf@u+1)& (0+255),w,b
  4920  002D26  6F72               	movwf	(??_floorf+1)& (0+255),b
  4921  002D28  357F               	rlcf	(floorf@u+2)& (0+255),w,b
  4922  002D2A  6F73               	movwf	(??_floorf+2)& (0+255),b
  4923  002D2C  3580               	rlcf	(floorf@u+3)& (0+255),w,b
  4924  002D2E  6F74               	movwf	(??_floorf+3)& (0+255),b
  4925  002D30  5171               	movf	??_floorf& (0+255),w,b
  4926  002D32  1172               	iorwf	(??_floorf+1)& (0+255),w,b
  4927  002D34  1173               	iorwf	(??_floorf+2)& (0+255),w,b
  4928  002D36  1174               	iorwf	(??_floorf+3)& (0+255),w,b
  4929  002D38  B4D8               	btfsc	status,2,c
  4930  002D3A  EFA1  F016         	goto	u7301
  4931  002D3E  EFA3  F016         	goto	u7300
  4932  002D42                     u7301:
  4933  002D42  EFAB  F016         	goto	l5219
  4934  002D46                     u7300:
  4935  002D46                     
  4936                           ; BSR set to: 0
  4937  002D46  0E00               	movlw	0
  4938  002D48  6F7D               	movwf	floorf@u& (0+255),b
  4939  002D4A  0E00               	movlw	0
  4940  002D4C  6F7E               	movwf	(floorf@u+1)& (0+255),b
  4941  002D4E  0E80               	movlw	128
  4942  002D50  6F7F               	movwf	(floorf@u+2)& (0+255),b
  4943  002D52  0EBF               	movlw	191
  4944  002D54  6F80               	movwf	(floorf@u+3)& (0+255),b
  4945  002D56                     l5219:
  4946                           
  4947                           ; BSR set to: 0
  4948  002D56  C07D  F06D         	movff	floorf@u,?_floorf
  4949  002D5A  C07E  F06E         	movff	floorf@u+1,?_floorf+1
  4950  002D5E  C07F  F06F         	movff	floorf@u+2,?_floorf+2
  4951  002D62  C080  F070         	movff	floorf@u+3,?_floorf+3
  4952  002D66                     l991:
  4953                           
  4954                           ; BSR set to: 0
  4955  002D66  0012               	return		;funcret
  4956  002D68                     __end_of_floorf:
  4957                           	callstack 0
  4958                           
  4959 ;; *************** function ___fpclassifyf *****************
  4960 ;; Defined at:
  4961 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  x               4   30[COMRAM] float 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  u               4    2[BANK0 ] struct .
  4966 ;;  e               2    0[BANK0 ] int 
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  2   30[COMRAM] int 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4976 ;;      Params:         4       0       0       0       0       0       0       0       0
  4977 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4978 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4979 ;;      Totals:         8       6       0       0       0       0       0       0       0
  4980 ;;Total ram usage:       14 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 4
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_efgtoa
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text14
  4991  0033B8                     __ptext14:
  4992                           	callstack 0
  4993  0033B8                     ___fpclassifyf:
  4994                           	callstack 22
  4995  0033B8  C02F  F062         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4996  0033BC  C030  F063         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4997  0033C0  C031  F064         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4998  0033C4  C032  F065         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4999  0033C8  C01F  F062         	movff	___fpclassifyf@x,___fpclassifyf@u
  5000  0033CC  C020  F063         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5001  0033D0  C021  F064         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5002  0033D4  C022  F065         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5003  0033D8  C062  F023         	movff	___fpclassifyf@u,??___fpclassifyf
  5004  0033DC  C063  F024         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5005  0033E0  C064  F025         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5006  0033E4  C065  F026         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5007  0033E8  0E18               	movlw	24
  5008  0033EA  EFFC  F019         	goto	u7090
  5009  0033EE                     u7095:
  5010  0033EE  90D8               	bcf	status,0,c
  5011  0033F0  3226               	rrcf	(??___fpclassifyf+3)^0,f,c
  5012  0033F2  3225               	rrcf	(??___fpclassifyf+2)^0,f,c
  5013  0033F4  3224               	rrcf	(??___fpclassifyf+1)^0,f,c
  5014  0033F6  3223               	rrcf	??___fpclassifyf^0,f,c
  5015  0033F8                     u7090:
  5016  0033F8  2EE8               	decfsz	wreg,f,c
  5017  0033FA  EFF7  F019         	goto	u7095
  5018  0033FE  5023               	movf	??___fpclassifyf^0,w,c
  5019  003400  0100               	movlb	0	; () banked
  5020  003402  6F60               	movwf	___fpclassifyf@e& (0+255),b
  5021  003404  6B61               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5022  003406  5160               	movf	___fpclassifyf@e& (0+255),w,b
  5023  003408  1161               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5024  00340A  A4D8               	btfss	status,2,c
  5025  00340C  EF0A  F01A         	goto	u7101
  5026  003410  EF0C  F01A         	goto	u7100
  5027  003414                     u7101:
  5028  003414  EF2C  F01A         	goto	l5171
  5029  003418                     u7100:
  5030  003418                     
  5031                           ; BSR set to: 0
  5032  003418  90D8               	bcf	status,0,c
  5033  00341A  3562               	rlcf	___fpclassifyf@u& (0+255),w,b
  5034  00341C  6E23               	movwf	??___fpclassifyf^0,c
  5035  00341E  3563               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5036  003420  6E24               	movwf	(??___fpclassifyf+1)^0,c
  5037  003422  3564               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5038  003424  6E25               	movwf	(??___fpclassifyf+2)^0,c
  5039  003426  3565               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5040  003428  6E26               	movwf	(??___fpclassifyf+3)^0,c
  5041  00342A  5023               	movf	??___fpclassifyf^0,w,c
  5042  00342C  1024               	iorwf	(??___fpclassifyf+1)^0,w,c
  5043  00342E  1025               	iorwf	(??___fpclassifyf+2)^0,w,c
  5044  003430  1026               	iorwf	(??___fpclassifyf+3)^0,w,c
  5045  003432  A4D8               	btfss	status,2,c
  5046  003434  EF1E  F01A         	goto	u7111
  5047  003438  EF20  F01A         	goto	u7110
  5048  00343C                     u7111:
  5049  00343C  EF26  F01A         	goto	l5167
  5050  003440                     u7110:
  5051  003440                     
  5052                           ; BSR set to: 0
  5053  003440  0E00               	movlw	0
  5054  003442  6E20               	movwf	(?___fpclassifyf+1)^0,c
  5055  003444  0E02               	movlw	2
  5056  003446  6E1F               	movwf	?___fpclassifyf^0,c
  5057  003448  EF5B  F01A         	goto	l953
  5058  00344C                     l5167:
  5059                           
  5060                           ; BSR set to: 0
  5061  00344C  0E00               	movlw	0
  5062  00344E  6E20               	movwf	(?___fpclassifyf+1)^0,c
  5063  003450  0E03               	movlw	3
  5064  003452  6E1F               	movwf	?___fpclassifyf^0,c
  5065  003454  EF5B  F01A         	goto	l953
  5066  003458                     l5171:
  5067                           
  5068                           ; BSR set to: 0
  5069  003458  2960               	incf	___fpclassifyf@e& (0+255),w,b
  5070  00345A  1161               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5071  00345C  A4D8               	btfss	status,2,c
  5072  00345E  EF33  F01A         	goto	u7121
  5073  003462  EF35  F01A         	goto	u7120
  5074  003466                     u7121:
  5075  003466  EF57  F01A         	goto	l5177
  5076  00346A                     u7120:
  5077  00346A                     
  5078                           ; BSR set to: 0
  5079  00346A  C062  F023         	movff	___fpclassifyf@u,??___fpclassifyf
  5080  00346E  C063  F024         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5081  003472  C064  F025         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5082  003476  C065  F026         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5083  00347A  0E09               	movlw	9
  5084  00347C                     u7135:
  5085  00347C  90D8               	bcf	status,0,c
  5086  00347E  3623               	rlcf	??___fpclassifyf^0,f,c
  5087  003480  3624               	rlcf	(??___fpclassifyf+1)^0,f,c
  5088  003482  3625               	rlcf	(??___fpclassifyf+2)^0,f,c
  5089  003484  3626               	rlcf	(??___fpclassifyf+3)^0,f,c
  5090  003486  2EE8               	decfsz	wreg,f,c
  5091  003488  EF3E  F01A         	goto	u7135
  5092  00348C  5023               	movf	??___fpclassifyf^0,w,c
  5093  00348E  1024               	iorwf	(??___fpclassifyf+1)^0,w,c
  5094  003490  1025               	iorwf	(??___fpclassifyf+2)^0,w,c
  5095  003492  1026               	iorwf	(??___fpclassifyf+3)^0,w,c
  5096  003494  B4D8               	btfsc	status,2,c
  5097  003496  EF4F  F01A         	goto	u7141
  5098  00349A  EF52  F01A         	goto	u7140
  5099  00349E                     u7141:
  5100  00349E  0E01               	movlw	1
  5101  0034A0  EF53  F01A         	goto	u7150
  5102  0034A4                     u7140:
  5103  0034A4  0E00               	movlw	0
  5104  0034A6                     u7150:
  5105  0034A6  6E1F               	movwf	?___fpclassifyf^0,c
  5106  0034A8  6A20               	clrf	(?___fpclassifyf+1)^0,c
  5107  0034AA  EF5B  F01A         	goto	l953
  5108  0034AE                     l5177:
  5109                           
  5110                           ; BSR set to: 0
  5111  0034AE  0E00               	movlw	0
  5112  0034B0  6E20               	movwf	(?___fpclassifyf+1)^0,c
  5113  0034B2  0E04               	movlw	4
  5114  0034B4  6E1F               	movwf	?___fpclassifyf^0,c
  5115  0034B6                     l953:
  5116                           
  5117                           ; BSR set to: 0
  5118  0034B6  0012               	return		;funcret
  5119  0034B8                     __end_of___fpclassifyf:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function ___fltol *****************
  5123 ;; Defined at:
  5124 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  f1              4   30[COMRAM] int 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  exp1            1   39[COMRAM] unsigned char 
  5129 ;;  sign1           1   38[COMRAM] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  4   30[COMRAM] long 
  5132 ;; Registers used:
  5133 ;;		wreg, status,2, status,0
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5139 ;;      Params:         4       0       0       0       0       0       0       0       0
  5140 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5141 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5142 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5143 ;;Total ram usage:       10 bytes
  5144 ;; Hardware stack levels used: 1
  5145 ;; Hardware stack levels required when called: 4
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_efgtoa
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text15
  5154  0030A8                     __ptext15:
  5155                           	callstack 0
  5156  0030A8                     ___fltol:
  5157                           	callstack 22
  5158  0030A8  3421               	rlcf	(___fltol@f1+2)^0,w,c
  5159  0030AA  3422               	rlcf	(___fltol@f1+3)^0,w,c
  5160  0030AC  6E28               	movwf	___fltol@exp1^0,c
  5161  0030AE  5028               	movf	___fltol@exp1^0,w,c
  5162  0030B0  A4D8               	btfss	status,2,c
  5163  0030B2  EF5D  F018         	goto	u6981
  5164  0030B6  EF5F  F018         	goto	u6980
  5165  0030BA                     u6981:
  5166  0030BA  EF69  F018         	goto	l5099
  5167  0030BE                     u6980:
  5168  0030BE                     l5095:
  5169  0030BE  0E00               	movlw	0
  5170  0030C0  6E1F               	movwf	?___fltol^0,c
  5171  0030C2  0E00               	movlw	0
  5172  0030C4  6E20               	movwf	(?___fltol+1)^0,c
  5173  0030C6  0E00               	movlw	0
  5174  0030C8  6E21               	movwf	(?___fltol+2)^0,c
  5175  0030CA  0E00               	movlw	0
  5176  0030CC  6E22               	movwf	(?___fltol+3)^0,c
  5177  0030CE  EFD6  F018         	goto	l382
  5178  0030D2                     l5099:
  5179  0030D2  C01F  F023         	movff	___fltol@f1,??___fltol
  5180  0030D6  C020  F024         	movff	___fltol@f1+1,??___fltol+1
  5181  0030DA  C021  F025         	movff	___fltol@f1+2,??___fltol+2
  5182  0030DE  C022  F026         	movff	___fltol@f1+3,??___fltol+3
  5183  0030E2  0E20               	movlw	32
  5184  0030E4  EF79  F018         	goto	u6990
  5185  0030E8                     u6995:
  5186  0030E8  90D8               	bcf	status,0,c
  5187  0030EA  3226               	rrcf	(??___fltol+3)^0,f,c
  5188  0030EC  3225               	rrcf	(??___fltol+2)^0,f,c
  5189  0030EE  3224               	rrcf	(??___fltol+1)^0,f,c
  5190  0030F0  3223               	rrcf	??___fltol^0,f,c
  5191  0030F2                     u6990:
  5192  0030F2  2EE8               	decfsz	wreg,f,c
  5193  0030F4  EF74  F018         	goto	u6995
  5194  0030F8  5023               	movf	??___fltol^0,w,c
  5195  0030FA  6E27               	movwf	___fltol@sign1^0,c
  5196  0030FC  8E21               	bsf	(___fltol@f1+2)^0,7,c
  5197  0030FE  0EFF               	movlw	255
  5198  003100  161F               	andwf	___fltol@f1^0,f,c
  5199  003102  0EFF               	movlw	255
  5200  003104  1620               	andwf	(___fltol@f1+1)^0,f,c
  5201  003106  0EFF               	movlw	255
  5202  003108  1621               	andwf	(___fltol@f1+2)^0,f,c
  5203  00310A  0E00               	movlw	0
  5204  00310C  1622               	andwf	(___fltol@f1+3)^0,f,c
  5205  00310E  0E96               	movlw	150
  5206  003110  5E28               	subwf	___fltol@exp1^0,f,c
  5207  003112  BE28               	btfsc	___fltol@exp1^0,7,c
  5208  003114  EF90  F018         	goto	u7000
  5209  003118  EF8E  F018         	goto	u7001
  5210  00311C                     u7001:
  5211  00311C  EFA6  F018         	goto	l5119
  5212  003120                     u7000:
  5213  003120  5028               	movf	___fltol@exp1^0,w,c
  5214  003122  0A80               	xorlw	128
  5215  003124  0F97               	addlw	151
  5216  003126  B0D8               	btfsc	status,0,c
  5217  003128  EF98  F018         	goto	u7011
  5218  00312C  EF9A  F018         	goto	u7010
  5219  003130                     u7011:
  5220  003130  EF9C  F018         	goto	l5115
  5221  003134                     u7010:
  5222  003134  EF5F  F018         	goto	l5095
  5223  003138                     l5115:
  5224  003138  90D8               	bcf	status,0,c
  5225  00313A  3222               	rrcf	(___fltol@f1+3)^0,f,c
  5226  00313C  3221               	rrcf	(___fltol@f1+2)^0,f,c
  5227  00313E  3220               	rrcf	(___fltol@f1+1)^0,f,c
  5228  003140  321F               	rrcf	___fltol@f1^0,f,c
  5229  003142  3E28               	incfsz	___fltol@exp1^0,f,c
  5230  003144  EF9C  F018         	goto	l5115
  5231  003148  EFBE  F018         	goto	l5129
  5232  00314C                     l5119:
  5233  00314C  0E1F               	movlw	31
  5234  00314E  6428               	cpfsgt	___fltol@exp1^0,c
  5235  003150  EFAC  F018         	goto	u7021
  5236  003154  EFAE  F018         	goto	u7020
  5237  003158                     u7021:
  5238  003158  EFB6  F018         	goto	l5127
  5239  00315C                     u7020:
  5240  00315C  EF5F  F018         	goto	l5095
  5241  003160                     l5125:
  5242  003160  90D8               	bcf	status,0,c
  5243  003162  361F               	rlcf	___fltol@f1^0,f,c
  5244  003164  3620               	rlcf	(___fltol@f1+1)^0,f,c
  5245  003166  3621               	rlcf	(___fltol@f1+2)^0,f,c
  5246  003168  3622               	rlcf	(___fltol@f1+3)^0,f,c
  5247  00316A  0628               	decf	___fltol@exp1^0,f,c
  5248  00316C                     l5127:
  5249  00316C  5028               	movf	___fltol@exp1^0,w,c
  5250  00316E  A4D8               	btfss	status,2,c
  5251  003170  EFBC  F018         	goto	u7031
  5252  003174  EFBE  F018         	goto	u7030
  5253  003178                     u7031:
  5254  003178  EFB0  F018         	goto	l5125
  5255  00317C                     u7030:
  5256  00317C                     l5129:
  5257  00317C  5027               	movf	___fltol@sign1^0,w,c
  5258  00317E  B4D8               	btfsc	status,2,c
  5259  003180  EFC4  F018         	goto	u7041
  5260  003184  EFC6  F018         	goto	u7040
  5261  003188                     u7041:
  5262  003188  EFCE  F018         	goto	l5133
  5263  00318C                     u7040:
  5264  00318C  1E22               	comf	(___fltol@f1+3)^0,f,c
  5265  00318E  1E21               	comf	(___fltol@f1+2)^0,f,c
  5266  003190  1E20               	comf	(___fltol@f1+1)^0,f,c
  5267  003192  6C1F               	negf	___fltol@f1^0,c
  5268  003194  0E00               	movlw	0
  5269  003196  2220               	addwfc	(___fltol@f1+1)^0,f,c
  5270  003198  2221               	addwfc	(___fltol@f1+2)^0,f,c
  5271  00319A  2222               	addwfc	(___fltol@f1+3)^0,f,c
  5272  00319C                     l5133:
  5273  00319C  C01F  F01F         	movff	___fltol@f1,?___fltol
  5274  0031A0  C020  F020         	movff	___fltol@f1+1,?___fltol+1
  5275  0031A4  C021  F021         	movff	___fltol@f1+2,?___fltol+2
  5276  0031A8  C022  F022         	movff	___fltol@f1+3,?___fltol+3
  5277  0031AC                     l382:
  5278  0031AC  0012               	return		;funcret
  5279  0031AE                     __end_of___fltol:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function ___flsub *****************
  5283 ;; Defined at:
  5284 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  b               4   13[BANK0 ] long 
  5287 ;;  a               4   17[BANK0 ] long 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  4   13[BANK0 ] long 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5299 ;;      Params:         0       8       0       0       0       0       0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5302 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5303 ;;Total ram usage:        8 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 5
  5306 ;; This function calls:
  5307 ;;		___fladd
  5308 ;; This function is called by:
  5309 ;;		_efgtoa
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text16
  5314  003F74                     __ptext16:
  5315                           	callstack 0
  5316  003F74                     ___flsub:
  5317                           	callstack 21
  5318  003F74  0E00               	movlw	0
  5319  003F76  0100               	movlb	0	; () banked
  5320  003F78  1B71               	xorwf	___flsub@a& (0+255),f,b
  5321  003F7A  0E00               	movlw	0
  5322  003F7C  1B72               	xorwf	(___flsub@a+1)& (0+255),f,b
  5323  003F7E  0E00               	movlw	0
  5324  003F80  1B73               	xorwf	(___flsub@a+2)& (0+255),f,b
  5325  003F82  0E80               	movlw	128
  5326  003F84  1B74               	xorwf	(___flsub@a+3)& (0+255),f,b
  5327  003F86                     
  5328                           ; BSR set to: 0
  5329  003F86  C06D  F01F         	movff	___flsub@b,___fladd@b
  5330  003F8A  C06E  F020         	movff	___flsub@b+1,___fladd@b+1
  5331  003F8E  C06F  F021         	movff	___flsub@b+2,___fladd@b+2
  5332  003F92  C070  F022         	movff	___flsub@b+3,___fladd@b+3
  5333  003F96  C071  F023         	movff	___flsub@a,___fladd@a
  5334  003F9A  C072  F024         	movff	___flsub@a+1,___fladd@a+1
  5335  003F9E  C073  F025         	movff	___flsub@a+2,___fladd@a+2
  5336  003FA2  C074  F026         	movff	___flsub@a+3,___fladd@a+3
  5337  003FA6  EC04  F00D         	call	___fladd	;wreg free
  5338  003FAA  C01F  F06D         	movff	?___fladd,?___flsub
  5339  003FAE  C020  F06E         	movff	?___fladd+1,?___flsub+1
  5340  003FB2  C021  F06F         	movff	?___fladd+2,?___flsub+2
  5341  003FB6  C022  F070         	movff	?___fladd+3,?___flsub+3
  5342  003FBA  0012               	return		;funcret
  5343  003FBC                     __end_of___flsub:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function ___fladd *****************
  5347 ;; Defined at:
  5348 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  b               4   30[COMRAM] long 
  5351 ;;  a               4   34[COMRAM] long 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  grs             1    3[BANK0 ] unsigned char 
  5354 ;;  bexp            1    2[BANK0 ] unsigned char 
  5355 ;;  aexp            1    1[BANK0 ] unsigned char 
  5356 ;;  signs           1    0[BANK0 ] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  4   30[COMRAM] unsigned char 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5366 ;;      Params:         8       0       0       0       0       0       0       0       0
  5367 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5368 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5369 ;;      Totals:        12       4       0       0       0       0       0       0       0
  5370 ;;Total ram usage:       16 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 4
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		___flsub
  5377 ;;		_efgtoa
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text17
  5382  001A08                     __ptext17:
  5383                           	callstack 0
  5384  001A08                     ___fladd:
  5385                           	callstack 21
  5386  001A08  5022               	movf	(___fladd@b+3)^0,w,c
  5387  001A0A  0B80               	andlw	128
  5388  001A0C  0100               	movlb	0	; () banked
  5389  001A0E  6F60               	movwf	___fladd@signs& (0+255),b
  5390  001A10  5022               	movf	(___fladd@b+3)^0,w,c
  5391  001A12  2422               	addwf	(___fladd@b+3)^0,w,c
  5392  001A14  6F62               	movwf	___fladd@bexp& (0+255),b
  5393  001A16                     
  5394                           ; BSR set to: 0
  5395  001A16  AE21               	btfss	(___fladd@b+2)^0,7,c
  5396  001A18  EF10  F00D         	goto	u5931
  5397  001A1C  EF12  F00D         	goto	u5930
  5398  001A20                     u5931:
  5399  001A20  EF13  F00D         	goto	l4479
  5400  001A24                     u5930:
  5401  001A24                     
  5402                           ; BSR set to: 0
  5403  001A24  8162               	bsf	___fladd@bexp& (0+255),0,b
  5404  001A26                     l4479:
  5405                           
  5406                           ; BSR set to: 0
  5407  001A26  5162               	movf	___fladd@bexp& (0+255),w,b
  5408  001A28  B4D8               	btfsc	status,2,c
  5409  001A2A  EF19  F00D         	goto	u5941
  5410  001A2E  EF1B  F00D         	goto	u5940
  5411  001A32                     u5941:
  5412  001A32  EF30  F00D         	goto	l4489
  5413  001A36                     u5940:
  5414  001A36                     
  5415                           ; BSR set to: 0
  5416  001A36  2962               	incf	___fladd@bexp& (0+255),w,b
  5417  001A38  A4D8               	btfss	status,2,c
  5418  001A3A  EF21  F00D         	goto	u5951
  5419  001A3E  EF23  F00D         	goto	u5950
  5420  001A42                     u5951:
  5421  001A42  EF2B  F00D         	goto	l4485
  5422  001A46                     u5950:
  5423  001A46                     
  5424                           ; BSR set to: 0
  5425  001A46  0E00               	movlw	0
  5426  001A48  6E1F               	movwf	___fladd@b^0,c
  5427  001A4A  0E00               	movlw	0
  5428  001A4C  6E20               	movwf	(___fladd@b+1)^0,c
  5429  001A4E  0E00               	movlw	0
  5430  001A50  6E21               	movwf	(___fladd@b+2)^0,c
  5431  001A52  0E00               	movlw	0
  5432  001A54  6E22               	movwf	(___fladd@b+3)^0,c
  5433  001A56                     l4485:
  5434                           
  5435                           ; BSR set to: 0
  5436  001A56  8E21               	bsf	(___fladd@b+2)^0,7,c
  5437  001A58                     
  5438                           ; BSR set to: 0
  5439  001A58  0E00               	movlw	0
  5440  001A5A  6E22               	movwf	(___fladd@b+3)^0,c
  5441  001A5C  EF38  F00D         	goto	l4491
  5442  001A60                     l4489:
  5443                           
  5444                           ; BSR set to: 0
  5445  001A60  0E00               	movlw	0
  5446  001A62  6E1F               	movwf	___fladd@b^0,c
  5447  001A64  0E00               	movlw	0
  5448  001A66  6E20               	movwf	(___fladd@b+1)^0,c
  5449  001A68  0E00               	movlw	0
  5450  001A6A  6E21               	movwf	(___fladd@b+2)^0,c
  5451  001A6C  0E00               	movlw	0
  5452  001A6E  6E22               	movwf	(___fladd@b+3)^0,c
  5453  001A70                     l4491:
  5454                           
  5455                           ; BSR set to: 0
  5456  001A70  5026               	movf	(___fladd@a+3)^0,w,c
  5457  001A72  0B80               	andlw	128
  5458  001A74  6F61               	movwf	___fladd@aexp& (0+255),b
  5459  001A76                     
  5460                           ; BSR set to: 0
  5461  001A76  5160               	movf	___fladd@signs& (0+255),w,b
  5462  001A78  1961               	xorwf	___fladd@aexp& (0+255),w,b
  5463  001A7A  B4D8               	btfsc	status,2,c
  5464  001A7C  EF42  F00D         	goto	u5961
  5465  001A80  EF44  F00D         	goto	u5960
  5466  001A84                     u5961:
  5467  001A84  EF45  F00D         	goto	l4497
  5468  001A88                     u5960:
  5469  001A88                     
  5470                           ; BSR set to: 0
  5471  001A88  8D60               	bsf	___fladd@signs& (0+255),6,b
  5472  001A8A                     l4497:
  5473                           
  5474                           ; BSR set to: 0
  5475  001A8A  5026               	movf	(___fladd@a+3)^0,w,c
  5476  001A8C  2426               	addwf	(___fladd@a+3)^0,w,c
  5477  001A8E  6F61               	movwf	___fladd@aexp& (0+255),b
  5478  001A90                     
  5479                           ; BSR set to: 0
  5480  001A90  AE25               	btfss	(___fladd@a+2)^0,7,c
  5481  001A92  EF4D  F00D         	goto	u5971
  5482  001A96  EF4F  F00D         	goto	u5970
  5483  001A9A                     u5971:
  5484  001A9A  EF50  F00D         	goto	l4503
  5485  001A9E                     u5970:
  5486  001A9E                     
  5487                           ; BSR set to: 0
  5488  001A9E  8161               	bsf	___fladd@aexp& (0+255),0,b
  5489  001AA0                     l4503:
  5490                           
  5491                           ; BSR set to: 0
  5492  001AA0  5161               	movf	___fladd@aexp& (0+255),w,b
  5493  001AA2  B4D8               	btfsc	status,2,c
  5494  001AA4  EF56  F00D         	goto	u5981
  5495  001AA8  EF58  F00D         	goto	u5980
  5496  001AAC                     u5981:
  5497  001AAC  EF6D  F00D         	goto	l4513
  5498  001AB0                     u5980:
  5499  001AB0                     
  5500                           ; BSR set to: 0
  5501  001AB0  2961               	incf	___fladd@aexp& (0+255),w,b
  5502  001AB2  A4D8               	btfss	status,2,c
  5503  001AB4  EF5E  F00D         	goto	u5991
  5504  001AB8  EF60  F00D         	goto	u5990
  5505  001ABC                     u5991:
  5506  001ABC  EF68  F00D         	goto	l4509
  5507  001AC0                     u5990:
  5508  001AC0                     
  5509                           ; BSR set to: 0
  5510  001AC0  0E00               	movlw	0
  5511  001AC2  6E23               	movwf	___fladd@a^0,c
  5512  001AC4  0E00               	movlw	0
  5513  001AC6  6E24               	movwf	(___fladd@a+1)^0,c
  5514  001AC8  0E00               	movlw	0
  5515  001ACA  6E25               	movwf	(___fladd@a+2)^0,c
  5516  001ACC  0E00               	movlw	0
  5517  001ACE  6E26               	movwf	(___fladd@a+3)^0,c
  5518  001AD0                     l4509:
  5519                           
  5520                           ; BSR set to: 0
  5521  001AD0  8E25               	bsf	(___fladd@a+2)^0,7,c
  5522  001AD2                     
  5523                           ; BSR set to: 0
  5524  001AD2  0E00               	movlw	0
  5525  001AD4  6E26               	movwf	(___fladd@a+3)^0,c
  5526  001AD6  EF75  F00D         	goto	l4515
  5527  001ADA                     l4513:
  5528                           
  5529                           ; BSR set to: 0
  5530  001ADA  0E00               	movlw	0
  5531  001ADC  6E23               	movwf	___fladd@a^0,c
  5532  001ADE  0E00               	movlw	0
  5533  001AE0  6E24               	movwf	(___fladd@a+1)^0,c
  5534  001AE2  0E00               	movlw	0
  5535  001AE4  6E25               	movwf	(___fladd@a+2)^0,c
  5536  001AE6  0E00               	movlw	0
  5537  001AE8  6E26               	movwf	(___fladd@a+3)^0,c
  5538  001AEA                     l4515:
  5539                           
  5540                           ; BSR set to: 0
  5541  001AEA  5162               	movf	___fladd@bexp& (0+255),w,b
  5542  001AEC  5D61               	subwf	___fladd@aexp& (0+255),w,b
  5543  001AEE  B0D8               	btfsc	status,0,c
  5544  001AF0  EF7C  F00D         	goto	u6001
  5545  001AF4  EF7E  F00D         	goto	u6000
  5546  001AF8                     u6001:
  5547  001AF8  EFA5  F00D         	goto	l4551
  5548  001AFC                     u6000:
  5549  001AFC                     
  5550                           ; BSR set to: 0
  5551  001AFC  AD60               	btfss	___fladd@signs& (0+255),6,b
  5552  001AFE  EF83  F00D         	goto	u6011
  5553  001B02  EF85  F00D         	goto	u6010
  5554  001B06                     u6011:
  5555  001B06  EF87  F00D         	goto	l4521
  5556  001B0A                     u6010:
  5557  001B0A                     
  5558                           ; BSR set to: 0
  5559  001B0A  0E80               	movlw	128
  5560  001B0C  1B60               	xorwf	___fladd@signs& (0+255),f,b
  5561  001B0E                     l4521:
  5562                           
  5563                           ; BSR set to: 0
  5564  001B0E  C062  F063         	movff	___fladd@bexp,___fladd@grs
  5565  001B12                     
  5566                           ; BSR set to: 0
  5567  001B12  C061  F062         	movff	___fladd@aexp,___fladd@bexp
  5568  001B16                     
  5569                           ; BSR set to: 0
  5570  001B16  C063  F061         	movff	___fladd@grs,___fladd@aexp
  5571  001B1A                     
  5572                           ; BSR set to: 0
  5573  001B1A  C01F  F063         	movff	___fladd@b,___fladd@grs
  5574  001B1E                     
  5575                           ; BSR set to: 0
  5576  001B1E  C023  F01F         	movff	___fladd@a,___fladd@b
  5577  001B22                     
  5578                           ; BSR set to: 0
  5579  001B22  C063  F023         	movff	___fladd@grs,___fladd@a
  5580  001B26                     
  5581                           ; BSR set to: 0
  5582  001B26  C020  F063         	movff	___fladd@b+1,___fladd@grs
  5583  001B2A                     
  5584                           ; BSR set to: 0
  5585  001B2A  C024  F020         	movff	___fladd@a+1,___fladd@b+1
  5586  001B2E                     
  5587                           ; BSR set to: 0
  5588  001B2E  C063  F024         	movff	___fladd@grs,___fladd@a+1
  5589  001B32                     
  5590                           ; BSR set to: 0
  5591  001B32  C021  F063         	movff	___fladd@b+2,___fladd@grs
  5592  001B36                     
  5593                           ; BSR set to: 0
  5594  001B36  C025  F021         	movff	___fladd@a+2,___fladd@b+2
  5595  001B3A                     
  5596                           ; BSR set to: 0
  5597  001B3A  C063  F025         	movff	___fladd@grs,___fladd@a+2
  5598  001B3E                     
  5599                           ; BSR set to: 0
  5600  001B3E  C022  F063         	movff	___fladd@b+3,___fladd@grs
  5601  001B42                     
  5602                           ; BSR set to: 0
  5603  001B42  C026  F022         	movff	___fladd@a+3,___fladd@b+3
  5604  001B46                     
  5605                           ; BSR set to: 0
  5606  001B46  C063  F026         	movff	___fladd@grs,___fladd@a+3
  5607  001B4A                     l4551:
  5608                           
  5609                           ; BSR set to: 0
  5610  001B4A  0E00               	movlw	0
  5611  001B4C  6F63               	movwf	___fladd@grs& (0+255),b
  5612  001B4E                     
  5613                           ; BSR set to: 0
  5614  001B4E  5162               	movf	___fladd@bexp& (0+255),w,b
  5615  001B50  C061  F027         	movff	___fladd@aexp,??___fladd
  5616  001B54  6A28               	clrf	(??___fladd+1)^0,c
  5617  001B56  5E27               	subwf	??___fladd^0,f,c
  5618  001B58  0E00               	movlw	0
  5619  001B5A  5A28               	subwfb	(??___fladd+1)^0,f,c
  5620  001B5C  BE28               	btfsc	(??___fladd+1)^0,7,c
  5621  001B5E  EFBA  F00D         	goto	u6021
  5622  001B62  5028               	movf	(??___fladd+1)^0,w,c
  5623  001B64  E109               	bnz	u6020
  5624  001B66  0E1A               	movlw	26
  5625  001B68  5C27               	subwf	??___fladd^0,w,c
  5626  001B6A  A0D8               	btfss	status,0,c
  5627  001B6C  EFBA  F00D         	goto	u6021
  5628  001B70  EFBC  F00D         	goto	u6020
  5629  001B74                     u6021:
  5630  001B74  EFF3  F00D         	goto	l614
  5631  001B78                     u6020:
  5632  001B78                     
  5633                           ; BSR set to: 0
  5634  001B78  501F               	movf	___fladd@b^0,w,c
  5635  001B7A  1020               	iorwf	(___fladd@b+1)^0,w,c
  5636  001B7C  1021               	iorwf	(___fladd@b+2)^0,w,c
  5637  001B7E  1022               	iorwf	(___fladd@b+3)^0,w,c
  5638  001B80  A4D8               	btfss	status,2,c
  5639  001B82  EFC5  F00D         	goto	u6031
  5640  001B86  EFC8  F00D         	goto	u6030
  5641  001B8A                     u6031:
  5642  001B8A  0E01               	movlw	1
  5643  001B8C  EFC9  F00D         	goto	u6040
  5644  001B90                     u6030:
  5645  001B90  0E00               	movlw	0
  5646  001B92                     u6040:
  5647  001B92  6F63               	movwf	___fladd@grs& (0+255),b
  5648  001B94                     
  5649                           ; BSR set to: 0
  5650  001B94  0E00               	movlw	0
  5651  001B96  6E1F               	movwf	___fladd@b^0,c
  5652  001B98  0E00               	movlw	0
  5653  001B9A  6E20               	movwf	(___fladd@b+1)^0,c
  5654  001B9C  0E00               	movlw	0
  5655  001B9E  6E21               	movwf	(___fladd@b+2)^0,c
  5656  001BA0  0E00               	movlw	0
  5657  001BA2  6E22               	movwf	(___fladd@b+3)^0,c
  5658  001BA4                     
  5659                           ; BSR set to: 0
  5660  001BA4  C061  F062         	movff	___fladd@aexp,___fladd@bexp
  5661  001BA8  EFFC  F00D         	goto	l613
  5662  001BAC                     l615:
  5663                           
  5664                           ; BSR set to: 0
  5665  001BAC  A163               	btfss	___fladd@grs& (0+255),0,b
  5666  001BAE  EFDB  F00D         	goto	u6051
  5667  001BB2  EFDD  F00D         	goto	u6050
  5668  001BB6                     u6051:
  5669  001BB6  EFE3  F00D         	goto	l4563
  5670  001BBA                     u6050:
  5671  001BBA                     
  5672                           ; BSR set to: 0
  5673  001BBA  90D8               	bcf	status,0,c
  5674  001BBC  3163               	rrcf	___fladd@grs& (0+255),w,b
  5675  001BBE  0901               	iorlw	1
  5676  001BC0  6F63               	movwf	___fladd@grs& (0+255),b
  5677  001BC2  EFE5  F00D         	goto	l4565
  5678  001BC6                     l4563:
  5679                           
  5680                           ; BSR set to: 0
  5681  001BC6  90D8               	bcf	status,0,c
  5682  001BC8  3363               	rrcf	___fladd@grs& (0+255),f,b
  5683  001BCA                     l4565:
  5684                           
  5685                           ; BSR set to: 0
  5686  001BCA  A01F               	btfss	___fladd@b^0,0,c
  5687  001BCC  EFEA  F00D         	goto	u6061
  5688  001BD0  EFEC  F00D         	goto	u6060
  5689  001BD4                     u6061:
  5690  001BD4  EFED  F00D         	goto	l4569
  5691  001BD8                     u6060:
  5692  001BD8                     
  5693                           ; BSR set to: 0
  5694  001BD8  8F63               	bsf	___fladd@grs& (0+255),7,b
  5695  001BDA                     l4569:
  5696                           
  5697                           ; BSR set to: 0
  5698  001BDA  3422               	rlcf	(___fladd@b+3)^0,w,c
  5699  001BDC  3222               	rrcf	(___fladd@b+3)^0,f,c
  5700  001BDE  3221               	rrcf	(___fladd@b+2)^0,f,c
  5701  001BE0  3220               	rrcf	(___fladd@b+1)^0,f,c
  5702  001BE2  321F               	rrcf	___fladd@b^0,f,c
  5703  001BE4                     
  5704                           ; BSR set to: 0
  5705  001BE4  2B62               	incf	___fladd@bexp& (0+255),f,b
  5706  001BE6                     l614:
  5707                           
  5708                           ; BSR set to: 0
  5709  001BE6  5161               	movf	___fladd@aexp& (0+255),w,b
  5710  001BE8  5D62               	subwf	___fladd@bexp& (0+255),w,b
  5711  001BEA  A0D8               	btfss	status,0,c
  5712  001BEC  EFFA  F00D         	goto	u6071
  5713  001BF0  EFFC  F00D         	goto	u6070
  5714  001BF4                     u6071:
  5715  001BF4  EFD6  F00D         	goto	l615
  5716  001BF8                     u6070:
  5717  001BF8                     l613:
  5718                           
  5719                           ; BSR set to: 0
  5720  001BF8  BD60               	btfsc	___fladd@signs& (0+255),6,b
  5721  001BFA  EF01  F00E         	goto	u6081
  5722  001BFE  EF03  F00E         	goto	u6080
  5723  001C02                     u6081:
  5724  001C02  EF43  F00E         	goto	l4597
  5725  001C06                     u6080:
  5726  001C06                     
  5727                           ; BSR set to: 0
  5728  001C06  5162               	movf	___fladd@bexp& (0+255),w,b
  5729  001C08  A4D8               	btfss	status,2,c
  5730  001C0A  EF09  F00E         	goto	u6091
  5731  001C0E  EF0B  F00E         	goto	u6090
  5732  001C12                     u6091:
  5733  001C12  EF15  F00E         	goto	l4579
  5734  001C16                     u6090:
  5735  001C16                     
  5736                           ; BSR set to: 0
  5737  001C16  0E00               	movlw	0
  5738  001C18  6E1F               	movwf	?___fladd^0,c
  5739  001C1A  0E00               	movlw	0
  5740  001C1C  6E20               	movwf	(?___fladd+1)^0,c
  5741  001C1E  0E00               	movlw	0
  5742  001C20  6E21               	movwf	(?___fladd+2)^0,c
  5743  001C22  0E00               	movlw	0
  5744  001C24  6E22               	movwf	(?___fladd+3)^0,c
  5745  001C26  EF64  F00F         	goto	l622
  5746  001C2A                     l4579:
  5747                           
  5748                           ; BSR set to: 0
  5749  001C2A  5023               	movf	___fladd@a^0,w,c
  5750  001C2C  261F               	addwf	___fladd@b^0,f,c
  5751  001C2E  5024               	movf	(___fladd@a+1)^0,w,c
  5752  001C30  2220               	addwfc	(___fladd@b+1)^0,f,c
  5753  001C32  5025               	movf	(___fladd@a+2)^0,w,c
  5754  001C34  2221               	addwfc	(___fladd@b+2)^0,f,c
  5755  001C36  5026               	movf	(___fladd@a+3)^0,w,c
  5756  001C38  2222               	addwfc	(___fladd@b+3)^0,f,c
  5757  001C3A                     
  5758                           ; BSR set to: 0
  5759  001C3A  A022               	btfss	(___fladd@b+3)^0,0,c
  5760  001C3C  EF22  F00E         	goto	u6101
  5761  001C40  EF24  F00E         	goto	u6100
  5762  001C44                     u6101:
  5763  001C44  EFD0  F00E         	goto	l4633
  5764  001C48                     u6100:
  5765  001C48                     
  5766                           ; BSR set to: 0
  5767  001C48  A163               	btfss	___fladd@grs& (0+255),0,b
  5768  001C4A  EF29  F00E         	goto	u6111
  5769  001C4E  EF2B  F00E         	goto	u6110
  5770  001C52                     u6111:
  5771  001C52  EF31  F00E         	goto	l4587
  5772  001C56                     u6110:
  5773  001C56                     
  5774                           ; BSR set to: 0
  5775  001C56  90D8               	bcf	status,0,c
  5776  001C58  3163               	rrcf	___fladd@grs& (0+255),w,b
  5777  001C5A  0901               	iorlw	1
  5778  001C5C  6F63               	movwf	___fladd@grs& (0+255),b
  5779  001C5E  EF33  F00E         	goto	l4589
  5780  001C62                     l4587:
  5781                           
  5782                           ; BSR set to: 0
  5783  001C62  90D8               	bcf	status,0,c
  5784  001C64  3363               	rrcf	___fladd@grs& (0+255),f,b
  5785  001C66                     l4589:
  5786                           
  5787                           ; BSR set to: 0
  5788  001C66  A01F               	btfss	___fladd@b^0,0,c
  5789  001C68  EF38  F00E         	goto	u6121
  5790  001C6C  EF3A  F00E         	goto	u6120
  5791  001C70                     u6121:
  5792  001C70  EF3B  F00E         	goto	l4593
  5793  001C74                     u6120:
  5794  001C74                     
  5795                           ; BSR set to: 0
  5796  001C74  8F63               	bsf	___fladd@grs& (0+255),7,b
  5797  001C76                     l4593:
  5798                           
  5799                           ; BSR set to: 0
  5800  001C76  3422               	rlcf	(___fladd@b+3)^0,w,c
  5801  001C78  3222               	rrcf	(___fladd@b+3)^0,f,c
  5802  001C7A  3221               	rrcf	(___fladd@b+2)^0,f,c
  5803  001C7C  3220               	rrcf	(___fladd@b+1)^0,f,c
  5804  001C7E  321F               	rrcf	___fladd@b^0,f,c
  5805  001C80                     
  5806                           ; BSR set to: 0
  5807  001C80  2B62               	incf	___fladd@bexp& (0+255),f,b
  5808  001C82  EFD0  F00E         	goto	l4633
  5809  001C86                     l4597:
  5810                           
  5811                           ; BSR set to: 0
  5812  001C86  5023               	movf	___fladd@a^0,w,c
  5813  001C88  5C1F               	subwf	___fladd@b^0,w,c
  5814  001C8A  5024               	movf	(___fladd@a+1)^0,w,c
  5815  001C8C  5820               	subwfb	(___fladd@b+1)^0,w,c
  5816  001C8E  5025               	movf	(___fladd@a+2)^0,w,c
  5817  001C90  5821               	subwfb	(___fladd@b+2)^0,w,c
  5818  001C92  5022               	movf	(___fladd@b+3)^0,w,c
  5819  001C94  0A80               	xorlw	128
  5820  001C96  6E27               	movwf	??___fladd^0,c
  5821  001C98  5026               	movf	(___fladd@a+3)^0,w,c
  5822  001C9A  0A80               	xorlw	128
  5823  001C9C  5827               	subwfb	??___fladd^0,w,c
  5824  001C9E  B0D8               	btfsc	status,0,c
  5825  001CA0  EF54  F00E         	goto	u6131
  5826  001CA4  EF56  F00E         	goto	u6130
  5827  001CA8                     u6131:
  5828  001CA8  EF81  F00E         	goto	l4607
  5829  001CAC                     u6130:
  5830  001CAC                     
  5831                           ; BSR set to: 0
  5832  001CAC  501F               	movf	___fladd@b^0,w,c
  5833  001CAE  5C23               	subwf	___fladd@a^0,w,c
  5834  001CB0  6E27               	movwf	??___fladd^0,c
  5835  001CB2  5020               	movf	(___fladd@b+1)^0,w,c
  5836  001CB4  5824               	subwfb	(___fladd@a+1)^0,w,c
  5837  001CB6  6E28               	movwf	(??___fladd+1)^0,c
  5838  001CB8  5021               	movf	(___fladd@b+2)^0,w,c
  5839  001CBA  5825               	subwfb	(___fladd@a+2)^0,w,c
  5840  001CBC  6E29               	movwf	(??___fladd+2)^0,c
  5841  001CBE  5022               	movf	(___fladd@b+3)^0,w,c
  5842  001CC0  5826               	subwfb	(___fladd@a+3)^0,w,c
  5843  001CC2  6E2A               	movwf	(??___fladd+3)^0,c
  5844  001CC4  0EFF               	movlw	255
  5845  001CC6  2427               	addwf	??___fladd^0,w,c
  5846  001CC8  6E1F               	movwf	___fladd@b^0,c
  5847  001CCA  0EFF               	movlw	255
  5848  001CCC  2028               	addwfc	(??___fladd+1)^0,w,c
  5849  001CCE  6E20               	movwf	(___fladd@b+1)^0,c
  5850  001CD0  0EFF               	movlw	255
  5851  001CD2  2029               	addwfc	(??___fladd+2)^0,w,c
  5852  001CD4  6E21               	movwf	(___fladd@b+2)^0,c
  5853  001CD6  0EFF               	movlw	255
  5854  001CD8  202A               	addwfc	(??___fladd+3)^0,w,c
  5855  001CDA  6E22               	movwf	(___fladd@b+3)^0,c
  5856  001CDC  0E80               	movlw	128
  5857  001CDE  1B60               	xorwf	___fladd@signs& (0+255),f,b
  5858  001CE0                     
  5859                           ; BSR set to: 0
  5860  001CE0  6D63               	negf	___fladd@grs& (0+255),b
  5861  001CE2                     
  5862                           ; BSR set to: 0
  5863  001CE2  5163               	movf	___fladd@grs& (0+255),w,b
  5864  001CE4  A4D8               	btfss	status,2,c
  5865  001CE6  EF77  F00E         	goto	u6141
  5866  001CEA  EF79  F00E         	goto	u6140
  5867  001CEE                     u6141:
  5868  001CEE  EF89  F00E         	goto	l630
  5869  001CF2                     u6140:
  5870  001CF2                     
  5871                           ; BSR set to: 0
  5872  001CF2  0E01               	movlw	1
  5873  001CF4  261F               	addwf	___fladd@b^0,f,c
  5874  001CF6  0E00               	movlw	0
  5875  001CF8  2220               	addwfc	(___fladd@b+1)^0,f,c
  5876  001CFA  2221               	addwfc	(___fladd@b+2)^0,f,c
  5877  001CFC  2222               	addwfc	(___fladd@b+3)^0,f,c
  5878  001CFE  EF89  F00E         	goto	l630
  5879  001D02                     l4607:
  5880                           
  5881                           ; BSR set to: 0
  5882  001D02  5023               	movf	___fladd@a^0,w,c
  5883  001D04  5E1F               	subwf	___fladd@b^0,f,c
  5884  001D06  5024               	movf	(___fladd@a+1)^0,w,c
  5885  001D08  5A20               	subwfb	(___fladd@b+1)^0,f,c
  5886  001D0A  5025               	movf	(___fladd@a+2)^0,w,c
  5887  001D0C  5A21               	subwfb	(___fladd@b+2)^0,f,c
  5888  001D0E  5026               	movf	(___fladd@a+3)^0,w,c
  5889  001D10  5A22               	subwfb	(___fladd@b+3)^0,f,c
  5890  001D12                     l630:
  5891                           
  5892                           ; BSR set to: 0
  5893  001D12  501F               	movf	___fladd@b^0,w,c
  5894  001D14  1020               	iorwf	(___fladd@b+1)^0,w,c
  5895  001D16  1021               	iorwf	(___fladd@b+2)^0,w,c
  5896  001D18  1022               	iorwf	(___fladd@b+3)^0,w,c
  5897  001D1A  A4D8               	btfss	status,2,c
  5898  001D1C  EF92  F00E         	goto	u6151
  5899  001D20  EF94  F00E         	goto	u6150
  5900  001D24                     u6151:
  5901  001D24  EFC9  F00E         	goto	l4631
  5902  001D28                     u6150:
  5903  001D28                     
  5904                           ; BSR set to: 0
  5905  001D28  5163               	movf	___fladd@grs& (0+255),w,b
  5906  001D2A  A4D8               	btfss	status,2,c
  5907  001D2C  EF9A  F00E         	goto	u6161
  5908  001D30  EF9C  F00E         	goto	u6160
  5909  001D34                     u6161:
  5910  001D34  EFC9  F00E         	goto	l4631
  5911  001D38                     u6160:
  5912  001D38                     
  5913                           ; BSR set to: 0
  5914  001D38  0E00               	movlw	0
  5915  001D3A  6E1F               	movwf	?___fladd^0,c
  5916  001D3C  0E00               	movlw	0
  5917  001D3E  6E20               	movwf	(?___fladd+1)^0,c
  5918  001D40  0E00               	movlw	0
  5919  001D42  6E21               	movwf	(?___fladd+2)^0,c
  5920  001D44  0E00               	movlw	0
  5921  001D46  6E22               	movwf	(?___fladd+3)^0,c
  5922  001D48  EF64  F00F         	goto	l622
  5923  001D4C                     l4615:
  5924                           
  5925                           ; BSR set to: 0
  5926  001D4C  90D8               	bcf	status,0,c
  5927  001D4E  361F               	rlcf	___fladd@b^0,f,c
  5928  001D50  3620               	rlcf	(___fladd@b+1)^0,f,c
  5929  001D52  3621               	rlcf	(___fladd@b+2)^0,f,c
  5930  001D54  3622               	rlcf	(___fladd@b+3)^0,f,c
  5931  001D56                     
  5932                           ; BSR set to: 0
  5933  001D56  AF63               	btfss	___fladd@grs& (0+255),7,b
  5934  001D58  EFB0  F00E         	goto	u6171
  5935  001D5C  EFB2  F00E         	goto	u6170
  5936  001D60                     u6171:
  5937  001D60  EFB3  F00E         	goto	l4621
  5938  001D64                     u6170:
  5939  001D64                     
  5940                           ; BSR set to: 0
  5941  001D64  801F               	bsf	___fladd@b^0,0,c
  5942  001D66                     l4621:
  5943                           
  5944                           ; BSR set to: 0
  5945  001D66  A163               	btfss	___fladd@grs& (0+255),0,b
  5946  001D68  EFB8  F00E         	goto	u6181
  5947  001D6C  EFBA  F00E         	goto	u6180
  5948  001D70                     u6181:
  5949  001D70  EFBE  F00E         	goto	l4625
  5950  001D74                     u6180:
  5951  001D74                     
  5952                           ; BSR set to: 0
  5953  001D74  80D8               	bsf	status,0,c
  5954  001D76  3763               	rlcf	___fladd@grs& (0+255),f,b
  5955  001D78  EFC0  F00E         	goto	l4627
  5956  001D7C                     l4625:
  5957                           
  5958                           ; BSR set to: 0
  5959  001D7C  90D8               	bcf	status,0,c
  5960  001D7E  3763               	rlcf	___fladd@grs& (0+255),f,b
  5961  001D80                     l4627:
  5962                           
  5963                           ; BSR set to: 0
  5964  001D80  5162               	movf	___fladd@bexp& (0+255),w,b
  5965  001D82  B4D8               	btfsc	status,2,c
  5966  001D84  EFC6  F00E         	goto	u6191
  5967  001D88  EFC8  F00E         	goto	u6190
  5968  001D8C                     u6191:
  5969  001D8C  EFC9  F00E         	goto	l4631
  5970  001D90                     u6190:
  5971  001D90                     
  5972                           ; BSR set to: 0
  5973  001D90  0762               	decf	___fladd@bexp& (0+255),f,b
  5974  001D92                     l4631:
  5975                           
  5976                           ; BSR set to: 0
  5977  001D92  AE21               	btfss	(___fladd@b+2)^0,7,c
  5978  001D94  EFCE  F00E         	goto	u6201
  5979  001D98  EFD0  F00E         	goto	u6200
  5980  001D9C                     u6201:
  5981  001D9C  EFA6  F00E         	goto	l4615
  5982  001DA0                     u6200:
  5983  001DA0                     l4633:
  5984                           
  5985                           ; BSR set to: 0
  5986  001DA0  0E00               	movlw	0
  5987  001DA2  6F61               	movwf	___fladd@aexp& (0+255),b
  5988  001DA4                     
  5989                           ; BSR set to: 0
  5990  001DA4  AF63               	btfss	___fladd@grs& (0+255),7,b
  5991  001DA6  EFD7  F00E         	goto	u6211
  5992  001DAA  EFD9  F00E         	goto	u6210
  5993  001DAE                     u6211:
  5994  001DAE  EFF1  F00E         	goto	l639
  5995  001DB2                     u6210:
  5996  001DB2                     
  5997                           ; BSR set to: 0
  5998  001DB2  C063  F027         	movff	___fladd@grs,??___fladd
  5999  001DB6  0E7F               	movlw	127
  6000  001DB8  1627               	andwf	??___fladd^0,f,c
  6001  001DBA  B4D8               	btfsc	status,2,c
  6002  001DBC  EFE2  F00E         	goto	u6221
  6003  001DC0  EFE4  F00E         	goto	u6220
  6004  001DC4                     u6221:
  6005  001DC4  EFE8  F00E         	goto	l640
  6006  001DC8                     u6220:
  6007  001DC8                     l4639:
  6008                           
  6009                           ; BSR set to: 0
  6010  001DC8  0E01               	movlw	1
  6011  001DCA  6F61               	movwf	___fladd@aexp& (0+255),b
  6012  001DCC  EFF1  F00E         	goto	l639
  6013  001DD0                     l640:
  6014                           
  6015                           ; BSR set to: 0
  6016  001DD0  A01F               	btfss	___fladd@b^0,0,c
  6017  001DD2  EFED  F00E         	goto	u6231
  6018  001DD6  EFEF  F00E         	goto	u6230
  6019  001DDA                     u6231:
  6020  001DDA  EFF1  F00E         	goto	l639
  6021  001DDE                     u6230:
  6022  001DDE  EFE4  F00E         	goto	l4639
  6023  001DE2                     l639:
  6024                           
  6025                           ; BSR set to: 0
  6026  001DE2  5161               	movf	___fladd@aexp& (0+255),w,b
  6027  001DE4  B4D8               	btfsc	status,2,c
  6028  001DE6  EFF7  F00E         	goto	u6241
  6029  001DEA  EFF9  F00E         	goto	u6240
  6030  001DEE                     u6241:
  6031  001DEE  EF24  F00F         	goto	l4651
  6032  001DF2                     u6240:
  6033  001DF2                     
  6034                           ; BSR set to: 0
  6035  001DF2  0E01               	movlw	1
  6036  001DF4  261F               	addwf	___fladd@b^0,f,c
  6037  001DF6  0E00               	movlw	0
  6038  001DF8  2220               	addwfc	(___fladd@b+1)^0,f,c
  6039  001DFA  2221               	addwfc	(___fladd@b+2)^0,f,c
  6040  001DFC  2222               	addwfc	(___fladd@b+3)^0,f,c
  6041  001DFE                     
  6042                           ; BSR set to: 0
  6043  001DFE  A022               	btfss	(___fladd@b+3)^0,0,c
  6044  001E00  EF04  F00F         	goto	u6251
  6045  001E04  EF06  F00F         	goto	u6250
  6046  001E08                     u6251:
  6047  001E08  EF24  F00F         	goto	l4651
  6048  001E0C                     u6250:
  6049  001E0C                     
  6050                           ; BSR set to: 0
  6051  001E0C  C01F  F027         	movff	___fladd@b,??___fladd
  6052  001E10  C020  F028         	movff	___fladd@b+1,??___fladd+1
  6053  001E14  C021  F029         	movff	___fladd@b+2,??___fladd+2
  6054  001E18  C022  F02A         	movff	___fladd@b+3,??___fladd+3
  6055  001E1C  342A               	rlcf	(??___fladd+3)^0,w,c
  6056  001E1E  322A               	rrcf	(??___fladd+3)^0,f,c
  6057  001E20  3229               	rrcf	(??___fladd+2)^0,f,c
  6058  001E22  3228               	rrcf	(??___fladd+1)^0,f,c
  6059  001E24  3227               	rrcf	??___fladd^0,f,c
  6060  001E26  C027  F01F         	movff	??___fladd,___fladd@b
  6061  001E2A  C028  F020         	movff	??___fladd+1,___fladd@b+1
  6062  001E2E  C029  F021         	movff	??___fladd+2,___fladd@b+2
  6063  001E32  C02A  F022         	movff	??___fladd+3,___fladd@b+3
  6064  001E36  2962               	incf	___fladd@bexp& (0+255),w,b
  6065  001E38  B4D8               	btfsc	status,2,c
  6066  001E3A  EF21  F00F         	goto	u6261
  6067  001E3E  EF23  F00F         	goto	u6260
  6068  001E42                     u6261:
  6069  001E42  EF24  F00F         	goto	l4651
  6070  001E46                     u6260:
  6071  001E46                     
  6072                           ; BSR set to: 0
  6073  001E46  2B62               	incf	___fladd@bexp& (0+255),f,b
  6074  001E48                     l4651:
  6075                           
  6076                           ; BSR set to: 0
  6077  001E48  2962               	incf	___fladd@bexp& (0+255),w,b
  6078  001E4A  B4D8               	btfsc	status,2,c
  6079  001E4C  EF2A  F00F         	goto	u6271
  6080  001E50  EF2C  F00F         	goto	u6270
  6081  001E54                     u6271:
  6082  001E54  EF34  F00F         	goto	l4655
  6083  001E58                     u6270:
  6084  001E58                     
  6085                           ; BSR set to: 0
  6086  001E58  5162               	movf	___fladd@bexp& (0+255),w,b
  6087  001E5A  A4D8               	btfss	status,2,c
  6088  001E5C  EF32  F00F         	goto	u6281
  6089  001E60  EF34  F00F         	goto	u6280
  6090  001E64                     u6281:
  6091  001E64  EF46  F00F         	goto	l4659
  6092  001E68                     u6280:
  6093  001E68                     l4655:
  6094                           
  6095                           ; BSR set to: 0
  6096  001E68  0E00               	movlw	0
  6097  001E6A  6E1F               	movwf	___fladd@b^0,c
  6098  001E6C  0E00               	movlw	0
  6099  001E6E  6E20               	movwf	(___fladd@b+1)^0,c
  6100  001E70  0E00               	movlw	0
  6101  001E72  6E21               	movwf	(___fladd@b+2)^0,c
  6102  001E74  0E00               	movlw	0
  6103  001E76  6E22               	movwf	(___fladd@b+3)^0,c
  6104  001E78  5162               	movf	___fladd@bexp& (0+255),w,b
  6105  001E7A  A4D8               	btfss	status,2,c
  6106  001E7C  EF42  F00F         	goto	u6291
  6107  001E80  EF44  F00F         	goto	u6290
  6108  001E84                     u6291:
  6109  001E84  EF46  F00F         	goto	l4659
  6110  001E88                     u6290:
  6111  001E88                     
  6112                           ; BSR set to: 0
  6113  001E88  0E00               	movlw	0
  6114  001E8A  6F60               	movwf	___fladd@signs& (0+255),b
  6115  001E8C                     l4659:
  6116                           
  6117                           ; BSR set to: 0
  6118  001E8C  A162               	btfss	___fladd@bexp& (0+255),0,b
  6119  001E8E  EF4B  F00F         	goto	u6301
  6120  001E92  EF4D  F00F         	goto	u6300
  6121  001E96                     u6301:
  6122  001E96  EF50  F00F         	goto	l4663
  6123  001E9A                     u6300:
  6124  001E9A                     
  6125                           ; BSR set to: 0
  6126  001E9A  8E21               	bsf	(___fladd@b+2)^0,7,c
  6127  001E9C  EF51  F00F         	goto	l4665
  6128  001EA0                     l4663:
  6129                           
  6130                           ; BSR set to: 0
  6131  001EA0  9E21               	bcf	(___fladd@b+2)^0,7,c
  6132  001EA2                     l4665:
  6133                           
  6134                           ; BSR set to: 0
  6135  001EA2  90D8               	bcf	status,0,c
  6136  001EA4  3162               	rrcf	___fladd@bexp& (0+255),w,b
  6137  001EA6  6E22               	movwf	(___fladd@b+3)^0,c
  6138  001EA8                     
  6139                           ; BSR set to: 0
  6140  001EA8  AF60               	btfss	___fladd@signs& (0+255),7,b
  6141  001EAA  EF59  F00F         	goto	u6311
  6142  001EAE  EF5B  F00F         	goto	u6310
  6143  001EB2                     u6311:
  6144  001EB2  EF5C  F00F         	goto	l4671
  6145  001EB6                     u6310:
  6146  001EB6                     
  6147                           ; BSR set to: 0
  6148  001EB6  8E22               	bsf	(___fladd@b+3)^0,7,c
  6149  001EB8                     l4671:
  6150                           
  6151                           ; BSR set to: 0
  6152  001EB8  C01F  F01F         	movff	___fladd@b,?___fladd
  6153  001EBC  C020  F020         	movff	___fladd@b+1,?___fladd+1
  6154  001EC0  C021  F021         	movff	___fladd@b+2,?___fladd+2
  6155  001EC4  C022  F022         	movff	___fladd@b+3,?___fladd+3
  6156  001EC8                     l622:
  6157                           
  6158                           ; BSR set to: 0
  6159  001EC8  0012               	return		;funcret
  6160  001ECA                     __end_of___fladd:
  6161                           	callstack 0
  6162                           
  6163 ;; *************** function ___flneg *****************
  6164 ;; Defined at:
  6165 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  f1              4   30[COMRAM] unsigned char 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;		None
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  4   30[COMRAM] unsigned char 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6179 ;;      Params:         4       0       0       0       0       0       0       0       0
  6180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6182 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6183 ;;Total ram usage:        4 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; Hardware stack levels required when called: 4
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_efgtoa
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text18
  6194  004080                     __ptext18:
  6195                           	callstack 0
  6196  004080                     ___flneg:
  6197                           	callstack 22
  6198  004080  501F               	movf	___flneg@f1^0,w,c
  6199  004082  1020               	iorwf	(___flneg@f1+1)^0,w,c
  6200  004084  1021               	iorwf	(___flneg@f1+2)^0,w,c
  6201  004086  1022               	iorwf	(___flneg@f1+3)^0,w,c
  6202  004088  B4D8               	btfsc	status,2,c
  6203  00408A  EF49  F020         	goto	u6971
  6204  00408E  EF4B  F020         	goto	u6970
  6205  004092                     u6971:
  6206  004092  EF53  F020         	goto	l5089
  6207  004096                     u6970:
  6208  004096  0E00               	movlw	0
  6209  004098  1A1F               	xorwf	___flneg@f1^0,f,c
  6210  00409A  0E00               	movlw	0
  6211  00409C  1A20               	xorwf	(___flneg@f1+1)^0,f,c
  6212  00409E  0E00               	movlw	0
  6213  0040A0  1A21               	xorwf	(___flneg@f1+2)^0,f,c
  6214  0040A2  0E80               	movlw	128
  6215  0040A4  1A22               	xorwf	(___flneg@f1+3)^0,f,c
  6216  0040A6                     l5089:
  6217  0040A6  C01F  F01F         	movff	___flneg@f1,?___flneg
  6218  0040AA  C020  F020         	movff	___flneg@f1+1,?___flneg+1
  6219  0040AE  C021  F021         	movff	___flneg@f1+2,?___flneg+2
  6220  0040B2  C022  F022         	movff	___flneg@f1+3,?___flneg+3
  6221  0040B6  0012               	return		;funcret
  6222  0040B8                     __end_of___flneg:
  6223                           	callstack 0
  6224                           
  6225 ;; *************** function ___flmul *****************
  6226 ;; Defined at:
  6227 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  b               4   30[COMRAM] unsigned char 
  6230 ;;  a               4   34[COMRAM] unsigned char 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  prod            4    7[BANK0 ] struct .
  6233 ;;  grs             4    2[BANK0 ] unsigned long 
  6234 ;;  temp            2   11[BANK0 ] struct .
  6235 ;;  bexp            1    6[BANK0 ] unsigned char 
  6236 ;;  aexp            1    1[BANK0 ] unsigned char 
  6237 ;;  sign            1    0[BANK0 ] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  4   30[COMRAM] unsigned char 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0, prodl, prodh
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6247 ;;      Params:         8       0       0       0       0       0       0       0       0
  6248 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6249 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6250 ;;      Totals:        12      13       0       0       0       0       0       0       0
  6251 ;;Total ram usage:       25 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 4
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_efgtoa
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text19
  6262  00238A                     __ptext19:
  6263                           	callstack 0
  6264  00238A                     ___flmul:
  6265                           	callstack 22
  6266  00238A  5022               	movf	(___flmul@b+3)^0,w,c
  6267  00238C  0B80               	andlw	128
  6268  00238E  0100               	movlb	0	; () banked
  6269  002390  6F60               	movwf	___flmul@sign& (0+255),b
  6270  002392  5022               	movf	(___flmul@b+3)^0,w,c
  6271  002394  2422               	addwf	(___flmul@b+3)^0,w,c
  6272  002396  6F66               	movwf	___flmul@bexp& (0+255),b
  6273  002398                     
  6274                           ; BSR set to: 0
  6275  002398  AE21               	btfss	(___flmul@b+2)^0,7,c
  6276  00239A  EFD1  F011         	goto	u6581
  6277  00239E  EFD3  F011         	goto	u6580
  6278  0023A2                     u6581:
  6279  0023A2  EFD4  F011         	goto	l4837
  6280  0023A6                     u6580:
  6281  0023A6                     
  6282                           ; BSR set to: 0
  6283  0023A6  8166               	bsf	___flmul@bexp& (0+255),0,b
  6284  0023A8                     l4837:
  6285                           
  6286                           ; BSR set to: 0
  6287  0023A8  5166               	movf	___flmul@bexp& (0+255),w,b
  6288  0023AA  B4D8               	btfsc	status,2,c
  6289  0023AC  EFDA  F011         	goto	u6591
  6290  0023B0  EFDC  F011         	goto	u6590
  6291  0023B4                     u6591:
  6292  0023B4  EFEF  F011         	goto	l4845
  6293  0023B8                     u6590:
  6294  0023B8                     
  6295                           ; BSR set to: 0
  6296  0023B8  2966               	incf	___flmul@bexp& (0+255),w,b
  6297  0023BA  A4D8               	btfss	status,2,c
  6298  0023BC  EFE2  F011         	goto	u6601
  6299  0023C0  EFE4  F011         	goto	u6600
  6300  0023C4                     u6601:
  6301  0023C4  EFEC  F011         	goto	l4843
  6302  0023C8                     u6600:
  6303  0023C8                     
  6304                           ; BSR set to: 0
  6305  0023C8  0E00               	movlw	0
  6306  0023CA  6E1F               	movwf	___flmul@b^0,c
  6307  0023CC  0E00               	movlw	0
  6308  0023CE  6E20               	movwf	(___flmul@b+1)^0,c
  6309  0023D0  0E00               	movlw	0
  6310  0023D2  6E21               	movwf	(___flmul@b+2)^0,c
  6311  0023D4  0E00               	movlw	0
  6312  0023D6  6E22               	movwf	(___flmul@b+3)^0,c
  6313  0023D8                     l4843:
  6314                           
  6315                           ; BSR set to: 0
  6316  0023D8  8E21               	bsf	(___flmul@b+2)^0,7,c
  6317  0023DA  EFF7  F011         	goto	l4847
  6318  0023DE                     l4845:
  6319                           
  6320                           ; BSR set to: 0
  6321  0023DE  0E00               	movlw	0
  6322  0023E0  6E1F               	movwf	___flmul@b^0,c
  6323  0023E2  0E00               	movlw	0
  6324  0023E4  6E20               	movwf	(___flmul@b+1)^0,c
  6325  0023E6  0E00               	movlw	0
  6326  0023E8  6E21               	movwf	(___flmul@b+2)^0,c
  6327  0023EA  0E00               	movlw	0
  6328  0023EC  6E22               	movwf	(___flmul@b+3)^0,c
  6329  0023EE                     l4847:
  6330                           
  6331                           ; BSR set to: 0
  6332  0023EE  5026               	movf	(___flmul@a+3)^0,w,c
  6333  0023F0  0B80               	andlw	128
  6334  0023F2  1B60               	xorwf	___flmul@sign& (0+255),f,b
  6335  0023F4                     
  6336                           ; BSR set to: 0
  6337  0023F4  5026               	movf	(___flmul@a+3)^0,w,c
  6338  0023F6  2426               	addwf	(___flmul@a+3)^0,w,c
  6339  0023F8  6F61               	movwf	___flmul@aexp& (0+255),b
  6340  0023FA                     
  6341                           ; BSR set to: 0
  6342  0023FA  AE25               	btfss	(___flmul@a+2)^0,7,c
  6343  0023FC  EF02  F012         	goto	u6611
  6344  002400  EF04  F012         	goto	u6610
  6345  002404                     u6611:
  6346  002404  EF05  F012         	goto	l4855
  6347  002408                     u6610:
  6348  002408                     
  6349                           ; BSR set to: 0
  6350  002408  8161               	bsf	___flmul@aexp& (0+255),0,b
  6351  00240A                     l4855:
  6352                           
  6353                           ; BSR set to: 0
  6354  00240A  5161               	movf	___flmul@aexp& (0+255),w,b
  6355  00240C  B4D8               	btfsc	status,2,c
  6356  00240E  EF0B  F012         	goto	u6621
  6357  002412  EF0D  F012         	goto	u6620
  6358  002416                     u6621:
  6359  002416  EF20  F012         	goto	l4863
  6360  00241A                     u6620:
  6361  00241A                     
  6362                           ; BSR set to: 0
  6363  00241A  2961               	incf	___flmul@aexp& (0+255),w,b
  6364  00241C  A4D8               	btfss	status,2,c
  6365  00241E  EF13  F012         	goto	u6631
  6366  002422  EF15  F012         	goto	u6630
  6367  002426                     u6631:
  6368  002426  EF1D  F012         	goto	l4861
  6369  00242A                     u6630:
  6370  00242A                     
  6371                           ; BSR set to: 0
  6372  00242A  0E00               	movlw	0
  6373  00242C  6E23               	movwf	___flmul@a^0,c
  6374  00242E  0E00               	movlw	0
  6375  002430  6E24               	movwf	(___flmul@a+1)^0,c
  6376  002432  0E00               	movlw	0
  6377  002434  6E25               	movwf	(___flmul@a+2)^0,c
  6378  002436  0E00               	movlw	0
  6379  002438  6E26               	movwf	(___flmul@a+3)^0,c
  6380  00243A                     l4861:
  6381                           
  6382                           ; BSR set to: 0
  6383  00243A  8E25               	bsf	(___flmul@a+2)^0,7,c
  6384  00243C  EF28  F012         	goto	l699
  6385  002440                     l4863:
  6386                           
  6387                           ; BSR set to: 0
  6388  002440  0E00               	movlw	0
  6389  002442  6E23               	movwf	___flmul@a^0,c
  6390  002444  0E00               	movlw	0
  6391  002446  6E24               	movwf	(___flmul@a+1)^0,c
  6392  002448  0E00               	movlw	0
  6393  00244A  6E25               	movwf	(___flmul@a+2)^0,c
  6394  00244C  0E00               	movlw	0
  6395  00244E  6E26               	movwf	(___flmul@a+3)^0,c
  6396  002450                     l699:
  6397                           
  6398                           ; BSR set to: 0
  6399  002450  5161               	movf	___flmul@aexp& (0+255),w,b
  6400  002452  B4D8               	btfsc	status,2,c
  6401  002454  EF2E  F012         	goto	u6641
  6402  002458  EF30  F012         	goto	u6640
  6403  00245C                     u6641:
  6404  00245C  EF38  F012         	goto	l4867
  6405  002460                     u6640:
  6406  002460                     
  6407                           ; BSR set to: 0
  6408  002460  5166               	movf	___flmul@bexp& (0+255),w,b
  6409  002462  A4D8               	btfss	status,2,c
  6410  002464  EF36  F012         	goto	u6651
  6411  002468  EF38  F012         	goto	u6650
  6412  00246C                     u6651:
  6413  00246C  EF42  F012         	goto	l4871
  6414  002470                     u6650:
  6415  002470                     l4867:
  6416                           
  6417                           ; BSR set to: 0
  6418  002470  0E00               	movlw	0
  6419  002472  6E1F               	movwf	?___flmul^0,c
  6420  002474  0E00               	movlw	0
  6421  002476  6E20               	movwf	(?___flmul+1)^0,c
  6422  002478  0E00               	movlw	0
  6423  00247A  6E21               	movwf	(?___flmul+2)^0,c
  6424  00247C  0E00               	movlw	0
  6425  00247E  6E22               	movwf	(?___flmul+3)^0,c
  6426  002480  EFDA  F013         	goto	l703
  6427  002484                     l4871:
  6428                           
  6429                           ; BSR set to: 0
  6430  002484  5025               	movf	(___flmul@a+2)^0,w,c
  6431  002486  021F               	mulwf	___flmul@b^0,c
  6432  002488  CFF3 F06B          	movff	prodl,___flmul@temp
  6433  00248C  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6434  002490                     
  6435                           ; BSR set to: 0
  6436  002490  516B               	movf	___flmul@temp& (0+255),w,b
  6437  002492  6F62               	movwf	___flmul@grs& (0+255),b
  6438  002494  6B63               	clrf	(___flmul@grs+1)& (0+255),b
  6439  002496  6B64               	clrf	(___flmul@grs+2)& (0+255),b
  6440  002498  6B65               	clrf	(___flmul@grs+3)& (0+255),b
  6441  00249A                     
  6442                           ; BSR set to: 0
  6443  00249A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6444  00249C  6F67               	movwf	___flmul@prod& (0+255),b
  6445  00249E  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  6446  0024A0  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  6447  0024A2  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  6448  0024A4  5024               	movf	(___flmul@a+1)^0,w,c
  6449  0024A6  0220               	mulwf	(___flmul@b+1)^0,c
  6450  0024A8  CFF3 F06B          	movff	prodl,___flmul@temp
  6451  0024AC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6452  0024B0                     
  6453                           ; BSR set to: 0
  6454  0024B0  516B               	movf	___flmul@temp& (0+255),w,b
  6455  0024B2  2762               	addwf	___flmul@grs& (0+255),f,b
  6456  0024B4  0E00               	movlw	0
  6457  0024B6  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6458  0024B8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6459  0024BA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6460  0024BC                     
  6461                           ; BSR set to: 0
  6462  0024BC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6463  0024BE  2767               	addwf	___flmul@prod& (0+255),f,b
  6464  0024C0  0E00               	movlw	0
  6465  0024C2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6466  0024C4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6467  0024C6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6468  0024C8  5023               	movf	___flmul@a^0,w,c
  6469  0024CA  0221               	mulwf	(___flmul@b+2)^0,c
  6470  0024CC  CFF3 F06B          	movff	prodl,___flmul@temp
  6471  0024D0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6472  0024D4                     
  6473                           ; BSR set to: 0
  6474  0024D4  516B               	movf	___flmul@temp& (0+255),w,b
  6475  0024D6  2762               	addwf	___flmul@grs& (0+255),f,b
  6476  0024D8  0E00               	movlw	0
  6477  0024DA  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6478  0024DC  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6479  0024DE  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6480  0024E0                     
  6481                           ; BSR set to: 0
  6482  0024E0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6483  0024E2  2767               	addwf	___flmul@prod& (0+255),f,b
  6484  0024E4  0E00               	movlw	0
  6485  0024E6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6486  0024E8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6487  0024EA  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6488  0024EC                     
  6489                           ; BSR set to: 0
  6490  0024EC  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6491  0024F0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6492  0024F4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6493  0024F8  6B62               	clrf	___flmul@grs& (0+255),b
  6494  0024FA                     
  6495                           ; BSR set to: 0
  6496  0024FA  5023               	movf	___flmul@a^0,w,c
  6497  0024FC  0220               	mulwf	(___flmul@b+1)^0,c
  6498  0024FE  CFF3 F06B          	movff	prodl,___flmul@temp
  6499  002502  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6500  002506                     
  6501                           ; BSR set to: 0
  6502  002506  516B               	movf	___flmul@temp& (0+255),w,b
  6503  002508  2762               	addwf	___flmul@grs& (0+255),f,b
  6504  00250A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6505  00250C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6506  00250E  0E00               	movlw	0
  6507  002510  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6508  002512  0E00               	movlw	0
  6509  002514  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6510  002516                     
  6511                           ; BSR set to: 0
  6512  002516  5024               	movf	(___flmul@a+1)^0,w,c
  6513  002518  021F               	mulwf	___flmul@b^0,c
  6514  00251A  CFF3 F06B          	movff	prodl,___flmul@temp
  6515  00251E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6516  002522                     
  6517                           ; BSR set to: 0
  6518  002522  516B               	movf	___flmul@temp& (0+255),w,b
  6519  002524  2762               	addwf	___flmul@grs& (0+255),f,b
  6520  002526  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6521  002528  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6522  00252A  0E00               	movlw	0
  6523  00252C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6524  00252E  0E00               	movlw	0
  6525  002530  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6526  002532                     
  6527                           ; BSR set to: 0
  6528  002532  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6529  002536  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6530  00253A  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6531  00253E  6B62               	clrf	___flmul@grs& (0+255),b
  6532  002540  5023               	movf	___flmul@a^0,w,c
  6533  002542  021F               	mulwf	___flmul@b^0,c
  6534  002544  CFF3 F06B          	movff	prodl,___flmul@temp
  6535  002548  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6536  00254C                     
  6537                           ; BSR set to: 0
  6538  00254C  516B               	movf	___flmul@temp& (0+255),w,b
  6539  00254E  2762               	addwf	___flmul@grs& (0+255),f,b
  6540  002550  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6541  002552  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6542  002554  0E00               	movlw	0
  6543  002556  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6544  002558  0E00               	movlw	0
  6545  00255A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6546  00255C                     
  6547                           ; BSR set to: 0
  6548  00255C  5025               	movf	(___flmul@a+2)^0,w,c
  6549  00255E  0220               	mulwf	(___flmul@b+1)^0,c
  6550  002560  CFF3 F06B          	movff	prodl,___flmul@temp
  6551  002564  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6552  002568  516B               	movf	___flmul@temp& (0+255),w,b
  6553  00256A  2767               	addwf	___flmul@prod& (0+255),f,b
  6554  00256C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6555  00256E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6556  002570  0E00               	movlw	0
  6557  002572  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6558  002574  0E00               	movlw	0
  6559  002576  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6560  002578                     
  6561                           ; BSR set to: 0
  6562  002578  5024               	movf	(___flmul@a+1)^0,w,c
  6563  00257A  0221               	mulwf	(___flmul@b+2)^0,c
  6564  00257C  CFF3 F06B          	movff	prodl,___flmul@temp
  6565  002580  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6566  002584                     
  6567                           ; BSR set to: 0
  6568  002584  516B               	movf	___flmul@temp& (0+255),w,b
  6569  002586  2767               	addwf	___flmul@prod& (0+255),f,b
  6570  002588  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6571  00258A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6572  00258C  0E00               	movlw	0
  6573  00258E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6574  002590  0E00               	movlw	0
  6575  002592  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6576  002594  5025               	movf	(___flmul@a+2)^0,w,c
  6577  002596  0221               	mulwf	(___flmul@b+2)^0,c
  6578  002598  CFF3 F06B          	movff	prodl,___flmul@temp
  6579  00259C  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6580  0025A0                     
  6581                           ; BSR set to: 0
  6582  0025A0  516B               	movf	___flmul@temp& (0+255),w,b
  6583  0025A2  6E27               	movwf	??___flmul^0,c
  6584  0025A4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6585  0025A6  6E28               	movwf	(??___flmul+1)^0,c
  6586  0025A8  6A29               	clrf	(??___flmul+2)^0,c
  6587  0025AA  6A2A               	clrf	(??___flmul+3)^0,c
  6588  0025AC  C029  F02A         	movff	??___flmul+2,??___flmul+3
  6589  0025B0  C028  F029         	movff	??___flmul+1,??___flmul+2
  6590  0025B4  C027  F028         	movff	??___flmul,??___flmul+1
  6591  0025B8  6A27               	clrf	??___flmul^0,c
  6592  0025BA  5027               	movf	??___flmul^0,w,c
  6593  0025BC  2767               	addwf	___flmul@prod& (0+255),f,b
  6594  0025BE  5028               	movf	(??___flmul+1)^0,w,c
  6595  0025C0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6596  0025C2  5029               	movf	(??___flmul+2)^0,w,c
  6597  0025C4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6598  0025C6  502A               	movf	(??___flmul+3)^0,w,c
  6599  0025C8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6600  0025CA                     
  6601                           ; BSR set to: 0
  6602  0025CA  C062  F027         	movff	___flmul@grs,??___flmul
  6603  0025CE  C063  F028         	movff	___flmul@grs+1,??___flmul+1
  6604  0025D2  C064  F029         	movff	___flmul@grs+2,??___flmul+2
  6605  0025D6  C065  F02A         	movff	___flmul@grs+3,??___flmul+3
  6606  0025DA  0E19               	movlw	25
  6607  0025DC  EFF5  F012         	goto	u6660
  6608  0025E0                     u6665:
  6609  0025E0  90D8               	bcf	status,0,c
  6610  0025E2  322A               	rrcf	(??___flmul+3)^0,f,c
  6611  0025E4  3229               	rrcf	(??___flmul+2)^0,f,c
  6612  0025E6  3228               	rrcf	(??___flmul+1)^0,f,c
  6613  0025E8  3227               	rrcf	??___flmul^0,f,c
  6614  0025EA                     u6660:
  6615  0025EA  2EE8               	decfsz	wreg,f,c
  6616  0025EC  EFF0  F012         	goto	u6665
  6617  0025F0  5027               	movf	??___flmul^0,w,c
  6618  0025F2  2767               	addwf	___flmul@prod& (0+255),f,b
  6619  0025F4  5028               	movf	(??___flmul+1)^0,w,c
  6620  0025F6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6621  0025F8  5029               	movf	(??___flmul+2)^0,w,c
  6622  0025FA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6623  0025FC  502A               	movf	(??___flmul+3)^0,w,c
  6624  0025FE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6625  002600                     
  6626                           ; BSR set to: 0
  6627  002600  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6628  002604  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6629  002608  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6630  00260C  6B62               	clrf	___flmul@grs& (0+255),b
  6631  00260E                     
  6632                           ; BSR set to: 0
  6633  00260E  5161               	movf	___flmul@aexp& (0+255),w,b
  6634  002610  C066  F027         	movff	___flmul@bexp,??___flmul
  6635  002614  6A28               	clrf	(??___flmul+1)^0,c
  6636  002616  2627               	addwf	??___flmul^0,f,c
  6637  002618  0E00               	movlw	0
  6638  00261A  2228               	addwfc	(??___flmul+1)^0,f,c
  6639  00261C  0E82               	movlw	130
  6640  00261E  2427               	addwf	??___flmul^0,w,c
  6641  002620  6F6B               	movwf	___flmul@temp& (0+255),b
  6642  002622  0EFF               	movlw	255
  6643  002624  2028               	addwfc	(??___flmul+1)^0,w,c
  6644  002626  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  6645  002628  EF2B  F013         	goto	l4919
  6646  00262C                     l4913:
  6647                           
  6648                           ; BSR set to: 0
  6649  00262C  90D8               	bcf	status,0,c
  6650  00262E  3767               	rlcf	___flmul@prod& (0+255),f,b
  6651  002630  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6652  002632  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6653  002634  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6654  002636                     
  6655                           ; BSR set to: 0
  6656  002636  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  6657  002638  EF20  F013         	goto	u6671
  6658  00263C  EF22  F013         	goto	u6670
  6659  002640                     u6671:
  6660  002640  EF23  F013         	goto	l706
  6661  002644                     u6670:
  6662  002644                     
  6663                           ; BSR set to: 0
  6664  002644  8167               	bsf	___flmul@prod& (0+255),0,b
  6665  002646                     l706:
  6666                           
  6667                           ; BSR set to: 0
  6668  002646  90D8               	bcf	status,0,c
  6669  002648  3762               	rlcf	___flmul@grs& (0+255),f,b
  6670  00264A  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6671  00264C  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6672  00264E  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6673  002650  076B               	decf	___flmul@temp& (0+255),f,b
  6674  002652  A0D8               	btfss	status,0,c
  6675  002654  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  6676  002656                     l4919:
  6677                           
  6678                           ; BSR set to: 0
  6679  002656  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  6680  002658  EF30  F013         	goto	u6681
  6681  00265C  EF32  F013         	goto	u6680
  6682  002660                     u6681:
  6683  002660  EF16  F013         	goto	l4913
  6684  002664                     u6680:
  6685  002664                     
  6686                           ; BSR set to: 0
  6687  002664  0E00               	movlw	0
  6688  002666  6F61               	movwf	___flmul@aexp& (0+255),b
  6689  002668                     
  6690                           ; BSR set to: 0
  6691  002668  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  6692  00266A  EF39  F013         	goto	u6691
  6693  00266E  EF3B  F013         	goto	u6690
  6694  002672                     u6691:
  6695  002672  EF5F  F013         	goto	l708
  6696  002676                     u6690:
  6697  002676                     
  6698                           ; BSR set to: 0
  6699  002676  0EFF               	movlw	255
  6700  002678  1562               	andwf	___flmul@grs& (0+255),w,b
  6701  00267A  6E27               	movwf	??___flmul^0,c
  6702  00267C  0EFF               	movlw	255
  6703  00267E  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
  6704  002680  6E28               	movwf	(??___flmul+1)^0,c
  6705  002682  0EFF               	movlw	255
  6706  002684  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
  6707  002686  6E29               	movwf	(??___flmul+2)^0,c
  6708  002688  0E7F               	movlw	127
  6709  00268A  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
  6710  00268C  6E2A               	movwf	(??___flmul+3)^0,c
  6711  00268E  5027               	movf	??___flmul^0,w,c
  6712  002690  1028               	iorwf	(??___flmul+1)^0,w,c
  6713  002692  1029               	iorwf	(??___flmul+2)^0,w,c
  6714  002694  102A               	iorwf	(??___flmul+3)^0,w,c
  6715  002696  B4D8               	btfsc	status,2,c
  6716  002698  EF50  F013         	goto	u6701
  6717  00269C  EF52  F013         	goto	u6700
  6718  0026A0                     u6701:
  6719  0026A0  EF56  F013         	goto	l709
  6720  0026A4                     u6700:
  6721  0026A4                     l4927:
  6722                           
  6723                           ; BSR set to: 0
  6724  0026A4  0E01               	movlw	1
  6725  0026A6  6F61               	movwf	___flmul@aexp& (0+255),b
  6726  0026A8  EF5F  F013         	goto	l708
  6727  0026AC                     l709:
  6728                           
  6729                           ; BSR set to: 0
  6730  0026AC  A167               	btfss	___flmul@prod& (0+255),0,b
  6731  0026AE  EF5B  F013         	goto	u6711
  6732  0026B2  EF5D  F013         	goto	u6710
  6733  0026B6                     u6711:
  6734  0026B6  EF5F  F013         	goto	l708
  6735  0026BA                     u6710:
  6736  0026BA  EF52  F013         	goto	l4927
  6737  0026BE                     l708:
  6738                           
  6739                           ; BSR set to: 0
  6740  0026BE  5161               	movf	___flmul@aexp& (0+255),w,b
  6741  0026C0  B4D8               	btfsc	status,2,c
  6742  0026C2  EF65  F013         	goto	u6721
  6743  0026C6  EF67  F013         	goto	u6720
  6744  0026CA                     u6721:
  6745  0026CA  EF8B  F013         	goto	l4939
  6746  0026CE                     u6720:
  6747  0026CE                     
  6748                           ; BSR set to: 0
  6749  0026CE  0E01               	movlw	1
  6750  0026D0  2767               	addwf	___flmul@prod& (0+255),f,b
  6751  0026D2  0E00               	movlw	0
  6752  0026D4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6753  0026D6  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6754  0026D8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6755  0026DA                     
  6756                           ; BSR set to: 0
  6757  0026DA  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  6758  0026DC  EF72  F013         	goto	u6731
  6759  0026E0  EF74  F013         	goto	u6730
  6760  0026E4                     u6731:
  6761  0026E4  EF8B  F013         	goto	l4939
  6762  0026E8                     u6730:
  6763  0026E8                     
  6764                           ; BSR set to: 0
  6765  0026E8  C067  F027         	movff	___flmul@prod,??___flmul
  6766  0026EC  C068  F028         	movff	___flmul@prod+1,??___flmul+1
  6767  0026F0  C069  F029         	movff	___flmul@prod+2,??___flmul+2
  6768  0026F4  C06A  F02A         	movff	___flmul@prod+3,??___flmul+3
  6769  0026F8  342A               	rlcf	(??___flmul+3)^0,w,c
  6770  0026FA  322A               	rrcf	(??___flmul+3)^0,f,c
  6771  0026FC  3229               	rrcf	(??___flmul+2)^0,f,c
  6772  0026FE  3228               	rrcf	(??___flmul+1)^0,f,c
  6773  002700  3227               	rrcf	??___flmul^0,f,c
  6774  002702  C027  F067         	movff	??___flmul,___flmul@prod
  6775  002706  C028  F068         	movff	??___flmul+1,___flmul@prod+1
  6776  00270A  C029  F069         	movff	??___flmul+2,___flmul@prod+2
  6777  00270E  C02A  F06A         	movff	??___flmul+3,___flmul@prod+3
  6778  002712                     
  6779                           ; BSR set to: 0
  6780  002712  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  6781  002714  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  6782  002716                     l4939:
  6783                           
  6784                           ; BSR set to: 0
  6785  002716  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6786  002718  EF96  F013         	goto	u6741
  6787  00271C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6788  00271E  E108               	bnz	u6740
  6789  002720  296B               	incf	___flmul@temp& (0+255),w,b
  6790  002722  A0D8               	btfss	status,0,c
  6791  002724  EF96  F013         	goto	u6741
  6792  002728  EF98  F013         	goto	u6740
  6793  00272C                     u6741:
  6794  00272C  EFA2  F013         	goto	l4943
  6795  002730                     u6740:
  6796  002730                     
  6797                           ; BSR set to: 0
  6798  002730  0E00               	movlw	0
  6799  002732  6F67               	movwf	___flmul@prod& (0+255),b
  6800  002734  0E00               	movlw	0
  6801  002736  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  6802  002738  0E80               	movlw	128
  6803  00273A  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  6804  00273C  0E7F               	movlw	127
  6805  00273E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6806  002740  EFD0  F013         	goto	l4955
  6807  002744                     l4943:
  6808                           
  6809                           ; BSR set to: 0
  6810  002744  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6811  002746  EFAF  F013         	goto	u6750
  6812  00274A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6813  00274C  E106               	bnz	u6751
  6814  00274E  056B               	decf	___flmul@temp& (0+255),w,b
  6815  002750  B0D8               	btfsc	status,0,c
  6816  002752  EFAD  F013         	goto	u6751
  6817  002756  EFAF  F013         	goto	u6750
  6818  00275A                     u6751:
  6819  00275A  EFBB  F013         	goto	l716
  6820  00275E                     u6750:
  6821  00275E                     
  6822                           ; BSR set to: 0
  6823  00275E  0E00               	movlw	0
  6824  002760  6F67               	movwf	___flmul@prod& (0+255),b
  6825  002762  0E00               	movlw	0
  6826  002764  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  6827  002766  0E00               	movlw	0
  6828  002768  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  6829  00276A  0E00               	movlw	0
  6830  00276C  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6831  00276E  0E00               	movlw	0
  6832  002770  6F60               	movwf	___flmul@sign& (0+255),b
  6833  002772  EFD0  F013         	goto	l4955
  6834  002776                     l716:
  6835                           
  6836                           ; BSR set to: 0
  6837  002776  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  6838  00277A                     
  6839                           ; BSR set to: 0
  6840  00277A  0EFF               	movlw	255
  6841  00277C  1767               	andwf	___flmul@prod& (0+255),f,b
  6842  00277E  0EFF               	movlw	255
  6843  002780  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  6844  002782  0E7F               	movlw	127
  6845  002784  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  6846  002786  0E00               	movlw	0
  6847  002788  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  6848  00278A                     
  6849                           ; BSR set to: 0
  6850  00278A  A166               	btfss	___flmul@bexp& (0+255),0,b
  6851  00278C  EFCA  F013         	goto	u6761
  6852  002790  EFCC  F013         	goto	u6760
  6853  002794                     u6761:
  6854  002794  EFCD  F013         	goto	l4953
  6855  002798                     u6760:
  6856  002798                     
  6857                           ; BSR set to: 0
  6858  002798  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  6859  00279A                     l4953:
  6860                           
  6861                           ; BSR set to: 0
  6862  00279A  90D8               	bcf	status,0,c
  6863  00279C  3166               	rrcf	___flmul@bexp& (0+255),w,b
  6864  00279E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6865  0027A0                     l4955:
  6866                           
  6867                           ; BSR set to: 0
  6868  0027A0  5160               	movf	___flmul@sign& (0+255),w,b
  6869  0027A2  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6870  0027A4                     
  6871                           ; BSR set to: 0
  6872  0027A4  C067  F01F         	movff	___flmul@prod,?___flmul
  6873  0027A8  C068  F020         	movff	___flmul@prod+1,?___flmul+1
  6874  0027AC  C069  F021         	movff	___flmul@prod+2,?___flmul+2
  6875  0027B0  C06A  F022         	movff	___flmul@prod+3,?___flmul+3
  6876  0027B4                     l703:
  6877                           
  6878                           ; BSR set to: 0
  6879  0027B4  0012               	return		;funcret
  6880  0027B6                     __end_of___flmul:
  6881                           	callstack 0
  6882                           
  6883 ;; *************** function ___flge *****************
  6884 ;; Defined at:
  6885 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  ff1             4   13[BANK0 ] unsigned char 
  6888 ;;  ff2             4   17[BANK0 ] unsigned char 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;		None
  6891 ;; Return value:  Size  Location     Type
  6892 ;;		None               void
  6893 ;; Registers used:
  6894 ;;		wreg, status,2, status,0
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6900 ;;      Params:         0       8       0       0       0       0       0       0       0
  6901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6902 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6903 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6904 ;;Total ram usage:       12 bytes
  6905 ;; Hardware stack levels used: 1
  6906 ;; Hardware stack levels required when called: 4
  6907 ;; This function calls:
  6908 ;;		Nothing
  6909 ;; This function is called by:
  6910 ;;		_efgtoa
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           	psect	text20
  6915  0031AE                     __ptext20:
  6916                           	callstack 0
  6917  0031AE                     ___flge:
  6918                           	callstack 22
  6919  0031AE  0E00               	movlw	0
  6920  0031B0  0100               	movlb	0	; () banked
  6921  0031B2  156D               	andwf	___flge@ff1& (0+255),w,b
  6922  0031B4  6F75               	movwf	??___flge& (0+255),b
  6923  0031B6  0E00               	movlw	0
  6924  0031B8  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  6925  0031BA  6F76               	movwf	(??___flge+1)& (0+255),b
  6926  0031BC  0E80               	movlw	128
  6927  0031BE  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  6928  0031C0  6F77               	movwf	(??___flge+2)& (0+255),b
  6929  0031C2  0E7F               	movlw	127
  6930  0031C4  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  6931  0031C6  6F78               	movwf	(??___flge+3)& (0+255),b
  6932  0031C8  5175               	movf	??___flge& (0+255),w,b
  6933  0031CA  1176               	iorwf	(??___flge+1)& (0+255),w,b
  6934  0031CC  1177               	iorwf	(??___flge+2)& (0+255),w,b
  6935  0031CE  1178               	iorwf	(??___flge+3)& (0+255),w,b
  6936  0031D0  A4D8               	btfss	status,2,c
  6937  0031D2  EFED  F018         	goto	u6921
  6938  0031D6  EFEF  F018         	goto	u6920
  6939  0031DA                     u6921:
  6940  0031DA  EFF7  F018         	goto	l5067
  6941  0031DE                     u6920:
  6942  0031DE                     
  6943                           ; BSR set to: 0
  6944  0031DE  0E00               	movlw	0
  6945  0031E0  6F6D               	movwf	___flge@ff1& (0+255),b
  6946  0031E2  0E00               	movlw	0
  6947  0031E4  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  6948  0031E6  0E00               	movlw	0
  6949  0031E8  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  6950  0031EA  0E00               	movlw	0
  6951  0031EC  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  6952  0031EE                     l5067:
  6953                           
  6954                           ; BSR set to: 0
  6955  0031EE  0E00               	movlw	0
  6956  0031F0  1571               	andwf	___flge@ff2& (0+255),w,b
  6957  0031F2  6F75               	movwf	??___flge& (0+255),b
  6958  0031F4  0E00               	movlw	0
  6959  0031F6  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  6960  0031F8  6F76               	movwf	(??___flge+1)& (0+255),b
  6961  0031FA  0E80               	movlw	128
  6962  0031FC  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  6963  0031FE  6F77               	movwf	(??___flge+2)& (0+255),b
  6964  003200  0E7F               	movlw	127
  6965  003202  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  6966  003204  6F78               	movwf	(??___flge+3)& (0+255),b
  6967  003206  5175               	movf	??___flge& (0+255),w,b
  6968  003208  1176               	iorwf	(??___flge+1)& (0+255),w,b
  6969  00320A  1177               	iorwf	(??___flge+2)& (0+255),w,b
  6970  00320C  1178               	iorwf	(??___flge+3)& (0+255),w,b
  6971  00320E  A4D8               	btfss	status,2,c
  6972  003210  EF0C  F019         	goto	u6931
  6973  003214  EF0E  F019         	goto	u6930
  6974  003218                     u6931:
  6975  003218  EF16  F019         	goto	l5071
  6976  00321C                     u6930:
  6977  00321C                     
  6978                           ; BSR set to: 0
  6979  00321C  0E00               	movlw	0
  6980  00321E  6F71               	movwf	___flge@ff2& (0+255),b
  6981  003220  0E00               	movlw	0
  6982  003222  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  6983  003224  0E00               	movlw	0
  6984  003226  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  6985  003228  0E00               	movlw	0
  6986  00322A  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  6987  00322C                     l5071:
  6988                           
  6989                           ; BSR set to: 0
  6990  00322C  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  6991  00322E  EF1B  F019         	goto	u6941
  6992  003232  EF1D  F019         	goto	u6940
  6993  003236                     u6941:
  6994  003236  EF26  F019         	goto	l5075
  6995  00323A                     u6940:
  6996  00323A                     
  6997                           ; BSR set to: 0
  6998  00323A  6D6D               	negf	___flge@ff1& (0+255),b
  6999  00323C  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  7000  00323E  B0D8               	btfsc	status,0,c
  7001  003240  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  7002  003242  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  7003  003244  B0D8               	btfsc	status,0,c
  7004  003246  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  7005  003248  0E80               	movlw	128
  7006  00324A  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7007  00324C                     l5075:
  7008                           
  7009                           ; BSR set to: 0
  7010  00324C  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  7011  00324E  EF2B  F019         	goto	u6951
  7012  003252  EF2D  F019         	goto	u6950
  7013  003256                     u6951:
  7014  003256  EF36  F019         	goto	l350
  7015  00325A                     u6950:
  7016  00325A                     
  7017                           ; BSR set to: 0
  7018  00325A  6D71               	negf	___flge@ff2& (0+255),b
  7019  00325C  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  7020  00325E  B0D8               	btfsc	status,0,c
  7021  003260  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  7022  003262  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  7023  003264  B0D8               	btfsc	status,0,c
  7024  003266  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  7025  003268  0E80               	movlw	128
  7026  00326A  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7027  00326C                     l350:
  7028                           
  7029                           ; BSR set to: 0
  7030  00326C  0E00               	movlw	0
  7031  00326E  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  7032  003270  0E00               	movlw	0
  7033  003272  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7034  003274  0E00               	movlw	0
  7035  003276  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7036  003278  0E80               	movlw	128
  7037  00327A  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7038  00327C  0E00               	movlw	0
  7039  00327E  1B71               	xorwf	___flge@ff2& (0+255),f,b
  7040  003280  0E00               	movlw	0
  7041  003282  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7042  003284  0E00               	movlw	0
  7043  003286  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7044  003288  0E80               	movlw	128
  7045  00328A  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7046  00328C  5171               	movf	___flge@ff2& (0+255),w,b
  7047  00328E  5D6D               	subwf	___flge@ff1& (0+255),w,b
  7048  003290  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  7049  003292  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7050  003294  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  7051  003296  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7052  003298  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  7053  00329A  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7054  00329C  B0D8               	btfsc	status,0,c
  7055  00329E  EF53  F019         	goto	u6961
  7056  0032A2  EF55  F019         	goto	u6960
  7057  0032A6                     u6961:
  7058  0032A6  EF58  F019         	goto	l5081
  7059  0032AA                     u6960:
  7060  0032AA                     
  7061                           ; BSR set to: 0
  7062  0032AA  90D8               	bcf	status,0,c
  7063  0032AC  EF59  F019         	goto	l355
  7064  0032B0                     l5081:
  7065                           
  7066                           ; BSR set to: 0
  7067  0032B0  80D8               	bsf	status,0,c
  7068  0032B2                     l355:
  7069                           
  7070                           ; BSR set to: 0
  7071  0032B2  0012               	return		;funcret
  7072  0032B4                     __end_of___flge:
  7073                           	callstack 0
  7074                           
  7075 ;; *************** function ___fleq *****************
  7076 ;; Defined at:
  7077 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  ff1             4   30[COMRAM] unsigned char 
  7080 ;;  ff2             4   34[COMRAM] unsigned char 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;		None
  7083 ;; Return value:  Size  Location     Type
  7084 ;;		None               void
  7085 ;; Registers used:
  7086 ;;		wreg, status,2, status,0
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7092 ;;      Params:         8       0       0       0       0       0       0       0       0
  7093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7094 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7095 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7096 ;;Total ram usage:       12 bytes
  7097 ;; Hardware stack levels used: 1
  7098 ;; Hardware stack levels required when called: 4
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_efgtoa
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text21
  7107  003B12                     __ptext21:
  7108                           	callstack 0
  7109  003B12                     ___fleq:
  7110                           	callstack 22
  7111  003B12  0E00               	movlw	0
  7112  003B14  141F               	andwf	___fleq@ff1^0,w,c
  7113  003B16  6E27               	movwf	??___fleq^0,c
  7114  003B18  0E00               	movlw	0
  7115  003B1A  1420               	andwf	(___fleq@ff1+1)^0,w,c
  7116  003B1C  6E28               	movwf	(??___fleq+1)^0,c
  7117  003B1E  0E80               	movlw	128
  7118  003B20  1421               	andwf	(___fleq@ff1+2)^0,w,c
  7119  003B22  6E29               	movwf	(??___fleq+2)^0,c
  7120  003B24  0E7F               	movlw	127
  7121  003B26  1422               	andwf	(___fleq@ff1+3)^0,w,c
  7122  003B28  6E2A               	movwf	(??___fleq+3)^0,c
  7123  003B2A  5027               	movf	??___fleq^0,w,c
  7124  003B2C  1028               	iorwf	(??___fleq+1)^0,w,c
  7125  003B2E  1029               	iorwf	(??___fleq+2)^0,w,c
  7126  003B30  102A               	iorwf	(??___fleq+3)^0,w,c
  7127  003B32  A4D8               	btfss	status,2,c
  7128  003B34  EF9E  F01D         	goto	u6891
  7129  003B38  EFA0  F01D         	goto	u6890
  7130  003B3C                     u6891:
  7131  003B3C  EFA8  F01D         	goto	l5051
  7132  003B40                     u6890:
  7133  003B40  0E00               	movlw	0
  7134  003B42  6E1F               	movwf	___fleq@ff1^0,c
  7135  003B44  0E00               	movlw	0
  7136  003B46  6E20               	movwf	(___fleq@ff1+1)^0,c
  7137  003B48  0E00               	movlw	0
  7138  003B4A  6E21               	movwf	(___fleq@ff1+2)^0,c
  7139  003B4C  0E00               	movlw	0
  7140  003B4E  6E22               	movwf	(___fleq@ff1+3)^0,c
  7141  003B50                     l5051:
  7142  003B50  0E00               	movlw	0
  7143  003B52  1423               	andwf	___fleq@ff2^0,w,c
  7144  003B54  6E27               	movwf	??___fleq^0,c
  7145  003B56  0E00               	movlw	0
  7146  003B58  1424               	andwf	(___fleq@ff2+1)^0,w,c
  7147  003B5A  6E28               	movwf	(??___fleq+1)^0,c
  7148  003B5C  0E80               	movlw	128
  7149  003B5E  1425               	andwf	(___fleq@ff2+2)^0,w,c
  7150  003B60  6E29               	movwf	(??___fleq+2)^0,c
  7151  003B62  0E7F               	movlw	127
  7152  003B64  1426               	andwf	(___fleq@ff2+3)^0,w,c
  7153  003B66  6E2A               	movwf	(??___fleq+3)^0,c
  7154  003B68  5027               	movf	??___fleq^0,w,c
  7155  003B6A  1028               	iorwf	(??___fleq+1)^0,w,c
  7156  003B6C  1029               	iorwf	(??___fleq+2)^0,w,c
  7157  003B6E  102A               	iorwf	(??___fleq+3)^0,w,c
  7158  003B70  A4D8               	btfss	status,2,c
  7159  003B72  EFBD  F01D         	goto	u6901
  7160  003B76  EFBF  F01D         	goto	u6900
  7161  003B7A                     u6901:
  7162  003B7A  EFC7  F01D         	goto	l5055
  7163  003B7E                     u6900:
  7164  003B7E  0E00               	movlw	0
  7165  003B80  6E23               	movwf	___fleq@ff2^0,c
  7166  003B82  0E00               	movlw	0
  7167  003B84  6E24               	movwf	(___fleq@ff2+1)^0,c
  7168  003B86  0E00               	movlw	0
  7169  003B88  6E25               	movwf	(___fleq@ff2+2)^0,c
  7170  003B8A  0E00               	movlw	0
  7171  003B8C  6E26               	movwf	(___fleq@ff2+3)^0,c
  7172  003B8E                     l5055:
  7173  003B8E  5023               	movf	___fleq@ff2^0,w,c
  7174  003B90  181F               	xorwf	___fleq@ff1^0,w,c
  7175  003B92  E10F               	bnz	u6910
  7176  003B94  5024               	movf	(___fleq@ff2+1)^0,w,c
  7177  003B96  1820               	xorwf	(___fleq@ff1+1)^0,w,c
  7178  003B98  E10C               	bnz	u6910
  7179  003B9A  5025               	movf	(___fleq@ff2+2)^0,w,c
  7180  003B9C  1821               	xorwf	(___fleq@ff1+2)^0,w,c
  7181  003B9E  E109               	bnz	u6910
  7182  003BA0  5026               	movf	(___fleq@ff2+3)^0,w,c
  7183  003BA2  1822               	xorwf	(___fleq@ff1+3)^0,w,c
  7184  003BA4  B4D8               	btfsc	status,2,c
  7185  003BA6  EFD7  F01D         	goto	u6911
  7186  003BAA  EFD9  F01D         	goto	u6910
  7187  003BAE                     u6911:
  7188  003BAE  EFDC  F01D         	goto	l5059
  7189  003BB2                     u6910:
  7190  003BB2  90D8               	bcf	status,0,c
  7191  003BB4  EFDD  F01D         	goto	l344
  7192  003BB8                     l5059:
  7193  003BB8  80D8               	bsf	status,0,c
  7194  003BBA                     l344:
  7195  003BBA  0012               	return		;funcret
  7196  003BBC                     __end_of___fleq:
  7197                           	callstack 0
  7198                           
  7199 ;; *************** function ___fldiv *****************
  7200 ;; Defined at:
  7201 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  b               4   30[COMRAM] unsigned char 
  7204 ;;  a               4   34[COMRAM] unsigned char 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  grs             4    7[BANK0 ] unsigned long 
  7207 ;;  rem             4    0[BANK0 ] unsigned long 
  7208 ;;  new_exp         2    5[BANK0 ] short 
  7209 ;;  aexp            1   12[BANK0 ] unsigned char 
  7210 ;;  bexp            1   11[BANK0 ] unsigned char 
  7211 ;;  sign            1    4[BANK0 ] unsigned char 
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  4   30[COMRAM] unsigned char 
  7214 ;; Registers used:
  7215 ;;		wreg, status,2, status,0
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7221 ;;      Params:         8       0       0       0       0       0       0       0       0
  7222 ;;      Locals:         0      13       0       0       0       0       0       0       0
  7223 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7224 ;;      Totals:        12      13       0       0       0       0       0       0       0
  7225 ;;Total ram usage:       25 bytes
  7226 ;; Hardware stack levels used: 1
  7227 ;; Hardware stack levels required when called: 4
  7228 ;; This function calls:
  7229 ;;		Nothing
  7230 ;; This function is called by:
  7231 ;;		_efgtoa
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text22
  7236  0027B6                     __ptext22:
  7237                           	callstack 0
  7238  0027B6                     ___fldiv:
  7239                           	callstack 22
  7240  0027B6  5022               	movf	(___fldiv@b+3)^0,w,c
  7241  0027B8  0B80               	andlw	128
  7242  0027BA  0100               	movlb	0	; () banked
  7243  0027BC  6F64               	movwf	___fldiv@sign& (0+255),b
  7244  0027BE  5022               	movf	(___fldiv@b+3)^0,w,c
  7245  0027C0  2422               	addwf	(___fldiv@b+3)^0,w,c
  7246  0027C2  6F6B               	movwf	___fldiv@bexp& (0+255),b
  7247  0027C4                     
  7248                           ; BSR set to: 0
  7249  0027C4  AE21               	btfss	(___fldiv@b+2)^0,7,c
  7250  0027C6  EFE7  F013         	goto	u6351
  7251  0027CA  EFE9  F013         	goto	u6350
  7252  0027CE                     u6351:
  7253  0027CE  EFEA  F013         	goto	l4699
  7254  0027D2                     u6350:
  7255  0027D2                     
  7256                           ; BSR set to: 0
  7257  0027D2  816B               	bsf	___fldiv@bexp& (0+255),0,b
  7258  0027D4                     l4699:
  7259                           
  7260                           ; BSR set to: 0
  7261  0027D4  516B               	movf	___fldiv@bexp& (0+255),w,b
  7262  0027D6  B4D8               	btfsc	status,2,c
  7263  0027D8  EFF0  F013         	goto	u6361
  7264  0027DC  EFF2  F013         	goto	u6360
  7265  0027E0                     u6361:
  7266  0027E0  EF07  F014         	goto	l4709
  7267  0027E4                     u6360:
  7268  0027E4                     
  7269                           ; BSR set to: 0
  7270  0027E4  296B               	incf	___fldiv@bexp& (0+255),w,b
  7271  0027E6  A4D8               	btfss	status,2,c
  7272  0027E8  EFF8  F013         	goto	u6371
  7273  0027EC  EFFA  F013         	goto	u6370
  7274  0027F0                     u6371:
  7275  0027F0  EF02  F014         	goto	l4705
  7276  0027F4                     u6370:
  7277  0027F4                     
  7278                           ; BSR set to: 0
  7279  0027F4  0E00               	movlw	0
  7280  0027F6  6E1F               	movwf	___fldiv@b^0,c
  7281  0027F8  0E00               	movlw	0
  7282  0027FA  6E20               	movwf	(___fldiv@b+1)^0,c
  7283  0027FC  0E00               	movlw	0
  7284  0027FE  6E21               	movwf	(___fldiv@b+2)^0,c
  7285  002800  0E00               	movlw	0
  7286  002802  6E22               	movwf	(___fldiv@b+3)^0,c
  7287  002804                     l4705:
  7288                           
  7289                           ; BSR set to: 0
  7290  002804  8E21               	bsf	(___fldiv@b+2)^0,7,c
  7291  002806                     
  7292                           ; BSR set to: 0
  7293  002806  0E00               	movlw	0
  7294  002808  6E22               	movwf	(___fldiv@b+3)^0,c
  7295  00280A  EF0F  F014         	goto	l4711
  7296  00280E                     l4709:
  7297                           
  7298                           ; BSR set to: 0
  7299  00280E  0E00               	movlw	0
  7300  002810  6E1F               	movwf	___fldiv@b^0,c
  7301  002812  0E00               	movlw	0
  7302  002814  6E20               	movwf	(___fldiv@b+1)^0,c
  7303  002816  0E00               	movlw	0
  7304  002818  6E21               	movwf	(___fldiv@b+2)^0,c
  7305  00281A  0E00               	movlw	0
  7306  00281C  6E22               	movwf	(___fldiv@b+3)^0,c
  7307  00281E                     l4711:
  7308                           
  7309                           ; BSR set to: 0
  7310  00281E  5026               	movf	(___fldiv@a+3)^0,w,c
  7311  002820  0B80               	andlw	128
  7312  002822  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  7313  002824                     
  7314                           ; BSR set to: 0
  7315  002824  5026               	movf	(___fldiv@a+3)^0,w,c
  7316  002826  2426               	addwf	(___fldiv@a+3)^0,w,c
  7317  002828  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7318  00282A                     
  7319                           ; BSR set to: 0
  7320  00282A  AE25               	btfss	(___fldiv@a+2)^0,7,c
  7321  00282C  EF1A  F014         	goto	u6381
  7322  002830  EF1C  F014         	goto	u6380
  7323  002834                     u6381:
  7324  002834  EF1D  F014         	goto	l4719
  7325  002838                     u6380:
  7326  002838                     
  7327                           ; BSR set to: 0
  7328  002838  816C               	bsf	___fldiv@aexp& (0+255),0,b
  7329  00283A                     l4719:
  7330                           
  7331                           ; BSR set to: 0
  7332  00283A  516C               	movf	___fldiv@aexp& (0+255),w,b
  7333  00283C  B4D8               	btfsc	status,2,c
  7334  00283E  EF23  F014         	goto	u6391
  7335  002842  EF25  F014         	goto	u6390
  7336  002846                     u6391:
  7337  002846  EF3A  F014         	goto	l4729
  7338  00284A                     u6390:
  7339  00284A                     
  7340                           ; BSR set to: 0
  7341  00284A  296C               	incf	___fldiv@aexp& (0+255),w,b
  7342  00284C  A4D8               	btfss	status,2,c
  7343  00284E  EF2B  F014         	goto	u6401
  7344  002852  EF2D  F014         	goto	u6400
  7345  002856                     u6401:
  7346  002856  EF35  F014         	goto	l4725
  7347  00285A                     u6400:
  7348  00285A                     
  7349                           ; BSR set to: 0
  7350  00285A  0E00               	movlw	0
  7351  00285C  6E23               	movwf	___fldiv@a^0,c
  7352  00285E  0E00               	movlw	0
  7353  002860  6E24               	movwf	(___fldiv@a+1)^0,c
  7354  002862  0E00               	movlw	0
  7355  002864  6E25               	movwf	(___fldiv@a+2)^0,c
  7356  002866  0E00               	movlw	0
  7357  002868  6E26               	movwf	(___fldiv@a+3)^0,c
  7358  00286A                     l4725:
  7359                           
  7360                           ; BSR set to: 0
  7361  00286A  8E25               	bsf	(___fldiv@a+2)^0,7,c
  7362  00286C                     
  7363                           ; BSR set to: 0
  7364  00286C  0E00               	movlw	0
  7365  00286E  6E26               	movwf	(___fldiv@a+3)^0,c
  7366  002870  EF42  F014         	goto	l4731
  7367  002874                     l4729:
  7368                           
  7369                           ; BSR set to: 0
  7370  002874  0E00               	movlw	0
  7371  002876  6E23               	movwf	___fldiv@a^0,c
  7372  002878  0E00               	movlw	0
  7373  00287A  6E24               	movwf	(___fldiv@a+1)^0,c
  7374  00287C  0E00               	movlw	0
  7375  00287E  6E25               	movwf	(___fldiv@a+2)^0,c
  7376  002880  0E00               	movlw	0
  7377  002882  6E26               	movwf	(___fldiv@a+3)^0,c
  7378  002884                     l4731:
  7379                           
  7380                           ; BSR set to: 0
  7381  002884  5023               	movf	___fldiv@a^0,w,c
  7382  002886  1024               	iorwf	(___fldiv@a+1)^0,w,c
  7383  002888  1025               	iorwf	(___fldiv@a+2)^0,w,c
  7384  00288A  1026               	iorwf	(___fldiv@a+3)^0,w,c
  7385  00288C  A4D8               	btfss	status,2,c
  7386  00288E  EF4B  F014         	goto	u6411
  7387  002892  EF4D  F014         	goto	u6410
  7388  002896                     u6411:
  7389  002896  EF65  F014         	goto	l4743
  7390  00289A                     u6410:
  7391  00289A                     
  7392                           ; BSR set to: 0
  7393  00289A  0E00               	movlw	0
  7394  00289C  6E1F               	movwf	___fldiv@b^0,c
  7395  00289E  0E00               	movlw	0
  7396  0028A0  6E20               	movwf	(___fldiv@b+1)^0,c
  7397  0028A2  0E00               	movlw	0
  7398  0028A4  6E21               	movwf	(___fldiv@b+2)^0,c
  7399  0028A6  0E00               	movlw	0
  7400  0028A8  6E22               	movwf	(___fldiv@b+3)^0,c
  7401  0028AA                     
  7402                           ; BSR set to: 0
  7403  0028AA  0E80               	movlw	128
  7404  0028AC  1221               	iorwf	(___fldiv@b+2)^0,f,c
  7405  0028AE  0E7F               	movlw	127
  7406  0028B0  1222               	iorwf	(___fldiv@b+3)^0,f,c
  7407  0028B2                     l4737:
  7408                           
  7409                           ; BSR set to: 0
  7410  0028B2  5164               	movf	___fldiv@sign& (0+255),w,b
  7411  0028B4  1222               	iorwf	(___fldiv@b+3)^0,f,c
  7412  0028B6                     
  7413                           ; BSR set to: 0
  7414  0028B6  C01F  F01F         	movff	___fldiv@b,?___fldiv
  7415  0028BA  C020  F020         	movff	___fldiv@b+1,?___fldiv+1
  7416  0028BE  C021  F021         	movff	___fldiv@b+2,?___fldiv+2
  7417  0028C2  C022  F022         	movff	___fldiv@b+3,?___fldiv+3
  7418  0028C6  EFA8  F015         	goto	l667
  7419  0028CA                     l4743:
  7420                           
  7421                           ; BSR set to: 0
  7422  0028CA  516B               	movf	___fldiv@bexp& (0+255),w,b
  7423  0028CC  A4D8               	btfss	status,2,c
  7424  0028CE  EF6B  F014         	goto	u6421
  7425  0028D2  EF6D  F014         	goto	u6420
  7426  0028D6                     u6421:
  7427  0028D6  EF77  F014         	goto	l4751
  7428  0028DA                     u6420:
  7429  0028DA                     
  7430                           ; BSR set to: 0
  7431  0028DA  0E00               	movlw	0
  7432  0028DC  6E1F               	movwf	?___fldiv^0,c
  7433  0028DE  0E00               	movlw	0
  7434  0028E0  6E20               	movwf	(?___fldiv+1)^0,c
  7435  0028E2  0E00               	movlw	0
  7436  0028E4  6E21               	movwf	(?___fldiv+2)^0,c
  7437  0028E6  0E00               	movlw	0
  7438  0028E8  6E22               	movwf	(?___fldiv+3)^0,c
  7439  0028EA  EFA8  F015         	goto	l667
  7440  0028EE                     l4751:
  7441                           
  7442                           ; BSR set to: 0
  7443  0028EE  516C               	movf	___fldiv@aexp& (0+255),w,b
  7444  0028F0  C06B  F027         	movff	___fldiv@bexp,??___fldiv
  7445  0028F4  6A28               	clrf	(??___fldiv+1)^0,c
  7446  0028F6  5E27               	subwf	??___fldiv^0,f,c
  7447  0028F8  0E00               	movlw	0
  7448  0028FA  5A28               	subwfb	(??___fldiv+1)^0,f,c
  7449  0028FC  0E7F               	movlw	127
  7450  0028FE  2427               	addwf	??___fldiv^0,w,c
  7451  002900  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7452  002902  0E00               	movlw	0
  7453  002904  2028               	addwfc	(??___fldiv+1)^0,w,c
  7454  002906  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7455  002908                     
  7456                           ; BSR set to: 0
  7457  002908  C01F  F060         	movff	___fldiv@b,___fldiv@rem
  7458  00290C  C020  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  7459  002910  C021  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  7460  002914  C022  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  7461  002918                     
  7462                           ; BSR set to: 0
  7463  002918  0E00               	movlw	0
  7464  00291A  6E1F               	movwf	___fldiv@b^0,c
  7465  00291C  0E00               	movlw	0
  7466  00291E  6E20               	movwf	(___fldiv@b+1)^0,c
  7467  002920  0E00               	movlw	0
  7468  002922  6E21               	movwf	(___fldiv@b+2)^0,c
  7469  002924  0E00               	movlw	0
  7470  002926  6E22               	movwf	(___fldiv@b+3)^0,c
  7471  002928                     
  7472                           ; BSR set to: 0
  7473  002928  0E00               	movlw	0
  7474  00292A  6F67               	movwf	___fldiv@grs& (0+255),b
  7475  00292C  0E00               	movlw	0
  7476  00292E  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  7477  002930  0E00               	movlw	0
  7478  002932  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  7479  002934  0E00               	movlw	0
  7480  002936  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  7481  002938                     
  7482                           ; BSR set to: 0
  7483  002938  0E00               	movlw	0
  7484  00293A  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7485  00293C  EFD8  F014         	goto	l669
  7486  002940                     l4761:
  7487                           
  7488                           ; BSR set to: 0
  7489  002940  516C               	movf	___fldiv@aexp& (0+255),w,b
  7490  002942  B4D8               	btfsc	status,2,c
  7491  002944  EFA6  F014         	goto	u6431
  7492  002948  EFA8  F014         	goto	u6430
  7493  00294C                     u6431:
  7494  00294C  EFBF  F014         	goto	l4769
  7495  002950                     u6430:
  7496  002950                     
  7497                           ; BSR set to: 0
  7498  002950  90D8               	bcf	status,0,c
  7499  002952  3760               	rlcf	___fldiv@rem& (0+255),f,b
  7500  002954  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7501  002956  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7502  002958  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7503  00295A  90D8               	bcf	status,0,c
  7504  00295C  361F               	rlcf	___fldiv@b^0,f,c
  7505  00295E  3620               	rlcf	(___fldiv@b+1)^0,f,c
  7506  002960  3621               	rlcf	(___fldiv@b+2)^0,f,c
  7507  002962  3622               	rlcf	(___fldiv@b+3)^0,f,c
  7508  002964                     
  7509                           ; BSR set to: 0
  7510  002964  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7511  002966  EFB7  F014         	goto	u6441
  7512  00296A  EFB9  F014         	goto	u6440
  7513  00296E                     u6441:
  7514  00296E  EFBA  F014         	goto	l672
  7515  002972                     u6440:
  7516  002972                     
  7517                           ; BSR set to: 0
  7518  002972  801F               	bsf	___fldiv@b^0,0,c
  7519  002974                     l672:
  7520                           
  7521                           ; BSR set to: 0
  7522  002974  90D8               	bcf	status,0,c
  7523  002976  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7524  002978  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7525  00297A  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7526  00297C  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7527  00297E                     l4769:
  7528                           
  7529                           ; BSR set to: 0
  7530  00297E  5023               	movf	___fldiv@a^0,w,c
  7531  002980  5D60               	subwf	___fldiv@rem& (0+255),w,b
  7532  002982  5024               	movf	(___fldiv@a+1)^0,w,c
  7533  002984  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7534  002986  5025               	movf	(___fldiv@a+2)^0,w,c
  7535  002988  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7536  00298A  5026               	movf	(___fldiv@a+3)^0,w,c
  7537  00298C  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7538  00298E  A0D8               	btfss	status,0,c
  7539  002990  EFCC  F014         	goto	u6451
  7540  002994  EFCE  F014         	goto	u6450
  7541  002998                     u6451:
  7542  002998  EFD7  F014         	goto	l4775
  7543  00299C                     u6450:
  7544  00299C                     
  7545                           ; BSR set to: 0
  7546  00299C  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7547  00299E                     
  7548                           ; BSR set to: 0
  7549  00299E  5023               	movf	___fldiv@a^0,w,c
  7550  0029A0  5F60               	subwf	___fldiv@rem& (0+255),f,b
  7551  0029A2  5024               	movf	(___fldiv@a+1)^0,w,c
  7552  0029A4  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7553  0029A6  5025               	movf	(___fldiv@a+2)^0,w,c
  7554  0029A8  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7555  0029AA  5026               	movf	(___fldiv@a+3)^0,w,c
  7556  0029AC  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7557  0029AE                     l4775:
  7558                           
  7559                           ; BSR set to: 0
  7560  0029AE  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  7561  0029B0                     l669:
  7562                           
  7563                           ; BSR set to: 0
  7564  0029B0  0E19               	movlw	25
  7565  0029B2  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  7566  0029B4  EFDE  F014         	goto	u6461
  7567  0029B8  EFE0  F014         	goto	u6460
  7568  0029BC                     u6461:
  7569  0029BC  EFA0  F014         	goto	l4761
  7570  0029C0                     u6460:
  7571  0029C0                     
  7572                           ; BSR set to: 0
  7573  0029C0  5160               	movf	___fldiv@rem& (0+255),w,b
  7574  0029C2  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7575  0029C4  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7576  0029C6  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7577  0029C8  B4D8               	btfsc	status,2,c
  7578  0029CA  EFE9  F014         	goto	u6471
  7579  0029CE  EFEB  F014         	goto	u6470
  7580  0029D2                     u6471:
  7581  0029D2  EF03  F015         	goto	l4787
  7582  0029D6                     u6470:
  7583  0029D6                     
  7584                           ; BSR set to: 0
  7585  0029D6  8167               	bsf	___fldiv@grs& (0+255),0,b
  7586  0029D8  EF03  F015         	goto	l4787
  7587  0029DC                     l4781:
  7588                           
  7589                           ; BSR set to: 0
  7590  0029DC  90D8               	bcf	status,0,c
  7591  0029DE  361F               	rlcf	___fldiv@b^0,f,c
  7592  0029E0  3620               	rlcf	(___fldiv@b+1)^0,f,c
  7593  0029E2  3621               	rlcf	(___fldiv@b+2)^0,f,c
  7594  0029E4  3622               	rlcf	(___fldiv@b+3)^0,f,c
  7595  0029E6                     
  7596                           ; BSR set to: 0
  7597  0029E6  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7598  0029E8  EFF8  F014         	goto	u6481
  7599  0029EC  EFFA  F014         	goto	u6480
  7600  0029F0                     u6481:
  7601  0029F0  EFFB  F014         	goto	l678
  7602  0029F4                     u6480:
  7603  0029F4                     
  7604                           ; BSR set to: 0
  7605  0029F4  801F               	bsf	___fldiv@b^0,0,c
  7606  0029F6                     l678:
  7607                           
  7608                           ; BSR set to: 0
  7609  0029F6  90D8               	bcf	status,0,c
  7610  0029F8  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7611  0029FA  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7612  0029FC  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7613  0029FE  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7614  002A00  0765               	decf	___fldiv@new_exp& (0+255),f,b
  7615  002A02  A0D8               	btfss	status,0,c
  7616  002A04  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7617  002A06                     l4787:
  7618                           
  7619                           ; BSR set to: 0
  7620  002A06  AE21               	btfss	(___fldiv@b+2)^0,7,c
  7621  002A08  EF08  F015         	goto	u6491
  7622  002A0C  EF0A  F015         	goto	u6490
  7623  002A10                     u6491:
  7624  002A10  EFEE  F014         	goto	l4781
  7625  002A14                     u6490:
  7626  002A14                     
  7627                           ; BSR set to: 0
  7628  002A14  0E00               	movlw	0
  7629  002A16  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7630  002A18                     
  7631                           ; BSR set to: 0
  7632  002A18  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7633  002A1A  EF11  F015         	goto	u6501
  7634  002A1E  EF13  F015         	goto	u6500
  7635  002A22                     u6501:
  7636  002A22  EF37  F015         	goto	l680
  7637  002A26                     u6500:
  7638  002A26                     
  7639                           ; BSR set to: 0
  7640  002A26  0EFF               	movlw	255
  7641  002A28  1567               	andwf	___fldiv@grs& (0+255),w,b
  7642  002A2A  6E27               	movwf	??___fldiv^0,c
  7643  002A2C  0EFF               	movlw	255
  7644  002A2E  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7645  002A30  6E28               	movwf	(??___fldiv+1)^0,c
  7646  002A32  0EFF               	movlw	255
  7647  002A34  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7648  002A36  6E29               	movwf	(??___fldiv+2)^0,c
  7649  002A38  0E7F               	movlw	127
  7650  002A3A  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7651  002A3C  6E2A               	movwf	(??___fldiv+3)^0,c
  7652  002A3E  5027               	movf	??___fldiv^0,w,c
  7653  002A40  1028               	iorwf	(??___fldiv+1)^0,w,c
  7654  002A42  1029               	iorwf	(??___fldiv+2)^0,w,c
  7655  002A44  102A               	iorwf	(??___fldiv+3)^0,w,c
  7656  002A46  B4D8               	btfsc	status,2,c
  7657  002A48  EF28  F015         	goto	u6511
  7658  002A4C  EF2A  F015         	goto	u6510
  7659  002A50                     u6511:
  7660  002A50  EF2E  F015         	goto	l681
  7661  002A54                     u6510:
  7662  002A54                     l4795:
  7663                           
  7664                           ; BSR set to: 0
  7665  002A54  0E01               	movlw	1
  7666  002A56  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7667  002A58  EF37  F015         	goto	l680
  7668  002A5C                     l681:
  7669                           
  7670                           ; BSR set to: 0
  7671  002A5C  A01F               	btfss	___fldiv@b^0,0,c
  7672  002A5E  EF33  F015         	goto	u6521
  7673  002A62  EF35  F015         	goto	u6520
  7674  002A66                     u6521:
  7675  002A66  EF37  F015         	goto	l680
  7676  002A6A                     u6520:
  7677  002A6A  EF2A  F015         	goto	l4795
  7678  002A6E                     l680:
  7679                           
  7680                           ; BSR set to: 0
  7681  002A6E  516C               	movf	___fldiv@aexp& (0+255),w,b
  7682  002A70  B4D8               	btfsc	status,2,c
  7683  002A72  EF3D  F015         	goto	u6531
  7684  002A76  EF3F  F015         	goto	u6530
  7685  002A7A                     u6531:
  7686  002A7A  EF63  F015         	goto	l4807
  7687  002A7E                     u6530:
  7688  002A7E                     
  7689                           ; BSR set to: 0
  7690  002A7E  0E01               	movlw	1
  7691  002A80  261F               	addwf	___fldiv@b^0,f,c
  7692  002A82  0E00               	movlw	0
  7693  002A84  2220               	addwfc	(___fldiv@b+1)^0,f,c
  7694  002A86  2221               	addwfc	(___fldiv@b+2)^0,f,c
  7695  002A88  2222               	addwfc	(___fldiv@b+3)^0,f,c
  7696  002A8A                     
  7697                           ; BSR set to: 0
  7698  002A8A  A022               	btfss	(___fldiv@b+3)^0,0,c
  7699  002A8C  EF4A  F015         	goto	u6541
  7700  002A90  EF4C  F015         	goto	u6540
  7701  002A94                     u6541:
  7702  002A94  EF63  F015         	goto	l4807
  7703  002A98                     u6540:
  7704  002A98                     
  7705                           ; BSR set to: 0
  7706  002A98  C01F  F027         	movff	___fldiv@b,??___fldiv
  7707  002A9C  C020  F028         	movff	___fldiv@b+1,??___fldiv+1
  7708  002AA0  C021  F029         	movff	___fldiv@b+2,??___fldiv+2
  7709  002AA4  C022  F02A         	movff	___fldiv@b+3,??___fldiv+3
  7710  002AA8  342A               	rlcf	(??___fldiv+3)^0,w,c
  7711  002AAA  322A               	rrcf	(??___fldiv+3)^0,f,c
  7712  002AAC  3229               	rrcf	(??___fldiv+2)^0,f,c
  7713  002AAE  3228               	rrcf	(??___fldiv+1)^0,f,c
  7714  002AB0  3227               	rrcf	??___fldiv^0,f,c
  7715  002AB2  C027  F01F         	movff	??___fldiv,___fldiv@b
  7716  002AB6  C028  F020         	movff	??___fldiv+1,___fldiv@b+1
  7717  002ABA  C029  F021         	movff	??___fldiv+2,___fldiv@b+2
  7718  002ABE  C02A  F022         	movff	??___fldiv+3,___fldiv@b+3
  7719  002AC2                     
  7720                           ; BSR set to: 0
  7721  002AC2  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  7722  002AC4  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7723  002AC6                     l4807:
  7724                           
  7725                           ; BSR set to: 0
  7726  002AC6  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7727  002AC8  EF6E  F015         	goto	u6551
  7728  002ACC  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7729  002ACE  E108               	bnz	u6550
  7730  002AD0  2965               	incf	___fldiv@new_exp& (0+255),w,b
  7731  002AD2  A0D8               	btfss	status,0,c
  7732  002AD4  EF6E  F015         	goto	u6551
  7733  002AD8  EF70  F015         	goto	u6550
  7734  002ADC                     u6551:
  7735  002ADC  EF7B  F015         	goto	l4811
  7736  002AE0                     u6550:
  7737  002AE0                     
  7738                           ; BSR set to: 0
  7739  002AE0  0E00               	movlw	0
  7740  002AE2  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7741  002AE4  6965               	setf	___fldiv@new_exp& (0+255),b
  7742  002AE6  0E00               	movlw	0
  7743  002AE8  6E1F               	movwf	___fldiv@b^0,c
  7744  002AEA  0E00               	movlw	0
  7745  002AEC  6E20               	movwf	(___fldiv@b+1)^0,c
  7746  002AEE  0E00               	movlw	0
  7747  002AF0  6E21               	movwf	(___fldiv@b+2)^0,c
  7748  002AF2  0E00               	movlw	0
  7749  002AF4  6E22               	movwf	(___fldiv@b+3)^0,c
  7750  002AF6                     l4811:
  7751                           
  7752                           ; BSR set to: 0
  7753  002AF6  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7754  002AF8  EF88  F015         	goto	u6560
  7755  002AFC  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7756  002AFE  E106               	bnz	u6561
  7757  002B00  0565               	decf	___fldiv@new_exp& (0+255),w,b
  7758  002B02  B0D8               	btfsc	status,0,c
  7759  002B04  EF86  F015         	goto	u6561
  7760  002B08  EF88  F015         	goto	u6560
  7761  002B0C                     u6561:
  7762  002B0C  EF96  F015         	goto	l4815
  7763  002B10                     u6560:
  7764  002B10                     
  7765                           ; BSR set to: 0
  7766  002B10  0E00               	movlw	0
  7767  002B12  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7768  002B14  0E00               	movlw	0
  7769  002B16  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7770  002B18  0E00               	movlw	0
  7771  002B1A  6E1F               	movwf	___fldiv@b^0,c
  7772  002B1C  0E00               	movlw	0
  7773  002B1E  6E20               	movwf	(___fldiv@b+1)^0,c
  7774  002B20  0E00               	movlw	0
  7775  002B22  6E21               	movwf	(___fldiv@b+2)^0,c
  7776  002B24  0E00               	movlw	0
  7777  002B26  6E22               	movwf	(___fldiv@b+3)^0,c
  7778  002B28  0E00               	movlw	0
  7779  002B2A  6F64               	movwf	___fldiv@sign& (0+255),b
  7780  002B2C                     l4815:
  7781                           
  7782                           ; BSR set to: 0
  7783  002B2C  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  7784  002B30                     
  7785                           ; BSR set to: 0
  7786  002B30  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  7787  002B32  EF9D  F015         	goto	u6571
  7788  002B36  EF9F  F015         	goto	u6570
  7789  002B3A                     u6571:
  7790  002B3A  EFA2  F015         	goto	l4821
  7791  002B3E                     u6570:
  7792  002B3E                     
  7793                           ; BSR set to: 0
  7794  002B3E  8E21               	bsf	(___fldiv@b+2)^0,7,c
  7795  002B40  EFA3  F015         	goto	l4823
  7796  002B44                     l4821:
  7797                           
  7798                           ; BSR set to: 0
  7799  002B44  9E21               	bcf	(___fldiv@b+2)^0,7,c
  7800  002B46                     l4823:
  7801                           
  7802                           ; BSR set to: 0
  7803  002B46  90D8               	bcf	status,0,c
  7804  002B48  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  7805  002B4A  6E22               	movwf	(___fldiv@b+3)^0,c
  7806  002B4C  EF59  F014         	goto	l4737
  7807  002B50                     l667:
  7808                           
  7809                           ; BSR set to: 0
  7810  002B50  0012               	return		;funcret
  7811  002B52                     __end_of___fldiv:
  7812                           	callstack 0
  7813                           
  7814 ;; *************** function ___awmod *****************
  7815 ;; Defined at:
  7816 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  dividend        2   30[COMRAM] int 
  7819 ;;  divisor         2   32[COMRAM] int 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  sign            1   35[COMRAM] unsigned char 
  7822 ;;  counter         1   34[COMRAM] unsigned char 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  2   30[COMRAM] int 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7832 ;;      Params:         4       0       0       0       0       0       0       0       0
  7833 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7835 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7836 ;;Total ram usage:        6 bytes
  7837 ;; Hardware stack levels used: 1
  7838 ;; Hardware stack levels required when called: 4
  7839 ;; This function calls:
  7840 ;;		Nothing
  7841 ;; This function is called by:
  7842 ;;		_efgtoa
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text23
  7847  003A62                     __ptext23:
  7848                           	callstack 0
  7849  003A62                     ___awmod:
  7850                           	callstack 22
  7851  003A62  0E00               	movlw	0
  7852  003A64  6E24               	movwf	___awmod@sign^0,c
  7853  003A66  BE20               	btfsc	(___awmod@dividend+1)^0,7,c
  7854  003A68  EF3A  F01D         	goto	u6830
  7855  003A6C  EF38  F01D         	goto	u6831
  7856  003A70                     u6831:
  7857  003A70  EF40  F01D         	goto	l5019
  7858  003A74                     u6830:
  7859  003A74  6C1F               	negf	___awmod@dividend^0,c
  7860  003A76  1E20               	comf	(___awmod@dividend+1)^0,f,c
  7861  003A78  B0D8               	btfsc	status,0,c
  7862  003A7A  2A20               	incf	(___awmod@dividend+1)^0,f,c
  7863  003A7C  0E01               	movlw	1
  7864  003A7E  6E24               	movwf	___awmod@sign^0,c
  7865  003A80                     l5019:
  7866  003A80  BE22               	btfsc	(___awmod@divisor+1)^0,7,c
  7867  003A82  EF47  F01D         	goto	u6840
  7868  003A86  EF45  F01D         	goto	u6841
  7869  003A8A                     u6841:
  7870  003A8A  EF4B  F01D         	goto	l5023
  7871  003A8E                     u6840:
  7872  003A8E  6C21               	negf	___awmod@divisor^0,c
  7873  003A90  1E22               	comf	(___awmod@divisor+1)^0,f,c
  7874  003A92  B0D8               	btfsc	status,0,c
  7875  003A94  2A22               	incf	(___awmod@divisor+1)^0,f,c
  7876  003A96                     l5023:
  7877  003A96  5021               	movf	___awmod@divisor^0,w,c
  7878  003A98  1022               	iorwf	(___awmod@divisor+1)^0,w,c
  7879  003A9A  B4D8               	btfsc	status,2,c
  7880  003A9C  EF52  F01D         	goto	u6851
  7881  003AA0  EF54  F01D         	goto	u6850
  7882  003AA4                     u6851:
  7883  003AA4  EF78  F01D         	goto	l5039
  7884  003AA8                     u6850:
  7885  003AA8  0E01               	movlw	1
  7886  003AAA  6E23               	movwf	___awmod@counter^0,c
  7887  003AAC  EF5C  F01D         	goto	l5029
  7888  003AB0                     l5027:
  7889  003AB0  90D8               	bcf	status,0,c
  7890  003AB2  3621               	rlcf	___awmod@divisor^0,f,c
  7891  003AB4  3622               	rlcf	(___awmod@divisor+1)^0,f,c
  7892  003AB6  2A23               	incf	___awmod@counter^0,f,c
  7893  003AB8                     l5029:
  7894  003AB8  AE22               	btfss	(___awmod@divisor+1)^0,7,c
  7895  003ABA  EF61  F01D         	goto	u6861
  7896  003ABE  EF63  F01D         	goto	u6860
  7897  003AC2                     u6861:
  7898  003AC2  EF58  F01D         	goto	l5027
  7899  003AC6                     u6860:
  7900  003AC6                     l5031:
  7901  003AC6  5021               	movf	___awmod@divisor^0,w,c
  7902  003AC8  5C1F               	subwf	___awmod@dividend^0,w,c
  7903  003ACA  5022               	movf	(___awmod@divisor+1)^0,w,c
  7904  003ACC  5820               	subwfb	(___awmod@dividend+1)^0,w,c
  7905  003ACE  A0D8               	btfss	status,0,c
  7906  003AD0  EF6C  F01D         	goto	u6871
  7907  003AD4  EF6E  F01D         	goto	u6870
  7908  003AD8                     u6871:
  7909  003AD8  EF72  F01D         	goto	l5035
  7910  003ADC                     u6870:
  7911  003ADC  5021               	movf	___awmod@divisor^0,w,c
  7912  003ADE  5E1F               	subwf	___awmod@dividend^0,f,c
  7913  003AE0  5022               	movf	(___awmod@divisor+1)^0,w,c
  7914  003AE2  5A20               	subwfb	(___awmod@dividend+1)^0,f,c
  7915  003AE4                     l5035:
  7916  003AE4  90D8               	bcf	status,0,c
  7917  003AE6  3222               	rrcf	(___awmod@divisor+1)^0,f,c
  7918  003AE8  3221               	rrcf	___awmod@divisor^0,f,c
  7919  003AEA  2E23               	decfsz	___awmod@counter^0,f,c
  7920  003AEC  EF63  F01D         	goto	l5031
  7921  003AF0                     l5039:
  7922  003AF0  5024               	movf	___awmod@sign^0,w,c
  7923  003AF2  B4D8               	btfsc	status,2,c
  7924  003AF4  EF7E  F01D         	goto	u6881
  7925  003AF8  EF80  F01D         	goto	u6880
  7926  003AFC                     u6881:
  7927  003AFC  EF84  F01D         	goto	l5043
  7928  003B00                     u6880:
  7929  003B00  6C1F               	negf	___awmod@dividend^0,c
  7930  003B02  1E20               	comf	(___awmod@dividend+1)^0,f,c
  7931  003B04  B0D8               	btfsc	status,0,c
  7932  003B06  2A20               	incf	(___awmod@dividend+1)^0,f,c
  7933  003B08                     l5043:
  7934  003B08  C01F  F01F         	movff	___awmod@dividend,?___awmod
  7935  003B0C  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  7936  003B10  0012               	return		;funcret
  7937  003B12                     __end_of___awmod:
  7938                           	callstack 0
  7939                           
  7940 ;; *************** function ___awdiv *****************
  7941 ;; Defined at:
  7942 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  dividend        2   30[COMRAM] int 
  7945 ;;  divisor         2   32[COMRAM] int 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  quotient        2   36[COMRAM] int 
  7948 ;;  sign            1   35[COMRAM] unsigned char 
  7949 ;;  counter         1   34[COMRAM] unsigned char 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  2   30[COMRAM] int 
  7952 ;; Registers used:
  7953 ;;		wreg, status,2, status,0
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7959 ;;      Params:         4       0       0       0       0       0       0       0       0
  7960 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7962 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7963 ;;Total ram usage:        8 bytes
  7964 ;; Hardware stack levels used: 1
  7965 ;; Hardware stack levels required when called: 4
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_efgtoa
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text24
  7974  0038EC                     __ptext24:
  7975                           	callstack 0
  7976  0038EC                     ___awdiv:
  7977                           	callstack 22
  7978  0038EC  0E00               	movlw	0
  7979  0038EE  6E24               	movwf	___awdiv@sign^0,c
  7980  0038F0  BE22               	btfsc	(___awdiv@divisor+1)^0,7,c
  7981  0038F2  EF7F  F01C         	goto	u6770
  7982  0038F6  EF7D  F01C         	goto	u6771
  7983  0038FA                     u6771:
  7984  0038FA  EF85  F01C         	goto	l4975
  7985  0038FE                     u6770:
  7986  0038FE  6C21               	negf	___awdiv@divisor^0,c
  7987  003900  1E22               	comf	(___awdiv@divisor+1)^0,f,c
  7988  003902  B0D8               	btfsc	status,0,c
  7989  003904  2A22               	incf	(___awdiv@divisor+1)^0,f,c
  7990  003906  0E01               	movlw	1
  7991  003908  6E24               	movwf	___awdiv@sign^0,c
  7992  00390A                     l4975:
  7993  00390A  BE20               	btfsc	(___awdiv@dividend+1)^0,7,c
  7994  00390C  EF8C  F01C         	goto	u6780
  7995  003910  EF8A  F01C         	goto	u6781
  7996  003914                     u6781:
  7997  003914  EF92  F01C         	goto	l4981
  7998  003918                     u6780:
  7999  003918  6C1F               	negf	___awdiv@dividend^0,c
  8000  00391A  1E20               	comf	(___awdiv@dividend+1)^0,f,c
  8001  00391C  B0D8               	btfsc	status,0,c
  8002  00391E  2A20               	incf	(___awdiv@dividend+1)^0,f,c
  8003  003920  0E01               	movlw	1
  8004  003922  1A24               	xorwf	___awdiv@sign^0,f,c
  8005  003924                     l4981:
  8006  003924  0E00               	movlw	0
  8007  003926  6E26               	movwf	(___awdiv@quotient+1)^0,c
  8008  003928  0E00               	movlw	0
  8009  00392A  6E25               	movwf	___awdiv@quotient^0,c
  8010  00392C  5021               	movf	___awdiv@divisor^0,w,c
  8011  00392E  1022               	iorwf	(___awdiv@divisor+1)^0,w,c
  8012  003930  B4D8               	btfsc	status,2,c
  8013  003932  EF9D  F01C         	goto	u6791
  8014  003936  EF9F  F01C         	goto	u6790
  8015  00393A                     u6791:
  8016  00393A  EFC7  F01C         	goto	l5003
  8017  00393E                     u6790:
  8018  00393E  0E01               	movlw	1
  8019  003940  6E23               	movwf	___awdiv@counter^0,c
  8020  003942  EFA7  F01C         	goto	l4989
  8021  003946                     l4987:
  8022  003946  90D8               	bcf	status,0,c
  8023  003948  3621               	rlcf	___awdiv@divisor^0,f,c
  8024  00394A  3622               	rlcf	(___awdiv@divisor+1)^0,f,c
  8025  00394C  2A23               	incf	___awdiv@counter^0,f,c
  8026  00394E                     l4989:
  8027  00394E  AE22               	btfss	(___awdiv@divisor+1)^0,7,c
  8028  003950  EFAC  F01C         	goto	u6801
  8029  003954  EFAE  F01C         	goto	u6800
  8030  003958                     u6801:
  8031  003958  EFA3  F01C         	goto	l4987
  8032  00395C                     u6800:
  8033  00395C                     l4991:
  8034  00395C  90D8               	bcf	status,0,c
  8035  00395E  3625               	rlcf	___awdiv@quotient^0,f,c
  8036  003960  3626               	rlcf	(___awdiv@quotient+1)^0,f,c
  8037  003962  5021               	movf	___awdiv@divisor^0,w,c
  8038  003964  5C1F               	subwf	___awdiv@dividend^0,w,c
  8039  003966  5022               	movf	(___awdiv@divisor+1)^0,w,c
  8040  003968  5820               	subwfb	(___awdiv@dividend+1)^0,w,c
  8041  00396A  A0D8               	btfss	status,0,c
  8042  00396C  EFBA  F01C         	goto	u6811
  8043  003970  EFBC  F01C         	goto	u6810
  8044  003974                     u6811:
  8045  003974  EFC1  F01C         	goto	l4999
  8046  003978                     u6810:
  8047  003978  5021               	movf	___awdiv@divisor^0,w,c
  8048  00397A  5E1F               	subwf	___awdiv@dividend^0,f,c
  8049  00397C  5022               	movf	(___awdiv@divisor+1)^0,w,c
  8050  00397E  5A20               	subwfb	(___awdiv@dividend+1)^0,f,c
  8051  003980  8025               	bsf	___awdiv@quotient^0,0,c
  8052  003982                     l4999:
  8053  003982  90D8               	bcf	status,0,c
  8054  003984  3222               	rrcf	(___awdiv@divisor+1)^0,f,c
  8055  003986  3221               	rrcf	___awdiv@divisor^0,f,c
  8056  003988  2E23               	decfsz	___awdiv@counter^0,f,c
  8057  00398A  EFAE  F01C         	goto	l4991
  8058  00398E                     l5003:
  8059  00398E  5024               	movf	___awdiv@sign^0,w,c
  8060  003990  B4D8               	btfsc	status,2,c
  8061  003992  EFCD  F01C         	goto	u6821
  8062  003996  EFCF  F01C         	goto	u6820
  8063  00399A                     u6821:
  8064  00399A  EFD3  F01C         	goto	l5007
  8065  00399E                     u6820:
  8066  00399E  6C25               	negf	___awdiv@quotient^0,c
  8067  0039A0  1E26               	comf	(___awdiv@quotient+1)^0,f,c
  8068  0039A2  B0D8               	btfsc	status,0,c
  8069  0039A4  2A26               	incf	(___awdiv@quotient+1)^0,f,c
  8070  0039A6                     l5007:
  8071  0039A6  C025  F01F         	movff	___awdiv@quotient,?___awdiv
  8072  0039AA  C026  F020         	movff	___awdiv@quotient+1,?___awdiv+1
  8073  0039AE  0012               	return		;funcret
  8074  0039B0                     __end_of___awdiv:
  8075                           	callstack 0
  8076                           
  8077 ;; *************** function _atoi *****************
  8078 ;; Defined at:
  8079 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  s               2   37[COMRAM] PTR const unsigned char 
  8082 ;;		 -> STR_4(6), 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  n               2   11[BANK0 ] int 
  8085 ;;  neg             2    4[BANK0 ] int 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  2   37[COMRAM] int 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8095 ;;      Params:         2       0       0       0       0       0       0       0       0
  8096 ;;      Locals:         0       9       0       0       0       0       0       0       0
  8097 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8098 ;;      Totals:         2      13       0       0       0       0       0       0       0
  8099 ;;Total ram usage:       15 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 5
  8102 ;; This function calls:
  8103 ;;		___wmul
  8104 ;;		_isdigit
  8105 ;;		_isspace
  8106 ;; This function is called by:
  8107 ;;		_vfpfcnvrt
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text25
  8112  002F14                     __ptext25:
  8113                           	callstack 0
  8114  002F14                     _atoi:
  8115                           	callstack 22
  8116  002F14  0E00               	movlw	0
  8117  002F16  0100               	movlb	0	; () banked
  8118  002F18  6F6C               	movwf	(atoi@n+1)& (0+255),b
  8119  002F1A  0E00               	movlw	0
  8120  002F1C  6F6B               	movwf	atoi@n& (0+255),b
  8121  002F1E  0E00               	movlw	0
  8122  002F20  6F65               	movwf	(atoi@neg+1)& (0+255),b
  8123  002F22  0E00               	movlw	0
  8124  002F24  6F64               	movwf	atoi@neg& (0+255),b
  8125  002F26  EF97  F017         	goto	l5551
  8126  002F2A                     l5549:
  8127                           
  8128                           ; BSR set to: 0
  8129  002F2A  4A26               	infsnz	atoi@s^0,f,c
  8130  002F2C  2A27               	incf	(atoi@s+1)^0,f,c
  8131  002F2E                     l5551:
  8132                           
  8133                           ; BSR set to: 0
  8134  002F2E  0E01               	movlw	1
  8135  002F30  6F6A               	movwf	_atoi$1007& (0+255),b
  8136  002F32                     
  8137                           ; BSR set to: 0
  8138  002F32  C026  FFF6         	movff	atoi@s,tblptrl
  8139  002F36  C027  FFF7         	movff	atoi@s+1,tblptrh
  8140  002F3A                     	if	0	;tblptru may be non-zero
  8141  002F3A                     	endif
  8142  002F3A                     	if	0	;tblptru may be non-zero
  8143  002F3A                     	endif
  8144  002F3A  0008               	tblrd		*
  8145  002F3C  50F5               	movf	tablat,w,c
  8146  002F3E  0A20               	xorlw	32
  8147  002F40  B4D8               	btfsc	status,2,c
  8148  002F42  EFA5  F017         	goto	u7891
  8149  002F46  EFA7  F017         	goto	u7890
  8150  002F4A                     u7891:
  8151  002F4A  EFC4  F017         	goto	l5559
  8152  002F4E                     u7890:
  8153  002F4E                     
  8154                           ; BSR set to: 0
  8155  002F4E  0EF7               	movlw	247
  8156  002F50  6F60               	movwf	??_atoi& (0+255),b
  8157  002F52  0EFF               	movlw	255
  8158  002F54  6F61               	movwf	(??_atoi+1)& (0+255),b
  8159  002F56  C026  FFF6         	movff	atoi@s,tblptrl
  8160  002F5A  C027  FFF7         	movff	atoi@s+1,tblptrh
  8161  002F5E                     	if	0	;tblptru may be non-zero
  8162  002F5E                     	endif
  8163  002F5E                     	if	0	;tblptru may be non-zero
  8164  002F5E                     	endif
  8165  002F5E  0008               	tblrd		*
  8166  002F60  50F5               	movf	tablat,w,c
  8167  002F62  6F62               	movwf	(??_atoi+2)& (0+255),b
  8168  002F64  6B63               	clrf	(??_atoi+3)& (0+255),b
  8169  002F66  5160               	movf	??_atoi& (0+255),w,b
  8170  002F68  2762               	addwf	(??_atoi+2)& (0+255),f,b
  8171  002F6A  5161               	movf	(??_atoi+1)& (0+255),w,b
  8172  002F6C  2363               	addwfc	(??_atoi+3)& (0+255),f,b
  8173  002F6E  5163               	movf	(??_atoi+3)& (0+255),w,b
  8174  002F70  E109               	bnz	u7900
  8175  002F72  0E05               	movlw	5
  8176  002F74  5D62               	subwf	(??_atoi+2)& (0+255),w,b
  8177  002F76  A0D8               	btfss	status,0,c
  8178  002F78  EFC0  F017         	goto	u7901
  8179  002F7C  EFC2  F017         	goto	u7900
  8180  002F80                     u7901:
  8181  002F80  EFC4  F017         	goto	l5559
  8182  002F84                     u7900:
  8183  002F84                     
  8184                           ; BSR set to: 0
  8185  002F84  0E00               	movlw	0
  8186  002F86  6F6A               	movwf	_atoi$1007& (0+255),b
  8187  002F88                     l5559:
  8188                           
  8189                           ; BSR set to: 0
  8190  002F88  C06A  F066         	movff	_atoi$1007,_atoi$1006
  8191  002F8C  6B67               	clrf	(_atoi$1006+1)& (0+255),b
  8192  002F8E                     
  8193                           ; BSR set to: 0
  8194  002F8E  5166               	movf	_atoi$1006& (0+255),w,b
  8195  002F90  1167               	iorwf	(_atoi$1006+1)& (0+255),w,b
  8196  002F92  A4D8               	btfss	status,2,c
  8197  002F94  EFCE  F017         	goto	u7911
  8198  002F98  EFD0  F017         	goto	u7910
  8199  002F9C                     u7911:
  8200  002F9C  EF95  F017         	goto	l5549
  8201  002FA0                     u7910:
  8202  002FA0  EFDA  F017         	goto	l5569
  8203  002FA4                     l5565:
  8204                           
  8205                           ; BSR set to: 0
  8206  002FA4  0E00               	movlw	0
  8207  002FA6  6F65               	movwf	(atoi@neg+1)& (0+255),b
  8208  002FA8  0E01               	movlw	1
  8209  002FAA  6F64               	movwf	atoi@neg& (0+255),b
  8210  002FAC                     l5567:
  8211                           
  8212                           ; BSR set to: 0
  8213  002FAC  4A26               	infsnz	atoi@s^0,f,c
  8214  002FAE  2A27               	incf	(atoi@s+1)^0,f,c
  8215  002FB0  EF10  F018         	goto	l5575
  8216  002FB4                     l5569:
  8217                           
  8218                           ; BSR set to: 0
  8219  002FB4  C026  FFF6         	movff	atoi@s,tblptrl
  8220  002FB8  C027  FFF7         	movff	atoi@s+1,tblptrh
  8221  002FBC                     	if	0	;tblptru may be non-zero
  8222  002FBC                     	endif
  8223  002FBC                     	if	0	;tblptru may be non-zero
  8224  002FBC                     	endif
  8225  002FBC  0008               	tblrd		*
  8226  002FBE  50F5               	movf	tablat,w,c
  8227  002FC0  6F60               	movwf	??_atoi& (0+255),b
  8228  002FC2  6B61               	clrf	(??_atoi+1)& (0+255),b
  8229                           
  8230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8231                           ; Switch size 1, requested type "simple"
  8232                           ; Number of cases is 1, Range of values is 0 to 0
  8233                           ; switch strategies available:
  8234                           ; Name         Instructions Cycles
  8235                           ; simple_byte            4     3 (average)
  8236                           ;	Chosen strategy is simple_byte
  8237  002FC4  5161               	movf	(??_atoi+1)& (0+255),w,b
  8238  002FC6  0A00               	xorlw	0	; case 0
  8239  002FC8  B4D8               	btfsc	status,2,c
  8240  002FCA  EFE9  F017         	goto	l5823
  8241  002FCE  EF10  F018         	goto	l5575
  8242  002FD2                     l5823:
  8243                           
  8244                           ; BSR set to: 0
  8245                           ; Switch size 1, requested type "simple"
  8246                           ; Number of cases is 2, Range of values is 43 to 45
  8247                           ; switch strategies available:
  8248                           ; Name         Instructions Cycles
  8249                           ; simple_byte            7     4 (average)
  8250                           ;	Chosen strategy is simple_byte
  8251  002FD2  5160               	movf	??_atoi& (0+255),w,b
  8252  002FD4  0A2B               	xorlw	43	; case 43
  8253  002FD6  B4D8               	btfsc	status,2,c
  8254  002FD8  EFD6  F017         	goto	l5567
  8255  002FDC  0A06               	xorlw	6	; case 45
  8256  002FDE  B4D8               	btfsc	status,2,c
  8257  002FE0  EFD2  F017         	goto	l5565
  8258  002FE4  EF10  F018         	goto	l5575
  8259  002FE8                     l5571:
  8260                           
  8261                           ; BSR set to: 0
  8262  002FE8  C06B  F01F         	movff	atoi@n,___wmul@multiplier
  8263  002FEC  C06C  F020         	movff	atoi@n+1,___wmul@multiplier+1
  8264  002FF0  0E00               	movlw	0
  8265  002FF2  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  8266  002FF4  0E0A               	movlw	10
  8267  002FF6  6E21               	movwf	___wmul@multiplicand^0,c
  8268  002FF8  EC78  F020         	call	___wmul	;wreg free
  8269  002FFC  C026  FFF6         	movff	atoi@s,tblptrl
  8270  003000  C027  FFF7         	movff	atoi@s+1,tblptrh
  8271  003004                     	if	0	;tblptru may be non-zero
  8272  003004                     	endif
  8273  003004                     	if	0	;tblptru may be non-zero
  8274  003004                     	endif
  8275  003004  0008               	tblrd		*
  8276  003006  50F5               	movf	tablat,w,c
  8277  003008  5E1F               	subwf	?___wmul^0,f,c
  8278  00300A  0E00               	movlw	0
  8279  00300C  5A20               	subwfb	(?___wmul+1)^0,f,c
  8280  00300E  0E30               	movlw	48
  8281  003010  241F               	addwf	?___wmul^0,w,c
  8282  003012  0100               	movlb	0	; () banked
  8283  003014  6F6B               	movwf	atoi@n& (0+255),b
  8284  003016  0E00               	movlw	0
  8285  003018  2020               	addwfc	(?___wmul+1)^0,w,c
  8286  00301A  6F6C               	movwf	(atoi@n+1)& (0+255),b
  8287  00301C  EFD6  F017         	goto	l5567
  8288  003020                     l5575:
  8289                           
  8290                           ; BSR set to: 0
  8291  003020  0ED0               	movlw	208
  8292  003022  6F60               	movwf	??_atoi& (0+255),b
  8293  003024  0EFF               	movlw	255
  8294  003026  6F61               	movwf	(??_atoi+1)& (0+255),b
  8295  003028  C026  FFF6         	movff	atoi@s,tblptrl
  8296  00302C  C027  FFF7         	movff	atoi@s+1,tblptrh
  8297  003030                     	if	0	;tblptru may be non-zero
  8298  003030                     	endif
  8299  003030                     	if	0	;tblptru may be non-zero
  8300  003030                     	endif
  8301  003030  0008               	tblrd		*
  8302  003032  50F5               	movf	tablat,w,c
  8303  003034  6F62               	movwf	(??_atoi+2)& (0+255),b
  8304  003036  6B63               	clrf	(??_atoi+3)& (0+255),b
  8305  003038  5160               	movf	??_atoi& (0+255),w,b
  8306  00303A  2762               	addwf	(??_atoi+2)& (0+255),f,b
  8307  00303C  5161               	movf	(??_atoi+1)& (0+255),w,b
  8308  00303E  2363               	addwfc	(??_atoi+3)& (0+255),f,b
  8309  003040  5163               	movf	(??_atoi+3)& (0+255),w,b
  8310  003042  E10A               	bnz	u7920
  8311  003044  0E0A               	movlw	10
  8312  003046  5D62               	subwf	(??_atoi+2)& (0+255),w,b
  8313  003048  A0D8               	btfss	status,0,c
  8314  00304A  EF29  F018         	goto	u7921
  8315  00304E  EF2C  F018         	goto	u7920
  8316  003052                     u7921:
  8317  003052  0E01               	movlw	1
  8318  003054  EF2D  F018         	goto	u7930
  8319  003058                     u7920:
  8320  003058  0E00               	movlw	0
  8321  00305A                     u7930:
  8322  00305A  6F68               	movwf	_atoi$1008& (0+255),b
  8323  00305C  6B69               	clrf	(_atoi$1008+1)& (0+255),b
  8324  00305E                     
  8325                           ; BSR set to: 0
  8326  00305E  5168               	movf	_atoi$1008& (0+255),w,b
  8327  003060  1169               	iorwf	(_atoi$1008+1)& (0+255),w,b
  8328  003062  A4D8               	btfss	status,2,c
  8329  003064  EF36  F018         	goto	u7941
  8330  003068  EF38  F018         	goto	u7940
  8331  00306C                     u7941:
  8332  00306C  EFF4  F017         	goto	l5571
  8333  003070                     u7940:
  8334  003070                     
  8335                           ; BSR set to: 0
  8336  003070  5164               	movf	atoi@neg& (0+255),w,b
  8337  003072  1165               	iorwf	(atoi@neg+1)& (0+255),w,b
  8338  003074  A4D8               	btfss	status,2,c
  8339  003076  EF3F  F018         	goto	u7951
  8340  00307A  EF41  F018         	goto	u7950
  8341  00307E                     u7951:
  8342  00307E  EF4F  F018         	goto	l982
  8343  003082                     u7950:
  8344  003082                     
  8345                           ; BSR set to: 0
  8346  003082  C06B  F060         	movff	atoi@n,??_atoi
  8347  003086  C06C  F061         	movff	atoi@n+1,??_atoi+1
  8348  00308A  1F60               	comf	??_atoi& (0+255),f,b
  8349  00308C  1F61               	comf	(??_atoi+1)& (0+255),f,b
  8350  00308E  4B60               	infsnz	??_atoi& (0+255),f,b
  8351  003090  2B61               	incf	(??_atoi+1)& (0+255),f,b
  8352  003092  C060  F026         	movff	??_atoi,?_atoi
  8353  003096  C061  F027         	movff	??_atoi+1,?_atoi+1
  8354  00309A  EF53  F018         	goto	l985
  8355  00309E                     l982:
  8356                           
  8357                           ; BSR set to: 0
  8358  00309E  C06B  F026         	movff	atoi@n,?_atoi
  8359  0030A2  C06C  F027         	movff	atoi@n+1,?_atoi+1
  8360  0030A6                     l985:
  8361                           
  8362                           ; BSR set to: 0
  8363  0030A6  0012               	return		;funcret
  8364  0030A8                     __end_of_atoi:
  8365                           	callstack 0
  8366                           
  8367 ;; *************** function _isspace *****************
  8368 ;; Defined at:
  8369 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  c               2   30[COMRAM] int 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  2   30[COMRAM] int 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8383 ;;      Params:         2       0       0       0       0       0       0       0       0
  8384 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8385 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8386 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8387 ;;Total ram usage:        7 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 4
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_atoi
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text26
  8398  003E86                     __ptext26:
  8399                           	callstack 0
  8400  003E86                     _isspace:
  8401                           	callstack 22
  8402  003E86  0E01               	movlw	1
  8403  003E88  6E25               	movwf	_isspace$1037^0,c
  8404  003E8A  0E20               	movlw	32
  8405  003E8C  181F               	xorwf	isspace@c^0,w,c
  8406  003E8E  1020               	iorwf	(isspace@c+1)^0,w,c
  8407  003E90  B4D8               	btfsc	status,2,c
  8408  003E92  EF4D  F01F         	goto	u7331
  8409  003E96  EF4F  F01F         	goto	u7330
  8410  003E9A                     u7331:
  8411  003E9A  EF68  F01F         	goto	l5235
  8412  003E9E                     u7330:
  8413  003E9E  0EF7               	movlw	247
  8414  003EA0  6E21               	movwf	??_isspace^0,c
  8415  003EA2  0EFF               	movlw	255
  8416  003EA4  6E22               	movwf	(??_isspace+1)^0,c
  8417  003EA6  C01F  F023         	movff	isspace@c,??_isspace+2
  8418  003EAA  C020  F024         	movff	isspace@c+1,??_isspace+3
  8419  003EAE  5021               	movf	??_isspace^0,w,c
  8420  003EB0  2623               	addwf	(??_isspace+2)^0,f,c
  8421  003EB2  5022               	movf	(??_isspace+1)^0,w,c
  8422  003EB4  2224               	addwfc	(??_isspace+3)^0,f,c
  8423  003EB6  5024               	movf	(??_isspace+3)^0,w,c
  8424  003EB8  E109               	bnz	u7340
  8425  003EBA  0E05               	movlw	5
  8426  003EBC  5C23               	subwf	(??_isspace+2)^0,w,c
  8427  003EBE  A0D8               	btfss	status,0,c
  8428  003EC0  EF64  F01F         	goto	u7341
  8429  003EC4  EF66  F01F         	goto	u7340
  8430  003EC8                     u7341:
  8431  003EC8  EF68  F01F         	goto	l5235
  8432  003ECC                     u7340:
  8433  003ECC  0E00               	movlw	0
  8434  003ECE  6E25               	movwf	_isspace$1037^0,c
  8435  003ED0                     l5235:
  8436  003ED0  C025  F01F         	movff	_isspace$1037,?_isspace
  8437  003ED4  6A20               	clrf	(?_isspace+1)^0,c
  8438  003ED6  0012               	return		;funcret
  8439  003ED8                     __end_of_isspace:
  8440                           	callstack 0
  8441                           
  8442 ;; *************** function _isdigit *****************
  8443 ;; Defined at:
  8444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  c               2   30[COMRAM] int 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;		None
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  2   30[COMRAM] int 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8458 ;;      Params:         2       0       0       0       0       0       0       0       0
  8459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8460 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8461 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8462 ;;Total ram usage:        6 bytes
  8463 ;; Hardware stack levels used: 1
  8464 ;; Hardware stack levels required when called: 4
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_vfpfcnvrt
  8469 ;;		_atoi
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text27
  8474  0040B8                     __ptext27:
  8475                           	callstack 0
  8476  0040B8                     _isdigit:
  8477                           	callstack 23
  8478  0040B8  0ED0               	movlw	208
  8479  0040BA  6E21               	movwf	??_isdigit^0,c
  8480  0040BC  0EFF               	movlw	255
  8481  0040BE  6E22               	movwf	(??_isdigit+1)^0,c
  8482  0040C0  C01F  F023         	movff	isdigit@c,??_isdigit+2
  8483  0040C4  C020  F024         	movff	isdigit@c+1,??_isdigit+3
  8484  0040C8  5021               	movf	??_isdigit^0,w,c
  8485  0040CA  2623               	addwf	(??_isdigit+2)^0,f,c
  8486  0040CC  5022               	movf	(??_isdigit+1)^0,w,c
  8487  0040CE  2224               	addwfc	(??_isdigit+3)^0,f,c
  8488  0040D0  5024               	movf	(??_isdigit+3)^0,w,c
  8489  0040D2  E10A               	bnz	u7310
  8490  0040D4  0E0A               	movlw	10
  8491  0040D6  5C23               	subwf	(??_isdigit+2)^0,w,c
  8492  0040D8  A0D8               	btfss	status,0,c
  8493  0040DA  EF71  F020         	goto	u7311
  8494  0040DE  EF74  F020         	goto	u7310
  8495  0040E2                     u7311:
  8496  0040E2  0E01               	movlw	1
  8497  0040E4  EF75  F020         	goto	u7320
  8498  0040E8                     u7310:
  8499  0040E8  0E00               	movlw	0
  8500  0040EA                     u7320:
  8501  0040EA  6E1F               	movwf	?_isdigit^0,c
  8502  0040EC  6A20               	clrf	(?_isdigit+1)^0,c
  8503  0040EE  0012               	return		;funcret
  8504  0040F0                     __end_of_isdigit:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function ___wmul *****************
  8508 ;; Defined at:
  8509 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  multiplier      2   30[COMRAM] unsigned int 
  8512 ;;  multiplicand    2   32[COMRAM] unsigned int 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  product         2   34[COMRAM] unsigned int 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  2   30[COMRAM] unsigned int 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0, prodl, prodh
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8524 ;;      Params:         4       0       0       0       0       0       0       0       0
  8525 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8527 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8528 ;;Total ram usage:        6 bytes
  8529 ;; Hardware stack levels used: 1
  8530 ;; Hardware stack levels required when called: 4
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_atoi
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text28
  8539  0040F0                     __ptext28:
  8540                           	callstack 0
  8541  0040F0                     ___wmul:
  8542                           	callstack 22
  8543  0040F0  501F               	movf	___wmul@multiplier^0,w,c
  8544  0040F2  0221               	mulwf	___wmul@multiplicand^0,c
  8545  0040F4  CFF3 F023          	movff	prodl,___wmul@product
  8546  0040F8  CFF4 F024          	movff	prodh,___wmul@product+1
  8547  0040FC  501F               	movf	___wmul@multiplier^0,w,c
  8548  0040FE  0222               	mulwf	(___wmul@multiplicand+1)^0,c
  8549  004100  50F3               	movf	243,w,c
  8550  004102  2624               	addwf	(___wmul@product+1)^0,f,c
  8551  004104  5020               	movf	(___wmul@multiplier+1)^0,w,c
  8552  004106  0221               	mulwf	___wmul@multiplicand^0,c
  8553  004108  50F3               	movf	243,w,c
  8554  00410A  2624               	addwf	(___wmul@product+1)^0,f,c
  8555  00410C  C023  F01F         	movff	___wmul@product,?___wmul
  8556  004110  C024  F020         	movff	___wmul@product+1,?___wmul+1
  8557  004114  0012               	return		;funcret
  8558  004116                     __end_of___wmul:
  8559                           	callstack 0
  8560                           
  8561 ;; *************** function _limpa_lcd *****************
  8562 ;; Defined at:
  8563 ;;		line 26 in file "./lcd.intermed.h"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8580 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8581 ;;Total ram usage:        0 bytes
  8582 ;; Hardware stack levels used: 1
  8583 ;; Hardware stack levels required when called: 5
  8584 ;; This function calls:
  8585 ;;		_comando_lcd
  8586 ;; This function is called by:
  8587 ;;		_main
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text29
  8592  00417E                     __ptext29:
  8593                           	callstack 0
  8594  00417E                     _limpa_lcd:
  8595                           	callstack 25
  8596  00417E                     
  8597                           ;./lcd.intermed.h: 28:     comando_lcd(1);
  8598  00417E  0E00               	movlw	0
  8599  004180  6E20               	movwf	(comando_lcd@comando+1)^0,c
  8600  004182  0E01               	movlw	1
  8601  004184  6E1F               	movwf	comando_lcd@comando^0,c
  8602  004186  EC8B  F020         	call	_comando_lcd	;wreg free
  8603  00418A  0012               	return		;funcret
  8604  00418C                     __end_of_limpa_lcd:
  8605                           	callstack 0
  8606                           
  8607 ;; *************** function _comando_lcd *****************
  8608 ;; Defined at:
  8609 ;;		line 7 in file "./lcd.intermed.h"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  comando         2   30[COMRAM] unsigned int 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;		None
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		wreg
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8623 ;;      Params:         2       0       0       0       0       0       0       0       0
  8624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8625 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8626 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8627 ;;Total ram usage:        3 bytes
  8628 ;; Hardware stack levels used: 1
  8629 ;; Hardware stack levels required when called: 4
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_limpa_lcd
  8634 ;;		_main
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text30
  8639  004116                     __ptext30:
  8640                           	callstack 0
  8641  004116                     _comando_lcd:
  8642                           	callstack 25
  8643  004116                     
  8644                           ;./lcd.intermed.h: 7: void comando_lcd(unsigned int comando);./lcd.intermed.h: 8: {;./lc
      +                          d.intermed.h: 9:     PORTEbits.RE2 = 0;
  8645  004116  9484               	bcf	132,2,c	;volatile
  8646                           
  8647                           ;./lcd.intermed.h: 10:     PORTEbits.RE1 = 1;
  8648  004118  8284               	bsf	132,1,c	;volatile
  8649                           
  8650                           ;./lcd.intermed.h: 11:     PORTD = comando;
  8651  00411A  C01F  FF83         	movff	comando_lcd@comando,3971	;volatile
  8652  00411E                     
  8653                           ;./lcd.intermed.h: 12:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8654  00411E  0E03               	movlw	3
  8655  004120  6E21               	movwf	??_comando_lcd^0,c
  8656  004122  0E98               	movlw	152
  8657  004124                     u8257:
  8658  004124  2EE8               	decfsz	wreg,f,c
  8659  004126  D7FE               	bra	u8257
  8660  004128  2E21               	decfsz	??_comando_lcd^0,f,c
  8661  00412A  D7FC               	bra	u8257
  8662  00412C                     
  8663                           ;./lcd.intermed.h: 13:     PORTEbits.RE1 = 0;
  8664  00412C  9284               	bcf	132,1,c	;volatile
  8665  00412E  0012               	return		;funcret
  8666  004130                     __end_of_comando_lcd:
  8667                           	callstack 0
  8668                           
  8669 ;; *************** function _imprime_lcd *****************
  8670 ;; Defined at:
  8671 ;;		line 31 in file "./lcd.intermed.h"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  frase           2   34[COMRAM] PTR unsigned char 
  8674 ;;		 -> temperature(8), STR_3(12), STR_2(17), STR_1(17), 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  indice          2    2[BANK0 ] int 
  8677 ;;  tamanho         2    0[BANK0 ] int 
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8687 ;;      Params:         2       0       0       0       0       0       0       0       0
  8688 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8689 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8690 ;;      Totals:         5       4       0       0       0       0       0       0       0
  8691 ;;Total ram usage:        9 bytes
  8692 ;; Hardware stack levels used: 1
  8693 ;; Hardware stack levels required when called: 5
  8694 ;; This function calls:
  8695 ;;		_dado_lcd
  8696 ;;		_strlen
  8697 ;; This function is called by:
  8698 ;;		_main
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text31
  8703  003BBC                     __ptext31:
  8704                           	callstack 0
  8705  003BBC                     _imprime_lcd:
  8706                           	callstack 25
  8707  003BBC                     
  8708                           ;./lcd.intermed.h: 31: void imprime_lcd(char frase[]);./lcd.intermed.h: 32: {;./lcd.inte
      +                          rmed.h: 33: int indice = 0;
  8709  003BBC  0E00               	movlw	0
  8710  003BBE  0100               	movlb	0	; () banked
  8711  003BC0  6F63               	movwf	(imprime_lcd@indice+1)& (0+255),b
  8712  003BC2  0E00               	movlw	0
  8713  003BC4  6F62               	movwf	imprime_lcd@indice& (0+255),b
  8714  003BC6                     
  8715                           ; BSR set to: 0
  8716                           ;./lcd.intermed.h: 34: int tamanho = strlen(frase);
  8717  003BC6  C023  F01F         	movff	imprime_lcd@frase,strlen@s
  8718  003BCA  C024  F020         	movff	imprime_lcd@frase+1,strlen@s+1
  8719  003BCE  EC6C  F01F         	call	_strlen	;wreg free
  8720  003BD2  C01F  F060         	movff	?_strlen,imprime_lcd@tamanho
  8721  003BD6  C020  F061         	movff	?_strlen+1,imprime_lcd@tamanho+1
  8722                           
  8723                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  8724  003BDA  EF0E  F01E         	goto	l5741
  8725  003BDE                     l5737:
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;./lcd.intermed.h: 36:     {;./lcd.intermed.h: 37: dado_lcd(frase[indice]);
  8729  003BDE  5162               	movf	imprime_lcd@indice& (0+255),w,b
  8730  003BE0  2423               	addwf	imprime_lcd@frase^0,w,c
  8731  003BE2  6E25               	movwf	??_imprime_lcd^0,c
  8732  003BE4  5163               	movf	(imprime_lcd@indice+1)& (0+255),w,b
  8733  003BE6  2024               	addwfc	(imprime_lcd@frase+1)^0,w,c
  8734  003BE8  6E26               	movwf	(??_imprime_lcd+1)^0,c
  8735  003BEA  C025  FFF6         	movff	??_imprime_lcd,tblptrl
  8736  003BEE  C026  FFF7         	movff	??_imprime_lcd+1,tblptrh
  8737  003BF2  6AF8               	clrf	tblptru,c
  8738  003BF4  0E07               	movlw	(high __ramtop+-1)
  8739  003BF6  64F7               	cpfsgt	tblptrh,c
  8740  003BF8  D003               	bra	u8217
  8741  003BFA  0008               	tblrd		*
  8742  003BFC  50F5               	movf	tablat,w,c
  8743  003BFE  D005               	bra	u8210
  8744  003C00                     u8217:
  8745  003C00  CFF6 FFE1          	movff	tblptrl,fsr1l
  8746  003C04  CFF7 FFE2          	movff	tblptrh,fsr1h
  8747  003C08  50E7               	movf	indf1,w,c
  8748  003C0A                     u8210:
  8749  003C0A  6E27               	movwf	(??_imprime_lcd+2)^0,c
  8750  003C0C  5027               	movf	(??_imprime_lcd+2)^0,w,c
  8751  003C0E  6E1F               	movwf	dado_lcd@dado^0,c
  8752  003C10  6A20               	clrf	(dado_lcd@dado+1)^0,c
  8753  003C12  EC98  F020         	call	_dado_lcd	;wreg free
  8754  003C16                     
  8755                           ;./lcd.intermed.h: 38: indice++;
  8756  003C16  0100               	movlb	0	; () banked
  8757  003C18  4B62               	infsnz	imprime_lcd@indice& (0+255),f,b
  8758  003C1A  2B63               	incf	(imprime_lcd@indice+1)& (0+255),f,b
  8759  003C1C                     l5741:
  8760                           
  8761                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  8762  003C1C  0100               	movlb	0	; () banked
  8763  003C1E  5160               	movf	imprime_lcd@tamanho& (0+255),w,b
  8764  003C20  5D62               	subwf	imprime_lcd@indice& (0+255),w,b
  8765  003C22  5163               	movf	(imprime_lcd@indice+1)& (0+255),w,b
  8766  003C24  0A80               	xorlw	128
  8767  003C26  6E25               	movwf	??_imprime_lcd^0,c
  8768  003C28  5161               	movf	(imprime_lcd@tamanho+1)& (0+255),w,b
  8769  003C2A  0A80               	xorlw	128
  8770  003C2C  5825               	subwfb	??_imprime_lcd^0,w,c
  8771  003C2E  A0D8               	btfss	status,0,c
  8772  003C30  EF1C  F01E         	goto	u8221
  8773  003C34  EF1E  F01E         	goto	u8220
  8774  003C38                     u8221:
  8775  003C38  EFEF  F01D         	goto	l5737
  8776  003C3C                     u8220:
  8777  003C3C                     
  8778                           ; BSR set to: 0
  8779  003C3C  0012               	return		;funcret
  8780  003C3E                     __end_of_imprime_lcd:
  8781                           	callstack 0
  8782                           
  8783 ;; *************** function _strlen *****************
  8784 ;; Defined at:
  8785 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8788 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
  8789 ;;		 -> STR_1(17), 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  a               2   32[COMRAM] PTR const unsigned char 
  8792 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
  8793 ;;		 -> STR_1(17), 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  2   30[COMRAM] unsigned int 
  8796 ;; Registers used:
  8797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8803 ;;      Params:         2       0       0       0       0       0       0       0       0
  8804 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8806 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8807 ;;Total ram usage:        4 bytes
  8808 ;; Hardware stack levels used: 1
  8809 ;; Hardware stack levels required when called: 4
  8810 ;; This function calls:
  8811 ;;		Nothing
  8812 ;; This function is called by:
  8813 ;;		_imprime_lcd
  8814 ;;		_pad
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           	psect	text32
  8819  003ED8                     __ptext32:
  8820                           	callstack 0
  8821  003ED8                     _strlen:
  8822                           	callstack 21
  8823  003ED8  C01F  F021         	movff	strlen@s,strlen@a
  8824  003EDC  C020  F022         	movff	strlen@s+1,strlen@a+1
  8825  003EE0  EF74  F01F         	goto	l4467
  8826  003EE4                     l4465:
  8827  003EE4  4A1F               	infsnz	strlen@s^0,f,c
  8828  003EE6  2A20               	incf	(strlen@s+1)^0,f,c
  8829  003EE8                     l4467:
  8830  003EE8  C01F  FFF6         	movff	strlen@s,tblptrl
  8831  003EEC  C020  FFF7         	movff	strlen@s+1,tblptrh
  8832  003EF0  6AF8               	clrf	tblptru,c
  8833  003EF2  0E07               	movlw	(high __ramtop+-1)
  8834  003EF4  64F7               	cpfsgt	tblptrh,c
  8835  003EF6  D003               	bra	u5917
  8836  003EF8  0008               	tblrd		*
  8837  003EFA  50F5               	movf	tablat,w,c
  8838  003EFC  D005               	bra	u5910
  8839  003EFE                     u5917:
  8840  003EFE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8841  003F02  CFF7 FFE2          	movff	tblptrh,fsr1h
  8842  003F06  50E7               	movf	indf1,w,c
  8843  003F08                     u5910:
  8844  003F08  0900               	iorlw	0
  8845  003F0A  A4D8               	btfss	status,2,c
  8846  003F0C  EF8A  F01F         	goto	u5921
  8847  003F10  EF8C  F01F         	goto	u5920
  8848  003F14                     u5921:
  8849  003F14  EF72  F01F         	goto	l4465
  8850  003F18                     u5920:
  8851  003F18  5021               	movf	strlen@a^0,w,c
  8852  003F1A  5C1F               	subwf	strlen@s^0,w,c
  8853  003F1C  6E1F               	movwf	?_strlen^0,c
  8854  003F1E  5022               	movf	(strlen@a+1)^0,w,c
  8855  003F20  5820               	subwfb	(strlen@s+1)^0,w,c
  8856  003F22  6E20               	movwf	(?_strlen+1)^0,c
  8857  003F24  0012               	return		;funcret
  8858  003F26                     __end_of_strlen:
  8859                           	callstack 0
  8860                           
  8861 ;; *************** function _dado_lcd *****************
  8862 ;; Defined at:
  8863 ;;		line 16 in file "./lcd.intermed.h"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  dado            2   30[COMRAM] unsigned int 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;		None
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		wreg
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8877 ;;      Params:         2       0       0       0       0       0       0       0       0
  8878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8879 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8880 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8881 ;;Total ram usage:        3 bytes
  8882 ;; Hardware stack levels used: 1
  8883 ;; Hardware stack levels required when called: 4
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_imprime_lcd
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text33
  8892  004130                     __ptext33:
  8893                           	callstack 0
  8894  004130                     _dado_lcd:
  8895                           	callstack 25
  8896  004130                     
  8897                           ;./lcd.intermed.h: 16: void dado_lcd(unsigned int dado);./lcd.intermed.h: 17: {;./lcd.in
      +                          termed.h: 18:     PORTEbits.RE2 = 1;
  8898  004130  8484               	bsf	132,2,c	;volatile
  8899                           
  8900                           ;./lcd.intermed.h: 19:     PORTEbits.RE1 = 1;
  8901  004132  8284               	bsf	132,1,c	;volatile
  8902                           
  8903                           ;./lcd.intermed.h: 20:     PORTD = dado;
  8904  004134  C01F  FF83         	movff	dado_lcd@dado,3971	;volatile
  8905  004138                     
  8906                           ;./lcd.intermed.h: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8907  004138  0E03               	movlw	3
  8908  00413A  6E21               	movwf	??_dado_lcd^0,c
  8909  00413C  0E98               	movlw	152
  8910  00413E                     u8267:
  8911  00413E  2EE8               	decfsz	wreg,f,c
  8912  004140  D7FE               	bra	u8267
  8913  004142  2E21               	decfsz	??_dado_lcd^0,f,c
  8914  004144  D7FC               	bra	u8267
  8915  004146                     
  8916                           ;./lcd.intermed.h: 22:     PORTEbits.RE1 = 0;
  8917  004146  9284               	bcf	132,1,c	;volatile
  8918  004148  0012               	return		;funcret
  8919  00414A                     __end_of_dado_lcd:
  8920                           	callstack 0
  8921                           
  8922 ;; *************** function _isr *****************
  8923 ;; Defined at:
  8924 ;;		line 40 in file "lcd.frase.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;		None
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8938 ;;      Params:         0       0       0       0       0       0       0       0       0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8940 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8941 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8942 ;;Total ram usage:        6 bytes
  8943 ;; Hardware stack levels used: 1
  8944 ;; Hardware stack levels required when called: 3
  8945 ;; This function calls:
  8946 ;;		_alerta
  8947 ;;		_verificaOValor
  8948 ;;		i2___fladd
  8949 ;;		i2___flge
  8950 ;;		i2___flsub
  8951 ;; This function is called by:
  8952 ;;		Interrupt level 2
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	intcode
  8957  000008                     __pintcode:
  8958                           	callstack 0
  8959  000008                     _isr:
  8960                           	callstack 19
  8961                           
  8962                           ;incstack = 0
  8963  000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8964  00000A  EDB4  F016         	call	int_func,f	;refresh shadow registers
  8965                           
  8966                           	psect	intcode_body
  8967  002D68                     __pintcode_body:
  8968                           	callstack 19
  8969  002D68                     int_func:
  8970                           	callstack 19
  8971  002D68  0006               	pop		; remove dummy address from shadow register refresh
  8972  002D6A  CFE1 F019          	movff	fsr1l,??_isr
  8973  002D6E  CFE2 F01A          	movff	fsr1h,??_isr+1
  8974  002D72  CFF6 F01B          	movff	tblptrl,??_isr+2
  8975  002D76  CFF7 F01C          	movff	tblptrh,??_isr+3
  8976  002D7A  CFF8 F01D          	movff	tblptru,??_isr+4
  8977  002D7E  CFF5 F01E          	movff	tablat,??_isr+5
  8978  002D82                     
  8979                           ;lcd.frase.c: 42:     if(INTCON3bits.INT1IF == 1) {
  8980  002D82  A0F0               	btfss	240,0,c	;volatile
  8981  002D84  EFC6  F016         	goto	i2u582_41
  8982  002D88  EFC8  F016         	goto	i2u582_40
  8983  002D8C                     i2u582_41:
  8984  002D8C  EF4D  F017         	goto	i2l4377
  8985  002D90                     i2u582_40:
  8986  002D90                     
  8987                           ;lcd.frase.c: 44:         INTCON3bits.INT1IF = 0;
  8988  002D90  90F0               	bcf	240,0,c	;volatile
  8989  002D92                     
  8990                           ;lcd.frase.c: 46:             if(temperatura>=50){
  8991  002D92  C033  F001         	movff	_temperatura,i2___flge@ff1
  8992  002D96  C034  F002         	movff	_temperatura+1,i2___flge@ff1+1
  8993  002D9A  C035  F003         	movff	_temperatura+2,i2___flge@ff1+2
  8994  002D9E  C036  F004         	movff	_temperatura+3,i2___flge@ff1+3
  8995  002DA2  0E00               	movlw	0
  8996  002DA4  6E05               	movwf	i2___flge@ff2^0,c
  8997  002DA6  0E00               	movlw	0
  8998  002DA8  6E06               	movwf	(i2___flge@ff2+1)^0,c
  8999  002DAA  0E48               	movlw	72
  9000  002DAC  6E07               	movwf	(i2___flge@ff2+2)^0,c
  9001  002DAE  0E42               	movlw	66
  9002  002DB0  6E08               	movwf	(i2___flge@ff2+3)^0,c
  9003  002DB2  EC5A  F019         	call	i2___flge	;wreg free
  9004  002DB6  A0D8               	btfss	status,0,c
  9005  002DB8  EFE0  F016         	goto	i2u583_41
  9006  002DBC  EFE2  F016         	goto	i2u583_40
  9007  002DC0                     i2u583_41:
  9008  002DC0  EFFE  F016         	goto	i2l4371
  9009  002DC4                     i2u583_40:
  9010  002DC4                     
  9011                           ;lcd.frase.c: 47:                 temperatura--;
  9012  002DC4  C033  F011         	movff	_temperatura,i2___flsub@b
  9013  002DC8  C034  F012         	movff	_temperatura+1,i2___flsub@b+1
  9014  002DCC  C035  F013         	movff	_temperatura+2,i2___flsub@b+2
  9015  002DD0  C036  F014         	movff	_temperatura+3,i2___flsub@b+3
  9016  002DD4  0E00               	movlw	0
  9017  002DD6  6E15               	movwf	i2___flsub@a^0,c
  9018  002DD8  0E00               	movlw	0
  9019  002DDA  6E16               	movwf	(i2___flsub@a+1)^0,c
  9020  002DDC  0E80               	movlw	128
  9021  002DDE  6E17               	movwf	(i2___flsub@a+2)^0,c
  9022  002DE0  0E3F               	movlw	63
  9023  002DE2  6E18               	movwf	(i2___flsub@a+3)^0,c
  9024  002DE4  EC01  F020         	call	i2___flsub	;wreg free
  9025  002DE8  C011  F033         	movff	?i2___flsub,_temperatura
  9026  002DEC  C012  F034         	movff	?i2___flsub+1,_temperatura+1
  9027  002DF0  C013  F035         	movff	?i2___flsub+2,_temperatura+2
  9028  002DF4  C014  F036         	movff	?i2___flsub+3,_temperatura+3
  9029                           
  9030                           ;lcd.frase.c: 49:             } else if(temperatura <= 25){
  9031  002DF8  EF4D  F017         	goto	i2l4377
  9032  002DFC                     i2l4371:
  9033  002DFC  0E00               	movlw	0
  9034  002DFE  6E01               	movwf	i2___flge@ff1^0,c
  9035  002E00  0E00               	movlw	0
  9036  002E02  6E02               	movwf	(i2___flge@ff1+1)^0,c
  9037  002E04  0EC8               	movlw	200
  9038  002E06  6E03               	movwf	(i2___flge@ff1+2)^0,c
  9039  002E08  0E41               	movlw	65
  9040  002E0A  6E04               	movwf	(i2___flge@ff1+3)^0,c
  9041  002E0C  C033  F005         	movff	_temperatura,i2___flge@ff2
  9042  002E10  C034  F006         	movff	_temperatura+1,i2___flge@ff2+1
  9043  002E14  C035  F007         	movff	_temperatura+2,i2___flge@ff2+2
  9044  002E18  C036  F008         	movff	_temperatura+3,i2___flge@ff2+3
  9045  002E1C  EC5A  F019         	call	i2___flge	;wreg free
  9046  002E20  A0D8               	btfss	status,0,c
  9047  002E22  EF15  F017         	goto	i2u584_41
  9048  002E26  EF17  F017         	goto	i2u584_40
  9049  002E2A                     i2u584_41:
  9050  002E2A  EF33  F017         	goto	i2l4375
  9051  002E2E                     i2u584_40:
  9052  002E2E                     
  9053                           ;lcd.frase.c: 50:                 temperatura++;
  9054  002E2E  C033  F001         	movff	_temperatura,i2___fladd@b
  9055  002E32  C034  F002         	movff	_temperatura+1,i2___fladd@b+1
  9056  002E36  C035  F003         	movff	_temperatura+2,i2___fladd@b+2
  9057  002E3A  C036  F004         	movff	_temperatura+3,i2___fladd@b+3
  9058  002E3E  0E00               	movlw	0
  9059  002E40  6E05               	movwf	i2___fladd@a^0,c
  9060  002E42  0E00               	movlw	0
  9061  002E44  6E06               	movwf	(i2___fladd@a+1)^0,c
  9062  002E46  0E80               	movlw	128
  9063  002E48  6E07               	movwf	(i2___fladd@a+2)^0,c
  9064  002E4A  0E3F               	movlw	63
  9065  002E4C  6E08               	movwf	(i2___fladd@a+3)^0,c
  9066  002E4E  EC65  F00F         	call	i2___fladd	;wreg free
  9067  002E52  C001  F033         	movff	?i2___fladd,_temperatura
  9068  002E56  C002  F034         	movff	?i2___fladd+1,_temperatura+1
  9069  002E5A  C003  F035         	movff	?i2___fladd+2,_temperatura+2
  9070  002E5E  C004  F036         	movff	?i2___fladd+3,_temperatura+3
  9071                           
  9072                           ;lcd.frase.c: 51:             } else {
  9073  002E62  EF4D  F017         	goto	i2l4377
  9074  002E66                     i2l4375:
  9075                           
  9076                           ;lcd.frase.c: 52:                 temperatura--;
  9077  002E66  C033  F011         	movff	_temperatura,i2___flsub@b
  9078  002E6A  C034  F012         	movff	_temperatura+1,i2___flsub@b+1
  9079  002E6E  C035  F013         	movff	_temperatura+2,i2___flsub@b+2
  9080  002E72  C036  F014         	movff	_temperatura+3,i2___flsub@b+3
  9081  002E76  0E00               	movlw	0
  9082  002E78  6E15               	movwf	i2___flsub@a^0,c
  9083  002E7A  0E00               	movlw	0
  9084  002E7C  6E16               	movwf	(i2___flsub@a+1)^0,c
  9085  002E7E  0E80               	movlw	128
  9086  002E80  6E17               	movwf	(i2___flsub@a+2)^0,c
  9087  002E82  0E3F               	movlw	63
  9088  002E84  6E18               	movwf	(i2___flsub@a+3)^0,c
  9089  002E86  EC01  F020         	call	i2___flsub	;wreg free
  9090  002E8A  C011  F033         	movff	?i2___flsub,_temperatura
  9091  002E8E  C012  F034         	movff	?i2___flsub+1,_temperatura+1
  9092  002E92  C013  F035         	movff	?i2___flsub+2,_temperatura+2
  9093  002E96  C014  F036         	movff	?i2___flsub+3,_temperatura+3
  9094  002E9A                     i2l4377:
  9095                           
  9096                           ;lcd.frase.c: 56:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  9097  002E9A  AAF2               	btfss	242,5,c	;volatile
  9098  002E9C  EF52  F017         	goto	i2u585_41
  9099  002EA0  EF54  F017         	goto	i2u585_40
  9100  002EA4                     i2u585_41:
  9101  002EA4  EF7C  F017         	goto	i2l74
  9102  002EA8                     i2u585_40:
  9103  002EA8  A4F2               	btfss	242,2,c	;volatile
  9104  002EAA  EF59  F017         	goto	i2u586_41
  9105  002EAE  EF5B  F017         	goto	i2u586_40
  9106  002EB2                     i2u586_41:
  9107  002EB2  EF7C  F017         	goto	i2l74
  9108  002EB6                     i2u586_40:
  9109  002EB6                     
  9110                           ;lcd.frase.c: 61:         alerta();
  9111  002EB6  ECD8  F01C         	call	_alerta	;wreg free
  9112  002EBA                     
  9113                           ;lcd.frase.c: 62:         verificaOValor();
  9114  002EBA  EC44  F01B         	call	_verificaOValor	;wreg free
  9115  002EBE                     
  9116                           ;lcd.frase.c: 64:         temperatura = temperatura - 0.01;
  9117  002EBE  C033  F001         	movff	_temperatura,i2___fladd@b
  9118  002EC2  C034  F002         	movff	_temperatura+1,i2___fladd@b+1
  9119  002EC6  C035  F003         	movff	_temperatura+2,i2___fladd@b+2
  9120  002ECA  C036  F004         	movff	_temperatura+3,i2___fladd@b+3
  9121  002ECE  0E0A               	movlw	10
  9122  002ED0  6E05               	movwf	i2___fladd@a^0,c
  9123  002ED2  0ED7               	movlw	215
  9124  002ED4  6E06               	movwf	(i2___fladd@a+1)^0,c
  9125  002ED6  0E23               	movlw	35
  9126  002ED8  6E07               	movwf	(i2___fladd@a+2)^0,c
  9127  002EDA  0EBC               	movlw	188
  9128  002EDC  6E08               	movwf	(i2___fladd@a+3)^0,c
  9129  002EDE  EC65  F00F         	call	i2___fladd	;wreg free
  9130  002EE2  C001  F033         	movff	?i2___fladd,_temperatura
  9131  002EE6  C002  F034         	movff	?i2___fladd+1,_temperatura+1
  9132  002EEA  C003  F035         	movff	?i2___fladd+2,_temperatura+2
  9133  002EEE  C004  F036         	movff	?i2___fladd+3,_temperatura+3
  9134  002EF2                     
  9135                           ;lcd.frase.c: 66:   TMR0L = 5;
  9136  002EF2  0E05               	movlw	5
  9137  002EF4  6ED6               	movwf	214,c	;volatile
  9138  002EF6                     
  9139                           ;lcd.frase.c: 68:         INTCONbits.TMR0IF = 0;
  9140  002EF6  94F2               	bcf	242,2,c	;volatile
  9141  002EF8                     i2l74:
  9142  002EF8  C01E  FFF5         	movff	??_isr+5,tablat
  9143  002EFC  C01D  FFF8         	movff	??_isr+4,tblptru
  9144  002F00  C01C  FFF7         	movff	??_isr+3,tblptrh
  9145  002F04  C01B  FFF6         	movff	??_isr+2,tblptrl
  9146  002F08  C01A  FFE2         	movff	??_isr+1,fsr1h
  9147  002F0C  C019  FFE1         	movff	??_isr,fsr1l
  9148  002F10  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9149  002F12  0011               	retfie		f
  9150  002F14                     __end_of_isr:
  9151                           	callstack 0
  9152                           
  9153 ;; *************** function i2___flsub *****************
  9154 ;; Defined at:
  9155 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;  b               4   16[COMRAM] void 
  9158 ;;  a               4   20[COMRAM] void 
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;		None
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  4   16[COMRAM] void 
  9163 ;; Registers used:
  9164 ;;		wreg, status,2, status,0, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9170 ;;      Params:         8       0       0       0       0       0       0       0       0
  9171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9173 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9174 ;;Total ram usage:        8 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; Hardware stack levels required when called: 1
  9177 ;; This function calls:
  9178 ;;		i2___fladd
  9179 ;; This function is called by:
  9180 ;;		_isr
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text35
  9185  004002                     __ptext35:
  9186                           	callstack 0
  9187  004002                     i2___flsub:
  9188                           	callstack 20
  9189  004002  0E00               	movlw	0
  9190  004004  1A15               	xorwf	i2___flsub@a^0,f,c
  9191  004006  0E00               	movlw	0
  9192  004008  1A16               	xorwf	(i2___flsub@a+1)^0,f,c
  9193  00400A  0E00               	movlw	0
  9194  00400C  1A17               	xorwf	(i2___flsub@a+2)^0,f,c
  9195  00400E  0E80               	movlw	128
  9196  004010  1A18               	xorwf	(i2___flsub@a+3)^0,f,c
  9197  004012  C011  F001         	movff	i2___flsub@b,i2___fladd@b
  9198  004016  C012  F002         	movff	i2___flsub@b+1,i2___fladd@b+1
  9199  00401A  C013  F003         	movff	i2___flsub@b+2,i2___fladd@b+2
  9200  00401E  C014  F004         	movff	i2___flsub@b+3,i2___fladd@b+3
  9201  004022  C015  F005         	movff	i2___flsub@a,i2___fladd@a
  9202  004026  C016  F006         	movff	i2___flsub@a+1,i2___fladd@a+1
  9203  00402A  C017  F007         	movff	i2___flsub@a+2,i2___fladd@a+2
  9204  00402E  C018  F008         	movff	i2___flsub@a+3,i2___fladd@a+3
  9205  004032  EC65  F00F         	call	i2___fladd	;wreg free
  9206  004036  C001  F011         	movff	?i2___fladd,?i2___flsub
  9207  00403A  C002  F012         	movff	?i2___fladd+1,?i2___flsub+1
  9208  00403E  C003  F013         	movff	?i2___fladd+2,?i2___flsub+2
  9209  004042  C004  F014         	movff	?i2___fladd+3,?i2___flsub+3
  9210  004046  0012               	return		;funcret
  9211  004048                     __end_ofi2___flsub:
  9212                           	callstack 0
  9213                           
  9214 ;; *************** function _verificaOValor *****************
  9215 ;; Defined at:
  9216 ;;		line 32 in file "lcd.frase.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9234 ;;Total ram usage:        0 bytes
  9235 ;; Hardware stack levels used: 1
  9236 ;; Hardware stack levels required when called: 1
  9237 ;; This function calls:
  9238 ;;		i2___fladd
  9239 ;;		i2___flge
  9240 ;; This function is called by:
  9241 ;;		_isr
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           	psect	text36
  9246  003688                     __ptext36:
  9247                           	callstack 0
  9248  003688                     _verificaOValor:
  9249                           	callstack 20
  9250  003688                     
  9251                           ;lcd.frase.c: 33:     if(temperatura>=50){
  9252  003688  C033  F001         	movff	_temperatura,i2___flge@ff1
  9253  00368C  C034  F002         	movff	_temperatura+1,i2___flge@ff1+1
  9254  003690  C035  F003         	movff	_temperatura+2,i2___flge@ff1+2
  9255  003694  C036  F004         	movff	_temperatura+3,i2___flge@ff1+3
  9256  003698  0E00               	movlw	0
  9257  00369A  6E05               	movwf	i2___flge@ff2^0,c
  9258  00369C  0E00               	movlw	0
  9259  00369E  6E06               	movwf	(i2___flge@ff2+1)^0,c
  9260  0036A0  0E48               	movlw	72
  9261  0036A2  6E07               	movwf	(i2___flge@ff2+2)^0,c
  9262  0036A4  0E42               	movlw	66
  9263  0036A6  6E08               	movwf	(i2___flge@ff2+3)^0,c
  9264  0036A8  EC5A  F019         	call	i2___flge	;wreg free
  9265  0036AC  A0D8               	btfss	status,0,c
  9266  0036AE  EF5B  F01B         	goto	i2u580_41
  9267  0036B2  EF5D  F01B         	goto	i2u580_40
  9268  0036B6                     i2u580_41:
  9269  0036B6  EF79  F01B         	goto	i2l4341
  9270  0036BA                     i2u580_40:
  9271  0036BA                     
  9272                           ;lcd.frase.c: 34:                 temperatura = temperatura - 10;
  9273  0036BA  C033  F001         	movff	_temperatura,i2___fladd@b
  9274  0036BE  C034  F002         	movff	_temperatura+1,i2___fladd@b+1
  9275  0036C2  C035  F003         	movff	_temperatura+2,i2___fladd@b+2
  9276  0036C6  C036  F004         	movff	_temperatura+3,i2___fladd@b+3
  9277  0036CA  0E00               	movlw	0
  9278  0036CC  6E05               	movwf	i2___fladd@a^0,c
  9279  0036CE  0E00               	movlw	0
  9280  0036D0  6E06               	movwf	(i2___fladd@a+1)^0,c
  9281  0036D2  0E20               	movlw	32
  9282  0036D4  6E07               	movwf	(i2___fladd@a+2)^0,c
  9283  0036D6  0EC1               	movlw	193
  9284  0036D8  6E08               	movwf	(i2___fladd@a+3)^0,c
  9285  0036DA  EC65  F00F         	call	i2___fladd	;wreg free
  9286  0036DE  C001  F033         	movff	?i2___fladd,_temperatura
  9287  0036E2  C002  F034         	movff	?i2___fladd+1,_temperatura+1
  9288  0036E6  C003  F035         	movff	?i2___fladd+2,_temperatura+2
  9289  0036EA  C004  F036         	movff	?i2___fladd+3,_temperatura+3
  9290                           
  9291                           ;lcd.frase.c: 35:             } else if(temperatura <= 25){
  9292  0036EE  EFAC  F01B         	goto	i2l63
  9293  0036F2                     i2l4341:
  9294  0036F2  0E00               	movlw	0
  9295  0036F4  6E01               	movwf	i2___flge@ff1^0,c
  9296  0036F6  0E00               	movlw	0
  9297  0036F8  6E02               	movwf	(i2___flge@ff1+1)^0,c
  9298  0036FA  0EC8               	movlw	200
  9299  0036FC  6E03               	movwf	(i2___flge@ff1+2)^0,c
  9300  0036FE  0E41               	movlw	65
  9301  003700  6E04               	movwf	(i2___flge@ff1+3)^0,c
  9302  003702  C033  F005         	movff	_temperatura,i2___flge@ff2
  9303  003706  C034  F006         	movff	_temperatura+1,i2___flge@ff2+1
  9304  00370A  C035  F007         	movff	_temperatura+2,i2___flge@ff2+2
  9305  00370E  C036  F008         	movff	_temperatura+3,i2___flge@ff2+3
  9306  003712  EC5A  F019         	call	i2___flge	;wreg free
  9307  003716  A0D8               	btfss	status,0,c
  9308  003718  EF90  F01B         	goto	i2u581_41
  9309  00371C  EF92  F01B         	goto	i2u581_40
  9310  003720                     i2u581_41:
  9311  003720  EFAC  F01B         	goto	i2l63
  9312  003724                     i2u581_40:
  9313  003724                     
  9314                           ;lcd.frase.c: 36:                 temperatura = temperatura + 10 ;
  9315  003724  C033  F001         	movff	_temperatura,i2___fladd@b
  9316  003728  C034  F002         	movff	_temperatura+1,i2___fladd@b+1
  9317  00372C  C035  F003         	movff	_temperatura+2,i2___fladd@b+2
  9318  003730  C036  F004         	movff	_temperatura+3,i2___fladd@b+3
  9319  003734  0E00               	movlw	0
  9320  003736  6E05               	movwf	i2___fladd@a^0,c
  9321  003738  0E00               	movlw	0
  9322  00373A  6E06               	movwf	(i2___fladd@a+1)^0,c
  9323  00373C  0E20               	movlw	32
  9324  00373E  6E07               	movwf	(i2___fladd@a+2)^0,c
  9325  003740  0E41               	movlw	65
  9326  003742  6E08               	movwf	(i2___fladd@a+3)^0,c
  9327  003744  EC65  F00F         	call	i2___fladd	;wreg free
  9328  003748  C001  F033         	movff	?i2___fladd,_temperatura
  9329  00374C  C002  F034         	movff	?i2___fladd+1,_temperatura+1
  9330  003750  C003  F035         	movff	?i2___fladd+2,_temperatura+2
  9331  003754  C004  F036         	movff	?i2___fladd+3,_temperatura+3
  9332  003758                     i2l63:
  9333  003758  0012               	return		;funcret
  9334  00375A                     __end_of_verificaOValor:
  9335                           	callstack 0
  9336                           
  9337 ;; *************** function i2___fladd *****************
  9338 ;; Defined at:
  9339 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;  b               4    0[COMRAM] void 
  9342 ;;  a               4    4[COMRAM] void 
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  grs             1   15[COMRAM] unsigned char 
  9345 ;;  bexp            1   14[COMRAM] unsigned char 
  9346 ;;  aexp            1   13[COMRAM] unsigned char 
  9347 ;;  signs           1   12[COMRAM] unsigned char 
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  4    0[COMRAM] unsigned char 
  9350 ;; Registers used:
  9351 ;;		wreg, status,2, status,0
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9357 ;;      Params:         8       0       0       0       0       0       0       0       0
  9358 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9359 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9360 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9361 ;;Total ram usage:       16 bytes
  9362 ;; Hardware stack levels used: 1
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_verificaOValor
  9367 ;;		_isr
  9368 ;;		i2___flsub
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           	psect	text37
  9373  001ECA                     __ptext37:
  9374                           	callstack 0
  9375  001ECA                     i2___fladd:
  9376                           	callstack 20
  9377  001ECA  5004               	movf	(i2___fladd@b+3)^0,w,c
  9378  001ECC  0B80               	andlw	128
  9379  001ECE  6E0D               	movwf	i2___fladd@signs^0,c
  9380  001ED0  5004               	movf	(i2___fladd@b+3)^0,w,c
  9381  001ED2  2404               	addwf	(i2___fladd@b+3)^0,w,c
  9382  001ED4  6E0F               	movwf	i2___fladd@bexp^0,c
  9383  001ED6  AE03               	btfss	(i2___fladd@b+2)^0,7,c
  9384  001ED8  EF70  F00F         	goto	i2u537_41
  9385  001EDC  EF72  F00F         	goto	i2u537_40
  9386  001EE0                     i2u537_41:
  9387  001EE0  EF73  F00F         	goto	i2l4113
  9388  001EE4                     i2u537_40:
  9389  001EE4  800F               	bsf	i2___fladd@bexp^0,0,c
  9390  001EE6                     i2l4113:
  9391  001EE6  500F               	movf	i2___fladd@bexp^0,w,c
  9392  001EE8  B4D8               	btfsc	status,2,c
  9393  001EEA  EF79  F00F         	goto	i2u538_41
  9394  001EEE  EF7B  F00F         	goto	i2u538_40
  9395  001EF2                     i2u538_41:
  9396  001EF2  EF90  F00F         	goto	i2l4123
  9397  001EF6                     i2u538_40:
  9398  001EF6  280F               	incf	i2___fladd@bexp^0,w,c
  9399  001EF8  A4D8               	btfss	status,2,c
  9400  001EFA  EF81  F00F         	goto	i2u539_41
  9401  001EFE  EF83  F00F         	goto	i2u539_40
  9402  001F02                     i2u539_41:
  9403  001F02  EF8B  F00F         	goto	i2l4119
  9404  001F06                     i2u539_40:
  9405  001F06  0E00               	movlw	0
  9406  001F08  6E01               	movwf	i2___fladd@b^0,c
  9407  001F0A  0E00               	movlw	0
  9408  001F0C  6E02               	movwf	(i2___fladd@b+1)^0,c
  9409  001F0E  0E00               	movlw	0
  9410  001F10  6E03               	movwf	(i2___fladd@b+2)^0,c
  9411  001F12  0E00               	movlw	0
  9412  001F14  6E04               	movwf	(i2___fladd@b+3)^0,c
  9413  001F16                     i2l4119:
  9414  001F16  8E03               	bsf	(i2___fladd@b+2)^0,7,c
  9415  001F18  0E00               	movlw	0
  9416  001F1A  6E04               	movwf	(i2___fladd@b+3)^0,c
  9417  001F1C  EF98  F00F         	goto	i2l4125
  9418  001F20                     i2l4123:
  9419  001F20  0E00               	movlw	0
  9420  001F22  6E01               	movwf	i2___fladd@b^0,c
  9421  001F24  0E00               	movlw	0
  9422  001F26  6E02               	movwf	(i2___fladd@b+1)^0,c
  9423  001F28  0E00               	movlw	0
  9424  001F2A  6E03               	movwf	(i2___fladd@b+2)^0,c
  9425  001F2C  0E00               	movlw	0
  9426  001F2E  6E04               	movwf	(i2___fladd@b+3)^0,c
  9427  001F30                     i2l4125:
  9428  001F30  5008               	movf	(i2___fladd@a+3)^0,w,c
  9429  001F32  0B80               	andlw	128
  9430  001F34  6E0E               	movwf	i2___fladd@aexp^0,c
  9431  001F36  500D               	movf	i2___fladd@signs^0,w,c
  9432  001F38  180E               	xorwf	i2___fladd@aexp^0,w,c
  9433  001F3A  B4D8               	btfsc	status,2,c
  9434  001F3C  EFA2  F00F         	goto	i2u540_41
  9435  001F40  EFA4  F00F         	goto	i2u540_40
  9436  001F44                     i2u540_41:
  9437  001F44  EFA5  F00F         	goto	i2l4131
  9438  001F48                     i2u540_40:
  9439  001F48  8C0D               	bsf	i2___fladd@signs^0,6,c
  9440  001F4A                     i2l4131:
  9441  001F4A  5008               	movf	(i2___fladd@a+3)^0,w,c
  9442  001F4C  2408               	addwf	(i2___fladd@a+3)^0,w,c
  9443  001F4E  6E0E               	movwf	i2___fladd@aexp^0,c
  9444  001F50  AE07               	btfss	(i2___fladd@a+2)^0,7,c
  9445  001F52  EFAD  F00F         	goto	i2u541_41
  9446  001F56  EFAF  F00F         	goto	i2u541_40
  9447  001F5A                     i2u541_41:
  9448  001F5A  EFB0  F00F         	goto	i2l4137
  9449  001F5E                     i2u541_40:
  9450  001F5E  800E               	bsf	i2___fladd@aexp^0,0,c
  9451  001F60                     i2l4137:
  9452  001F60  500E               	movf	i2___fladd@aexp^0,w,c
  9453  001F62  B4D8               	btfsc	status,2,c
  9454  001F64  EFB6  F00F         	goto	i2u542_41
  9455  001F68  EFB8  F00F         	goto	i2u542_40
  9456  001F6C                     i2u542_41:
  9457  001F6C  EFCD  F00F         	goto	i2l4147
  9458  001F70                     i2u542_40:
  9459  001F70  280E               	incf	i2___fladd@aexp^0,w,c
  9460  001F72  A4D8               	btfss	status,2,c
  9461  001F74  EFBE  F00F         	goto	i2u543_41
  9462  001F78  EFC0  F00F         	goto	i2u543_40
  9463  001F7C                     i2u543_41:
  9464  001F7C  EFC8  F00F         	goto	i2l4143
  9465  001F80                     i2u543_40:
  9466  001F80  0E00               	movlw	0
  9467  001F82  6E05               	movwf	i2___fladd@a^0,c
  9468  001F84  0E00               	movlw	0
  9469  001F86  6E06               	movwf	(i2___fladd@a+1)^0,c
  9470  001F88  0E00               	movlw	0
  9471  001F8A  6E07               	movwf	(i2___fladd@a+2)^0,c
  9472  001F8C  0E00               	movlw	0
  9473  001F8E  6E08               	movwf	(i2___fladd@a+3)^0,c
  9474  001F90                     i2l4143:
  9475  001F90  8E07               	bsf	(i2___fladd@a+2)^0,7,c
  9476  001F92  0E00               	movlw	0
  9477  001F94  6E08               	movwf	(i2___fladd@a+3)^0,c
  9478  001F96  EFD5  F00F         	goto	i2l4149
  9479  001F9A                     i2l4147:
  9480  001F9A  0E00               	movlw	0
  9481  001F9C  6E05               	movwf	i2___fladd@a^0,c
  9482  001F9E  0E00               	movlw	0
  9483  001FA0  6E06               	movwf	(i2___fladd@a+1)^0,c
  9484  001FA2  0E00               	movlw	0
  9485  001FA4  6E07               	movwf	(i2___fladd@a+2)^0,c
  9486  001FA6  0E00               	movlw	0
  9487  001FA8  6E08               	movwf	(i2___fladd@a+3)^0,c
  9488  001FAA                     i2l4149:
  9489  001FAA  500F               	movf	i2___fladd@bexp^0,w,c
  9490  001FAC  5C0E               	subwf	i2___fladd@aexp^0,w,c
  9491  001FAE  B0D8               	btfsc	status,0,c
  9492  001FB0  EFDC  F00F         	goto	i2u544_41
  9493  001FB4  EFDE  F00F         	goto	i2u544_40
  9494  001FB8                     i2u544_41:
  9495  001FB8  EF05  F010         	goto	i2l4185
  9496  001FBC                     i2u544_40:
  9497  001FBC  AC0D               	btfss	i2___fladd@signs^0,6,c
  9498  001FBE  EFE3  F00F         	goto	i2u545_41
  9499  001FC2  EFE5  F00F         	goto	i2u545_40
  9500  001FC6                     i2u545_41:
  9501  001FC6  EFE7  F00F         	goto	i2l4155
  9502  001FCA                     i2u545_40:
  9503  001FCA  0E80               	movlw	128
  9504  001FCC  1A0D               	xorwf	i2___fladd@signs^0,f,c
  9505  001FCE                     i2l4155:
  9506  001FCE  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
  9507  001FD2  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
  9508  001FD6  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
  9509  001FDA  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
  9510  001FDE  C005  F001         	movff	i2___fladd@a,i2___fladd@b
  9511  001FE2  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
  9512  001FE6  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
  9513  001FEA  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
  9514  001FEE  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
  9515  001FF2  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
  9516  001FF6  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
  9517  001FFA  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
  9518  001FFE  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
  9519  002002  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
  9520  002006  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
  9521  00200A                     i2l4185:
  9522  00200A  0E00               	movlw	0
  9523  00200C  6E10               	movwf	i2___fladd@grs^0,c
  9524  00200E  500F               	movf	i2___fladd@bexp^0,w,c
  9525  002010  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
  9526  002014  6A0A               	clrf	(??i2___fladd+1)^0,c
  9527  002016  5E09               	subwf	??i2___fladd^0,f,c
  9528  002018  0E00               	movlw	0
  9529  00201A  5A0A               	subwfb	(??i2___fladd+1)^0,f,c
  9530  00201C  BE0A               	btfsc	(??i2___fladd+1)^0,7,c
  9531  00201E  EF1A  F010         	goto	i2u546_41
  9532  002022  500A               	movf	(??i2___fladd+1)^0,w,c
  9533  002024  E109               	bnz	i2u546_40
  9534  002026  0E1A               	movlw	26
  9535  002028  5C09               	subwf	??i2___fladd^0,w,c
  9536  00202A  A0D8               	btfss	status,0,c
  9537  00202C  EF1A  F010         	goto	i2u546_41
  9538  002030  EF1C  F010         	goto	i2u546_40
  9539  002034                     i2u546_41:
  9540  002034  EF53  F010         	goto	i2l614
  9541  002038                     i2u546_40:
  9542  002038  5001               	movf	i2___fladd@b^0,w,c
  9543  00203A  1002               	iorwf	(i2___fladd@b+1)^0,w,c
  9544  00203C  1003               	iorwf	(i2___fladd@b+2)^0,w,c
  9545  00203E  1004               	iorwf	(i2___fladd@b+3)^0,w,c
  9546  002040  A4D8               	btfss	status,2,c
  9547  002042  EF25  F010         	goto	i2u547_41
  9548  002046  EF28  F010         	goto	i2u547_40
  9549  00204A                     i2u547_41:
  9550  00204A  0E01               	movlw	1
  9551  00204C  EF29  F010         	goto	i2u548_40
  9552  002050                     i2u547_40:
  9553  002050  0E00               	movlw	0
  9554  002052                     i2u548_40:
  9555  002052  6E10               	movwf	i2___fladd@grs^0,c
  9556  002054  0E00               	movlw	0
  9557  002056  6E01               	movwf	i2___fladd@b^0,c
  9558  002058  0E00               	movlw	0
  9559  00205A  6E02               	movwf	(i2___fladd@b+1)^0,c
  9560  00205C  0E00               	movlw	0
  9561  00205E  6E03               	movwf	(i2___fladd@b+2)^0,c
  9562  002060  0E00               	movlw	0
  9563  002062  6E04               	movwf	(i2___fladd@b+3)^0,c
  9564  002064  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
  9565  002068  EF5C  F010         	goto	i2l613
  9566  00206C                     i2l615:
  9567  00206C  A010               	btfss	i2___fladd@grs^0,0,c
  9568  00206E  EF3B  F010         	goto	i2u549_41
  9569  002072  EF3D  F010         	goto	i2u549_40
  9570  002076                     i2u549_41:
  9571  002076  EF43  F010         	goto	i2l4197
  9572  00207A                     i2u549_40:
  9573  00207A  90D8               	bcf	status,0,c
  9574  00207C  3010               	rrcf	i2___fladd@grs^0,w,c
  9575  00207E  0901               	iorlw	1
  9576  002080  6E10               	movwf	i2___fladd@grs^0,c
  9577  002082  EF45  F010         	goto	i2l4199
  9578  002086                     i2l4197:
  9579  002086  90D8               	bcf	status,0,c
  9580  002088  3210               	rrcf	i2___fladd@grs^0,f,c
  9581  00208A                     i2l4199:
  9582  00208A  A001               	btfss	i2___fladd@b^0,0,c
  9583  00208C  EF4A  F010         	goto	i2u550_41
  9584  002090  EF4C  F010         	goto	i2u550_40
  9585  002094                     i2u550_41:
  9586  002094  EF4D  F010         	goto	i2l4203
  9587  002098                     i2u550_40:
  9588  002098  8E10               	bsf	i2___fladd@grs^0,7,c
  9589  00209A                     i2l4203:
  9590  00209A  3404               	rlcf	(i2___fladd@b+3)^0,w,c
  9591  00209C  3204               	rrcf	(i2___fladd@b+3)^0,f,c
  9592  00209E  3203               	rrcf	(i2___fladd@b+2)^0,f,c
  9593  0020A0  3202               	rrcf	(i2___fladd@b+1)^0,f,c
  9594  0020A2  3201               	rrcf	i2___fladd@b^0,f,c
  9595  0020A4  2A0F               	incf	i2___fladd@bexp^0,f,c
  9596  0020A6                     i2l614:
  9597  0020A6  500E               	movf	i2___fladd@aexp^0,w,c
  9598  0020A8  5C0F               	subwf	i2___fladd@bexp^0,w,c
  9599  0020AA  A0D8               	btfss	status,0,c
  9600  0020AC  EF5A  F010         	goto	i2u551_41
  9601  0020B0  EF5C  F010         	goto	i2u551_40
  9602  0020B4                     i2u551_41:
  9603  0020B4  EF36  F010         	goto	i2l615
  9604  0020B8                     i2u551_40:
  9605  0020B8                     i2l613:
  9606  0020B8  BC0D               	btfsc	i2___fladd@signs^0,6,c
  9607  0020BA  EF61  F010         	goto	i2u552_41
  9608  0020BE  EF63  F010         	goto	i2u552_40
  9609  0020C2                     i2u552_41:
  9610  0020C2  EFA3  F010         	goto	i2l4231
  9611  0020C6                     i2u552_40:
  9612  0020C6  500F               	movf	i2___fladd@bexp^0,w,c
  9613  0020C8  A4D8               	btfss	status,2,c
  9614  0020CA  EF69  F010         	goto	i2u553_41
  9615  0020CE  EF6B  F010         	goto	i2u553_40
  9616  0020D2                     i2u553_41:
  9617  0020D2  EF75  F010         	goto	i2l4213
  9618  0020D6                     i2u553_40:
  9619  0020D6  0E00               	movlw	0
  9620  0020D8  6E01               	movwf	?i2___fladd^0,c
  9621  0020DA  0E00               	movlw	0
  9622  0020DC  6E02               	movwf	(?i2___fladd+1)^0,c
  9623  0020DE  0E00               	movlw	0
  9624  0020E0  6E03               	movwf	(?i2___fladd+2)^0,c
  9625  0020E2  0E00               	movlw	0
  9626  0020E4  6E04               	movwf	(?i2___fladd+3)^0,c
  9627  0020E6  EFC4  F011         	goto	i2l622
  9628  0020EA                     i2l4213:
  9629  0020EA  5005               	movf	i2___fladd@a^0,w,c
  9630  0020EC  2601               	addwf	i2___fladd@b^0,f,c
  9631  0020EE  5006               	movf	(i2___fladd@a+1)^0,w,c
  9632  0020F0  2202               	addwfc	(i2___fladd@b+1)^0,f,c
  9633  0020F2  5007               	movf	(i2___fladd@a+2)^0,w,c
  9634  0020F4  2203               	addwfc	(i2___fladd@b+2)^0,f,c
  9635  0020F6  5008               	movf	(i2___fladd@a+3)^0,w,c
  9636  0020F8  2204               	addwfc	(i2___fladd@b+3)^0,f,c
  9637  0020FA  A004               	btfss	(i2___fladd@b+3)^0,0,c
  9638  0020FC  EF82  F010         	goto	i2u554_41
  9639  002100  EF84  F010         	goto	i2u554_40
  9640  002104                     i2u554_41:
  9641  002104  EF30  F011         	goto	i2l4267
  9642  002108                     i2u554_40:
  9643  002108  A010               	btfss	i2___fladd@grs^0,0,c
  9644  00210A  EF89  F010         	goto	i2u555_41
  9645  00210E  EF8B  F010         	goto	i2u555_40
  9646  002112                     i2u555_41:
  9647  002112  EF91  F010         	goto	i2l4221
  9648  002116                     i2u555_40:
  9649  002116  90D8               	bcf	status,0,c
  9650  002118  3010               	rrcf	i2___fladd@grs^0,w,c
  9651  00211A  0901               	iorlw	1
  9652  00211C  6E10               	movwf	i2___fladd@grs^0,c
  9653  00211E  EF93  F010         	goto	i2l4223
  9654  002122                     i2l4221:
  9655  002122  90D8               	bcf	status,0,c
  9656  002124  3210               	rrcf	i2___fladd@grs^0,f,c
  9657  002126                     i2l4223:
  9658  002126  A001               	btfss	i2___fladd@b^0,0,c
  9659  002128  EF98  F010         	goto	i2u556_41
  9660  00212C  EF9A  F010         	goto	i2u556_40
  9661  002130                     i2u556_41:
  9662  002130  EF9B  F010         	goto	i2l4227
  9663  002134                     i2u556_40:
  9664  002134  8E10               	bsf	i2___fladd@grs^0,7,c
  9665  002136                     i2l4227:
  9666  002136  3404               	rlcf	(i2___fladd@b+3)^0,w,c
  9667  002138  3204               	rrcf	(i2___fladd@b+3)^0,f,c
  9668  00213A  3203               	rrcf	(i2___fladd@b+2)^0,f,c
  9669  00213C  3202               	rrcf	(i2___fladd@b+1)^0,f,c
  9670  00213E  3201               	rrcf	i2___fladd@b^0,f,c
  9671  002140  2A0F               	incf	i2___fladd@bexp^0,f,c
  9672  002142  EF30  F011         	goto	i2l4267
  9673  002146                     i2l4231:
  9674  002146  5005               	movf	i2___fladd@a^0,w,c
  9675  002148  5C01               	subwf	i2___fladd@b^0,w,c
  9676  00214A  5006               	movf	(i2___fladd@a+1)^0,w,c
  9677  00214C  5802               	subwfb	(i2___fladd@b+1)^0,w,c
  9678  00214E  5007               	movf	(i2___fladd@a+2)^0,w,c
  9679  002150  5803               	subwfb	(i2___fladd@b+2)^0,w,c
  9680  002152  5004               	movf	(i2___fladd@b+3)^0,w,c
  9681  002154  0A80               	xorlw	128
  9682  002156  6E09               	movwf	??i2___fladd^0,c
  9683  002158  5008               	movf	(i2___fladd@a+3)^0,w,c
  9684  00215A  0A80               	xorlw	128
  9685  00215C  5809               	subwfb	??i2___fladd^0,w,c
  9686  00215E  B0D8               	btfsc	status,0,c
  9687  002160  EFB4  F010         	goto	i2u557_41
  9688  002164  EFB6  F010         	goto	i2u557_40
  9689  002168                     i2u557_41:
  9690  002168  EFE1  F010         	goto	i2l4241
  9691  00216C                     i2u557_40:
  9692  00216C  5001               	movf	i2___fladd@b^0,w,c
  9693  00216E  5C05               	subwf	i2___fladd@a^0,w,c
  9694  002170  6E09               	movwf	??i2___fladd^0,c
  9695  002172  5002               	movf	(i2___fladd@b+1)^0,w,c
  9696  002174  5806               	subwfb	(i2___fladd@a+1)^0,w,c
  9697  002176  6E0A               	movwf	(??i2___fladd+1)^0,c
  9698  002178  5003               	movf	(i2___fladd@b+2)^0,w,c
  9699  00217A  5807               	subwfb	(i2___fladd@a+2)^0,w,c
  9700  00217C  6E0B               	movwf	(??i2___fladd+2)^0,c
  9701  00217E  5004               	movf	(i2___fladd@b+3)^0,w,c
  9702  002180  5808               	subwfb	(i2___fladd@a+3)^0,w,c
  9703  002182  6E0C               	movwf	(??i2___fladd+3)^0,c
  9704  002184  0EFF               	movlw	255
  9705  002186  2409               	addwf	??i2___fladd^0,w,c
  9706  002188  6E01               	movwf	i2___fladd@b^0,c
  9707  00218A  0EFF               	movlw	255
  9708  00218C  200A               	addwfc	(??i2___fladd+1)^0,w,c
  9709  00218E  6E02               	movwf	(i2___fladd@b+1)^0,c
  9710  002190  0EFF               	movlw	255
  9711  002192  200B               	addwfc	(??i2___fladd+2)^0,w,c
  9712  002194  6E03               	movwf	(i2___fladd@b+2)^0,c
  9713  002196  0EFF               	movlw	255
  9714  002198  200C               	addwfc	(??i2___fladd+3)^0,w,c
  9715  00219A  6E04               	movwf	(i2___fladd@b+3)^0,c
  9716  00219C  0E80               	movlw	128
  9717  00219E  1A0D               	xorwf	i2___fladd@signs^0,f,c
  9718  0021A0  6C10               	negf	i2___fladd@grs^0,c
  9719  0021A2  5010               	movf	i2___fladd@grs^0,w,c
  9720  0021A4  A4D8               	btfss	status,2,c
  9721  0021A6  EFD7  F010         	goto	i2u558_41
  9722  0021AA  EFD9  F010         	goto	i2u558_40
  9723  0021AE                     i2u558_41:
  9724  0021AE  EFE9  F010         	goto	i2l630
  9725  0021B2                     i2u558_40:
  9726  0021B2  0E01               	movlw	1
  9727  0021B4  2601               	addwf	i2___fladd@b^0,f,c
  9728  0021B6  0E00               	movlw	0
  9729  0021B8  2202               	addwfc	(i2___fladd@b+1)^0,f,c
  9730  0021BA  2203               	addwfc	(i2___fladd@b+2)^0,f,c
  9731  0021BC  2204               	addwfc	(i2___fladd@b+3)^0,f,c
  9732  0021BE  EFE9  F010         	goto	i2l630
  9733  0021C2                     i2l4241:
  9734  0021C2  5005               	movf	i2___fladd@a^0,w,c
  9735  0021C4  5E01               	subwf	i2___fladd@b^0,f,c
  9736  0021C6  5006               	movf	(i2___fladd@a+1)^0,w,c
  9737  0021C8  5A02               	subwfb	(i2___fladd@b+1)^0,f,c
  9738  0021CA  5007               	movf	(i2___fladd@a+2)^0,w,c
  9739  0021CC  5A03               	subwfb	(i2___fladd@b+2)^0,f,c
  9740  0021CE  5008               	movf	(i2___fladd@a+3)^0,w,c
  9741  0021D0  5A04               	subwfb	(i2___fladd@b+3)^0,f,c
  9742  0021D2                     i2l630:
  9743  0021D2  5001               	movf	i2___fladd@b^0,w,c
  9744  0021D4  1002               	iorwf	(i2___fladd@b+1)^0,w,c
  9745  0021D6  1003               	iorwf	(i2___fladd@b+2)^0,w,c
  9746  0021D8  1004               	iorwf	(i2___fladd@b+3)^0,w,c
  9747  0021DA  A4D8               	btfss	status,2,c
  9748  0021DC  EFF2  F010         	goto	i2u559_41
  9749  0021E0  EFF4  F010         	goto	i2u559_40
  9750  0021E4                     i2u559_41:
  9751  0021E4  EF29  F011         	goto	i2l4265
  9752  0021E8                     i2u559_40:
  9753  0021E8  5010               	movf	i2___fladd@grs^0,w,c
  9754  0021EA  A4D8               	btfss	status,2,c
  9755  0021EC  EFFA  F010         	goto	i2u560_41
  9756  0021F0  EFFC  F010         	goto	i2u560_40
  9757  0021F4                     i2u560_41:
  9758  0021F4  EF29  F011         	goto	i2l4265
  9759  0021F8                     i2u560_40:
  9760  0021F8  0E00               	movlw	0
  9761  0021FA  6E01               	movwf	?i2___fladd^0,c
  9762  0021FC  0E00               	movlw	0
  9763  0021FE  6E02               	movwf	(?i2___fladd+1)^0,c
  9764  002200  0E00               	movlw	0
  9765  002202  6E03               	movwf	(?i2___fladd+2)^0,c
  9766  002204  0E00               	movlw	0
  9767  002206  6E04               	movwf	(?i2___fladd+3)^0,c
  9768  002208  EFC4  F011         	goto	i2l622
  9769  00220C                     i2l4249:
  9770  00220C  90D8               	bcf	status,0,c
  9771  00220E  3601               	rlcf	i2___fladd@b^0,f,c
  9772  002210  3602               	rlcf	(i2___fladd@b+1)^0,f,c
  9773  002212  3603               	rlcf	(i2___fladd@b+2)^0,f,c
  9774  002214  3604               	rlcf	(i2___fladd@b+3)^0,f,c
  9775  002216  AE10               	btfss	i2___fladd@grs^0,7,c
  9776  002218  EF10  F011         	goto	i2u561_41
  9777  00221C  EF12  F011         	goto	i2u561_40
  9778  002220                     i2u561_41:
  9779  002220  EF13  F011         	goto	i2l4255
  9780  002224                     i2u561_40:
  9781  002224  8001               	bsf	i2___fladd@b^0,0,c
  9782  002226                     i2l4255:
  9783  002226  A010               	btfss	i2___fladd@grs^0,0,c
  9784  002228  EF18  F011         	goto	i2u562_41
  9785  00222C  EF1A  F011         	goto	i2u562_40
  9786  002230                     i2u562_41:
  9787  002230  EF1E  F011         	goto	i2l4259
  9788  002234                     i2u562_40:
  9789  002234  80D8               	bsf	status,0,c
  9790  002236  3610               	rlcf	i2___fladd@grs^0,f,c
  9791  002238  EF20  F011         	goto	i2l4261
  9792  00223C                     i2l4259:
  9793  00223C  90D8               	bcf	status,0,c
  9794  00223E  3610               	rlcf	i2___fladd@grs^0,f,c
  9795  002240                     i2l4261:
  9796  002240  500F               	movf	i2___fladd@bexp^0,w,c
  9797  002242  B4D8               	btfsc	status,2,c
  9798  002244  EF26  F011         	goto	i2u563_41
  9799  002248  EF28  F011         	goto	i2u563_40
  9800  00224C                     i2u563_41:
  9801  00224C  EF29  F011         	goto	i2l4265
  9802  002250                     i2u563_40:
  9803  002250  060F               	decf	i2___fladd@bexp^0,f,c
  9804  002252                     i2l4265:
  9805  002252  AE03               	btfss	(i2___fladd@b+2)^0,7,c
  9806  002254  EF2E  F011         	goto	i2u564_41
  9807  002258  EF30  F011         	goto	i2u564_40
  9808  00225C                     i2u564_41:
  9809  00225C  EF06  F011         	goto	i2l4249
  9810  002260                     i2u564_40:
  9811  002260                     i2l4267:
  9812  002260  0E00               	movlw	0
  9813  002262  6E0E               	movwf	i2___fladd@aexp^0,c
  9814  002264  AE10               	btfss	i2___fladd@grs^0,7,c
  9815  002266  EF37  F011         	goto	i2u565_41
  9816  00226A  EF39  F011         	goto	i2u565_40
  9817  00226E                     i2u565_41:
  9818  00226E  EF51  F011         	goto	i2l639
  9819  002272                     i2u565_40:
  9820  002272  C010  F009         	movff	i2___fladd@grs,??i2___fladd
  9821  002276  0E7F               	movlw	127
  9822  002278  1609               	andwf	??i2___fladd^0,f,c
  9823  00227A  B4D8               	btfsc	status,2,c
  9824  00227C  EF42  F011         	goto	i2u566_41
  9825  002280  EF44  F011         	goto	i2u566_40
  9826  002284                     i2u566_41:
  9827  002284  EF48  F011         	goto	i2l640
  9828  002288                     i2u566_40:
  9829  002288                     i2l4273:
  9830  002288  0E01               	movlw	1
  9831  00228A  6E0E               	movwf	i2___fladd@aexp^0,c
  9832  00228C  EF51  F011         	goto	i2l639
  9833  002290                     i2l640:
  9834  002290  A001               	btfss	i2___fladd@b^0,0,c
  9835  002292  EF4D  F011         	goto	i2u567_41
  9836  002296  EF4F  F011         	goto	i2u567_40
  9837  00229A                     i2u567_41:
  9838  00229A  EF51  F011         	goto	i2l639
  9839  00229E                     i2u567_40:
  9840  00229E  EF44  F011         	goto	i2l4273
  9841  0022A2                     i2l639:
  9842  0022A2  500E               	movf	i2___fladd@aexp^0,w,c
  9843  0022A4  B4D8               	btfsc	status,2,c
  9844  0022A6  EF57  F011         	goto	i2u568_41
  9845  0022AA  EF59  F011         	goto	i2u568_40
  9846  0022AE                     i2u568_41:
  9847  0022AE  EF84  F011         	goto	i2l4285
  9848  0022B2                     i2u568_40:
  9849  0022B2  0E01               	movlw	1
  9850  0022B4  2601               	addwf	i2___fladd@b^0,f,c
  9851  0022B6  0E00               	movlw	0
  9852  0022B8  2202               	addwfc	(i2___fladd@b+1)^0,f,c
  9853  0022BA  2203               	addwfc	(i2___fladd@b+2)^0,f,c
  9854  0022BC  2204               	addwfc	(i2___fladd@b+3)^0,f,c
  9855  0022BE  A004               	btfss	(i2___fladd@b+3)^0,0,c
  9856  0022C0  EF64  F011         	goto	i2u569_41
  9857  0022C4  EF66  F011         	goto	i2u569_40
  9858  0022C8                     i2u569_41:
  9859  0022C8  EF84  F011         	goto	i2l4285
  9860  0022CC                     i2u569_40:
  9861  0022CC  C001  F009         	movff	i2___fladd@b,??i2___fladd
  9862  0022D0  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
  9863  0022D4  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
  9864  0022D8  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
  9865  0022DC  340C               	rlcf	(??i2___fladd+3)^0,w,c
  9866  0022DE  320C               	rrcf	(??i2___fladd+3)^0,f,c
  9867  0022E0  320B               	rrcf	(??i2___fladd+2)^0,f,c
  9868  0022E2  320A               	rrcf	(??i2___fladd+1)^0,f,c
  9869  0022E4  3209               	rrcf	??i2___fladd^0,f,c
  9870  0022E6  C009  F001         	movff	??i2___fladd,i2___fladd@b
  9871  0022EA  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
  9872  0022EE  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
  9873  0022F2  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
  9874  0022F6  280F               	incf	i2___fladd@bexp^0,w,c
  9875  0022F8  B4D8               	btfsc	status,2,c
  9876  0022FA  EF81  F011         	goto	i2u570_41
  9877  0022FE  EF83  F011         	goto	i2u570_40
  9878  002302                     i2u570_41:
  9879  002302  EF84  F011         	goto	i2l4285
  9880  002306                     i2u570_40:
  9881  002306  2A0F               	incf	i2___fladd@bexp^0,f,c
  9882  002308                     i2l4285:
  9883  002308  280F               	incf	i2___fladd@bexp^0,w,c
  9884  00230A  B4D8               	btfsc	status,2,c
  9885  00230C  EF8A  F011         	goto	i2u571_41
  9886  002310  EF8C  F011         	goto	i2u571_40
  9887  002314                     i2u571_41:
  9888  002314  EF94  F011         	goto	i2l4289
  9889  002318                     i2u571_40:
  9890  002318  500F               	movf	i2___fladd@bexp^0,w,c
  9891  00231A  A4D8               	btfss	status,2,c
  9892  00231C  EF92  F011         	goto	i2u572_41
  9893  002320  EF94  F011         	goto	i2u572_40
  9894  002324                     i2u572_41:
  9895  002324  EFA6  F011         	goto	i2l4293
  9896  002328                     i2u572_40:
  9897  002328                     i2l4289:
  9898  002328  0E00               	movlw	0
  9899  00232A  6E01               	movwf	i2___fladd@b^0,c
  9900  00232C  0E00               	movlw	0
  9901  00232E  6E02               	movwf	(i2___fladd@b+1)^0,c
  9902  002330  0E00               	movlw	0
  9903  002332  6E03               	movwf	(i2___fladd@b+2)^0,c
  9904  002334  0E00               	movlw	0
  9905  002336  6E04               	movwf	(i2___fladd@b+3)^0,c
  9906  002338  500F               	movf	i2___fladd@bexp^0,w,c
  9907  00233A  A4D8               	btfss	status,2,c
  9908  00233C  EFA2  F011         	goto	i2u573_41
  9909  002340  EFA4  F011         	goto	i2u573_40
  9910  002344                     i2u573_41:
  9911  002344  EFA6  F011         	goto	i2l4293
  9912  002348                     i2u573_40:
  9913  002348  0E00               	movlw	0
  9914  00234A  6E0D               	movwf	i2___fladd@signs^0,c
  9915  00234C                     i2l4293:
  9916  00234C  A00F               	btfss	i2___fladd@bexp^0,0,c
  9917  00234E  EFAB  F011         	goto	i2u574_41
  9918  002352  EFAD  F011         	goto	i2u574_40
  9919  002356                     i2u574_41:
  9920  002356  EFB0  F011         	goto	i2l4297
  9921  00235A                     i2u574_40:
  9922  00235A  8E03               	bsf	(i2___fladd@b+2)^0,7,c
  9923  00235C  EFB1  F011         	goto	i2l4299
  9924  002360                     i2l4297:
  9925  002360  9E03               	bcf	(i2___fladd@b+2)^0,7,c
  9926  002362                     i2l4299:
  9927  002362  90D8               	bcf	status,0,c
  9928  002364  300F               	rrcf	i2___fladd@bexp^0,w,c
  9929  002366  6E04               	movwf	(i2___fladd@b+3)^0,c
  9930  002368  AE0D               	btfss	i2___fladd@signs^0,7,c
  9931  00236A  EFB9  F011         	goto	i2u575_41
  9932  00236E  EFBB  F011         	goto	i2u575_40
  9933  002372                     i2u575_41:
  9934  002372  EFBC  F011         	goto	i2l4305
  9935  002376                     i2u575_40:
  9936  002376  8E04               	bsf	(i2___fladd@b+3)^0,7,c
  9937  002378                     i2l4305:
  9938  002378  C001  F001         	movff	i2___fladd@b,?i2___fladd
  9939  00237C  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
  9940  002380  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
  9941  002384  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
  9942  002388                     i2l622:
  9943  002388  0012               	return		;funcret
  9944  00238A                     __end_ofi2___fladd:
  9945                           	callstack 0
  9946                           
  9947 ;; *************** function _alerta *****************
  9948 ;; Defined at:
  9949 ;;		line 21 in file "lcd.frase.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;		None
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;		None
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  1    wreg      void 
  9956 ;; Registers used:
  9957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9963 ;;      Params:         0       0       0       0       0       0       0       0       0
  9964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9965 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9966 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9967 ;;Total ram usage:        2 bytes
  9968 ;; Hardware stack levels used: 1
  9969 ;; Hardware stack levels required when called: 2
  9970 ;; This function calls:
  9971 ;;		i2___flge
  9972 ;;		i2_comando_lcd
  9973 ;;		i2_imprime_lcd
  9974 ;;		i2_limpa_lcd
  9975 ;; This function is called by:
  9976 ;;		_isr
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text38
  9981  0039B0                     __ptext38:
  9982                           	callstack 0
  9983  0039B0                     _alerta:
  9984                           	callstack 19
  9985  0039B0                     
  9986                           ;lcd.frase.c: 22:     if(temperatura > temperaturaMaxima || temperatura < temperaturaMin
      +                          ima){
  9987  0039B0  C03D  F001         	movff	_temperaturaMaxima,i2___flge@ff1
  9988  0039B4  C03E  F002         	movff	_temperaturaMaxima+1,i2___flge@ff1+1
  9989  0039B8  C03F  F003         	movff	_temperaturaMaxima+2,i2___flge@ff1+2
  9990  0039BC  C040  F004         	movff	_temperaturaMaxima+3,i2___flge@ff1+3
  9991  0039C0  C033  F005         	movff	_temperatura,i2___flge@ff2
  9992  0039C4  C034  F006         	movff	_temperatura+1,i2___flge@ff2+1
  9993  0039C8  C035  F007         	movff	_temperatura+2,i2___flge@ff2+2
  9994  0039CC  C036  F008         	movff	_temperatura+3,i2___flge@ff2+3
  9995  0039D0  EC5A  F019         	call	i2___flge	;wreg free
  9996  0039D4  A0D8               	btfss	status,0,c
  9997  0039D6  EFEF  F01C         	goto	i2u578_41
  9998  0039DA  EFF1  F01C         	goto	i2u578_40
  9999  0039DE                     i2u578_41:
 10000  0039DE  EF0A  F01D         	goto	i2l4325
 10001  0039E2                     i2u578_40:
 10002  0039E2  C033  F001         	movff	_temperatura,i2___flge@ff1
 10003  0039E6  C034  F002         	movff	_temperatura+1,i2___flge@ff1+1
 10004  0039EA  C035  F003         	movff	_temperatura+2,i2___flge@ff1+2
 10005  0039EE  C036  F004         	movff	_temperatura+3,i2___flge@ff1+3
 10006  0039F2  C039  F005         	movff	_temperaturaMinima,i2___flge@ff2
 10007  0039F6  C03A  F006         	movff	_temperaturaMinima+1,i2___flge@ff2+1
 10008  0039FA  C03B  F007         	movff	_temperaturaMinima+2,i2___flge@ff2+2
 10009  0039FE  C03C  F008         	movff	_temperaturaMinima+3,i2___flge@ff2+3
 10010  003A02  EC5A  F019         	call	i2___flge	;wreg free
 10011  003A06  B0D8               	btfsc	status,0,c
 10012  003A08  EF08  F01D         	goto	i2u579_41
 10013  003A0C  EF0A  F01D         	goto	i2u579_40
 10014  003A10                     i2u579_41:
 10015  003A10  EF30  F01D         	goto	i2l57
 10016  003A14                     i2u579_40:
 10017  003A14                     i2l4325:
 10018                           
 10019                           ;lcd.frase.c: 23:             limpa_lcd( );
 10020  003A14  ECC6  F020         	call	i2_limpa_lcd	;wreg free
 10021  003A18                     
 10022                           ;lcd.frase.c: 24:             _delay((unsigned long)((1000)*(4000000/4000.0)));
 10023  003A18  0E06               	movlw	6
 10024  003A1A  6E0F               	movwf	(??_alerta+1)^0,c
 10025  003A1C  0E13               	movlw	19
 10026  003A1E  6E0E               	movwf	??_alerta^0,c
 10027  003A20  0EAE               	movlw	174
 10028  003A22                     i2u827_47:
 10029  003A22  2EE8               	decfsz	wreg,f,c
 10030  003A24  D7FE               	bra	i2u827_47
 10031  003A26  2E0E               	decfsz	??_alerta^0,f,c
 10032  003A28  D7FC               	bra	i2u827_47
 10033  003A2A  2E0F               	decfsz	(??_alerta+1)^0,f,c
 10034  003A2C  D7FA               	bra	i2u827_47
 10035  003A2E                     
 10036                           ;lcd.frase.c: 25:             comando_lcd(128);
 10037  003A2E  0E00               	movlw	0
 10038  003A30  6E02               	movwf	(i2comando_lcd@comando+1)^0,c
 10039  003A32  0E80               	movlw	128
 10040  003A34  6E01               	movwf	i2comando_lcd@comando^0,c
 10041  003A36  ECA5  F020         	call	i2_comando_lcd	;wreg free
 10042  003A3A                     
 10043                           ;lcd.frase.c: 26:             imprime_lcd("ERRO Temperatura");
 10044  003A3A  0E12               	movlw	low STR_1
 10045  003A3C  6E05               	movwf	i2imprime_lcd@frase^0,c
 10046  003A3E  0E08               	movlw	high STR_1
 10047  003A40  6E06               	movwf	(i2imprime_lcd@frase+1)^0,c
 10048  003A42  EC1F  F01E         	call	i2_imprime_lcd	;wreg free
 10049  003A46                     
 10050                           ;lcd.frase.c: 27:             _delay((unsigned long)((1000)*(4000000/4000.0)));
 10051  003A46  0E06               	movlw	6
 10052  003A48  6E0F               	movwf	(??_alerta+1)^0,c
 10053  003A4A  0E13               	movlw	19
 10054  003A4C  6E0E               	movwf	??_alerta^0,c
 10055  003A4E  0EAE               	movlw	174
 10056  003A50                     i2u828_47:
 10057  003A50  2EE8               	decfsz	wreg,f,c
 10058  003A52  D7FE               	bra	i2u828_47
 10059  003A54  2E0E               	decfsz	??_alerta^0,f,c
 10060  003A56  D7FC               	bra	i2u828_47
 10061  003A58  2E0F               	decfsz	(??_alerta+1)^0,f,c
 10062  003A5A  D7FA               	bra	i2u828_47
 10063  003A5C                     
 10064                           ;lcd.frase.c: 28:             limpa_lcd( );
 10065  003A5C  ECC6  F020         	call	i2_limpa_lcd	;wreg free
 10066  003A60                     i2l57:
 10067  003A60  0012               	return		;funcret
 10068  003A62                     __end_of_alerta:
 10069                           	callstack 0
 10070                           
 10071 ;; *************** function i2_limpa_lcd *****************
 10072 ;; Defined at:
 10073 ;;		line 26 in file "./lcd.intermed.h"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;		None
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		wreg, status,2, cstack
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10087 ;;      Params:         0       0       0       0       0       0       0       0       0
 10088 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10090 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10091 ;;Total ram usage:        0 bytes
 10092 ;; Hardware stack levels used: 1
 10093 ;; Hardware stack levels required when called: 1
 10094 ;; This function calls:
 10095 ;;		i2_comando_lcd
 10096 ;; This function is called by:
 10097 ;;		_alerta
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text39
 10102  00418C                     __ptext39:
 10103                           	callstack 0
 10104  00418C                     i2_limpa_lcd:
 10105                           	callstack 19
 10106  00418C                     
 10107                           ;./lcd.intermed.h: 28:     comando_lcd(1);
 10108  00418C  0E00               	movlw	0
 10109  00418E  6E02               	movwf	(i2comando_lcd@comando+1)^0,c
 10110  004190  0E01               	movlw	1
 10111  004192  6E01               	movwf	i2comando_lcd@comando^0,c
 10112  004194  ECA5  F020         	call	i2_comando_lcd	;wreg free
 10113  004198  0012               	return		;funcret
 10114  00419A                     __end_ofi2_limpa_lcd:
 10115                           	callstack 0
 10116                           
 10117 ;; *************** function i2_comando_lcd *****************
 10118 ;; Defined at:
 10119 ;;		line 7 in file "./lcd.intermed.h"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;  comando         2    0[COMRAM] unsigned int 
 10122 ;; Auto vars:     Size  Location     Type
 10123 ;;		None
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  1    wreg      void 
 10126 ;; Registers used:
 10127 ;;		wreg
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10133 ;;      Params:         2       0       0       0       0       0       0       0       0
 10134 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10135 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10136 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10137 ;;Total ram usage:        3 bytes
 10138 ;; Hardware stack levels used: 1
 10139 ;; This function calls:
 10140 ;;		Nothing
 10141 ;; This function is called by:
 10142 ;;		_alerta
 10143 ;;		i2_limpa_lcd
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           	psect	text40
 10148  00414A                     __ptext40:
 10149                           	callstack 0
 10150  00414A                     i2_comando_lcd:
 10151                           	callstack 19
 10152  00414A                     
 10153                           ;./lcd.intermed.h: 7: void comando_lcd(unsigned int comando);./lcd.intermed.h: 8: {;./lc
      +                          d.intermed.h: 9:     PORTEbits.RE2 = 0;
 10154  00414A  9484               	bcf	132,2,c	;volatile
 10155                           
 10156                           ;./lcd.intermed.h: 10:     PORTEbits.RE1 = 1;
 10157  00414C  8284               	bsf	132,1,c	;volatile
 10158                           
 10159                           ;./lcd.intermed.h: 11:     PORTD = comando;
 10160  00414E  C001  FF83         	movff	i2comando_lcd@comando,3971	;volatile
 10161  004152                     
 10162                           ;./lcd.intermed.h: 12:     _delay((unsigned long)((2)*(4000000/4000.0)));
 10163  004152  0E03               	movlw	3
 10164  004154  6E03               	movwf	??i2_comando_lcd^0,c
 10165  004156  0E98               	movlw	152
 10166  004158                     i2u829_47:
 10167  004158  2EE8               	decfsz	wreg,f,c
 10168  00415A  D7FE               	bra	i2u829_47
 10169  00415C  2E03               	decfsz	??i2_comando_lcd^0,f,c
 10170  00415E  D7FC               	bra	i2u829_47
 10171  004160                     
 10172                           ;./lcd.intermed.h: 13:     PORTEbits.RE1 = 0;
 10173  004160  9284               	bcf	132,1,c	;volatile
 10174  004162  0012               	return		;funcret
 10175  004164                     __end_ofi2_comando_lcd:
 10176                           	callstack 0
 10177                           
 10178 ;; *************** function i2_imprime_lcd *****************
 10179 ;; Defined at:
 10180 ;;		line 31 in file "./lcd.intermed.h"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;  frase           2    4[COMRAM] PTR unsigned char 
 10183 ;;		 -> temperature(8), STR_3(12), STR_2(17), STR_1(17), 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  indice          2   11[COMRAM] int 
 10186 ;;  tamanho         2    9[COMRAM] int 
 10187 ;; Return value:  Size  Location     Type
 10188 ;;                  1    wreg      void 
 10189 ;; Registers used:
 10190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10191 ;; Tracked objects:
 10192 ;;		On entry : 0/0
 10193 ;;		On exit  : 0/0
 10194 ;;		Unchanged: 0/0
 10195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10196 ;;      Params:         2       0       0       0       0       0       0       0       0
 10197 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10198 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10199 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10200 ;;Total ram usage:        9 bytes
 10201 ;; Hardware stack levels used: 1
 10202 ;; Hardware stack levels required when called: 1
 10203 ;; This function calls:
 10204 ;;		i2_dado_lcd
 10205 ;;		i2_strlen
 10206 ;; This function is called by:
 10207 ;;		_alerta
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211                           	psect	text41
 10212  003C3E                     __ptext41:
 10213                           	callstack 0
 10214  003C3E                     i2_imprime_lcd:
 10215                           	callstack 19
 10216  003C3E                     
 10217                           ;./lcd.intermed.h: 31: void imprime_lcd(char frase[]);./lcd.intermed.h: 32: {;./lcd.inte
      +                          rmed.h: 33: int indice = 0;
 10218  003C3E  0E00               	movlw	0
 10219  003C40  6E0D               	movwf	(i2imprime_lcd@indice+1)^0,c
 10220  003C42  0E00               	movlw	0
 10221  003C44  6E0C               	movwf	i2imprime_lcd@indice^0,c
 10222  003C46                     
 10223                           ;./lcd.intermed.h: 34: int tamanho = strlen(frase);
 10224  003C46  C005  F001         	movff	i2imprime_lcd@frase,i2strlen@s
 10225  003C4A  C006  F002         	movff	i2imprime_lcd@frase+1,i2strlen@s+1
 10226  003C4E  EC93  F01F         	call	i2_strlen	;wreg free
 10227  003C52  C001  F00A         	movff	?i2_strlen,i2imprime_lcd@tamanho
 10228  003C56  C002  F00B         	movff	?i2_strlen+1,i2imprime_lcd@tamanho+1
 10229                           
 10230                           ;./lcd.intermed.h: 35: while(indice<tamanho)
 10231  003C5A  EF4D  F01E         	goto	i2l4083
 10232  003C5E                     i2l4079:
 10233                           
 10234                           ;./lcd.intermed.h: 36:     {;./lcd.intermed.h: 37: dado_lcd(frase[indice]);
 10235  003C5E  500C               	movf	i2imprime_lcd@indice^0,w,c
 10236  003C60  2405               	addwf	i2imprime_lcd@frase^0,w,c
 10237  003C62  6E07               	movwf	??i2_imprime_lcd^0,c
 10238  003C64  500D               	movf	(i2imprime_lcd@indice+1)^0,w,c
 10239  003C66  2006               	addwfc	(i2imprime_lcd@frase+1)^0,w,c
 10240  003C68  6E08               	movwf	(??i2_imprime_lcd+1)^0,c
 10241  003C6A  C007  FFF6         	movff	??i2_imprime_lcd,tblptrl
 10242  003C6E  C008  FFF7         	movff	??i2_imprime_lcd+1,tblptrh
 10243  003C72  6AF8               	clrf	tblptru,c
 10244  003C74  0E07               	movlw	(high __ramtop+-1)
 10245  003C76  64F7               	cpfsgt	tblptrh,c
 10246  003C78  D003               	bra	i2u530_47
 10247  003C7A  0008               	tblrd		*
 10248  003C7C  50F5               	movf	tablat,w,c
 10249  003C7E  D005               	bra	i2u530_40
 10250  003C80                     i2u530_47:
 10251  003C80  CFF6 FFE1          	movff	tblptrl,fsr1l
 10252  003C84  CFF7 FFE2          	movff	tblptrh,fsr1h
 10253  003C88  50E7               	movf	indf1,w,c
 10254  003C8A                     i2u530_40:
 10255  003C8A  6E09               	movwf	(??i2_imprime_lcd+2)^0,c
 10256  003C8C  5009               	movf	(??i2_imprime_lcd+2)^0,w,c
 10257  003C8E  6E01               	movwf	i2dado_lcd@dado^0,c
 10258  003C90  6A02               	clrf	(i2dado_lcd@dado+1)^0,c
 10259  003C92  ECB2  F020         	call	i2_dado_lcd	;wreg free
 10260  003C96                     
 10261                           ;./lcd.intermed.h: 38: indice++;
 10262  003C96  4A0C               	infsnz	i2imprime_lcd@indice^0,f,c
 10263  003C98  2A0D               	incf	(i2imprime_lcd@indice+1)^0,f,c
 10264  003C9A                     i2l4083:
 10265                           
 10266                           ;./lcd.intermed.h: 35: while(indice<tamanho)
 10267  003C9A  500A               	movf	i2imprime_lcd@tamanho^0,w,c
 10268  003C9C  5C0C               	subwf	i2imprime_lcd@indice^0,w,c
 10269  003C9E  500D               	movf	(i2imprime_lcd@indice+1)^0,w,c
 10270  003CA0  0A80               	xorlw	128
 10271  003CA2  6E07               	movwf	??i2_imprime_lcd^0,c
 10272  003CA4  500B               	movf	(i2imprime_lcd@tamanho+1)^0,w,c
 10273  003CA6  0A80               	xorlw	128
 10274  003CA8  5807               	subwfb	??i2_imprime_lcd^0,w,c
 10275  003CAA  A0D8               	btfss	status,0,c
 10276  003CAC  EF5A  F01E         	goto	i2u531_41
 10277  003CB0  EF5C  F01E         	goto	i2u531_40
 10278  003CB4                     i2u531_41:
 10279  003CB4  EF2F  F01E         	goto	i2l4079
 10280  003CB8                     i2u531_40:
 10281  003CB8  0012               	return		;funcret
 10282  003CBA                     __end_ofi2_imprime_lcd:
 10283                           	callstack 0
 10284                           
 10285 ;; *************** function i2_strlen *****************
 10286 ;; Defined at:
 10287 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10290 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
 10291 ;;		 -> STR_1(17), 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10294 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
 10295 ;;		 -> STR_1(17), 
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  2    0[COMRAM] unsigned int 
 10298 ;; Registers used:
 10299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10305 ;;      Params:         2       0       0       0       0       0       0       0       0
 10306 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10308 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10309 ;;Total ram usage:        4 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; This function calls:
 10312 ;;		Nothing
 10313 ;; This function is called by:
 10314 ;;		i2_imprime_lcd
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           	psect	text42
 10319  003F26                     __ptext42:
 10320                           	callstack 0
 10321  003F26                     i2_strlen:
 10322                           	callstack 19
 10323  003F26  C001  F003         	movff	i2strlen@s,i2strlen@a
 10324  003F2A  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 10325  003F2E  EF9B  F01F         	goto	i2l4047
 10326  003F32                     i2l4045:
 10327  003F32  4A01               	infsnz	i2strlen@s^0,f,c
 10328  003F34  2A02               	incf	(i2strlen@s+1)^0,f,c
 10329  003F36                     i2l4047:
 10330  003F36  C001  FFF6         	movff	i2strlen@s,tblptrl
 10331  003F3A  C002  FFF7         	movff	i2strlen@s+1,tblptrh
 10332  003F3E  6AF8               	clrf	tblptru,c
 10333  003F40  0E07               	movlw	(high __ramtop+-1)
 10334  003F42  64F7               	cpfsgt	tblptrh,c
 10335  003F44  D003               	bra	i2u527_47
 10336  003F46  0008               	tblrd		*
 10337  003F48  50F5               	movf	tablat,w,c
 10338  003F4A  D005               	bra	i2u527_40
 10339  003F4C                     i2u527_47:
 10340  003F4C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10341  003F50  CFF7 FFE2          	movff	tblptrh,fsr1h
 10342  003F54  50E7               	movf	indf1,w,c
 10343  003F56                     i2u527_40:
 10344  003F56  0900               	iorlw	0
 10345  003F58  A4D8               	btfss	status,2,c
 10346  003F5A  EFB1  F01F         	goto	i2u528_41
 10347  003F5E  EFB3  F01F         	goto	i2u528_40
 10348  003F62                     i2u528_41:
 10349  003F62  EF99  F01F         	goto	i2l4045
 10350  003F66                     i2u528_40:
 10351  003F66  5003               	movf	i2strlen@a^0,w,c
 10352  003F68  5C01               	subwf	i2strlen@s^0,w,c
 10353  003F6A  6E01               	movwf	?i2_strlen^0,c
 10354  003F6C  5004               	movf	(i2strlen@a+1)^0,w,c
 10355  003F6E  5802               	subwfb	(i2strlen@s+1)^0,w,c
 10356  003F70  6E02               	movwf	(?i2_strlen+1)^0,c
 10357  003F72  0012               	return		;funcret
 10358  003F74                     __end_ofi2_strlen:
 10359                           	callstack 0
 10360                           
 10361 ;; *************** function i2_dado_lcd *****************
 10362 ;; Defined at:
 10363 ;;		line 16 in file "./lcd.intermed.h"
 10364 ;; Parameters:    Size  Location     Type
 10365 ;;  dado            2    0[COMRAM] unsigned int 
 10366 ;; Auto vars:     Size  Location     Type
 10367 ;;		None
 10368 ;; Return value:  Size  Location     Type
 10369 ;;                  1    wreg      void 
 10370 ;; Registers used:
 10371 ;;		wreg
 10372 ;; Tracked objects:
 10373 ;;		On entry : 0/0
 10374 ;;		On exit  : 0/0
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10377 ;;      Params:         2       0       0       0       0       0       0       0       0
 10378 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10379 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10380 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10381 ;;Total ram usage:        3 bytes
 10382 ;; Hardware stack levels used: 1
 10383 ;; This function calls:
 10384 ;;		Nothing
 10385 ;; This function is called by:
 10386 ;;		i2_imprime_lcd
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           	psect	text43
 10391  004164                     __ptext43:
 10392                           	callstack 0
 10393  004164                     i2_dado_lcd:
 10394                           	callstack 19
 10395  004164                     
 10396                           ;./lcd.intermed.h: 16: void dado_lcd(unsigned int dado);./lcd.intermed.h: 17: {;./lcd.in
      +                          termed.h: 18:     PORTEbits.RE2 = 1;
 10397  004164  8484               	bsf	132,2,c	;volatile
 10398                           
 10399                           ;./lcd.intermed.h: 19:     PORTEbits.RE1 = 1;
 10400  004166  8284               	bsf	132,1,c	;volatile
 10401                           
 10402                           ;./lcd.intermed.h: 20:     PORTD = dado;
 10403  004168  C001  FF83         	movff	i2dado_lcd@dado,3971	;volatile
 10404  00416C                     
 10405                           ;./lcd.intermed.h: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
 10406  00416C  0E03               	movlw	3
 10407  00416E  6E03               	movwf	??i2_dado_lcd^0,c
 10408  004170  0E98               	movlw	152
 10409  004172                     i2u830_47:
 10410  004172  2EE8               	decfsz	wreg,f,c
 10411  004174  D7FE               	bra	i2u830_47
 10412  004176  2E03               	decfsz	??i2_dado_lcd^0,f,c
 10413  004178  D7FC               	bra	i2u830_47
 10414  00417A                     
 10415                           ;./lcd.intermed.h: 22:     PORTEbits.RE1 = 0;
 10416  00417A  9284               	bcf	132,1,c	;volatile
 10417  00417C  0012               	return		;funcret
 10418  00417E                     __end_ofi2_dado_lcd:
 10419                           	callstack 0
 10420                           
 10421 ;; *************** function i2___flge *****************
 10422 ;; Defined at:
 10423 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;  ff1             4    0[COMRAM] void 
 10426 ;;  ff2             4    4[COMRAM] void 
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;		None               void
 10431 ;; Registers used:
 10432 ;;		wreg, status,2, status,0
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10438 ;;      Params:         8       0       0       0       0       0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10440 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10441 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10442 ;;Total ram usage:       12 bytes
 10443 ;; Hardware stack levels used: 1
 10444 ;; This function calls:
 10445 ;;		Nothing
 10446 ;; This function is called by:
 10447 ;;		_alerta
 10448 ;;		_verificaOValor
 10449 ;;		_isr
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text44
 10454  0032B4                     __ptext44:
 10455                           	callstack 0
 10456  0032B4                     i2___flge:
 10457                           	callstack 21
 10458  0032B4  0E00               	movlw	0
 10459  0032B6  1401               	andwf	i2___flge@ff1^0,w,c
 10460  0032B8  6E09               	movwf	??i2___flge^0,c
 10461  0032BA  0E00               	movlw	0
 10462  0032BC  1402               	andwf	(i2___flge@ff1+1)^0,w,c
 10463  0032BE  6E0A               	movwf	(??i2___flge+1)^0,c
 10464  0032C0  0E80               	movlw	128
 10465  0032C2  1403               	andwf	(i2___flge@ff1+2)^0,w,c
 10466  0032C4  6E0B               	movwf	(??i2___flge+2)^0,c
 10467  0032C6  0E7F               	movlw	127
 10468  0032C8  1404               	andwf	(i2___flge@ff1+3)^0,w,c
 10469  0032CA  6E0C               	movwf	(??i2___flge+3)^0,c
 10470  0032CC  5009               	movf	??i2___flge^0,w,c
 10471  0032CE  100A               	iorwf	(??i2___flge+1)^0,w,c
 10472  0032D0  100B               	iorwf	(??i2___flge+2)^0,w,c
 10473  0032D2  100C               	iorwf	(??i2___flge+3)^0,w,c
 10474  0032D4  A4D8               	btfss	status,2,c
 10475  0032D6  EF6F  F019         	goto	i2u532_41
 10476  0032DA  EF71  F019         	goto	i2u532_40
 10477  0032DE                     i2u532_41:
 10478  0032DE  EF79  F019         	goto	i2l4089
 10479  0032E2                     i2u532_40:
 10480  0032E2  0E00               	movlw	0
 10481  0032E4  6E01               	movwf	i2___flge@ff1^0,c
 10482  0032E6  0E00               	movlw	0
 10483  0032E8  6E02               	movwf	(i2___flge@ff1+1)^0,c
 10484  0032EA  0E00               	movlw	0
 10485  0032EC  6E03               	movwf	(i2___flge@ff1+2)^0,c
 10486  0032EE  0E00               	movlw	0
 10487  0032F0  6E04               	movwf	(i2___flge@ff1+3)^0,c
 10488  0032F2                     i2l4089:
 10489  0032F2  0E00               	movlw	0
 10490  0032F4  1405               	andwf	i2___flge@ff2^0,w,c
 10491  0032F6  6E09               	movwf	??i2___flge^0,c
 10492  0032F8  0E00               	movlw	0
 10493  0032FA  1406               	andwf	(i2___flge@ff2+1)^0,w,c
 10494  0032FC  6E0A               	movwf	(??i2___flge+1)^0,c
 10495  0032FE  0E80               	movlw	128
 10496  003300  1407               	andwf	(i2___flge@ff2+2)^0,w,c
 10497  003302  6E0B               	movwf	(??i2___flge+2)^0,c
 10498  003304  0E7F               	movlw	127
 10499  003306  1408               	andwf	(i2___flge@ff2+3)^0,w,c
 10500  003308  6E0C               	movwf	(??i2___flge+3)^0,c
 10501  00330A  5009               	movf	??i2___flge^0,w,c
 10502  00330C  100A               	iorwf	(??i2___flge+1)^0,w,c
 10503  00330E  100B               	iorwf	(??i2___flge+2)^0,w,c
 10504  003310  100C               	iorwf	(??i2___flge+3)^0,w,c
 10505  003312  A4D8               	btfss	status,2,c
 10506  003314  EF8E  F019         	goto	i2u533_41
 10507  003318  EF90  F019         	goto	i2u533_40
 10508  00331C                     i2u533_41:
 10509  00331C  EF98  F019         	goto	i2l4093
 10510  003320                     i2u533_40:
 10511  003320  0E00               	movlw	0
 10512  003322  6E05               	movwf	i2___flge@ff2^0,c
 10513  003324  0E00               	movlw	0
 10514  003326  6E06               	movwf	(i2___flge@ff2+1)^0,c
 10515  003328  0E00               	movlw	0
 10516  00332A  6E07               	movwf	(i2___flge@ff2+2)^0,c
 10517  00332C  0E00               	movlw	0
 10518  00332E  6E08               	movwf	(i2___flge@ff2+3)^0,c
 10519  003330                     i2l4093:
 10520  003330  AE04               	btfss	(i2___flge@ff1+3)^0,7,c
 10521  003332  EF9D  F019         	goto	i2u534_41
 10522  003336  EF9F  F019         	goto	i2u534_40
 10523  00333A                     i2u534_41:
 10524  00333A  EFA8  F019         	goto	i2l4097
 10525  00333E                     i2u534_40:
 10526  00333E  6C01               	negf	i2___flge@ff1^0,c
 10527  003340  1E02               	comf	(i2___flge@ff1+1)^0,f,c
 10528  003342  B0D8               	btfsc	status,0,c
 10529  003344  2A02               	incf	(i2___flge@ff1+1)^0,f,c
 10530  003346  1E03               	comf	(i2___flge@ff1+2)^0,f,c
 10531  003348  B0D8               	btfsc	status,0,c
 10532  00334A  2A03               	incf	(i2___flge@ff1+2)^0,f,c
 10533  00334C  0E80               	movlw	128
 10534  00334E  5604               	subfwb	(i2___flge@ff1+3)^0,f,c
 10535  003350                     i2l4097:
 10536  003350  AE08               	btfss	(i2___flge@ff2+3)^0,7,c
 10537  003352  EFAD  F019         	goto	i2u535_41
 10538  003356  EFAF  F019         	goto	i2u535_40
 10539  00335A                     i2u535_41:
 10540  00335A  EFB8  F019         	goto	i2l350
 10541  00335E                     i2u535_40:
 10542  00335E  6C05               	negf	i2___flge@ff2^0,c
 10543  003360  1E06               	comf	(i2___flge@ff2+1)^0,f,c
 10544  003362  B0D8               	btfsc	status,0,c
 10545  003364  2A06               	incf	(i2___flge@ff2+1)^0,f,c
 10546  003366  1E07               	comf	(i2___flge@ff2+2)^0,f,c
 10547  003368  B0D8               	btfsc	status,0,c
 10548  00336A  2A07               	incf	(i2___flge@ff2+2)^0,f,c
 10549  00336C  0E80               	movlw	128
 10550  00336E  5608               	subfwb	(i2___flge@ff2+3)^0,f,c
 10551  003370                     i2l350:
 10552  003370  0E00               	movlw	0
 10553  003372  1A01               	xorwf	i2___flge@ff1^0,f,c
 10554  003374  0E00               	movlw	0
 10555  003376  1A02               	xorwf	(i2___flge@ff1+1)^0,f,c
 10556  003378  0E00               	movlw	0
 10557  00337A  1A03               	xorwf	(i2___flge@ff1+2)^0,f,c
 10558  00337C  0E80               	movlw	128
 10559  00337E  1A04               	xorwf	(i2___flge@ff1+3)^0,f,c
 10560  003380  0E00               	movlw	0
 10561  003382  1A05               	xorwf	i2___flge@ff2^0,f,c
 10562  003384  0E00               	movlw	0
 10563  003386  1A06               	xorwf	(i2___flge@ff2+1)^0,f,c
 10564  003388  0E00               	movlw	0
 10565  00338A  1A07               	xorwf	(i2___flge@ff2+2)^0,f,c
 10566  00338C  0E80               	movlw	128
 10567  00338E  1A08               	xorwf	(i2___flge@ff2+3)^0,f,c
 10568  003390  5005               	movf	i2___flge@ff2^0,w,c
 10569  003392  5C01               	subwf	i2___flge@ff1^0,w,c
 10570  003394  5006               	movf	(i2___flge@ff2+1)^0,w,c
 10571  003396  5802               	subwfb	(i2___flge@ff1+1)^0,w,c
 10572  003398  5007               	movf	(i2___flge@ff2+2)^0,w,c
 10573  00339A  5803               	subwfb	(i2___flge@ff1+2)^0,w,c
 10574  00339C  5008               	movf	(i2___flge@ff2+3)^0,w,c
 10575  00339E  5804               	subwfb	(i2___flge@ff1+3)^0,w,c
 10576  0033A0  B0D8               	btfsc	status,0,c
 10577  0033A2  EFD5  F019         	goto	i2u536_41
 10578  0033A6  EFD7  F019         	goto	i2u536_40
 10579  0033AA                     i2u536_41:
 10580  0033AA  EFDA  F019         	goto	i2l4103
 10581  0033AE                     i2u536_40:
 10582  0033AE  90D8               	bcf	status,0,c
 10583  0033B0  EFDB  F019         	goto	i2l355
 10584  0033B4                     i2l4103:
 10585  0033B4  80D8               	bsf	status,0,c
 10586  0033B6                     i2l355:
 10587  0033B6  0012               	return		;funcret
 10588  0033B8                     __end_ofi2___flge:
 10589                           	callstack 0
 10590                           
 10591                           	psect	rparam
 10592  0000                     
 10593                           	psect	temp
 10594  000041                     btemp:
 10595                           	callstack 0
 10596  000041                     	ds	1
 10597  0000                     int$flags	set	btemp
 10598  0000                     wtemp8	set	btemp+1
 10599  0000                     ttemp5	set	btemp+1
 10600  0000                     ttemp6	set	btemp+4
 10601  0000                     ttemp7	set	btemp+8
 10602                           
 10603                           	psect	idloc
 10604                           
 10605                           ;Config register IDLOC0 @ 0x200000
 10606                           ;	unspecified, using default values
 10607  200000                     	org	2097152
 10608  200000  FF                 	db	255
 10609                           
 10610                           ;Config register IDLOC1 @ 0x200001
 10611                           ;	unspecified, using default values
 10612  200001                     	org	2097153
 10613  200001  FF                 	db	255
 10614                           
 10615                           ;Config register IDLOC2 @ 0x200002
 10616                           ;	unspecified, using default values
 10617  200002                     	org	2097154
 10618  200002  FF                 	db	255
 10619                           
 10620                           ;Config register IDLOC3 @ 0x200003
 10621                           ;	unspecified, using default values
 10622  200003                     	org	2097155
 10623  200003  FF                 	db	255
 10624                           
 10625                           ;Config register IDLOC4 @ 0x200004
 10626                           ;	unspecified, using default values
 10627  200004                     	org	2097156
 10628  200004  FF                 	db	255
 10629                           
 10630                           ;Config register IDLOC5 @ 0x200005
 10631                           ;	unspecified, using default values
 10632  200005                     	org	2097157
 10633  200005  FF                 	db	255
 10634                           
 10635                           ;Config register IDLOC6 @ 0x200006
 10636                           ;	unspecified, using default values
 10637  200006                     	org	2097158
 10638  200006  FF                 	db	255
 10639                           
 10640                           ;Config register IDLOC7 @ 0x200007
 10641                           ;	unspecified, using default values
 10642  200007                     	org	2097159
 10643  200007  FF                 	db	255
 10644                           
 10645                           	psect	config
 10646                           
 10647                           ;Config register CONFIG1L @ 0x300000
 10648                           ;	unspecified, using default values
 10649                           ;	PLL Prescaler Selection bits
 10650                           ;	PLLDIV = 0x0, unprogrammed default
 10651                           ;	System Clock Postscaler Selection bits
 10652                           ;	CPUDIV = 0x0, unprogrammed default
 10653                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10654                           ;	USBDIV = 0x0, unprogrammed default
 10655  300000                     	org	3145728
 10656  300000  00                 	db	0
 10657                           
 10658                           ;Config register CONFIG1H @ 0x300001
 10659                           ;	Oscillator Selection bits
 10660                           ;	FOSC = HS, HS oscillator (HS)
 10661                           ;	Fail-Safe Clock Monitor Enable bit
 10662                           ;	FCMEN = 0x0, unprogrammed default
 10663                           ;	Internal/External Oscillator Switchover bit
 10664                           ;	IESO = 0x0, unprogrammed default
 10665  300001                     	org	3145729
 10666  300001  0C                 	db	12
 10667                           
 10668                           ;Config register CONFIG2L @ 0x300002
 10669                           ;	unspecified, using default values
 10670                           ;	Power-up Timer Enable bit
 10671                           ;	PWRT = 0x1, unprogrammed default
 10672                           ;	Brown-out Reset Enable bits
 10673                           ;	BOR = 0x3, unprogrammed default
 10674                           ;	Brown-out Reset Voltage bits
 10675                           ;	BORV = 0x3, unprogrammed default
 10676                           ;	USB Voltage Regulator Enable bit
 10677                           ;	VREGEN = 0x0, unprogrammed default
 10678  300002                     	org	3145730
 10679  300002  1F                 	db	31
 10680                           
 10681                           ;Config register CONFIG2H @ 0x300003
 10682                           ;	Watchdog Timer Enable bit
 10683                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10684                           ;	Watchdog Timer Postscale Select bits
 10685                           ;	WDTPS = 0xF, unprogrammed default
 10686  300003                     	org	3145731
 10687  300003  1E                 	db	30
 10688                           
 10689                           ; Padding undefined space
 10690  300004                     	org	3145732
 10691  300004  FF                 	db	255
 10692                           
 10693                           ;Config register CONFIG3H @ 0x300005
 10694                           ;	CCP2 MUX bit
 10695                           ;	CCP2MX = 0x1, unprogrammed default
 10696                           ;	PORTB A/D Enable bit
 10697                           ;	PBADEN = 0x1, unprogrammed default
 10698                           ;	Low-Power Timer 1 Oscillator Enable bit
 10699                           ;	LPT1OSC = 0x0, unprogrammed default
 10700                           ;	MCLR Pin Enable bit
 10701                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10702  300005                     	org	3145733
 10703  300005  83                 	db	131
 10704                           
 10705                           ;Config register CONFIG4L @ 0x300006
 10706                           ;	unspecified, using default values
 10707                           ;	Stack Full/Underflow Reset Enable bit
 10708                           ;	STVREN = 0x1, unprogrammed default
 10709                           ;	Single-Supply ICSP Enable bit
 10710                           ;	LVP = 0x1, unprogrammed default
 10711                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10712                           ;	ICPRT = 0x0, unprogrammed default
 10713                           ;	Extended Instruction Set Enable bit
 10714                           ;	XINST = 0x0, unprogrammed default
 10715                           ;	Background Debugger Enable bit
 10716                           ;	DEBUG = 0x1, unprogrammed default
 10717  300006                     	org	3145734
 10718  300006  85                 	db	133
 10719                           
 10720                           ; Padding undefined space
 10721  300007                     	org	3145735
 10722  300007  FF                 	db	255
 10723                           
 10724                           ;Config register CONFIG5L @ 0x300008
 10725                           ;	unspecified, using default values
 10726                           ;	Code Protection bit
 10727                           ;	CP0 = 0x1, unprogrammed default
 10728                           ;	Code Protection bit
 10729                           ;	CP1 = 0x1, unprogrammed default
 10730                           ;	Code Protection bit
 10731                           ;	CP2 = 0x1, unprogrammed default
 10732                           ;	Code Protection bit
 10733                           ;	CP3 = 0x1, unprogrammed default
 10734  300008                     	org	3145736
 10735  300008  0F                 	db	15
 10736                           
 10737                           ;Config register CONFIG5H @ 0x300009
 10738                           ;	unspecified, using default values
 10739                           ;	Boot Block Code Protection bit
 10740                           ;	CPB = 0x1, unprogrammed default
 10741                           ;	Data EEPROM Code Protection bit
 10742                           ;	CPD = 0x1, unprogrammed default
 10743  300009                     	org	3145737
 10744  300009  C0                 	db	192
 10745                           
 10746                           ;Config register CONFIG6L @ 0x30000A
 10747                           ;	unspecified, using default values
 10748                           ;	Write Protection bit
 10749                           ;	WRT0 = 0x1, unprogrammed default
 10750                           ;	Write Protection bit
 10751                           ;	WRT1 = 0x1, unprogrammed default
 10752                           ;	Write Protection bit
 10753                           ;	WRT2 = 0x1, unprogrammed default
 10754                           ;	Write Protection bit
 10755                           ;	WRT3 = 0x1, unprogrammed default
 10756  30000A                     	org	3145738
 10757  30000A  0F                 	db	15
 10758                           
 10759                           ;Config register CONFIG6H @ 0x30000B
 10760                           ;	unspecified, using default values
 10761                           ;	Configuration Register Write Protection bit
 10762                           ;	WRTC = 0x1, unprogrammed default
 10763                           ;	Boot Block Write Protection bit
 10764                           ;	WRTB = 0x1, unprogrammed default
 10765                           ;	Data EEPROM Write Protection bit
 10766                           ;	WRTD = 0x1, unprogrammed default
 10767  30000B                     	org	3145739
 10768  30000B  E0                 	db	224
 10769                           
 10770                           ;Config register CONFIG7L @ 0x30000C
 10771                           ;	unspecified, using default values
 10772                           ;	Table Read Protection bit
 10773                           ;	EBTR0 = 0x1, unprogrammed default
 10774                           ;	Table Read Protection bit
 10775                           ;	EBTR1 = 0x1, unprogrammed default
 10776                           ;	Table Read Protection bit
 10777                           ;	EBTR2 = 0x1, unprogrammed default
 10778                           ;	Table Read Protection bit
 10779                           ;	EBTR3 = 0x1, unprogrammed default
 10780  30000C                     	org	3145740
 10781  30000C  0F                 	db	15
 10782                           
 10783                           ;Config register CONFIG7H @ 0x30000D
 10784                           ;	unspecified, using default values
 10785                           ;	Boot Block Table Read Protection bit
 10786                           ;	EBTRB = 0x1, unprogrammed default
 10787  30000D                     	org	3145741
 10788  30000D  40                 	db	64
 10789                           tosu	equ	0xFFF
 10790                           tosh	equ	0xFFE
 10791                           tosl	equ	0xFFD
 10792                           stkptr	equ	0xFFC
 10793                           pclatu	equ	0xFFB
 10794                           pclath	equ	0xFFA
 10795                           pcl	equ	0xFF9
 10796                           tblptru	equ	0xFF8
 10797                           tblptrh	equ	0xFF7
 10798                           tblptrl	equ	0xFF6
 10799                           tablat	equ	0xFF5
 10800                           prodh	equ	0xFF4
 10801                           prodl	equ	0xFF3
 10802                           indf0	equ	0xFEF
 10803                           postinc0	equ	0xFEE
 10804                           postdec0	equ	0xFED
 10805                           preinc0	equ	0xFEC
 10806                           plusw0	equ	0xFEB
 10807                           fsr0h	equ	0xFEA
 10808                           fsr0l	equ	0xFE9
 10809                           wreg	equ	0xFE8
 10810                           indf1	equ	0xFE7
 10811                           postinc1	equ	0xFE6
 10812                           postdec1	equ	0xFE5
 10813                           preinc1	equ	0xFE4
 10814                           plusw1	equ	0xFE3
 10815                           fsr1h	equ	0xFE2
 10816                           fsr1l	equ	0xFE1
 10817                           bsr	equ	0xFE0
 10818                           indf2	equ	0xFDF
 10819                           postinc2	equ	0xFDE
 10820                           postdec2	equ	0xFDD
 10821                           preinc2	equ	0xFDC
 10822                           plusw2	equ	0xFDB
 10823                           fsr2h	equ	0xFDA
 10824                           fsr2l	equ	0xFD9
 10825                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        8
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      64
    BANK0           160    143     157
    BANK1           256      8      88
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), temperature(BANK0[8]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), temperature(BANK0[8]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S820_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    imprime_lcd@frase	PTR unsigned char  size(2) Largest target is 17
		 -> temperature(BANK0[8]), STR_3(CODE[12]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_tolower
    _efgtoa->___fladd
    _efgtoa->___fldiv
    _efgtoa->___fleq
    _efgtoa->___flmul
    _efgtoa->_tolower
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _limpa_lcd->_comando_lcd
    _imprime_lcd->_strlen

Critical Paths under _isr in COMRAM

    _isr->i2___flsub
    i2___flsub->i2___fladd
    _verificaOValor->i2___fladd
    _alerta->i2_imprime_lcd
    i2_limpa_lcd->i2_comando_lcd
    i2_imprime_lcd->i2_strlen

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   41760
                                            141 BANK0      2     2      0
                        _comando_lcd
                        _imprime_lcd
                          _limpa_lcd
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   39784
                                            133 BANK0      8     0      8
                                              0 BANK1      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   39274
                                            125 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   38723
                                            101 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             30 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   31390
                                             33 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             36 COMRAM     6     4      2
                                              0 BANK0      2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             30 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             30 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4047
                                              4 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             39 COMRAM     3     3      0
                                              0 BANK0      4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             30 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             30 COMRAM     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             30 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4667
                                             13 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3882
                                             30 COMRAM    12     4      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             30 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             30 COMRAM    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1646
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             30 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                             30 COMRAM    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             30 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1695
                                             37 COMRAM     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             30 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             30 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _limpa_lcd                                            0     0      0     528
                        _comando_lcd
 ---------------------------------------------------------------------------------
 (2) _comando_lcd                                          3     1      2     528
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _imprime_lcd                                          9     7      2     920
                                             34 COMRAM     5     3      2
                                              0 BANK0      4     4      0
                           _dado_lcd
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _dado_lcd                                             3     1      2     121
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  6     6      0    8814
                                             24 COMRAM     6     6      0
                             _alerta
                     _verificaOValor
                          i2___fladd
                           i2___flge
                          i2___flsub
 ---------------------------------------------------------------------------------
 (10) i2___flsub                                           8     0      8    2393
                                             16 COMRAM     8     0      8
                          i2___fladd
 ---------------------------------------------------------------------------------
 (10) _verificaOValor                                      0     0      0    2738
                          i2___fladd
                           i2___flge
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2244
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (10) _alerta                                              2     2      0     945
                                             13 COMRAM     2     2      0
                           i2___flge
                      i2_comando_lcd
                      i2_imprime_lcd
                        i2_limpa_lcd
 ---------------------------------------------------------------------------------
 (11) i2_limpa_lcd                                         0     0      0      74
                      i2_comando_lcd
 ---------------------------------------------------------------------------------
 (12) i2_comando_lcd                                       3     1      2      74
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (11) i2_imprime_lcd                                       9     7      2     303
                                              4 COMRAM     9     7      2
                         i2_dado_lcd
                           i2_strlen
 ---------------------------------------------------------------------------------
 (12) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_dado_lcd                                          3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (10) i2___flge                                           12     4      8     494
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _comando_lcd
   _imprime_lcd
     _dado_lcd
     _strlen
   _limpa_lcd
     _comando_lcd
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _isr (ROOT)
   _alerta
     i2___flge
     i2_comando_lcd
     i2_imprime_lcd
       i2_dado_lcd
       i2_strlen
     i2_limpa_lcd
       i2_comando_lcd
   _verificaOValor
     i2___fladd
     i2___flge
   i2___fladd
   i2___flge
   i2___flsub
     i2___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      8      58       7       34.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8F      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      40       1       68.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     135      20        0.0%
DATA                 0      0     135       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 06 11:57:30 2021

           ___fldiv@aexp 006C             ___fldiv@bexp 006B             ___fldiv@sign 0064  
                     l31 412E                       l34 4148                       l43 3C3C  
                     l37 418A                       l85 4114             ___awdiv@sign 0024  
    ___wmul@multiplicand 0021                      l316 39AE                      l350 326C  
                    l344 3BBA                      l329 3B10                      l355 32B2  
                    l613 1BF8                      l630 1D12                      l622 1EC8  
                    l614 1BE6                      l382 31AC                      l703 27B4  
                    l359 40B6                      l615 1BAC                      l640 1DD0  
                    l706 2646                      l716 2776                      l708 26BE  
                    l804 386A                      l709 26AC                      l639 1DE2  
                    l655 3FBA                      l807 38AE                      l680 2A6E  
                    l672 2974                      l681 2A5C                      l809 38EA  
                    l667 2B50                      l827 149A                      l763 3E32  
                    l669 29B0                      l845 0C30                      l678 29F6  
                    l942 3D12                      l943 3D1A                      l936 194C  
                    l953 34B6                      l873 106E                      l929 1A06  
                    l699 2450                      l982 309E                      l991 2D66  
                    l985 30A6                      l994 2CAA          ?_verificaOValor 0001  
            i2___fladd@a 0005              i2___fladd@b 0001               i2_dado_lcd 4164  
                    _pad 3824                      _isr 0008             ___awmod@sign 0024  
                    wreg 000FE8              i2___flsub@a 0015              i2___flsub@b 0011  
           ___flmul@aexp 0061             ___flmul@bexp 0066             ___flmul@sign 0060  
           ___flmul@temp 006B             ___flmul@prod 0067             ___fltol@exp1 0028  
                   l1001 40EE                     l1030 3822                     l1015 407E  
                   l1009 3ED6                     l1041 41A2                     l1053 3F24  
                   l1038 4000                     l1047 3DD8                     l1072 3D7C  
                   l1057 3686                     l1067 3D74                     l5001 3988  
                   l5003 398E                     l5011 3A62                     l4053 4116  
                   l5005 399E                     l5021 3A8E                     l5013 3A66  
                   l5101 30FC                     l4055 411E                     l5007 39A6  
                   l5031 3AC6                     l5023 3A96                     l5015 3A74  
                   l5103 30FE                     l4057 412C                     l5041 3B00  
                   l5033 3ADC                     l5025 3AA8                     l5017 3A7C  
                   l5105 310E                     l5201 2BDE                     l5043 3B08  
                   l5035 3AE4                     l5027 3AB0                     l5019 3A80  
                   l5051 3B50                     l5131 318C                     l5115 3138  
                   l5107 3112                     l5203 2BEC                     l5211 2CCE  
                   l4309 417E                     l5037 3AEA                     l5029 3AB8  
                   l5053 3B7E                     l4501 1A9E                     l5133 319C  
                   l5125 3160                     l5117 3142                     l5109 3120  
                   l5213 2D0A                     l5141 3846                     l5223 40B8  
                   l5231 3E9E                     l5039 3AF0                     l5055 3B8E  
                   l5047 3B12                     l5071 322C                     l5063 31AE  
                   l4511 1AD2                     l4503 1AA0                     l5127 316C  
                   l5119 314C                     l5215 2D1E                     l5207 2C5E  
                   l5151 3890                     l5143 3856                     l5311 0AC4  
                   l5233 3ECC                     l5057 3BB2                     l5049 3B40  
                   l5081 32B0                     l5073 323A                     l5065 31DE  
                   l4601 1CE0                     l4521 1B0E                     l4505 1AB0  
                   l4513 1ADA                     l5129 317C                     l5161 33D8  
                   l5217 2D46                     l5209 2C9A                     l5153 38BC  
                   l5145 3862                     l5137 3824                     l5401 0F5C  
                   l5321 0B96                     l5313 0AF8                     l5305 0A74  
                   l5241 0848                     l5235 3ED0                     l5227 3E86  
                   l5059 3BB8                     l5075 324C                     l5067 31EE  
                   l4611 1D38                     l4603 1CE2                     l4531 1B22  
                   l4523 1B12                     l4515 1AEA                     l4507 1AC0  
                   l5163 3418                     l5171 3458                     l5219 2D56  
                   l4451 376C                     l5155 38D0                     l5147 3876  
                   l5139 3832                     l5411 1034                     l5403 0F90  
                   l5331 0C02                     l5315 0AFE                     l5323 0BCA  
                   l5307 0A8E                     l5251 089C                     l5243 0858  
                   l5229 3E8A                     l4701 27E4                     l5077 325A  
                   l5069 321C                     l5085 4080                     l4621 1D66  
                   l4605 1CF2                     l4541 1B36                     l4533 1B26  
                   l4525 1B16                     l4517 1AFC                     l4509 1AD0  
                   l5093 30A8                     l5173 346A                     l5165 3440  
                   l4453 377E                     l5149 388A                     l5181 3D7E  
                   l5501 1346                     l5421 108A                     l5405 0FE8  
                   l5413 1038                     l5333 0C0A                     l5325 0BDA  
                   l5317 0B5A                     l5261 08E2                     l5253 08A4  
                   l5245 0866                     ?_pad 0064                     l4463 3ED8  
                   l4711 281E                     l4703 27F4                     l5079 32AA  
                   l5087 4096                     l4623 1D74                     l4615 1D4C  
                   l4631 1D92                     l4607 1D02                     l4543 1B3A  
                   l4535 1B2A                     l4527 1B1A                     l4519 1B0A  
                   l4551 1B4A                     l5095 30BE                     l5167 344C  
                   l5159 33B8                     l4455 3788                     l5183 3D8E  
                   l5191 3D66                     l5511 13A8                     l5503 136C  
                   l5431 1130                     l5423 10EE                     l5415 1048  
                   l5407 0FEC                     l5351 0CBA                     l5343 0C4E  
                   l5335 0C24                     l5327 0BDE                     l5319 0B8E  
                   l5271 091E                     l5263 08EA                     l5255 08B6  
                   l5247 086E                     l5239 083E                     l4465 3EE4  
                   l4801 2A8A                     l4721 284A                     l4713 2824  
                   l4705 2804                     l5089 40A6                     l4625 1D7C  
                   l4617 1D56                     l4609 1D28                     l4633 1DA0  
                   l4561 1BBA                     l4553 1B4E                     l4545 1B3E  
                   l4537 1B2E                     l4529 1B1E                     l4481 1A36  
                   l4473 1A08                     l5177 34AE                     l4457 37A6  
                   l4449 375A                     l5185 3D1C                     l5521 13EE  
                   l5513 13C2                     l5505 1388                     l5441 116E  
                   l5425 10FC                     l5433 1138                     l5417 105A  
                   l5409 1020                     l5361 0CF8                     l5345 0C60  
                   l5353 0CBE                     l5329 0BF0                     l5337 0C3C  
                   l5281 099A                     l5265 08EE                     l5257 08C4  
                   l5249 0892                     l5601 360E                     l4467 3EE8  
                   l4811 2AF6                     l4803 2A98                     l4731 2884  
                   l4723 285A                     l4715 282A                     l4707 2806  
                   l4643 1DF2                     l4651 1E48                     l4635 1DA4  
                   l4627 1D80                     l4619 1D64                     l4571 1BE4  
                   l4563 1BC6                     l4555 1B78                     l4547 1B42  
                   l4539 1B32                     l4491 1A70                     l4483 1A46  
                   l4475 1A16                     l5099 30D2                     l5195 2B52  
                   l4459 37DC                     l5531 143E                     l5523 13FE  
                   l5515 13C8                     l5507 1390                     l5451 119A  
                   l5443 1174                     l5435 114C                     l5427 1110  
                   l5419 1066                     l5371 0D46                     l5363 0CFC  
                   l5355 0CC6                     l5347 0C7C                     l5283 09A4  
                   l5275 0954                     l5267 08F2                     l5259 08D6  
                   l5603 362A                     l5611 149C                     l4469 3F18  
                   l4821 2B44                     l4813 2B10                     l4805 2AC2  
                   l4733 289A                     l4725 286A                     l4717 2838  
                   l4709 280E                     l4901 2578                     l4661 1E9A  
                   l4653 1E58                     l4645 1DFE                     l4637 1DB2  
                   l4629 1D90                     l4581 1C3A                     l4573 1C06  
                   l4565 1BCA                     l4557 1B94                     l4549 1B46  
                   l4493 1A76                     l4485 1A56                     l4477 1A24  
                   l5197 2B72                     l5189 3D54                     l5541 147A  
                   l5533 1450                     l5525 1404                     l5517 13DA  
                   l5509 1396                     l5445 1180                     l5437 115A  
                   l5453 11A0                     l5461 11CE                     l5429 1122  
                   l5381 0DDE                     l5365 0D0E                     l5373 0D4E  
                   l5357 0CD8                     l5349 0CB2                     l5293 0A2A  
                   l5277 0966                     l5269 08F8                     l5605 363C  
                   l5701 19A6                     l5621 1508                     l5613 14C0  
                   l5551 2F2E                     l4823 2B46                     l4815 2B2C  
                   l4807 2AC6                     l4751 28EE                     l4735 28AA  
                   l4743 28CA                     l4727 286C                     l4719 283A  
                   l4911 260E                     l4903 2584                     l4831 238A  
                   l4671 1EB8                     l4663 1EA0                     l4655 1E68  
                   l4647 1E0C                     l4639 1DC8                     l4591 1C74  
                   l4583 1C48                     l4575 1C16                     l4567 1BD8  
                   l4559 1BA4                     l4495 1A88                     l4487 1A58  
                   l4479 1A26                     l5199 2BCA                     l5535 145C  
                   l5527 140A                     l5519 13E6                     l5471 1284  
                   l5463 1226                     l5455 11B2                     l5447 1190  
                   l5439 116A                     l5391 0EC2                     l5383 0E36  
                   l5375 0D56                     l5367 0D1C                     l5359 0CEA  
                   l5295 0A3C                     l5279 0982                     l5287 09CE  
                   l5607 3664                     l5631 1588                     l5623 153E  
                   l5615 14CE                     l5711 19D0                     l5721 4138  
                   l5553 2F32                     l4817 2B30                     l4809 2AE0  
                   l4761 2940                     l4753 2908                     l4745 28DA  
                   l4737 28B2                     l4729 2874                     l4921 2664  
                   l4913 262C                     l4905 25A0                     l4841 23C8  
                   l4833 2398                     l4665 1EA2                     l4657 1E88  
                   l4649 1E46                     l4593 1C76                     l4585 1C56  
                   l4569 1BDA                     l4497 1A8A                     l4489 1A60  
                   l4681 3FDE                     l5537 1464                     l5481 12D4  
                   l5473 12A0                     l5465 125A                     l5457 11C4  
                   l5449 1194                     l5393 0EF6                     l5385 0E6A  
                   l5377 0D66                     l5369 0D34                     l5297 0A58  
                   l5289 09F4                     l5713 19F4                     l5705 19B4  
                   l5641 160E                     l5625 154C                     l5617 14E0  
                   l5723 4146                     l5571 2FE8                     l5563 2F8E  
                   l5555 2F4E                     l5547 2F14                     l4819 2B3E  
                   l4771 299C                     l4763 2950                     l4755 2918  
                   l4747 28DA                     l4739 28B6                     l4931 26CE  
                   l4923 2668                     l4915 2636                     l4907 25CA  
                   l4851 23FA                     l4843 23D8                     l4835 23A6  
                   l4667 1EA8                     l4659 1E8C                     l4595 1C80  
                   l4587 1C62                     l4579 1C2A                     l4499 1A90  
                   l4675 3FBC                     l4683 4048                     l5539 1474  
                   l5491 1316                     l5483 12E4                     l5475 12B2  
                   l5467 1262                     l5459 11C8                     l5395 0F0A  
                   l5379 0D7A                     l5387 0E70                     l5707 19C2  
                   l5651 16A8                     l5643 161C                     l5635 15D0  
                   l5627 155A                     l5619 14E4                     l5731 3CF6  
                   l5741 3C1C                     l5733 3BBC                     l5581 3070  
                   l5565 2FA4                     l5557 2F84                     l5549 2F2A  
                   l4781 29DC                     l4773 299E                     l4765 2964  
                   l4757 2928                     l4693 27B6                     l4941 2730  
                   l4933 26DA                     l4925 2676                     l4917 2644  
                   l4909 2600                     l4861 243A                     l4853 2408  
                   l4845 23DE                     l4837 23A8                     l4669 1EB6  
                   l4589 1C66                     l4597 1C86                     l4677 3FC8  
                   l5493 1324                     l5485 12F6                     l5477 12C0  
                   l5469 1266                     l5397 0F3C                     l5389 0E8E  
                   l5661 1734                     l5645 1640                     l5629 157A  
                   l5637 15E2                     l5725 3CBA                     l5719 4130  
                   l5735 3BC6                     l4687 40F0                     l5583 3082  
                   l5823 2FD2                     l5575 3020                     l5567 2FAC  
                   l5559 2F88                     l4791 2A18                     l4783 29E6  
                   l4775 29AE                     l4767 2972                     l4759 2938  
                   l4695 27C4                     l4951 2798                     l4943 2744  
                   l4935 26E8                     l4927 26A4                     l4919 2656  
                   l4871 2484                     l4863 2440                     l4855 240A  
                   l4847 23EE                     l4839 23B8                     l4599 1CAC  
                   l4679 3FDA                     l5495 132C                     l5487 12FE  
                   l5479 12D0                     l5399 0F4C                     l5591 35B2  
                   l5671 17D0                     l5663 1766                     l5655 16F0  
                   l5647 167A                     l5639 1606                     l5727 3CC2  
                   l5751 3E1A                     l5743 3DDA                     l5737 3BDE  
                   l4689 410C                     l5569 2FB4                     l4793 2A26  
                   l4785 29F4                     l4777 29C0                     l4769 297E  
                   l4697 27D2                     l4953 279A                     l4945 275E  
                   l4937 2712                     l4881 24D4                     l4873 2490  
                   l4865 2460                     l4857 241A                     l4849 23F4  
                   l4961 3F74                     l5497 1334                     l5489 130E  
                   l5593 35DC                     l5681 1868                     l5673 17DE  
                   l5665 1776                     l5649 169A                     l5657 1702  
                   l5729 3CD0                     l5745 3DEC                     l5761 34D4  
                   l5739 3C16                     l5579 305E                     l4971 38FE  
                   l4795 2A54                     l4779 29D6                     l4787 2A06  
                   l4699 27D4                     l4947 277A                     l4955 27A0  
                   l4939 2716                     l4891 2516                     l4883 24E0  
                   l4875 249A                     l4867 2470                     l4859 242A  
                   l4963 3F86                     l5499 1340                     l5675 180E  
                   l5667 17A8                     l5659 1724                     l5747 3DF4  
                   l5771 34F4                     l5763 34D6                     l5755 34B8  
                   ?_isr 0001                     l4981 3924                     l4973 3906  
                   l4789 2A14                     l4957 27A4                     l4949 278A  
                   l4893 2522                     l4885 24EC                     l4877 24B0  
                   l5597 35E8                     l5685 18D6                     l5669 17BA  
                   l5749 3DFC                     l5781 353A                     l5773 3500  
                   l5765 34D8                     l5757 34BE                     l4991 395C  
                   l4983 392C                     l4975 390A                     l4967 38EC  
                   l4799 2A7E                     l4895 2532                     l4887 24FA  
                   l4879 24BC                     l5599 35F6                     l5687 18E8  
                   l5695 1960                     l5679 183A                     l5791 3590  
                   l5783 3546                     l5775 350C                     l5767 34E4  
                   l5759 34D2                     l4993 3962                     l4985 393E  
                   l4977 3918                     l4969 38F0                     l4897 254C  
                   l4889 2506                     l5697 1984                     l5689 191C  
                   l5785 3552                     l5777 351C                     l5769 34F0  
                   l4995 3978                     l4987 3946                     l4979 3920  
                   l4899 255C                     l5699 1992                     l5787 355E  
                   l5779 3520                     l4997 3980                     l4989 394E  
                   l5789 3584                     l4999 3982                     STR_1 0812  
                   STR_2 0801                     STR_3 0806                     STR_4 0823  
                   STR_5 0829                     STR_6 0831                     STR_9 082D  
                   u6000 1AFC                     u6001 1AF8                     u6010 1B0A  
                   u6011 1B06                     u6100 1C48                     u6020 1B78  
                   u6101 1C44                     u6021 1B74                     u6110 1C56  
                   u6030 1B90                     u6111 1C52                     u6031 1B8A  
                   u6200 1DA0                     u6120 1C74                     u6040 1B92  
                   u7000 3120                     u6201 1D9C                     u6121 1C70  
                   u7001 311C                     u6210 1DB2                     u6130 1CAC  
                   u6050 1BBA                     u7010 3134                     u6211 1DAE  
                   u6131 1CA8                     u6051 1BB6                     u7011 3130  
                   u6300 1E9A                     u6220 1DC8                     u6140 1CF2  
                   u6060 1BD8                     u7020 315C                     u7100 3418  
                   u6301 1E96                     u6221 1DC4                     u6141 1CEE  
                   u6061 1BD4                     u7021 3158                     u7101 3414  
                   u6310 1EB6                     u6230 1DDE                     u6150 1D28  
                   u6070 1BF8                     u7030 317C                     u7110 3440  
                   u6311 1EB2                     u6231 1DDA                     u6151 1D24  
                   u6071 1BF4                     u7031 3178                     u7111 343C  
                   u6400 285A                     u6240 1DF2                     u6160 1D38  
                   u6080 1C06                     u7040 318C                     u7120 346A  
                   u6320 4000                     u7200 3D66                     u8000 3664  
                   u6401 2856                     u6241 1DEE                     u6161 1D34  
                   u6081 1C02                     u7041 3188                     u7121 3466  
                   u6321 3FFC                     u7201 3D62                     u8001 3660  
                   u6410 289A                     u6250 1E0C                     u6170 1D64  
                   u6090 1C16                     u7210 2B9C                     u7050 3832  
                   u6330 4078                     u8010 14C0                     u6411 2896  
                   u6251 1E08                     u6171 1D60                     u6091 1C12  
                   u7051 382E                     u6331 4072                     u8011 14BC  
                   u6500 2A26                     u6420 28DA                     u6260 1E46  
                   u6180 1D74                     u7140 34A4                     u7300 2D46  
                   u7220 2BCA                     u7060 3856                     u6340 407A  
                   u8100 16EC                     u8020 1508                     u6501 2A22  
                   u6421 28D6                     u6261 1E42                     u6181 1D70  
                   u7141 349E                     u7301 2D42                     u7221 2BC6  
                   u7061 3852                     u8021 1504                     u7310 40E8  
                   u6510 2A54                     u6430 2950                     u6350 27D2  
                   u6270 1E58                     u6190 1D90                     u7150 34A6  
                   u7230 2BEC                     u7070 38AE                     u8110 1702  
                   u8030 154C                     i2l31 4162                     u7311 40E2  
                   u6511 2A50                     u6431 294C                     u6351 27CE  
                   u6271 1E54                     u6191 1D8C                     u7135 347C  
                   u7231 2BE8                     u7215 2B92                     u7071 38AA  
                   u8111 16FE                     u8031 1548                     u7320 40EA  
                   u6520 2A6A                     u6440 2972                     u6360 27E4  
                   u6600 23C8                     u6280 1E68                     u7080 38BC  
                   u7160 3DC6                     u7400 094E                     u8120 1734  
                   u8040 15CA                     u8200 3D12                     u6521 2A66  
                   u6441 296E                     u6361 27E0                     u6601 23C4  
                   u6281 1E64                     u7081 38B8                     u7401 0948  
                   u8121 1730                     u8041 15C4                     u8201 3D0E  
                   i2l34 417C                     u8210 3C0A                     u7330 3E9E  
                   u6530 2A7E                     u6450 299C                     u6370 27F4  
                   u6610 2408                     u6290 1E88                     u7090 33F8  
                   u7250 2C5A                     u7170 3DD8                     u7410 0950  
                   u8130 1776                     u8050 15CC                     i2l43 3CB8  
                   u7331 3E9A                     u6531 2A7A                     u6451 2998  
                   u6371 27F0                     u6611 2404                     u6291 1E84  
                   u7251 2C56                     u7171 3DD4                     u8131 1772  
                   u8220 3C3C                     u7340 3ECC                     u6540 2A98  
                   u6460 29C0                     u6380 2838                     u6700 26A4  
                   u6620 241A                     u7260 2C7E                     u5900 37DC  
                   u7180 3D4C                     u7500 0BF0                     u7420 0966  
                   u8140 17BA                     u8060 15E2                     i2l37 4198  
                   u8221 3C38                     u7341 3EC8                     u6541 2A94  
                   u6461 29BC                     u6381 2834                     u6701 26A0  
                   u6621 2416                     u7245 2C00                     u5901 37D8  
                   u7181 3D46                     u7501 0BEC                     u7421 0962  
                   u8141 17B6                     u8061 15DE                     u5910 3F08  
                   u6550 2AE0                     u6470 29D6                     u6390 284A  
                   u6710 26BA                     u6630 242A                     u7270 2C9A  
                   u7246 2C0A                     u7190 3D4E                     u7510 0C02  
                   u7430 09F4                     u7350 0866                     u8150 1868  
                   u8070 1606                     i2l63 3758                     u6551 2ADC  
                   u6471 29D2                     u6391 2846                     u6711 26B6  
                   u6631 2426                     u7095 33EE                     u7271 2C96  
                   u7247 2C1A                     u7167 3DBC                     u7511 0BFE  
                   u7431 09F0                     u7351 0862                     u8151 1864  
                   u8071 1602                     u5920 3F18                     u6800 395C  
                   u6560 2B10                     u6480 29F4                     u6720 26CE  
                   u6640 2460                     u7280 2CEE                     u7600 0D0E  
                   u7520 0C24                     u7440 0A24                     u7360 08B6  
                   u8160 18D0                     u8080 1640                     i2l57 3A60  
                   u5921 3F14                     u8217 3C00                     u6801 3958  
                   u6561 2B0C                     u6481 29F0                     u6721 26CA  
                   u6641 245C                     u7265 2C74                     u7601 0D0A  
                   u7521 0C20                     u7441 0A1E                     u7361 08B2  
                   u8161 18CA                     u8081 163C                     i2l74 2EF8  
                   u6810 3978                     u6570 2B3E                     u6490 2A14  
                   u6730 26E8                     u6650 2470                     u5930 1A24  
                   u7290 2D0A                     u7610 0D1C                     u7530 0C4A  
                   u7450 0A26                     u7370 08C4                     u8170 18D2  
                   u8090 16EA                     u6811 3974                     u6571 2B3A  
                   u6491 2A10                     u6731 26E4                     u6651 246C  
                   u5931 1A20                     u7291 2D06                     u7611 0D18  
                   u7531 0C46                     u7371 08C0                     u8091 16E4  
                   u6820 399E                     u6900 3B7E                     u6740 2730  
                   u6660 25EA                     u6580 23A6                     u5940 1A36  
                   u7700 10FC                     u7620 0D46                     u7540 0C60  
                   u7460 0A3C                     u7380 08D6                     u8180 18E8  
                   u5917 3EFE                     u6821 399A                     u6901 3B7A  
                   u6741 272C                     u6581 23A2                     u5941 1A32  
                   u7285 2CE4                     u7701 10F8                     u7621 0D42  
                   u7541 0C5C                     u7461 0A38                     u7381 08D2  
                   u8181 18E4                     u8237 352C                     u6830 3A74  
                   u6910 3BB2                     u6750 275E                     u6670 2644  
                   u6590 23B8                     u5950 1A46                     u5870 376C  
                   u7710 1110                     u7630 0E8E                     u7550 0C7C  
                   u7470 0AC0                     u7390 091E                     u8190 1984  
                   u6831 3A70                     u6911 3BAE                     u6751 275A  
                   u6671 2640                     u6591 23B4                     u5951 1A42  
                   u5871 3768                     u7711 110C                     u7631 0E8A  
                   u7551 0C78                     u7471 0ABC                     u7391 091A  
                   u8191 1980                     u8247 359C                     u6840 3A8E  
                   u6920 31DE                     u6760 2798                     u6680 2664  
                   u5960 1A88                     u5880 377E                     u7800 12C0  
                   u7720 1122                     u7640 0EF6                     u7560 0CB2  
                   u7480 0B56                     u8257 4124                     u6841 3A8A  
                   u6921 31DA                     u6761 2794                     u6681 2660  
                   u6665 25E0                     u5961 1A84                     u5881 377A  
                   u7801 12BC                     u7721 111E                     u7641 0EF2  
                   u7561 0CAE                     u7481 0B52                     u6770 38FE  
                   u6850 3AA8                     u6930 321C                     u6690 2676  
                   u5970 1A9E                     u5890 37A6                     u7810 12F6  
                   u7730 1130                     u7650 0F3C                     u7570 0CD8  
                   u7490 0BCA                     u8267 413E                     u6771 38FA  
                   u6851 3AA4                     u6931 3218                     u6691 2672  
                   u5971 1A9A                     u5891 37A2                     u7811 12F2  
                   u7731 112C                     u7651 0F38                     u7571 0CD4  
                   u7491 0BC6                     u7900 2F84                     u6780 3918  
                   u6860 3AC6                     u6940 323A                     u5980 1AB0  
                   u7820 1324                     u7740 114C                     u7660 0F4C  
                   u7580 0CEA                     u7901 2F80                     u6781 3914  
                   u6861 3AC2                     u6941 3236                     u5981 1AAC  
                   u7821 1320                     u7741 1148                     u7661 0F48  
                   u7581 0CE6                     u7910 2FA0                     u6790 393E  
                   u6870 3ADC                     u6950 325A                     u5990 1AC0  
                   u7830 13A8                     u7750 115A                     u7670 0FE8  
                   u7590 0CF8                     u7911 2F9C                     u6791 393A  
                   u6871 3AD8                     u6951 3256                     u5991 1ABC  
                   u7831 13A4                     u7751 1156                     u7671 0FE4  
                   u7591 0CF4                     u7920 3058                     u6880 3B00  
                   u6960 32AA                     u7840 13C2                     u7760 11B2  
                   u7680 1034                     u7921 3052                     u6881 3AFC  
                   u6961 32A6                     u7841 13BE                     u7761 11AE  
                   u7681 1030                     u7930 305A                     u6890 3B40  
                   u6970 4096                     u7850 13DA                     u7770 1284  
                   u7690 105A                     u6891 3B3C                     u6971 4092  
                   u7851 13D6                     u7771 1280                     u7691 1056  
                   u7940 3070                     u6980 30BE                     u7860 1438  
                   u7780 12A0                     u7941 306C                     u6981 30BA  
                   u7861 1432                     u7781 129C                     u7950 3082  
                   u6990 30F2                     u7870 143A                     u7790 12B2  
                   u7951 307E                     u7791 12AE                     u7880 1450  
                   u7960 35DC                     u7881 144C                     u7961 35D8  
                   u7890 2F4E                     u7970 360E                     u7891 2F4A  
                   u6995 30E8                     u7971 360A                     u7980 362A  
                   u7981 3626                     u7990 363C                     u7991 3638  
           i2___flge@ff1 0001             i2___flge@ff2 0005                     _dbuf 0100  
                   _atoi 2F14                     _main 34B8                     _prec 00F3  
                   _nout 00EF                     pad@i 006B                     pad@p 0068  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 006D  
                   fsr2l 000FD9                     btemp 0041            ___fpclassifyf 33B8  
                   prodh 000FF4                     prodl 000FF3     i2comando_lcd@comando 0001  
                   start 000E          ___fldiv@new_exp 0065             _tolower$1101 0060  
           ___param_bank 000000                    ??_pad 006A                    ??_isr 0019  
          ___fltol@sign1 0027                    ?_atoi 0026          __end_of___fladd 1ECA  
                  ?_main 0001          __end_of___fldiv 2B52          __end_of___awdiv 39B0  
        __end_of___flneg 40B8                    STR_10 0835                    STR_13 0839  
                  STR_15 0839          __end_of___awmod 3B12          __end_of___flmul 27B6  
        __end_of___flsub 3FBC          __end_of___fltol 31AE                    _T0CON 000FD5  
        ___awdiv@divisor 0021                    i2l350 3370                    i2l355 33B6  
                  i2l613 20B8                    i2l630 21D2                    i2l622 2388  
                  i2l614 20A6                    i2l615 206C                    i2l640 2290  
                  i2l639 22A2                    i2l655 4046          ___awdiv@counter 0023  
           vfpfcnvrt@fmt 00C7                    _TMR0L 000FD6                    _PORTD 000F83  
                  _TRISD 000F95                    _TRISE 000F96       i2imprime_lcd@frase 0005  
          i2___fladd@grs 0010                    _flags 0037                    _fputc 375A  
                  _fputs 3FBC          __end_of_isdigit 40F0                    atoi@n 006B  
                  pad@fp 0064                    atoi@s 0026                    _width 00F1  
                  _putch 41A2              i2_limpa_lcd 418C          __end_of_isspace 3ED8  
        __end_of_isupper 4080         __end_ofi2___flge 33B8                    tablat 000FF5  
                  ttemp5 0042                    ttemp6 0045                    ttemp7 0049  
           ?_imprime_lcd 0023                    status 000FD8                    wtemp8 0042  
        __end_of_sprintf 3E34           ?___fpclassifyf 001F          __end_of_tolower 3D7E  
        __end_of_strncmp 3688       __size_ofi2___fladd 04C0       __size_ofi2___flsub 0046  
       __end_ofi2_strlen 3F74          __initialization 3E34             __end_of_atoi 30A8  
           __end_of_main 35B2                   ??_atoi 0060                   ??_main 00ED  
          __activetblptr 000002              ?i2_dado_lcd 0001        _temperaturaMaxima 003D  
      _temperaturaMinima 0039                   _ADCON1 000FC1                   ?_fputc 001F  
                 ?_fputs 0060         ___awdiv@dividend 001F                   ?_putch 0001  
                 i2l1053 3F72                   i2l4101 33AE                   i2l4103 33B4  
                 i2l4031 414A                   i2l4111 1EE4                   i2l4041 417A  
                 i2l4033 4152                   i2l4201 2098                   i2l4121 1F18  
                 i2l4113 1EE6                   i2l4043 3F26                   i2l4035 4160  
                 i2l4203 209A                   i2l4131 1F4A                   i2l4115 1EF6  
                 i2l4123 1F20                   i2l4107 1ECA                   i2l4037 4164  
                 i2l4045 3F32                   i2l4301 2368                   i2l4221 2122  
                 i2l4213 20EA                   i2l4205 20A4                   i2l4141 1F80  
                 i2l4133 1F50                   i2l4125 1F30                   i2l4117 1F06  
                 i2l4109 1ED6                   i2l4039 416C                   i2l4047 3F36  
                 i2l4303 2376                   i2l4223 2126                   i2l4215 20FA  
                 i2l4207 20C6                   i2l4231 2146                   i2l4151 1FBC  
                 i2l4143 1F90                   i2l4135 1F5E                   i2l4127 1F36  
                 i2l4119 1F16                   i2l4049 3F66                   i2l4081 3C96  
                 i2l4073 418C                   i2l4321 39B0                   i2l4305 2378  
                 i2l4233 216C                   i2l4241 21C2                   i2l4225 2134  
                 i2l4217 2108                   i2l4209 20D6                   i2l4161 1FDA  
                 i2l4153 1FCA                   i2l4145 1F92                   i2l4137 1F60  
                 i2l4129 1F48                   i2l4091 3320                   i2l4083 3C9A  
                 i2l4075 3C3E                   i2l4331 3A3A                   i2l4323 39E2  
                 i2l4251 2216                   i2l4243 21E8                   i2l4235 21A0  
                 i2l4227 2136                   i2l4219 2116                   i2l4171 1FEE  
                 i2l4163 1FDE                   i2l4155 1FCE                   i2l4139 1F70  
                 i2l4147 1F9A                   i2l4093 3330                   i2l4085 32B4  
                 i2l4077 3C46                   i2l4333 3A46                   i2l4325 3A14  
                 i2l4261 2240                   i2l4253 2224                   i2l4245 21F8  
                 i2l4237 21A2                   i2l4229 2140                   i2l4181 2002  
                 i2l4173 1FF2                   i2l4165 1FE2                   i2l4157 1FD2  
                 i2l4149 1FAA                   i2l4341 36F2                   i2l4095 333E  
                 i2l4087 32E2                   i2l4079 3C5E                   i2l4335 3A5C  
                 i2l4327 3A18                   i2l4271 2272                   i2l4263 2250  
                 i2l4255 2226                   i2l4239 21B2                   i2l4191 2054  
                 i2l4183 2006                   i2l4175 1FF6                   i2l4167 1FE6  
                 i2l4159 1FD6                   i2l4343 3724                   i2l4097 3350  
                 i2l4089 32F2                   i2l4329 3A2E                   i2l4281 22CC  
                 i2l4273 2288                   i2l4257 2234                   i2l4249 220C  
                 i2l4265 2252                   i2l4193 2064                   i2l4177 1FFA  
                 i2l4169 1FEA                   i2l4185 200A                   i2l4337 3688  
                 i2l4099 335E                   i2l4291 2348                   i2l4283 2306  
                 i2l4259 223C                   i2l4267 2260                   i2l4195 207A  
                 i2l4187 200E                   i2l4179 1FFE                   i2l4339 36BA  
                 i2l4371 2DFC                   i2l4363 2D82                   i2l4293 234C  
                 i2l4277 22B2                   i2l4285 2308                   i2l4269 2264  
                 i2l4197 2086                   i2l4189 2038                   i2l4357 4002  
                 i2l4381 2EB6                   i2l4373 2E2E                   i2l4365 2D90  
                 i2l4295 235A                   i2l4287 2318                   i2l4279 22BE  
                 i2l4199 208A                   i2l4359 4012                   i2l4383 2EBA  
                 i2l4375 2E66                   i2l4367 2D92                   i2l4297 2360  
                 i2l4289 2328                   i2l4385 2EBE                   i2l4369 2DC4  
                 i2l4377 2E9A                   i2l4299 2362                   i2l4387 2EF2  
                 i2l4379 2EA8                   i2l4389 2EF6         __end_of_dado_lcd 414A  
    i2imprime_lcd@indice 000C           i2___fladd@aexp 000E           i2___fladd@bexp 000F  
   __size_of_comando_lcd 001A             vfprintf@cfmt 00E3                   ___flge 31AE  
                 ___fleq 3B12                ??___fladd 0027                   ___wmul 40F0  
              ??___fldiv 0027                ??___awdiv 0023                ??___flneg 0023  
              ??___awmod 0023                ??___flmul 0027                ??___flsub 002B  
              ??___fltol 0023                   _alerta 39B0                   _efgtoa 083E  
                 _floorf 2B52                   clear_0 3E5A                   clear_1 3E66  
                 clear_2 3E72         ___awdiv@quotient 0025          ___awmod@divisor 0021  
                 isa$std 000001          ___awmod@counter 0023                   pad@buf 0066  
                 _strcpy 3D7E                   _strlen 3ED8                   fputc@c 001F  
                 fputs@c 0028                   fputs@i 0029             __pdataCOMRAM 0039  
                 fputs@s 0060        __end_ofi2___fladd 238A                ??_isdigit 0021  
      __end_ofi2___flsub 4048   __size_ofi2_comando_lcd 001A          ___fpclassifyf@e 0060  
        ___fpclassifyf@u 0062          ___fpclassifyf@x 001F             __mediumconst 0000  
              ??_isspace 0021                   tblptrh 000FF7                ??_isupper 0021  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 3D1C                ??_sprintf 002B                ??_tolower 0027  
              ??_strncmp 0025               ___flge@ff1 006D          ??___fpclassifyf 0023  
             ___flge@ff2 0071               ___fleq@ff1 001F               ___fleq@ff2 0023  
             __accesstop 0060  __end_of__initialization 3E78               ___flneg@f1 001F  
          ___rparam_used 000001               ___fltol@f1 001F      __size_ofi2_dado_lcd 001A  
         __pcstackCOMRAM 0001         ??_verificaOValor 0011            __end_of_fputc 3824  
          __end_of_fputs 4002            __end_of_putch 41A4                ?i2___flge 0001  
              ?i2_strlen 0001                  ??_fputc 0023                  ??_fputs 0028  
                ??_putch 001F               __pbssBANK0 00EF               __pbssBANK1 0100  
          i2_comando_lcd 414A     __size_of_imprime_lcd 0082       __size_of_limpa_lcd 000E  
             _efgtoa$941 008D               _efgtoa$942 008F               _efgtoa$951 0093  
             _efgtoa$952 0095               _efgtoa$953 0097               _efgtoa$947 0091  
                ?___flge 006D                  ?___fleq 001F                  ?___wmul 001F  
                ?_alerta 0001                  ?_efgtoa 0081                  ?_floorf 006D  
             ??i2___flge 0009                  ?_strcpy 001F                  ?_strlen 001F  
              ?_dado_lcd 001F   __size_ofi2_imprime_lcd 007C       __size_of_vfpfcnvrt 056C  
             ??i2_strlen 0003             ?i2_limpa_lcd 0001     i2imprime_lcd@tamanho 000A  
         ?i2_comando_lcd 0001          i2___fladd@signs 000D                  __Hparam 0000  
                __Lparam 0000          __size_of___flge 0106          __size_of___fleq 00AA  
                ___fladd 1A08                  ___fldiv 27B6                  ___awdiv 38EC  
                ___flneg 4080                  ___awmod 3A62                  ___flmul 238A  
                ___flsub 3F74                  ___fltol 30A8          __size_of___wmul 0026  
              ?_vfprintf 00DD          __size_of_alerta 00B2             __psmallconst 0800  
        __size_of_efgtoa 0C5E          __size_of_floorf 0216                  __pcinit 3E34  
                __ramtop 0800                  __ptext0 34B8                  __ptext1 3DDA  
                __ptext2 3CBA                  __ptext3 149C                  __ptext4 35B2  
                __ptext5 083E                  __ptext6 3D1C                  __ptext7 4048  
                __ptext8 3D7E                  __ptext9 3824          __size_of_strcpy 005C  
        __size_of_strlen 004E             ??i2_dado_lcd 0003               ??_dado_lcd 0021  
           __size_of_pad 00C8                  _isdigit 40B8             __size_of_isr 2F0C  
       ___awmod@dividend 001F        __end_of_limpa_lcd 418C                  _isspace 3E86  
                _isupper 4048                  efgtoa@c 0087                  efgtoa@d 00A5  
                efgtoa@e 00BD                  efgtoa@f 0083                  efgtoa@g 00B9  
                efgtoa@h 00AF                  efgtoa@i 00B7                  efgtoa@l 00B3  
                efgtoa@m 009F                  efgtoa@n 00BF                  efgtoa@p 00A9  
                efgtoa@t 0099                  efgtoa@u 00C1                  efgtoa@w 00AB  
                atoi@neg 0064                  _sprintf 3DDA                  _tolower 3D1C  
                _strncmp 35B2           __pintcode_body 2D68     end_of_initialization 3E78  
                floorf@e 007B                  floorf@m 0077                  floorf@u 007D  
                floorf@x 006D                  fputc@fp 0021            __Lmediumconst 0000  
                int_func 2D68                  fputs@fp 0062            i2_imprime_lcd 3C3E  
     __end_ofi2_dado_lcd 417E        __end_of_vfpfcnvrt 1A08               efgtoa@mode 00AE  
             efgtoa@sign 00A7                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 002B                  strcpy@d 0027                  strlen@a 0021  
                strcpy@s 0025                  strlen@s 001F                _PORTAbits 000F80  
              _PORTEbits 000F84        imprime_lcd@indice 0062              ___fladd@grs 0063  
            ___fldiv@grs 0067              ___fldiv@rem 0060                i2___fladd 1ECA  
              i2___flsub 4002          ??i2_comando_lcd 0003              ___flmul@grs 0062  
           dado_lcd@dado 001F            ??_comando_lcd 0021           ?i2_imprime_lcd 0005  
         __end_of___flge 32B4           __end_of___fleq 3BBC              vfpfcnvrt@ap 00C9  
            vfpfcnvrt@ct 00D9              vfpfcnvrt@fp 00C5           __end_of___wmul 4116  
         __end_of_alerta 3A62            __pidataCOMRAM 419A           __end_of_efgtoa 149C  
         __end_of_floorf 2D68               floorf@F527 002B           __end_of_strcpy 3DDA  
         __end_of_strlen 3F26        __size_ofi2___flge 0104      start_initialization 3E34  
            __end_of_pad 38EC              __end_of_isr 2F14               ?i2___fladd 0001  
             ?i2___flsub 0011        __size_ofi2_strlen 004E                i2strlen@a 0003  
              i2strlen@s 0001     __size_ofi2_limpa_lcd 000E    __end_of___fpclassifyf 34B8  
            vfprintf@fmt 00DF                 ??___flge 0075                 ??___fleq 0027  
    __end_of_comando_lcd 4130                 ??___wmul 0023                 ??_alerta 000E  
               ??_efgtoa 0088                 ??_floorf 0071                 ??_strcpy 0023  
               ??_strlen 0021                ___fladd@a 0023                ___fladd@b 001F  
              ___fldiv@a 0023                ___fldiv@b 001F                ___flmul@a 0023  
              ___flmul@b 001F              __pbssCOMRAM 002B                ___flsub@a 0071  
              ___flsub@b 006D            __pcstackBANK0 0060            __pcstackBANK1 0150  
      __size_of_dado_lcd 001A          ??i2_imprime_lcd 0007            ??_imprime_lcd 0025  
              _atoi$1006 0066                _atoi$1007 006A                _atoi$1008 0068  
     comando_lcd@comando 001F                __pintcode 0008                 ?___fladd 001F  
               ?___fldiv 001F                 ?___awdiv 001F                 ?___flneg 001F  
               ?___awmod 001F                 ?___flmul 001F                 ?___flsub 006D  
               ?___fltol 001F        __size_of_vfprintf 0062              __smallconst 0800  
               ?_isdigit 001F                 ?_isspace 001F  __size_of_verificaOValor 00D2  
               ?_isupper 001F              ??i2___fladd 0009                 ?_sprintf 00E5  
               ?_tolower 0025              ??i2___flsub 0019           __size_of_fputc 00CA  
         __size_of_fputs 0046                 ?_strncmp 001F                _limpa_lcd 417E  
         __size_of_putch 0002           ___wmul@product 0023              _comando_lcd 4116  
         i2dado_lcd@dado 0001                 i2u530_40 3C8A                 i2u530_47 3C80  
               i2u531_40 3CB8                 i2u531_41 3CB4                 i2u532_40 32E2  
               i2u540_40 1F48                 i2u532_41 32DE                 i2u540_41 1F44  
               i2u533_40 3320                 i2u541_40 1F5E                 i2u533_41 331C  
               i2u541_41 1F5A                 i2u534_40 333E                 i2u550_40 2098  
               i2u542_40 1F70                 i2u534_41 333A                 i2u550_41 2094  
               i2u542_41 1F6C                 i2u535_40 335E                 i2u527_40 3F56  
               i2u551_40 20B8                 i2u543_40 1F80                 i2u535_41 335A  
               i2u551_41 20B4                 i2u543_41 1F7C                 i2u527_47 3F4C  
               i2u536_40 33AE                 i2u528_40 3F66                 i2u560_40 21F8  
               i2u552_40 20C6                 i2u544_40 1FBC                 i2u536_41 33AA  
               i2u528_41 3F62                 i2u560_41 21F4                 i2u552_41 20C2  
               i2u544_41 1FB8                 i2u561_40 2224                 i2u553_40 20D6  
               i2u545_40 1FCA                 i2u537_40 1EE4                 i2u561_41 2220  
               i2u553_41 20D2                 i2u545_41 1FC6                 i2u537_41 1EE0  
               i2u570_40 2306                 i2u562_40 2234                 i2u554_40 2108  
               i2u546_40 2038                 i2u538_40 1EF6                 i2u570_41 2302  
               i2u562_41 2230                 i2u554_41 2104                 i2u546_41 2034  
               i2u538_41 1EF2                 i2u571_40 2318                 i2u563_40 2250  
               i2u555_40 2116                 i2u547_40 2050                 i2u539_40 1F06  
               i2u571_41 2314                 i2u563_41 224C                 i2u555_41 2112  
               i2u547_41 204A                 i2u539_41 1F02                 i2u572_40 2328  
               i2u564_40 2260                 i2u556_40 2134                 i2u548_40 2052  
               i2u580_40 36BA                 i2u572_41 2324                 i2u564_41 225C  
               i2u556_41 2130                 i2u580_41 36B6                 i2u573_40 2348  
               i2u565_40 2272                 i2u557_40 216C                 i2u549_40 207A  
               i2u581_40 3724                 i2u573_41 2344                 i2u565_41 226E  
               i2u557_41 2168                 i2u549_41 2076                 i2u581_41 3720  
               i2u574_40 235A                 i2u566_40 2288                 i2u558_40 21B2  
               i2u582_40 2D90                 i2u574_41 2356                 i2u566_41 2284  
               i2u558_41 21AE                 i2u582_41 2D8C                 i2u830_47 4172  
               i2u575_40 2376                 i2u567_40 229E                 i2u559_40 21E8  
               i2u583_40 2DC4                 i2u575_41 2372                 i2u567_41 229A  
               i2u559_41 21E4                 i2u583_41 2DC0                 i2u568_40 22B2  
               i2u584_40 2E2E                 i2u568_41 22AE                 i2u584_41 2E2A  
               i2u569_40 22CC                 i2u585_40 2EA8                 i2u569_41 22C8  
               i2u585_41 2EA4                 i2u578_40 39E2                 i2u586_40 2EB6  
               i2u578_41 39DE                 i2u586_41 2EB2                 i2u579_40 3A14  
               i2u579_41 3A10                 i2u827_47 3A22                 i2u828_47 3A50  
               i2u829_47 4158      __end_of_imprime_lcd 3C3E         imprime_lcd@frase 0023  
              _vfpfcnvrt 149C                 i2___flge 32B4        ___wmul@multiplier 001F  
           _isspace$1037 0025                 i2_strlen 3F26               vfpfcnvrt@c 00DC  
             vfpfcnvrt@f 00D5              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
              copy_data0 3E48               ?_limpa_lcd 0001                 __Hrparam 0000  
             vfprintf@ap 00E1                 __Lrparam 0000               vfprintf@fp 00DD  
       __size_of___fladd 04C2         __size_of___fldiv 039C         __size_of___awdiv 00C4  
       __size_of___flneg 0038         __size_of___awmod 00B0         __size_of___flmul 042C  
       __size_of___flsub 0048         __size_of___fltol 0106               ?_vfpfcnvrt 00C5  
     ___fpclassifyf@F465 002F                 _dado_lcd 4130               sprintf@fmt 00E7  
       __size_of_isdigit 0038         __size_of_isspace 0052                 __ptext10 3FBC  
               __ptext11 375A                 __ptext20 31AE                 __ptext12 41A2  
               __ptext21 3B12                 __ptext13 2B52                 __ptext30 4116  
               __ptext22 27B6                 __ptext14 33B8                 __ptext31 3BBC  
               __ptext23 3A62                 __ptext15 30A8                 __ptext40 414A  
               __ptext32 3ED8                 __ptext24 38EC                 __ptext16 3F74  
               __ptext41 3C3E                 __ptext33 4130                 __ptext25 2F14  
               __ptext17 1A08                 __ptext42 3F26                 __ptext26 3E86  
               __ptext18 4080                 __ptext43 4164                 __ptext35 4002  
               __ptext27 40B8                 __ptext19 238A                 __ptext44 32B4  
               __ptext36 3688                 __ptext28 40F0                 __ptext37 1ECA  
               __ptext29 417E                 __ptext38 39B0                 __ptext39 418C  
       __size_of_isupper 0038         __size_of_sprintf 005A         __size_of_tolower 0062  
             strcpy@dest 001F         __size_of_strncmp 00D6              _imprime_lcd 3BBC  
          __size_of_atoi 0194            __size_of_main 00FA    __end_ofi2_comando_lcd 4164  
               efgtoa@fp 0081                 efgtoa@ne 009D                 efgtoa@pp 009B  
               efgtoa@ou 00A1                 isa$xinst 000000                 int$flags 0041  
               _vfprintf 3CBA               _INTCONbits 000FF2           _verificaOValor 3688  
               isdigit@c 001F            ??i2_limpa_lcd 0004              ??_limpa_lcd 0022  
               intlevel2 0000                sprintf@ap 0150                 isspace@c 001F  
              strcpy@src 0021                 isupper@c 001F                strncmp@_l 001F  
              strncmp@_r 0021              efgtoa@nmode 00AD              ??_vfpfcnvrt 00CB  
          _vfpfcnvrt$972 00D3            _vfpfcnvrt$967 00CF            _vfpfcnvrt$968 00D1  
 __end_of_verificaOValor 375A              _temperatura 0033              _temperature 00F5  
               sprintf@f 0152                 tolower@c 0025                 sprintf@s 00E5  
 __size_of___fpclassifyf 0100                 strncmp@l 0026                 strncmp@n 0023  
               strncmp@r 0028            ___fladd@signs 0060       imprime_lcd@tamanho 0060  
           ___fladd@aexp 0061             ___fladd@bexp 0062    __end_ofi2_imprime_lcd 3CBA  
           ?_comando_lcd 001F      __end_ofi2_limpa_lcd 419A  
