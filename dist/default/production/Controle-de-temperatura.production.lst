

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 07 08:05:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.20
    66                           ; Generated 12/02/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4550 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataCOMRAM
   101  003BD8                     __pidataCOMRAM:
   102                           	callstack 0
   103                           
   104                           ;initializer for _temperaturaMinima
   105  003BD8  0000               	dw	0
   106  003BDA  4170               	dw	16752
   107                           
   108                           ;initializer for _temperaturaMaxima
   109  003BDC  0000               	dw	0
   110  003BDE  42AA               	dw	17066
   111                           
   112                           ;initializer for _temperatura
   113  003BE0  0000               	dw	0
   114  003BE2  4220               	dw	16928
   115  0000                     _INTCON2bits	set	4081
   116  0000                     _ADCON1	set	4033
   117  0000                     _TRISE	set	3990
   118  0000                     _TRISD	set	3989
   119  0000                     _T0CON	set	4053
   120  0000                     _PORTAbits	set	3968
   121  0000                     _TMR0L	set	4054
   122  0000                     _INTCONbits	set	4082
   123  0000                     _INTCON3bits	set	4080
   124  0000                     _PORTD	set	3971
   125  0000                     _PORTEbits	set	3972
   126                           
   127                           	psect	smallconst
   128  000800                     __psmallconst:
   129                           	callstack 0
   130  000800  00                 	db	0
   131  000801                     STR_2:
   132  000801  43                 	db	67	;'C'
   133  000802  54                 	db	84	;'T'
   134  000803  52                 	db	82	;'R'
   135  000804  4C                 	db	76	;'L'
   136  000805  20                 	db	32
   137  000806  54                 	db	84	;'T'
   138  000807  65                 	db	101	;'e'
   139  000808  6D                 	db	109	;'m'
   140  000809  70                 	db	112	;'p'
   141  00080A  65                 	db	101	;'e'
   142  00080B  72                 	db	114	;'r'
   143  00080C  61                 	db	97	;'a'
   144  00080D  74                 	db	116	;'t'
   145  00080E  75                 	db	117	;'u'
   146  00080F  72                 	db	114	;'r'
   147  000810  61                 	db	97	;'a'
   148  000811  00                 	db	0
   149  000812                     STR_1:
   150  000812  45                 	db	69	;'E'
   151  000813  52                 	db	82	;'R'
   152  000814  52                 	db	82	;'R'
   153  000815  4F                 	db	79	;'O'
   154  000816  20                 	db	32
   155  000817  54                 	db	84	;'T'
   156  000818  65                 	db	101	;'e'
   157  000819  6D                 	db	109	;'m'
   158  00081A  70                 	db	112	;'p'
   159  00081B  65                 	db	101	;'e'
   160  00081C  72                 	db	114	;'r'
   161  00081D  61                 	db	97	;'a'
   162  00081E  74                 	db	116	;'t'
   163  00081F  75                 	db	117	;'u'
   164  000820  72                 	db	114	;'r'
   165  000821  61                 	db	97	;'a'
   166  000822  00                 	db	0
   167  000823                     STR_4:
   168  000823  25                 	db	37
   169  000824  33                 	db	51	;'3'
   170  000825  2E                 	db	46
   171  000826  32                 	db	50	;'2'
   172  000827  66                 	db	102	;'f'
   173  000828  00                 	db	0
   174  000829                     STR_5:
   175  000829  49                 	db	73	;'I'
   176  00082A  4E                 	db	78	;'N'
   177  00082B  46                 	db	70	;'F'
   178  00082C  00                 	db	0
   179  00082D                     STR_9:
   180  00082D  4E                 	db	78	;'N'
   181  00082E  41                 	db	65	;'A'
   182  00082F  4E                 	db	78	;'N'
   183  000830  00                 	db	0
   184  000831                     STR_6:
   185  000831  69                 	db	105	;'i'
   186  000832  6E                 	db	110	;'n'
   187  000833  66                 	db	102	;'f'
   188  000834  00                 	db	0
   189  000835                     STR_10:
   190  000835  6E                 	db	110	;'n'
   191  000836  61                 	db	97	;'a'
   192  000837  6E                 	db	110	;'n'
   193  000838  00                 	db	0
   194  000839                     STR_13:
   195  000839  6C                 	db	108	;'l'
   196  00083A  66                 	db	102	;'f'
   197  00083B  00                 	db	0
   198  00083C  00                 	db	0	; dummy byte at the end
   199  0000                     
   200                           ; #config settings
   201                           
   202                           	psect	cinit
   203  00386A                     __pcinit:
   204                           	callstack 0
   205  00386A                     start_initialization:
   206                           	callstack 0
   207  00386A                     __initialization:
   208                           	callstack 0
   209                           
   210                           ; Initialize objects allocated to COMRAM (12 bytes)
   211                           ; load TBLPTR registers with __pidataCOMRAM
   212  00386A  0ED8               	movlw	low __pidataCOMRAM
   213  00386C  6EF6               	movwf	tblptrl,c
   214  00386E  0E3B               	movlw	high __pidataCOMRAM
   215  003870  6EF7               	movwf	tblptrh,c
   216  003872  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   217  003874  6EF8               	movwf	tblptru,c
   218  003876  EE00  F037         	lfsr	0,__pdataCOMRAM
   219  00387A  EE10 F00C          	lfsr	1,12
   220  00387E                     copy_data0:
   221  00387E  0009               	tblrd		*+
   222  003880  CFF5 FFEE          	movff	tablat,postinc0
   223  003884  50E5               	movf	postdec1,w,c
   224  003886  50E1               	movf	fsr1l,w,c
   225  003888  E1FA               	bnz	copy_data0
   226                           
   227                           ; Clear objects allocated to BANK1 (80 bytes)
   228  00388A  EE01  F000         	lfsr	0,__pbssBANK1
   229  00388E  0E50               	movlw	80
   230  003890                     clear_0:
   231  003890  6AEE               	clrf	postinc0,c
   232  003892  06E8               	decf	wreg,f,c
   233  003894  E1FD               	bnz	clear_0
   234                           
   235                           ; Clear objects allocated to BANK0 (20 bytes)
   236  003896  EE00  F0E6         	lfsr	0,__pbssBANK0
   237  00389A  0E14               	movlw	20
   238  00389C                     clear_1:
   239  00389C  6AEE               	clrf	postinc0,c
   240  00389E  06E8               	decf	wreg,f,c
   241  0038A0  E1FD               	bnz	clear_1
   242                           
   243                           ; Clear objects allocated to COMRAM (6 bytes)
   244  0038A2  6A48               	clrf	(__pbssCOMRAM+5)& (0+255),c
   245  0038A4  6A47               	clrf	(__pbssCOMRAM+4)& (0+255),c
   246  0038A6  6A46               	clrf	(__pbssCOMRAM+3)& (0+255),c
   247  0038A8  6A45               	clrf	(__pbssCOMRAM+2)& (0+255),c
   248  0038AA  6A44               	clrf	(__pbssCOMRAM+1)& (0+255),c
   249  0038AC  6A43               	clrf	__pbssCOMRAM& (0+255),c
   250  0038AE                     end_of_initialization:
   251                           	callstack 0
   252  0038AE                     __end_of__initialization:
   253                           	callstack 0
   254  0038AE  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255  0038B0  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256  0038B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  0038B4  6EF8               	movwf	tblptru,c
   258  0038B6  0100               	movlb	0
   259  0038B8  EF16  F015         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMRAM
   262  000043                     __pbssCOMRAM:
   263                           	callstack 0
   264  000043                     _width:
   265                           	callstack 0
   266  000043                     	ds	2
   267  000045                     _prec:
   268                           	callstack 0
   269  000045                     	ds	2
   270  000047                     _flags:
   271                           	callstack 0
   272  000047                     	ds	2
   273                           
   274                           	psect	dataCOMRAM
   275  000037                     __pdataCOMRAM:
   276                           	callstack 0
   277  000037                     _temperaturaMinima:
   278                           	callstack 0
   279  000037                     	ds	4
   280  00003B                     _temperaturaMaxima:
   281                           	callstack 0
   282  00003B                     	ds	4
   283  00003F                     _temperatura:
   284                           	callstack 0
   285  00003F                     	ds	4
   286                           
   287                           	psect	bssBANK0
   288  0000E6                     __pbssBANK0:
   289                           	callstack 0
   290  0000E6                     floorf@F527:
   291                           	callstack 0
   292  0000E6                     	ds	4
   293  0000EA                     ___fpclassifyf@F465:
   294                           	callstack 0
   295  0000EA                     	ds	4
   296  0000EE                     _nout:
   297                           	callstack 0
   298  0000EE                     	ds	2
   299  0000F0                     _tensao:
   300                           	callstack 0
   301  0000F0                     	ds	2
   302  0000F2                     _temperature:
   303                           	callstack 0
   304  0000F2                     	ds	8
   305                           
   306                           	psect	bssBANK1
   307  000100                     __pbssBANK1:
   308                           	callstack 0
   309  000100                     _dbuf:
   310                           	callstack 0
   311  000100                     	ds	80
   312                           
   313                           	psect	cstackBANK0
   314  000060                     __pcstackBANK0:
   315                           	callstack 0
   316  000060                     ??_floorf:
   317  000060                     ??___flge:
   318                           
   319                           ; 1 bytes @ 0x0
   320  000060                     	ds	6
   321  000066                     floorf@m:
   322                           	callstack 0
   323                           
   324                           ; 4 bytes @ 0x6
   325  000066                     	ds	4
   326  00006A                     floorf@e:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0xA
   330  00006A                     	ds	2
   331  00006C                     floorf@u:
   332                           	callstack 0
   333                           
   334                           ; 4 bytes @ 0xC
   335  00006C                     	ds	4
   336  000070                     ?_efgtoa:
   337                           	callstack 0
   338  000070                     efgtoa@fp:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x10
   342  000070                     	ds	2
   343  000072                     efgtoa@f:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x12
   347  000072                     	ds	4
   348  000076                     efgtoa@c:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x16
   352  000076                     	ds	1
   353  000077                     ??_efgtoa:
   354                           
   355                           ; 1 bytes @ 0x17
   356  000077                     	ds	5
   357  00007C                     _efgtoa$944:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x1C
   361  00007C                     	ds	2
   362  00007E                     _efgtoa$945:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x1E
   366  00007E                     	ds	2
   367  000080                     _efgtoa$950:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x20
   371  000080                     	ds	2
   372  000082                     _efgtoa$954:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x22
   376  000082                     	ds	2
   377  000084                     _efgtoa$955:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x24
   381  000084                     	ds	2
   382  000086                     _efgtoa$956:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x26
   386  000086                     	ds	2
   387  000088                     efgtoa@t:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x28
   391  000088                     	ds	2
   392  00008A                     efgtoa@pp:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x2A
   396  00008A                     	ds	2
   397  00008C                     efgtoa@ne:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x2C
   401  00008C                     	ds	2
   402  00008E                     efgtoa@m:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x2E
   406  00008E                     	ds	2
   407  000090                     efgtoa@ou:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x30
   411  000090                     	ds	4
   412  000094                     efgtoa@d:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x34
   416  000094                     	ds	2
   417  000096                     efgtoa@sign:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x36
   421  000096                     	ds	2
   422  000098                     efgtoa@p:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x38
   426  000098                     	ds	2
   427  00009A                     efgtoa@w:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x3A
   431  00009A                     	ds	2
   432  00009C                     efgtoa@nmode:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x3C
   436  00009C                     	ds	1
   437  00009D                     efgtoa@mode:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x3D
   441  00009D                     	ds	1
   442  00009E                     efgtoa@h:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x3E
   446  00009E                     	ds	4
   447  0000A2                     efgtoa@l:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x42
   451  0000A2                     	ds	4
   452  0000A6                     efgtoa@i:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x46
   456  0000A6                     	ds	2
   457  0000A8                     efgtoa@g:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x48
   461  0000A8                     	ds	4
   462  0000AC                     efgtoa@e:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x4C
   466  0000AC                     	ds	2
   467  0000AE                     efgtoa@n:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x4E
   471  0000AE                     	ds	2
   472  0000B0                     efgtoa@u:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x50
   476  0000B0                     	ds	4
   477  0000B4                     ?_vfpfcnvrt:
   478                           	callstack 0
   479  0000B4                     vfpfcnvrt@fp:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x54
   483  0000B4                     	ds	2
   484  0000B6                     vfpfcnvrt@fmt:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x56
   488  0000B6                     	ds	2
   489  0000B8                     vfpfcnvrt@ap:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x58
   493  0000B8                     	ds	2
   494  0000BA                     ??_vfpfcnvrt:
   495                           
   496                           ; 1 bytes @ 0x5A
   497  0000BA                     	ds	4
   498  0000BE                     _vfpfcnvrt$970:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x5E
   502  0000BE                     	ds	2
   503  0000C0                     _vfpfcnvrt$971:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x60
   507  0000C0                     	ds	2
   508  0000C2                     _vfpfcnvrt$975:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x62
   512  0000C2                     	ds	2
   513  0000C4                     vfpfcnvrt@ct:
   514                           	callstack 0
   515                           
   516                           ; 3 bytes @ 0x64
   517  0000C4                     	ds	3
   518  0000C7                     vfpfcnvrt@f:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x67
   522  0000C7                     	ds	4
   523  0000CB                     vfpfcnvrt@c:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x6B
   527  0000CB                     	ds	1
   528  0000CC                     ?_vfprintf:
   529                           	callstack 0
   530  0000CC                     vfprintf@fp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x6C
   534  0000CC                     	ds	2
   535  0000CE                     vfprintf@fmt:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x6E
   539  0000CE                     	ds	2
   540  0000D0                     vfprintf@ap:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x70
   544  0000D0                     	ds	2
   545  0000D2                     vfprintf@cfmt:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x72
   549  0000D2                     	ds	2
   550  0000D4                     ?_sprintf:
   551                           	callstack 0
   552  0000D4                     sprintf@s:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x74
   556  0000D4                     	ds	2
   557  0000D6                     sprintf@fmt:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x76
   561  0000D6                     	ds	6
   562  0000DC                     sprintf@ap:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x7C
   566  0000DC                     	ds	2
   567  0000DE                     sprintf@f:
   568                           	callstack 0
   569                           
   570                           ; 6 bytes @ 0x7E
   571  0000DE                     	ds	6
   572  0000E4                     ??_main:
   573                           
   574                           ; 1 bytes @ 0x84
   575  0000E4                     	ds	2
   576                           
   577                           	psect	cstackCOMRAM
   578  000001                     __pcstackCOMRAM:
   579                           	callstack 0
   580  000001                     ??_geraTensao:
   581  000001                     ?i2_strlen:
   582                           	callstack 0
   583  000001                     i2comando_lcd@comando:
   584                           	callstack 0
   585  000001                     i2dado_lcd@dado:
   586                           	callstack 0
   587  000001                     i2strlen@s:
   588                           	callstack 0
   589  000001                     i2___flge@ff1:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x0
   593  000001                     	ds	2
   594  000003                     ??i2_comando_lcd:
   595  000003                     ??i2_dado_lcd:
   596  000003                     i2strlen@a:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x2
   600  000003                     	ds	1
   601  000004                     
   602                           ; 1 bytes @ 0x3
   603  000004                     	ds	1
   604  000005                     i2imprime_lcd@frase:
   605                           	callstack 0
   606  000005                     i2___flge@ff2:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x4
   610  000005                     	ds	2
   611  000007                     ??i2_imprime_lcd:
   612                           
   613                           ; 1 bytes @ 0x6
   614  000007                     	ds	2
   615  000009                     ??i2___flge:
   616                           
   617                           ; 1 bytes @ 0x8
   618  000009                     	ds	1
   619  00000A                     i2imprime_lcd@tamanho:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x9
   623  00000A                     	ds	2
   624  00000C                     i2imprime_lcd@indice:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0xB
   628  00000C                     	ds	1
   629  00000D                     
   630                           ; 1 bytes @ 0xC
   631  00000D                     	ds	1
   632  00000E                     ??_alerta:
   633                           
   634                           ; 1 bytes @ 0xD
   635  00000E                     	ds	2
   636  000010                     ??_isr:
   637                           
   638                           ; 1 bytes @ 0xF
   639  000010                     	ds	6
   640  000016                     ?_strlen:
   641                           	callstack 0
   642  000016                     ?___fpclassifyf:
   643                           	callstack 0
   644  000016                     ?_isupper:
   645                           	callstack 0
   646  000016                     ?_isdigit:
   647                           	callstack 0
   648  000016                     ?_strncmp:
   649                           	callstack 0
   650  000016                     ?_isspace:
   651                           	callstack 0
   652  000016                     ?___wmul:
   653                           	callstack 0
   654  000016                     ?___awdiv:
   655                           	callstack 0
   656  000016                     ?___awmod:
   657                           	callstack 0
   658  000016                     ?___fladd:
   659                           	callstack 0
   660  000016                     ?___fldiv:
   661                           	callstack 0
   662  000016                     ?___flmul:
   663                           	callstack 0
   664  000016                     ?___flneg:
   665                           	callstack 0
   666  000016                     ?___fltol:
   667                           	callstack 0
   668  000016                     comando_lcd@comando:
   669                           	callstack 0
   670  000016                     dado_lcd@dado:
   671                           	callstack 0
   672  000016                     ___wmul@multiplier:
   673                           	callstack 0
   674  000016                     ___awdiv@dividend:
   675                           	callstack 0
   676  000016                     ___awmod@dividend:
   677                           	callstack 0
   678  000016                     isdigit@c:
   679                           	callstack 0
   680  000016                     isspace@c:
   681                           	callstack 0
   682  000016                     isupper@c:
   683                           	callstack 0
   684  000016                     fputc@c:
   685                           	callstack 0
   686  000016                     strcpy@dest:
   687                           	callstack 0
   688  000016                     strlen@s:
   689                           	callstack 0
   690  000016                     strncmp@_l:
   691                           	callstack 0
   692  000016                     ___fleq@ff1:
   693                           	callstack 0
   694  000016                     ___flneg@f1:
   695                           	callstack 0
   696  000016                     ___fltol@f1:
   697                           	callstack 0
   698  000016                     ___fladd@b:
   699                           	callstack 0
   700  000016                     ___fldiv@b:
   701                           	callstack 0
   702  000016                     ___flmul@b:
   703                           	callstack 0
   704  000016                     ___fpclassifyf@x:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x15
   708  000016                     	ds	2
   709  000018                     ??_isupper:
   710  000018                     ??_isdigit:
   711  000018                     ??_isspace:
   712  000018                     ??_comando_lcd:
   713  000018                     ??_dado_lcd:
   714  000018                     ___wmul@multiplicand:
   715                           	callstack 0
   716  000018                     ___awdiv@divisor:
   717                           	callstack 0
   718  000018                     ___awmod@divisor:
   719                           	callstack 0
   720  000018                     fputc@fp:
   721                           	callstack 0
   722  000018                     strcpy@src:
   723                           	callstack 0
   724  000018                     strlen@a:
   725                           	callstack 0
   726  000018                     strncmp@_r:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x17
   730  000018                     	ds	1
   731  000019                     
   732                           ; 1 bytes @ 0x18
   733  000019                     	ds	1
   734  00001A                     ??_fputc:
   735  00001A                     ??___fpclassifyf:
   736  00001A                     ??_strcpy:
   737  00001A                     ??___fltol:
   738  00001A                     ___awdiv@counter:
   739                           	callstack 0
   740  00001A                     ___awmod@counter:
   741                           	callstack 0
   742  00001A                     imprime_lcd@frase:
   743                           	callstack 0
   744  00001A                     ___wmul@product:
   745                           	callstack 0
   746  00001A                     strncmp@n:
   747                           	callstack 0
   748  00001A                     ___fleq@ff2:
   749                           	callstack 0
   750  00001A                     ___fladd@a:
   751                           	callstack 0
   752  00001A                     ___fldiv@a:
   753                           	callstack 0
   754  00001A                     ___flmul@a:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x19
   758  00001A                     	ds	1
   759  00001B                     ___awdiv@sign:
   760                           	callstack 0
   761  00001B                     ___awmod@sign:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x1A
   765  00001B                     	ds	1
   766  00001C                     ??_strncmp:
   767  00001C                     ??_imprime_lcd:
   768  00001C                     ?_tolower:
   769                           	callstack 0
   770  00001C                     _isspace$1040:
   771                           	callstack 0
   772  00001C                     ___awdiv@quotient:
   773                           	callstack 0
   774  00001C                     strcpy@s:
   775                           	callstack 0
   776  00001C                     tolower@c:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1B
   780  00001C                     	ds	1
   781  00001D                     ?_atoi:
   782                           	callstack 0
   783  00001D                     atoi@s:
   784                           	callstack 0
   785  00001D                     strncmp@l:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x1C
   789  00001D                     	ds	1
   790  00001E                     ??___fladd:
   791  00001E                     ??___fldiv:
   792  00001E                     ??___flmul:
   793  00001E                     ??_tolower:
   794  00001E                     ??___fleq:
   795  00001E                     ___fltol@sign1:
   796                           	callstack 0
   797  00001E                     ___fpclassifyf@e:
   798                           	callstack 0
   799  00001E                     strcpy@d:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x1D
   803  00001E                     	ds	1
   804  00001F                     ??_atoi:
   805  00001F                     ___fltol@exp1:
   806                           	callstack 0
   807  00001F                     imprime_lcd@tamanho:
   808                           	callstack 0
   809  00001F                     fputs@s:
   810                           	callstack 0
   811  00001F                     strncmp@r:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x1E
   815  00001F                     	ds	1
   816  000020                     ___fpclassifyf@u:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x1F
   820  000020                     	ds	1
   821  000021                     imprime_lcd@indice:
   822                           	callstack 0
   823  000021                     fputs@fp:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x20
   827  000021                     	ds	1
   828  000022                     ___fladd@signs:
   829                           	callstack 0
   830  000022                     ___flmul@sign:
   831                           	callstack 0
   832  000022                     _tolower$1104:
   833                           	callstack 0
   834  000022                     ___fldiv@rem:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x21
   838  000022                     	ds	1
   839  000023                     ___fladd@aexp:
   840                           	callstack 0
   841  000023                     fputs@c:
   842                           	callstack 0
   843  000023                     atoi@neg:
   844                           	callstack 0
   845  000023                     ___flmul@grs:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x22
   849  000023                     	ds	1
   850  000024                     ___fladd@bexp:
   851                           	callstack 0
   852  000024                     fputs@i:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x23
   856  000024                     	ds	1
   857  000025                     ___fladd@grs:
   858                           	callstack 0
   859  000025                     _atoi$1009:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x24
   863  000025                     	ds	1
   864  000026                     ?_pad:
   865                           	callstack 0
   866  000026                     ___fldiv@sign:
   867                           	callstack 0
   868  000026                     pad@fp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x25
   872  000026                     	ds	1
   873  000027                     ___flmul@aexp:
   874                           	callstack 0
   875  000027                     ___fldiv@new_exp:
   876                           	callstack 0
   877  000027                     _atoi$1011:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x26
   881  000027                     	ds	1
   882  000028                     ___flmul@bexp:
   883                           	callstack 0
   884  000028                     pad@buf:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x27
   888  000028                     	ds	1
   889  000029                     _atoi$1010:
   890                           	callstack 0
   891  000029                     ___fldiv@grs:
   892                           	callstack 0
   893  000029                     ___flmul@prod:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x28
   897  000029                     	ds	1
   898  00002A                     pad@p:
   899                           	callstack 0
   900  00002A                     atoi@n:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x29
   904  00002A                     	ds	2
   905  00002C                     ??_pad:
   906                           
   907                           ; 1 bytes @ 0x2B
   908  00002C                     	ds	1
   909  00002D                     ___fldiv@bexp:
   910                           	callstack 0
   911  00002D                     ___flmul@temp:
   912                           	callstack 0
   913  00002D                     pad@i:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x2C
   917  00002D                     	ds	1
   918  00002E                     ___fldiv@aexp:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x2D
   922  00002E                     	ds	1
   923  00002F                     ?___flsub:
   924                           	callstack 0
   925  00002F                     ?_floorf:
   926                           	callstack 0
   927  00002F                     pad@w:
   928                           	callstack 0
   929  00002F                     ___flge@ff1:
   930                           	callstack 0
   931  00002F                     ___flsub@b:
   932                           	callstack 0
   933  00002F                     floorf@x:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x2E
   937  00002F                     	ds	4
   938  000033                     ___flge@ff2:
   939                           	callstack 0
   940  000033                     ___flsub@a:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x32
   944  000033                     	ds	4
   945  000037                     
   946                           ; 1 bytes @ 0x36
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   949 ;;
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 89 in file "lcd.frase.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2   88[None  ] int 
   959 ;; Registers used:
   960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   966 ;;      Params:         0       0       0       0       0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0
   968 ;;      Temps:          0       2       0       0       0       0       0       0       0
   969 ;;      Totals:         0       2       0       0       0       0       0       0       0
   970 ;;Total ram usage:        2 bytes
   971 ;; Hardware stack levels required when called: 12
   972 ;; This function calls:
   973 ;;		_comando_lcd
   974 ;;		_imprime_lcd
   975 ;;		_limpa_lcd
   976 ;;		_sprintf
   977 ;; This function is called by:
   978 ;;		Startup code after reset
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text0
   983  002A2C                     __ptext0:
   984                           	callstack 0
   985  002A2C                     _main:
   986                           	callstack 19
   987  002A2C                     
   988                           ;lcd.frase.c: 90:     PORTAbits.RA4 = 0;
   989  002A2C  9880               	bcf	128,4,c	;volatile
   990                           
   991                           ;lcd.frase.c: 92:     INTCONbits.GIE =1;
   992  002A2E  8EF2               	bsf	242,7,c	;volatile
   993                           
   994                           ;lcd.frase.c: 93:     INTCONbits.TMR0IE = 1;
   995  002A30  8AF2               	bsf	242,5,c	;volatile
   996  002A32                     
   997                           ;lcd.frase.c: 95:  T0CON = 0B11000111;
   998  002A32  0EC7               	movlw	199
   999  002A34  6ED5               	movwf	213,c	;volatile
  1000                           
  1001                           ;lcd.frase.c: 96:     TMR0L = 5;
  1002  002A36  0E05               	movlw	5
  1003  002A38  6ED6               	movwf	214,c	;volatile
  1004                           
  1005                           ;lcd.frase.c: 98:     TRISD = 0;
  1006  002A3A  0E00               	movlw	0
  1007  002A3C  6E95               	movwf	149,c	;volatile
  1008                           
  1009                           ;lcd.frase.c: 99:     TRISE = 0;
  1010  002A3E  0E00               	movlw	0
  1011  002A40  6E96               	movwf	150,c	;volatile
  1012                           
  1013                           ;lcd.frase.c: 100:     ADCON1 = 15;
  1014  002A42  0E0F               	movlw	15
  1015  002A44  6EC1               	movwf	193,c	;volatile
  1016  002A46                     
  1017                           ;lcd.frase.c: 102:     INTCON3bits.INT1IE = 1;
  1018  002A46  86F0               	bsf	240,3,c	;volatile
  1019  002A48                     
  1020                           ;lcd.frase.c: 103:     INTCON3bits.INT1IF = 0;
  1021  002A48  90F0               	bcf	240,0,c	;volatile
  1022  002A4A                     
  1023                           ;lcd.frase.c: 104:     INTCON2bits.INTEDG1 = 1;
  1024  002A4A  8AF1               	bsf	241,5,c	;volatile
  1025  002A4C                     
  1026                           ;lcd.frase.c: 106:     comando_lcd(0b00111100);
  1027  002A4C  0E00               	movlw	0
  1028  002A4E  6E17               	movwf	(comando_lcd@comando+1)^0,c
  1029  002A50  0E3C               	movlw	60
  1030  002A52  6E16               	movwf	comando_lcd@comando^0,c
  1031  002A54  ECAA  F01D         	call	_comando_lcd	;wreg free
  1032  002A58                     
  1033                           ;lcd.frase.c: 107:     comando_lcd(0b00001100);
  1034  002A58  0E00               	movlw	0
  1035  002A5A  6E17               	movwf	(comando_lcd@comando+1)^0,c
  1036  002A5C  0E0C               	movlw	12
  1037  002A5E  6E16               	movwf	comando_lcd@comando^0,c
  1038  002A60  ECAA  F01D         	call	_comando_lcd	;wreg free
  1039  002A64                     
  1040                           ;lcd.frase.c: 109:     limpa_lcd( );
  1041  002A64  ECDE  F01D         	call	_limpa_lcd	;wreg free
  1042  002A68                     
  1043                           ;lcd.frase.c: 111:     comando_lcd(128);
  1044  002A68  0E00               	movlw	0
  1045  002A6A  6E17               	movwf	(comando_lcd@comando+1)^0,c
  1046  002A6C  0E80               	movlw	128
  1047  002A6E  6E16               	movwf	comando_lcd@comando^0,c
  1048  002A70  ECAA  F01D         	call	_comando_lcd	;wreg free
  1049  002A74                     
  1050                           ;lcd.frase.c: 112:     imprime_lcd("CTRL Temperatura");
  1051  002A74  0E01               	movlw	low STR_2
  1052  002A76  6E1A               	movwf	imprime_lcd@frase^0,c
  1053  002A78  0E08               	movlw	high STR_2
  1054  002A7A  6E1B               	movwf	(imprime_lcd@frase+1)^0,c
  1055  002A7C  ECB4  F01A         	call	_imprime_lcd	;wreg free
  1056  002A80                     
  1057                           ;lcd.frase.c: 113:     tensao = 2;
  1058  002A80  0E00               	movlw	0
  1059  002A82  0100               	movlb	0	; () banked
  1060  002A84  6FF1               	movwf	(_tensao+1)& (0+255),b
  1061  002A86  0E02               	movlw	2
  1062  002A88  6FF0               	movwf	_tensao& (0+255),b
  1063  002A8A                     l4628:
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;lcd.frase.c: 116:         limpa_lcd( );
  1067  002A8A  ECDE  F01D         	call	_limpa_lcd	;wreg free
  1068  002A8E                     
  1069                           ;lcd.frase.c: 117:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1070  002A8E  0E06               	movlw	6
  1071  002A90  0100               	movlb	0	; () banked
  1072  002A92  6FE5               	movwf	(??_main+1)& (0+255),b
  1073  002A94  0E13               	movlw	19
  1074  002A96  6FE4               	movwf	??_main& (0+255),b
  1075  002A98  0EAD               	movlw	173
  1076  002A9A                     u5977:
  1077  002A9A  2EE8               	decfsz	wreg,f,c
  1078  002A9C  D7FE               	bra	u5977
  1079  002A9E  2FE4               	decfsz	??_main& (0+255),f,b
  1080  002AA0  D7FC               	bra	u5977
  1081  002AA2  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1082  002AA4  D7FA               	bra	u5977
  1083  002AA6  D000               	nop2	
  1084  002AA8                     
  1085                           ;lcd.frase.c: 118:         comando_lcd(128);
  1086  002AA8  0E00               	movlw	0
  1087  002AAA  6E17               	movwf	(comando_lcd@comando+1)^0,c
  1088  002AAC  0E80               	movlw	128
  1089  002AAE  6E16               	movwf	comando_lcd@comando^0,c
  1090  002AB0  ECAA  F01D         	call	_comando_lcd	;wreg free
  1091  002AB4                     
  1092                           ;lcd.frase.c: 119:         imprime_lcd("Temperatura");
  1093  002AB4  0E06               	movlw	low (STR_2+5)
  1094  002AB6  6E1A               	movwf	imprime_lcd@frase^0,c
  1095  002AB8  0E08               	movlw	high (STR_2+5)
  1096  002ABA  6E1B               	movwf	(imprime_lcd@frase+1)^0,c
  1097  002ABC  ECB4  F01A         	call	_imprime_lcd	;wreg free
  1098  002AC0                     
  1099                           ;lcd.frase.c: 121:         comando_lcd(192);
  1100  002AC0  0E00               	movlw	0
  1101  002AC2  6E17               	movwf	(comando_lcd@comando+1)^0,c
  1102  002AC4  0EC0               	movlw	192
  1103  002AC6  6E16               	movwf	comando_lcd@comando^0,c
  1104  002AC8  ECAA  F01D         	call	_comando_lcd	;wreg free
  1105  002ACC                     
  1106                           ;lcd.frase.c: 122:         sprintf(temperature, "%3.2f", temperatura);
  1107  002ACC  0EF2               	movlw	low _temperature
  1108  002ACE  0100               	movlb	0	; () banked
  1109  002AD0  6FD4               	movwf	sprintf@s& (0+255),b
  1110  002AD2  0E00               	movlw	high _temperature
  1111  002AD4  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  1112  002AD6  0E23               	movlw	low STR_4
  1113  002AD8  6FD6               	movwf	sprintf@fmt& (0+255),b
  1114  002ADA  0E08               	movlw	high STR_4
  1115  002ADC  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  1116  002ADE  C03F  F0D8         	movff	_temperatura,?_sprintf+4
  1117  002AE2  C040  F0D9         	movff	_temperatura+1,?_sprintf+5
  1118  002AE6  C041  F0DA         	movff	_temperatura+2,?_sprintf+6
  1119  002AEA  C042  F0DB         	movff	_temperatura+3,?_sprintf+7
  1120  002AEE  EC5E  F01C         	call	_sprintf	;wreg free
  1121  002AF2                     
  1122                           ;lcd.frase.c: 123:         imprime_lcd(temperature);
  1123  002AF2  0EF2               	movlw	low _temperature
  1124  002AF4  6E1A               	movwf	imprime_lcd@frase^0,c
  1125  002AF6  0E00               	movlw	high _temperature
  1126  002AF8  6E1B               	movwf	(imprime_lcd@frase+1)^0,c
  1127  002AFA  ECB4  F01A         	call	_imprime_lcd	;wreg free
  1128  002AFE                     
  1129                           ;lcd.frase.c: 124:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1130  002AFE  0E06               	movlw	6
  1131  002B00  0100               	movlb	0	; () banked
  1132  002B02  6FE5               	movwf	(??_main+1)& (0+255),b
  1133  002B04  0E13               	movlw	19
  1134  002B06  6FE4               	movwf	??_main& (0+255),b
  1135  002B08  0EAD               	movlw	173
  1136  002B0A                     u5987:
  1137  002B0A  2EE8               	decfsz	wreg,f,c
  1138  002B0C  D7FE               	bra	u5987
  1139  002B0E  2FE4               	decfsz	??_main& (0+255),f,b
  1140  002B10  D7FC               	bra	u5987
  1141  002B12  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1142  002B14  D7FA               	bra	u5987
  1143  002B16  D000               	nop2	
  1144  002B18                     
  1145                           ;lcd.frase.c: 125:         tensao++;
  1146  002B18  0100               	movlb	0	; () banked
  1147  002B1A  4BF0               	infsnz	_tensao& (0+255),f,b
  1148  002B1C  2BF1               	incf	(_tensao+1)& (0+255),f,b
  1149  002B1E                     
  1150                           ; BSR set to: 0
  1151                           ;lcd.frase.c: 126:         if(tensao >= 5){
  1152  002B1E  BFF1               	btfsc	(_tensao+1)& (0+255),7,b
  1153  002B20  EF9B  F015         	goto	u5961
  1154  002B24  51F1               	movf	(_tensao+1)& (0+255),w,b
  1155  002B26  E109               	bnz	u5960
  1156  002B28  0E05               	movlw	5
  1157  002B2A  5DF0               	subwf	_tensao& (0+255),w,b
  1158  002B2C  A0D8               	btfss	status,0,c
  1159  002B2E  EF9B  F015         	goto	u5961
  1160  002B32  EF9D  F015         	goto	u5960
  1161  002B36                     u5961:
  1162  002B36  EF45  F015         	goto	l4628
  1163  002B3A                     u5960:
  1164  002B3A                     
  1165                           ; BSR set to: 0
  1166                           ;lcd.frase.c: 127:             tensao = 0;
  1167  002B3A  0E00               	movlw	0
  1168  002B3C  6FF1               	movwf	(_tensao+1)& (0+255),b
  1169  002B3E  0E00               	movlw	0
  1170  002B40  6FF0               	movwf	_tensao& (0+255),b
  1171  002B42  EF45  F015         	goto	l4628
  1172  002B46  EF07  F000         	goto	start
  1173  002B4A                     __end_of_main:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _sprintf *****************
  1177 ;; Defined at:
  1178 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  s               2  116[BANK0 ] PTR unsigned char 
  1181 ;;		 -> temperature(8), 
  1182 ;;  fmt             2  118[BANK0 ] PTR const unsigned char 
  1183 ;;		 -> STR_4(6), 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  f               6  126[BANK0 ] struct _IO_FILE
  1186 ;;  ap              2  124[BANK0 ] PTR void [1]
  1187 ;;		 -> ?_sprintf(2), 
  1188 ;;  ret             2    0        int 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  2  116[BANK0 ] int 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1198 ;;      Params:         0       8       0       0       0       0       0       0       0
  1199 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1201 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1202 ;;Total ram usage:       16 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 11
  1205 ;; This function calls:
  1206 ;;		_vfprintf
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text1
  1213  0038BC                     __ptext1:
  1214                           	callstack 0
  1215  0038BC                     _sprintf:
  1216                           	callstack 19
  1217  0038BC  0ED8               	movlw	low (?_sprintf+4)
  1218  0038BE  0100               	movlb	0	; () banked
  1219  0038C0  6FDC               	movwf	sprintf@ap& (0+255),b
  1220  0038C2  0E00               	movlw	high (?_sprintf+4)
  1221  0038C4  6FDD               	movwf	(sprintf@ap+1)& (0+255),b
  1222  0038C6  C0D4  F0DE         	movff	sprintf@s,sprintf@f
  1223  0038CA  C0D5  F0DF         	movff	sprintf@s+1,sprintf@f+1
  1224  0038CE                     
  1225                           ; BSR set to: 0
  1226  0038CE  0E00               	movlw	0
  1227  0038D0  6FE1               	movwf	(sprintf@f+3)& (0+255),b
  1228  0038D2  0E00               	movlw	0
  1229  0038D4  6FE0               	movwf	(sprintf@f+2)& (0+255),b
  1230  0038D6                     
  1231                           ; BSR set to: 0
  1232  0038D6  0E00               	movlw	0
  1233  0038D8  6FE3               	movwf	(sprintf@f+5)& (0+255),b
  1234  0038DA  0E00               	movlw	0
  1235  0038DC  6FE2               	movwf	(sprintf@f+4)& (0+255),b
  1236  0038DE                     
  1237                           ; BSR set to: 0
  1238  0038DE  0EDE               	movlw	low sprintf@f
  1239  0038E0  6FCC               	movwf	vfprintf@fp& (0+255),b
  1240  0038E2  0E00               	movlw	high sprintf@f
  1241  0038E4  6FCD               	movwf	(vfprintf@fp+1)& (0+255),b
  1242  0038E6  C0D6  F0CE         	movff	sprintf@fmt,vfprintf@fmt
  1243  0038EA  C0D7  F0CF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1244  0038EE  0EDC               	movlw	low sprintf@ap
  1245  0038F0  6FD0               	movwf	vfprintf@ap& (0+255),b
  1246  0038F2  0E00               	movlw	high sprintf@ap
  1247  0038F4  6FD1               	movwf	(vfprintf@ap+1)& (0+255),b
  1248  0038F6  ECA6  F01B         	call	_vfprintf	;wreg free
  1249  0038FA  0100               	movlb	0	; () banked
  1250  0038FC  51E0               	movf	(sprintf@f+2)& (0+255),w,b
  1251  0038FE  25D4               	addwf	sprintf@s& (0+255),w,b
  1252  003900  6ED9               	movwf	fsr2l,c
  1253  003902  51E1               	movf	(sprintf@f+3)& (0+255),w,b
  1254  003904  21D5               	addwfc	(sprintf@s+1)& (0+255),w,b
  1255  003906  6EDA               	movwf	fsr2h,c
  1256  003908  0E00               	movlw	0
  1257  00390A  6EDF               	movwf	indf2,c
  1258  00390C                     
  1259                           ; BSR set to: 0
  1260  00390C  0012               	return		;funcret
  1261  00390E                     __end_of_sprintf:
  1262                           	callstack 0
  1263                           
  1264 ;; *************** function _vfprintf *****************
  1265 ;; Defined at:
  1266 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  fp              2  108[BANK0 ] PTR struct _IO_FILE
  1269 ;;		 -> sprintf@f(6), 
  1270 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  1271 ;;		 -> STR_4(6), 
  1272 ;;  ap              2  112[BANK0 ] PTR PTR void 
  1273 ;;		 -> sprintf@ap(2), 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  cfmt            2  114[BANK0 ] PTR unsigned char 
  1276 ;;		 -> STR_4(6), 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  2  108[BANK0 ] int 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1286 ;;      Params:         0       6       0       0       0       0       0       0       0
  1287 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1289 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1290 ;;Total ram usage:        8 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 10
  1293 ;; This function calls:
  1294 ;;		_vfpfcnvrt
  1295 ;; This function is called by:
  1296 ;;		_sprintf
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text2
  1301  00374C                     __ptext2:
  1302                           	callstack 0
  1303  00374C                     _vfprintf:
  1304                           	callstack 19
  1305  00374C                     
  1306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1307  00374C  C0CE  F0D2         	movff	vfprintf@fmt,vfprintf@cfmt
  1308  003750  C0CF  F0D3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1309  003754                     
  1310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1311  003754  0E00               	movlw	0
  1312  003756  0100               	movlb	0	; () banked
  1313  003758  6FEF               	movwf	(_nout+1)& (0+255),b
  1314  00375A  0E00               	movlw	0
  1315  00375C  6FEE               	movwf	_nout& (0+255),b
  1316                           
  1317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1318  00375E  EFC4  F01B         	goto	l4592
  1319  003762                     l4590:
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1323  003762  C0CC  F0B4         	movff	vfprintf@fp,vfpfcnvrt@fp
  1324  003766  C0CD  F0B5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1325  00376A  0ED2               	movlw	low vfprintf@cfmt
  1326  00376C  6FB6               	movwf	vfpfcnvrt@fmt& (0+255),b
  1327  00376E  0E00               	movlw	high vfprintf@cfmt
  1328  003770  6FB7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1329  003772  C0D0  F0B8         	movff	vfprintf@ap,vfpfcnvrt@ap
  1330  003776  C0D1  F0B9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1331  00377A  EC4C  F00A         	call	_vfpfcnvrt	;wreg free
  1332  00377E  0100               	movlb	0	; () banked
  1333  003780  51B4               	movf	?_vfpfcnvrt& (0+255),w,b
  1334  003782  27EE               	addwf	_nout& (0+255),f,b
  1335  003784  51B5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1336  003786  23EF               	addwfc	(_nout+1)& (0+255),f,b
  1337  003788                     l4592:
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1341  003788  C0D2  FFF6         	movff	vfprintf@cfmt,tblptrl
  1342  00378C  C0D3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1343  003790                     	if	0	;tblptru may be non-zero
  1344  003790                     	endif
  1345  003790                     	if	0	;tblptru may be non-zero
  1346  003790                     	endif
  1347  003790  0008               	tblrd		*
  1348  003792  50F5               	movf	tablat,w,c
  1349  003794  0900               	iorlw	0
  1350  003796  A4D8               	btfss	status,2,c
  1351  003798  EFD0  F01B         	goto	u5951
  1352  00379C  EFD2  F01B         	goto	u5950
  1353  0037A0                     u5951:
  1354  0037A0  EFB1  F01B         	goto	l4590
  1355  0037A4                     u5950:
  1356  0037A4                     
  1357                           ; BSR set to: 0
  1358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1359  0037A4  C0EE  F0CC         	movff	_nout,?_vfprintf
  1360  0037A8  C0EF  F0CD         	movff	_nout+1,?_vfprintf+1
  1361  0037AC                     
  1362                           ; BSR set to: 0
  1363  0037AC  0012               	return		;funcret
  1364  0037AE                     __end_of_vfprintf:
  1365                           	callstack 0
  1366                           
  1367 ;; *************** function _vfpfcnvrt *****************
  1368 ;; Defined at:
  1369 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  1372 ;;		 -> sprintf@f(6), 
  1373 ;;  fmt             2   86[BANK0 ] PTR PTR unsigned char 
  1374 ;;		 -> vfprintf@cfmt(2), 
  1375 ;;  ap              2   88[BANK0 ] PTR PTR void 
  1376 ;;		 -> sprintf@ap(2), 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  llu             8    0        unsigned long long 
  1379 ;;  ll              8    0        long long 
  1380 ;;  f               4  103[BANK0 ] long long 
  1381 ;;  ct              3  100[BANK0 ] unsigned char [3]
  1382 ;;  vp              3    0        PTR void 
  1383 ;;  cp              3    0        PTR unsigned char 
  1384 ;;  i               2    0        int 
  1385 ;;  done            2    0        int 
  1386 ;;  c               1  107[BANK0 ] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  2   84[BANK0 ] int 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1396 ;;      Params:         0       6       0       0       0       0       0       0       0
  1397 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1398 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1399 ;;      Totals:         0      24       0       0       0       0       0       0       0
  1400 ;;Total ram usage:       24 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 9
  1403 ;; This function calls:
  1404 ;;		_atoi
  1405 ;;		_efgtoa
  1406 ;;		_fputc
  1407 ;;		_isdigit
  1408 ;;		_isupper
  1409 ;;		_strncmp
  1410 ;;		_tolower
  1411 ;; This function is called by:
  1412 ;;		_vfprintf
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text3
  1417  001498                     __ptext3:
  1418                           	callstack 0
  1419  001498                     _vfpfcnvrt:
  1420                           	callstack 19
  1421  001498                     
  1422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1423  001498  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1424  00149C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1425  0014A0  CFDE FFF6          	movff	postinc2,tblptrl
  1426  0014A4  CFDD FFF7          	movff	postdec2,tblptrh
  1427  0014A8                     	if	0	;tblptru may be non-zero
  1428  0014A8                     	endif
  1429  0014A8                     	if	0	;tblptru may be non-zero
  1430  0014A8                     	endif
  1431  0014A8  0008               	tblrd		*
  1432  0014AA  50F5               	movf	tablat,w,c
  1433  0014AC  0A25               	xorlw	37
  1434  0014AE  A4D8               	btfss	status,2,c
  1435  0014B0  EF5C  F00A         	goto	u5761
  1436  0014B4  EF5E  F00A         	goto	u5760
  1437  0014B8                     u5761:
  1438  0014B8  EFE5  F00C         	goto	l4578
  1439  0014BC                     u5760:
  1440  0014BC                     
  1441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1442  0014BC  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  0014C0  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  0014C4  2ADE               	incf	postinc2,f,c
  1445  0014C6  0E00               	movlw	0
  1446  0014C8  22DD               	addwfc	postdec2,f,c
  1447  0014CA                     
  1448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1449  0014CA  0E00               	movlw	0
  1450  0014CC  6E44               	movwf	(_width+1)^0,c
  1451  0014CE  0E00               	movlw	0
  1452  0014D0  6E43               	movwf	_width^0,c
  1453  0014D2  C043  F047         	movff	_width,_flags
  1454  0014D6  C044  F048         	movff	_width+1,_flags+1
  1455  0014DA                     
  1456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1457  0014DA  6845               	setf	_prec^0,c
  1458  0014DC  6846               	setf	(_prec+1)^0,c
  1459  0014DE                     
  1460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1461  0014DE  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1462  0014E2  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1463  0014E6  CFDE FFF6          	movff	postinc2,tblptrl
  1464  0014EA  CFDD FFF7          	movff	postdec2,tblptrh
  1465  0014EE                     	if	0	;tblptru may be non-zero
  1466  0014EE                     	endif
  1467  0014EE                     	if	0	;tblptru may be non-zero
  1468  0014EE                     	endif
  1469  0014EE  0008               	tblrd		*
  1470  0014F0  50F5               	movf	tablat,w,c
  1471  0014F2  0A2A               	xorlw	42
  1472  0014F4  A4D8               	btfss	status,2,c
  1473  0014F6  EF7F  F00A         	goto	u5771
  1474  0014FA  EF81  F00A         	goto	u5770
  1475  0014FE                     u5771:
  1476  0014FE  EFAA  F00A         	goto	l4494
  1477  001502                     u5770:
  1478  001502                     
  1479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1480  001502  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1481  001506  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1482  00150A  2ADE               	incf	postinc2,f,c
  1483  00150C  0E00               	movlw	0
  1484  00150E  22DD               	addwfc	postdec2,f,c
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1487  001510  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1488  001514  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1489  001518  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  1490  00151C  0E02               	movlw	2
  1491  00151E  26DE               	addwf	postinc2,f,c
  1492  001520  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  1493  001524  0E00               	movlw	0
  1494  001526  22DD               	addwfc	postdec2,f,c
  1495  001528  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1496  00152C  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1497  001530  CFDE F043          	movff	postinc2,_width
  1498  001534  CFDD F044          	movff	postdec2,_width+1
  1499  001538                     
  1500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1501  001538  BE44               	btfsc	(_width+1)^0,7,c
  1502  00153A  EFA3  F00A         	goto	u5780
  1503  00153E  EFA1  F00A         	goto	u5781
  1504  001542                     u5781:
  1505  001542  EFEE  F00A         	goto	l4504
  1506  001546                     u5780:
  1507  001546                     
  1508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1509  001546  8047               	bsf	_flags^0,0,c
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1512  001548  6C43               	negf	_width^0,c
  1513  00154A  1E44               	comf	(_width+1)^0,f,c
  1514  00154C  B0D8               	btfsc	status,0,c
  1515  00154E  2A44               	incf	(_width+1)^0,f,c
  1516  001550  EFEE  F00A         	goto	l4504
  1517  001554                     l4494:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1520  001554  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1521  001558  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1522  00155C  CFDE F01D          	movff	postinc2,atoi@s
  1523  001560  CFDD F01E          	movff	postdec2,atoi@s+1
  1524  001564  EC4E  F014         	call	_atoi	;wreg free
  1525  001568  C01D  F043         	movff	?_atoi,_width
  1526  00156C  C01E  F044         	movff	?_atoi+1,_width+1
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1529  001570  EFC1  F00A         	goto	l4498
  1530  001574                     l4496:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1534  001574  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1535  001578  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1536  00157C  2ADE               	incf	postinc2,f,c
  1537  00157E  0E00               	movlw	0
  1538  001580  22DD               	addwfc	postdec2,f,c
  1539  001582                     l4498:
  1540  001582  0ED0               	movlw	208
  1541  001584  0100               	movlb	0	; () banked
  1542  001586  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  1543  001588  0EFF               	movlw	255
  1544  00158A  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1545  00158C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1546  001590  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1547  001594  CFDE FFF6          	movff	postinc2,tblptrl
  1548  001598  CFDD FFF7          	movff	postdec2,tblptrh
  1549  00159C                     	if	0	;tblptru may be non-zero
  1550  00159C                     	endif
  1551  00159C                     	if	0	;tblptru may be non-zero
  1552  00159C                     	endif
  1553  00159C  0008               	tblrd		*
  1554  00159E  50F5               	movf	tablat,w,c
  1555  0015A0  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1556  0015A2  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1557  0015A4  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  1558  0015A6  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1559  0015A8  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1560  0015AA  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1561  0015AC  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1562  0015AE  E10A               	bnz	u5790
  1563  0015B0  0E0A               	movlw	10
  1564  0015B2  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1565  0015B4  A0D8               	btfss	status,0,c
  1566  0015B6  EFDF  F00A         	goto	u5791
  1567  0015BA  EFE2  F00A         	goto	u5790
  1568  0015BE                     u5791:
  1569  0015BE  0E01               	movlw	1
  1570  0015C0  EFE3  F00A         	goto	u5800
  1571  0015C4                     u5790:
  1572  0015C4  0E00               	movlw	0
  1573  0015C6                     u5800:
  1574  0015C6  6FBE               	movwf	_vfpfcnvrt$970& (0+255),b
  1575  0015C8  6BBF               	clrf	(_vfpfcnvrt$970+1)& (0+255),b
  1576  0015CA                     
  1577                           ; BSR set to: 0
  1578  0015CA  51BE               	movf	_vfpfcnvrt$970& (0+255),w,b
  1579  0015CC  11BF               	iorwf	(_vfpfcnvrt$970+1)& (0+255),w,b
  1580  0015CE  A4D8               	btfss	status,2,c
  1581  0015D0  EFEC  F00A         	goto	u5811
  1582  0015D4  EFEE  F00A         	goto	u5810
  1583  0015D8                     u5811:
  1584  0015D8  EFBA  F00A         	goto	l4496
  1585  0015DC                     u5810:
  1586  0015DC                     l4504:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1589  0015DC  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1590  0015E0  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1591  0015E4  CFDE FFF6          	movff	postinc2,tblptrl
  1592  0015E8  CFDD FFF7          	movff	postdec2,tblptrh
  1593  0015EC                     	if	0	;tblptru may be non-zero
  1594  0015EC                     	endif
  1595  0015EC                     	if	0	;tblptru may be non-zero
  1596  0015EC                     	endif
  1597  0015EC  0008               	tblrd		*
  1598  0015EE  50F5               	movf	tablat,w,c
  1599  0015F0  0A2E               	xorlw	46
  1600  0015F2  A4D8               	btfss	status,2,c
  1601  0015F4  EFFE  F00A         	goto	u5821
  1602  0015F8  EF00  F00B         	goto	u5820
  1603  0015FC                     u5821:
  1604  0015FC  EF7E  F00B         	goto	l4524
  1605  001600                     u5820:
  1606  001600                     
  1607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1608  001600  0E00               	movlw	0
  1609  001602  6E46               	movwf	(_prec+1)^0,c
  1610  001604  0E00               	movlw	0
  1611  001606  6E45               	movwf	_prec^0,c
  1612  001608                     
  1613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1614  001608  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1615  00160C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1616  001610  2ADE               	incf	postinc2,f,c
  1617  001612  0E00               	movlw	0
  1618  001614  22DD               	addwfc	postdec2,f,c
  1619  001616                     
  1620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1621  001616  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1622  00161A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1623  00161E  CFDE FFF6          	movff	postinc2,tblptrl
  1624  001622  CFDD FFF7          	movff	postdec2,tblptrh
  1625  001626                     	if	0	;tblptru may be non-zero
  1626  001626                     	endif
  1627  001626                     	if	0	;tblptru may be non-zero
  1628  001626                     	endif
  1629  001626  0008               	tblrd		*
  1630  001628  50F5               	movf	tablat,w,c
  1631  00162A  0A2A               	xorlw	42
  1632  00162C  A4D8               	btfss	status,2,c
  1633  00162E  EF1B  F00B         	goto	u5831
  1634  001632  EF1D  F00B         	goto	u5830
  1635  001636                     u5831:
  1636  001636  EF3A  F00B         	goto	l4514
  1637  00163A                     u5830:
  1638  00163A                     
  1639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1640  00163A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1641  00163E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1642  001642  2ADE               	incf	postinc2,f,c
  1643  001644  0E00               	movlw	0
  1644  001646  22DD               	addwfc	postdec2,f,c
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1647  001648  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1648  00164C  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1649  001650  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  1650  001654  0E02               	movlw	2
  1651  001656  26DE               	addwf	postinc2,f,c
  1652  001658  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  1653  00165C  0E00               	movlw	0
  1654  00165E  22DD               	addwfc	postdec2,f,c
  1655  001660  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1656  001664  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1657  001668  CFDE F045          	movff	postinc2,_prec
  1658  00166C  CFDD F046          	movff	postdec2,_prec+1
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1661  001670  EF7E  F00B         	goto	l4524
  1662  001674                     l4514:
  1663                           
  1664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1665  001674  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1666  001678  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1667  00167C  CFDE F01D          	movff	postinc2,atoi@s
  1668  001680  CFDD F01E          	movff	postdec2,atoi@s+1
  1669  001684  EC4E  F014         	call	_atoi	;wreg free
  1670  001688  C01D  F045         	movff	?_atoi,_prec
  1671  00168C  C01E  F046         	movff	?_atoi+1,_prec+1
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1674  001690  EF51  F00B         	goto	l4518
  1675  001694                     l4516:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1679  001694  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1680  001698  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1681  00169C  2ADE               	incf	postinc2,f,c
  1682  00169E  0E00               	movlw	0
  1683  0016A0  22DD               	addwfc	postdec2,f,c
  1684  0016A2                     l4518:
  1685  0016A2  0ED0               	movlw	208
  1686  0016A4  0100               	movlb	0	; () banked
  1687  0016A6  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  1688  0016A8  0EFF               	movlw	255
  1689  0016AA  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1690  0016AC  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1691  0016B0  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1692  0016B4  CFDE FFF6          	movff	postinc2,tblptrl
  1693  0016B8  CFDD FFF7          	movff	postdec2,tblptrh
  1694  0016BC                     	if	0	;tblptru may be non-zero
  1695  0016BC                     	endif
  1696  0016BC                     	if	0	;tblptru may be non-zero
  1697  0016BC                     	endif
  1698  0016BC  0008               	tblrd		*
  1699  0016BE  50F5               	movf	tablat,w,c
  1700  0016C0  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1701  0016C2  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1702  0016C4  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  1703  0016C6  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1704  0016C8  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1705  0016CA  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1706  0016CC  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1707  0016CE  E10A               	bnz	u5840
  1708  0016D0  0E0A               	movlw	10
  1709  0016D2  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1710  0016D4  A0D8               	btfss	status,0,c
  1711  0016D6  EF6F  F00B         	goto	u5841
  1712  0016DA  EF72  F00B         	goto	u5840
  1713  0016DE                     u5841:
  1714  0016DE  0E01               	movlw	1
  1715  0016E0  EF73  F00B         	goto	u5850
  1716  0016E4                     u5840:
  1717  0016E4  0E00               	movlw	0
  1718  0016E6                     u5850:
  1719  0016E6  6FC0               	movwf	_vfpfcnvrt$971& (0+255),b
  1720  0016E8  6BC1               	clrf	(_vfpfcnvrt$971+1)& (0+255),b
  1721  0016EA                     
  1722                           ; BSR set to: 0
  1723  0016EA  51C0               	movf	_vfpfcnvrt$971& (0+255),w,b
  1724  0016EC  11C1               	iorwf	(_vfpfcnvrt$971+1)& (0+255),w,b
  1725  0016EE  A4D8               	btfss	status,2,c
  1726  0016F0  EF7C  F00B         	goto	u5861
  1727  0016F4  EF7E  F00B         	goto	u5860
  1728  0016F8                     u5861:
  1729  0016F8  EF4A  F00B         	goto	l4516
  1730  0016FC                     u5860:
  1731  0016FC                     l4524:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1734  0016FC  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1735  001700  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1736  001704  CFDE FFF6          	movff	postinc2,tblptrl
  1737  001708  CFDD FFF7          	movff	postdec2,tblptrh
  1738  00170C                     	if	0	;tblptru may be non-zero
  1739  00170C                     	endif
  1740  00170C                     	if	0	;tblptru may be non-zero
  1741  00170C                     	endif
  1742  00170C  0008               	tblrd		*
  1743  00170E  50F5               	movf	tablat,w,c
  1744  001710  6E1C               	movwf	tolower@c^0,c
  1745  001712  6A1D               	clrf	(tolower@c+1)^0,c
  1746  001714  ECD7  F01B         	call	_tolower	;wreg free
  1747  001718  501C               	movf	?_tolower^0,w,c
  1748  00171A  0100               	movlb	0	; () banked
  1749  00171C  6FC4               	movwf	vfpfcnvrt@ct& (0+255),b
  1750  00171E                     
  1751                           ; BSR set to: 0
  1752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1753  00171E  51C4               	movf	vfpfcnvrt@ct& (0+255),w,b
  1754  001720  B4D8               	btfsc	status,2,c
  1755  001722  EF95  F00B         	goto	u5871
  1756  001726  EF97  F00B         	goto	u5870
  1757  00172A                     u5871:
  1758  00172A  EFD1  F00B         	goto	l4534
  1759  00172E                     u5870:
  1760  00172E                     
  1761                           ; BSR set to: 0
  1762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1763  00172E  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1764  001732  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1765  001736  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
  1766  00173A  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
  1767  00173E  0E01               	movlw	1
  1768  001740  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
  1769  001742  0E00               	movlw	0
  1770  001744  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1771  001746  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1772  00174A  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1773  00174E                     	if	0	;tblptru may be non-zero
  1774  00174E                     	endif
  1775  00174E                     	if	0	;tblptru may be non-zero
  1776  00174E                     	endif
  1777  00174E  0008               	tblrd		*
  1778  001750  50F5               	movf	tablat,w,c
  1779  001752  6E1C               	movwf	tolower@c^0,c
  1780  001754  6A1D               	clrf	(tolower@c+1)^0,c
  1781  001756  ECD7  F01B         	call	_tolower	;wreg free
  1782  00175A  501C               	movf	?_tolower^0,w,c
  1783  00175C  0100               	movlb	0	; () banked
  1784  00175E  6FC5               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1785  001760                     
  1786                           ; BSR set to: 0
  1787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1788  001760  51C5               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1789  001762  B4D8               	btfsc	status,2,c
  1790  001764  EFB6  F00B         	goto	u5881
  1791  001768  EFB8  F00B         	goto	u5880
  1792  00176C                     u5881:
  1793  00176C  EFD1  F00B         	goto	l4534
  1794  001770                     u5880:
  1795  001770                     
  1796                           ; BSR set to: 0
  1797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1798  001770  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1799  001774  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1800  001778  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
  1801  00177C  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
  1802  001780  0E02               	movlw	2
  1803  001782  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
  1804  001784  0E00               	movlw	0
  1805  001786  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1806  001788  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1807  00178C  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1808  001790                     	if	0	;tblptru may be non-zero
  1809  001790                     	endif
  1810  001790                     	if	0	;tblptru may be non-zero
  1811  001790                     	endif
  1812  001790  0008               	tblrd		*
  1813  001792  50F5               	movf	tablat,w,c
  1814  001794  6E1C               	movwf	tolower@c^0,c
  1815  001796  6A1D               	clrf	(tolower@c+1)^0,c
  1816  001798  ECD7  F01B         	call	_tolower	;wreg free
  1817  00179C  501C               	movf	?_tolower^0,w,c
  1818  00179E  0100               	movlb	0	; () banked
  1819  0017A0  6FC6               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1820  0017A2                     l4534:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1824  0017A2  0E66               	movlw	102
  1825  0017A4  19C4               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1826  0017A6  A4D8               	btfss	status,2,c
  1827  0017A8  EFD8  F00B         	goto	u5891
  1828  0017AC  EFDA  F00B         	goto	u5890
  1829  0017B0                     u5891:
  1830  0017B0  EF1A  F00C         	goto	l4546
  1831  0017B4                     u5890:
  1832  0017B4                     
  1833                           ; BSR set to: 0
  1834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1835  0017B4  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1836  0017B8  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1837  0017BC  CFDE FFF6          	movff	postinc2,tblptrl
  1838  0017C0  CFDD FFF7          	movff	postdec2,tblptrh
  1839  0017C4                     	if	0	;tblptru may be non-zero
  1840  0017C4                     	endif
  1841  0017C4                     	if	0	;tblptru may be non-zero
  1842  0017C4                     	endif
  1843  0017C4  0008               	tblrd		*
  1844  0017C6  CFF5 F0CB          	movff	tablat,vfpfcnvrt@c
  1845  0017CA                     
  1846                           ; BSR set to: 0
  1847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1848  0017CA  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1849  0017CE  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1850  0017D2  2ADE               	incf	postinc2,f,c
  1851  0017D4  0E00               	movlw	0
  1852  0017D6  22DD               	addwfc	postdec2,f,c
  1853  0017D8                     
  1854                           ; BSR set to: 0
  1855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1856  0017D8  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1857  0017DC  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1858  0017E0  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  1859  0017E4  0E04               	movlw	4
  1860  0017E6  26DE               	addwf	postinc2,f,c
  1861  0017E8  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  1862  0017EC  0E00               	movlw	0
  1863  0017EE  22DD               	addwfc	postdec2,f,c
  1864  0017F0  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1865  0017F4  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1866  0017F8  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f
  1867  0017FC  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+1
  1868  001800  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+2
  1869  001804  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+3
  1870  001808                     l4542:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1874  001808  C0B4  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  1875  00180C  C0B5  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1876  001810  C0C7  F072         	movff	vfpfcnvrt@f,efgtoa@f
  1877  001814  C0C8  F073         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1878  001818  C0C9  F074         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1879  00181C  C0CA  F075         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1880  001820  C0CB  F076         	movff	vfpfcnvrt@c,efgtoa@c
  1881  001824  EC1F  F004         	call	_efgtoa	;wreg free
  1882  001828  C070  F0B4         	movff	?_efgtoa,?_vfpfcnvrt
  1883  00182C  C071  F0B5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1884  001830  EF00  F00D         	goto	l940
  1885  001834                     l4546:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1889  001834  0EC4               	movlw	low vfpfcnvrt@ct
  1890  001836  6E16               	movwf	strncmp@_l^0,c
  1891  001838  0E00               	movlw	high vfpfcnvrt@ct
  1892  00183A  6E17               	movwf	(strncmp@_l+1)^0,c
  1893  00183C  0E39               	movlw	low STR_13
  1894  00183E  6E18               	movwf	strncmp@_r^0,c
  1895  001840  0E08               	movlw	high STR_13
  1896  001842  6E19               	movwf	(strncmp@_r+1)^0,c
  1897  001844  0E00               	movlw	0
  1898  001846  6E1B               	movwf	(strncmp@n+1)^0,c
  1899  001848  0E02               	movlw	2
  1900  00184A  6E1A               	movwf	strncmp@n^0,c
  1901  00184C  EC1B  F018         	call	_strncmp	;wreg free
  1902  001850  5016               	movf	?_strncmp^0,w,c
  1903  001852  1017               	iorwf	(?_strncmp+1)^0,w,c
  1904  001854  A4D8               	btfss	status,2,c
  1905  001856  EF2F  F00C         	goto	u5901
  1906  00185A  EF31  F00C         	goto	u5900
  1907  00185E                     u5901:
  1908  00185E  EFAD  F00C         	goto	l4562
  1909  001862                     u5900:
  1910  001862                     
  1911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1912  001862  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  001866  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  00186A  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
  1915  00186E  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
  1916  001872  0E01               	movlw	1
  1917  001874  0100               	movlb	0	; () banked
  1918  001876  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
  1919  001878  0E00               	movlw	0
  1920  00187A  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1921  00187C  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1922  001880  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1923  001884                     	if	0	;tblptru may be non-zero
  1924  001884                     	endif
  1925  001884                     	if	0	;tblptru may be non-zero
  1926  001884                     	endif
  1927  001884  0008               	tblrd		*
  1928  001886  CFF5 F0CB          	movff	tablat,vfpfcnvrt@c
  1929  00188A  0EBF               	movlw	191
  1930  00188C  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  1931  00188E  0EFF               	movlw	255
  1932  001890  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1933  001892  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1934  001896  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1935  00189A  CFDE FFF6          	movff	postinc2,tblptrl
  1936  00189E  CFDD FFF7          	movff	postdec2,tblptrh
  1937  0018A2                     	if	0	;tblptru may be non-zero
  1938  0018A2                     	endif
  1939  0018A2                     	if	0	;tblptru may be non-zero
  1940  0018A2                     	endif
  1941  0018A2  0008               	tblrd		*
  1942  0018A4  50F5               	movf	tablat,w,c
  1943  0018A6  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1944  0018A8  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1945  0018AA  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  1946  0018AC  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1947  0018AE  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1948  0018B0  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1949  0018B2  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1950  0018B4  E10A               	bnz	u5910
  1951  0018B6  0E1A               	movlw	26
  1952  0018B8  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1953  0018BA  A0D8               	btfss	status,0,c
  1954  0018BC  EF62  F00C         	goto	u5911
  1955  0018C0  EF65  F00C         	goto	u5910
  1956  0018C4                     u5911:
  1957  0018C4  0E01               	movlw	1
  1958  0018C6  EF66  F00C         	goto	u5920
  1959  0018CA                     u5910:
  1960  0018CA  0E00               	movlw	0
  1961  0018CC                     u5920:
  1962  0018CC  6FC2               	movwf	_vfpfcnvrt$975& (0+255),b
  1963  0018CE  6BC3               	clrf	(_vfpfcnvrt$975+1)& (0+255),b
  1964  0018D0                     
  1965                           ; BSR set to: 0
  1966  0018D0  51C2               	movf	_vfpfcnvrt$975& (0+255),w,b
  1967  0018D2  11C3               	iorwf	(_vfpfcnvrt$975+1)& (0+255),w,b
  1968  0018D4  B4D8               	btfsc	status,2,c
  1969  0018D6  EF6F  F00C         	goto	u5931
  1970  0018DA  EF71  F00C         	goto	u5930
  1971  0018DE                     u5931:
  1972  0018DE  EF8B  F00C         	goto	l4556
  1973  0018E2                     u5930:
  1974  0018E2                     
  1975                           ; BSR set to: 0
  1976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1977  0018E2  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1978  0018E6  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1979  0018EA  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  1980  0018EE  0E04               	movlw	4
  1981  0018F0  26DE               	addwf	postinc2,f,c
  1982  0018F2  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  1983  0018F6  0E00               	movlw	0
  1984  0018F8  22DD               	addwfc	postdec2,f,c
  1985  0018FA  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1986  0018FE  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1987  001902  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f
  1988  001906  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+1
  1989  00190A  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+2
  1990  00190E  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+3
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1993  001912  EFA3  F00C         	goto	l947
  1994  001916                     l4556:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1998  001916  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1999  00191A  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2000  00191E  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2001  001922  0E04               	movlw	4
  2002  001924  26DE               	addwf	postinc2,f,c
  2003  001926  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2004  00192A  0E00               	movlw	0
  2005  00192C  22DD               	addwfc	postdec2,f,c
  2006  00192E  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2007  001932  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2008  001936  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f
  2009  00193A  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+1
  2010  00193E  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+2
  2011  001942  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+3
  2012  001946                     l947:
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2016  001946  0E02               	movlw	2
  2017  001948  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2018  00194C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2019  001950  26DE               	addwf	postinc2,f,c
  2020  001952  0E00               	movlw	0
  2021  001954  22DD               	addwfc	postdec2,f,c
  2022  001956  EF04  F00C         	goto	l4542
  2023  00195A                     l4562:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2026  00195A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2027  00195E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2028  001962  CFDE FFF6          	movff	postinc2,tblptrl
  2029  001966  CFDD FFF7          	movff	postdec2,tblptrh
  2030  00196A                     	if	0	;tblptru may be non-zero
  2031  00196A                     	endif
  2032  00196A                     	if	0	;tblptru may be non-zero
  2033  00196A                     	endif
  2034  00196A  0008               	tblrd		*
  2035  00196C  50F5               	movf	tablat,w,c
  2036  00196E  0A25               	xorlw	37
  2037  001970  A4D8               	btfss	status,2,c
  2038  001972  EFBD  F00C         	goto	u5941
  2039  001976  EFBF  F00C         	goto	u5940
  2040  00197A                     u5941:
  2041  00197A  EFD7  F00C         	goto	l4572
  2042  00197E                     u5940:
  2043  00197E                     
  2044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2045  00197E  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2046  001982  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2047  001986  2ADE               	incf	postinc2,f,c
  2048  001988  0E00               	movlw	0
  2049  00198A  22DD               	addwfc	postdec2,f,c
  2050  00198C                     
  2051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2052  00198C  0E00               	movlw	0
  2053  00198E  6E17               	movwf	(fputc@c+1)^0,c
  2054  001990  0E25               	movlw	37
  2055  001992  6E16               	movwf	fputc@c^0,c
  2056  001994  C0B4  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2057  001998  C0B5  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2058  00199C  EC86  F018         	call	_fputc	;wreg free
  2059  0019A0                     l4568:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2062  0019A0  0E00               	movlw	0
  2063  0019A2  0100               	movlb	0	; () banked
  2064  0019A4  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2065  0019A6  0E01               	movlw	1
  2066  0019A8  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  2067  0019AA  EF00  F00D         	goto	l940
  2068  0019AE                     l4572:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2071  0019AE  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2072  0019B2  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2073  0019B6  2ADE               	incf	postinc2,f,c
  2074  0019B8  0E00               	movlw	0
  2075  0019BA  22DD               	addwfc	postdec2,f,c
  2076  0019BC                     
  2077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2078  0019BC  0E00               	movlw	0
  2079  0019BE  0100               	movlb	0	; () banked
  2080  0019C0  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2081  0019C2  0E00               	movlw	0
  2082  0019C4  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  2083  0019C6  EF00  F00D         	goto	l940
  2084  0019CA                     l4578:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2087  0019CA  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2088  0019CE  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2089  0019D2  CFDE FFF6          	movff	postinc2,tblptrl
  2090  0019D6  CFDD FFF7          	movff	postdec2,tblptrh
  2091  0019DA                     	if	0	;tblptru may be non-zero
  2092  0019DA                     	endif
  2093  0019DA                     	if	0	;tblptru may be non-zero
  2094  0019DA                     	endif
  2095  0019DA  0008               	tblrd		*
  2096  0019DC  50F5               	movf	tablat,w,c
  2097  0019DE  6E16               	movwf	fputc@c^0,c
  2098  0019E0  6A17               	clrf	(fputc@c+1)^0,c
  2099  0019E2  C0B4  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2100  0019E6  C0B5  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2101  0019EA  EC86  F018         	call	_fputc	;wreg free
  2102  0019EE                     
  2103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2104  0019EE  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2105  0019F2  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2106  0019F6  2ADE               	incf	postinc2,f,c
  2107  0019F8  0E00               	movlw	0
  2108  0019FA  22DD               	addwfc	postdec2,f,c
  2109  0019FC  EFD0  F00C         	goto	l4568
  2110  001A00                     l940:
  2111  001A00  0012               	return		;funcret
  2112  001A02                     __end_of_vfpfcnvrt:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function _strncmp *****************
  2116 ;; Defined at:
  2117 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  _l              2   21[COMRAM] PTR const unsigned char 
  2120 ;;		 -> vfpfcnvrt@ct(3), 
  2121 ;;  _r              2   23[COMRAM] PTR const unsigned char 
  2122 ;;		 -> STR_15(3), 
  2123 ;;  n               2   25[COMRAM] unsigned int 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  r               2   30[COMRAM] PTR const unsigned char 
  2126 ;;		 -> STR_15(3), 
  2127 ;;  l               2   28[COMRAM] PTR const unsigned char 
  2128 ;;		 -> vfpfcnvrt@ct(3), 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  2   21[COMRAM] int 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2138 ;;      Params:         6       0       0       0       0       0       0       0       0
  2139 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2140 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2141 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2142 ;;Total ram usage:       11 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 4
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_vfpfcnvrt
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text4
  2153  003036                     __ptext4:
  2154                           	callstack 0
  2155  003036                     _strncmp:
  2156                           	callstack 23
  2157  003036  C016  F01D         	movff	strncmp@_l,strncmp@l
  2158  00303A  C017  F01E         	movff	strncmp@_l+1,strncmp@l+1
  2159  00303E  C018  F01F         	movff	strncmp@_r,strncmp@r
  2160  003042  C019  F020         	movff	strncmp@_r+1,strncmp@r+1
  2161  003046  061A               	decf	strncmp@n^0,f,c
  2162  003048  A0D8               	btfss	status,0,c
  2163  00304A  061B               	decf	(strncmp@n+1)^0,f,c
  2164  00304C  281A               	incf	strncmp@n^0,w,c
  2165  00304E  E106               	bnz	u4631
  2166  003050  281B               	incf	(strncmp@n+1)^0,w,c
  2167  003052  A4D8               	btfss	status,2,c
  2168  003054  EF2E  F018         	goto	u4631
  2169  003058  EF30  F018         	goto	u4630
  2170  00305C                     u4631:
  2171  00305C  EF3D  F018         	goto	l3752
  2172  003060                     u4630:
  2173  003060  0E00               	movlw	0
  2174  003062  6E17               	movwf	(?_strncmp+1)^0,c
  2175  003064  0E00               	movlw	0
  2176  003066  6E16               	movwf	?_strncmp^0,c
  2177  003068  EF85  F018         	goto	l1068
  2178  00306C                     l3750:
  2179  00306C  4A1D               	infsnz	strncmp@l^0,f,c
  2180  00306E  2A1E               	incf	(strncmp@l+1)^0,f,c
  2181  003070  4A1F               	infsnz	strncmp@r^0,f,c
  2182  003072  2A20               	incf	(strncmp@r+1)^0,f,c
  2183  003074  061A               	decf	strncmp@n^0,f,c
  2184  003076  A0D8               	btfss	status,0,c
  2185  003078  061B               	decf	(strncmp@n+1)^0,f,c
  2186  00307A                     l3752:
  2187  00307A  C01D  FFD9         	movff	strncmp@l,fsr2l
  2188  00307E  C01E  FFDA         	movff	strncmp@l+1,fsr2h
  2189  003082  50DF               	movf	indf2,w,c
  2190  003084  B4D8               	btfsc	status,2,c
  2191  003086  EF47  F018         	goto	u4641
  2192  00308A  EF49  F018         	goto	u4640
  2193  00308E                     u4641:
  2194  00308E  EF74  F018         	goto	l3760
  2195  003092                     u4640:
  2196  003092  C01F  FFF6         	movff	strncmp@r,tblptrl
  2197  003096  C020  FFF7         	movff	strncmp@r+1,tblptrh
  2198  00309A                     	if	0	;tblptru may be non-zero
  2199  00309A                     	endif
  2200  00309A                     	if	0	;tblptru may be non-zero
  2201  00309A                     	endif
  2202  00309A  0008               	tblrd		*
  2203  00309C  50F5               	movf	tablat,w,c
  2204  00309E  0900               	iorlw	0
  2205  0030A0  B4D8               	btfsc	status,2,c
  2206  0030A2  EF55  F018         	goto	u4651
  2207  0030A6  EF57  F018         	goto	u4650
  2208  0030AA                     u4651:
  2209  0030AA  EF74  F018         	goto	l3760
  2210  0030AE                     u4650:
  2211  0030AE  501A               	movf	strncmp@n^0,w,c
  2212  0030B0  101B               	iorwf	(strncmp@n+1)^0,w,c
  2213  0030B2  B4D8               	btfsc	status,2,c
  2214  0030B4  EF5E  F018         	goto	u4661
  2215  0030B8  EF60  F018         	goto	u4660
  2216  0030BC                     u4661:
  2217  0030BC  EF74  F018         	goto	l3760
  2218  0030C0                     u4660:
  2219  0030C0  C01D  FFD9         	movff	strncmp@l,fsr2l
  2220  0030C4  C01E  FFDA         	movff	strncmp@l+1,fsr2h
  2221  0030C8  50DF               	movf	indf2,w,c
  2222  0030CA  6E1C               	movwf	??_strncmp^0,c
  2223  0030CC  C01F  FFF6         	movff	strncmp@r,tblptrl
  2224  0030D0  C020  FFF7         	movff	strncmp@r+1,tblptrh
  2225  0030D4                     	if	0	;tblptru may be non-zero
  2226  0030D4                     	endif
  2227  0030D4                     	if	0	;tblptru may be non-zero
  2228  0030D4                     	endif
  2229  0030D4  0008               	tblrd		*
  2230  0030D6  50F5               	movf	tablat,w,c
  2231  0030D8  181C               	xorwf	??_strncmp^0,w,c
  2232  0030DA  B4D8               	btfsc	status,2,c
  2233  0030DC  EF72  F018         	goto	u4671
  2234  0030E0  EF74  F018         	goto	u4670
  2235  0030E4                     u4671:
  2236  0030E4  EF36  F018         	goto	l3750
  2237  0030E8                     u4670:
  2238  0030E8                     l3760:
  2239  0030E8  C01D  FFD9         	movff	strncmp@l,fsr2l
  2240  0030EC  C01E  FFDA         	movff	strncmp@l+1,fsr2h
  2241  0030F0  50DF               	movf	indf2,w,c
  2242  0030F2  6E1C               	movwf	??_strncmp^0,c
  2243  0030F4  C01F  FFF6         	movff	strncmp@r,tblptrl
  2244  0030F8  C020  FFF7         	movff	strncmp@r+1,tblptrh
  2245  0030FC                     	if	0	;tblptru may be non-zero
  2246  0030FC                     	endif
  2247  0030FC                     	if	0	;tblptru may be non-zero
  2248  0030FC                     	endif
  2249  0030FC  0008               	tblrd		*
  2250  0030FE  50F5               	movf	tablat,w,c
  2251  003100  5C1C               	subwf	??_strncmp^0,w,c
  2252  003102  6E16               	movwf	?_strncmp^0,c
  2253  003104  6A17               	clrf	(?_strncmp+1)^0,c
  2254  003106  A0D8               	btfss	status,0,c
  2255  003108  0617               	decf	(?_strncmp+1)^0,f,c
  2256  00310A                     l1068:
  2257  00310A  0012               	return		;funcret
  2258  00310C                     __end_of_strncmp:
  2259                           	callstack 0
  2260                           
  2261 ;; *************** function _efgtoa *****************
  2262 ;; Defined at:
  2263 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2266 ;;		 -> sprintf@f(6), 
  2267 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  2268 ;;  c               1   22[BANK0 ] unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  u               4   80[BANK0 ] unsigned char 
  2271 ;;  g               4   72[BANK0 ] unsigned char 
  2272 ;;  l               4   66[BANK0 ] unsigned char 
  2273 ;;  h               4   62[BANK0 ] unsigned char 
  2274 ;;  ou              4   48[BANK0 ] unsigned char 
  2275 ;;  n               2   78[BANK0 ] int 
  2276 ;;  e               2   76[BANK0 ] int 
  2277 ;;  i               2   70[BANK0 ] int 
  2278 ;;  w               2   58[BANK0 ] int 
  2279 ;;  p               2   56[BANK0 ] int 
  2280 ;;  sign            2   54[BANK0 ] int 
  2281 ;;  d               2   52[BANK0 ] int 
  2282 ;;  m               2   46[BANK0 ] int 
  2283 ;;  ne              2   44[BANK0 ] int 
  2284 ;;  pp              2   42[BANK0 ] int 
  2285 ;;  t               2   40[BANK0 ] int 
  2286 ;;  mode            1   61[BANK0 ] unsigned char 
  2287 ;;  nmode           1   60[BANK0 ] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  2   16[BANK0 ] int 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2297 ;;      Params:         0       7       0       0       0       0       0       0       0
  2298 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2299 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2300 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2301 ;;Total ram usage:       68 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 8
  2304 ;; This function calls:
  2305 ;;		___awdiv
  2306 ;;		___awmod
  2307 ;;		___fladd
  2308 ;;		___fldiv
  2309 ;;		___fleq
  2310 ;;		___flge
  2311 ;;		___flmul
  2312 ;;		___flneg
  2313 ;;		___flsub
  2314 ;;		___fltol
  2315 ;;		___fpclassifyf
  2316 ;;		_floorf
  2317 ;;		_isupper
  2318 ;;		_pad
  2319 ;;		_strcpy
  2320 ;;		_tolower
  2321 ;; This function is called by:
  2322 ;;		_vfpfcnvrt
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text5
  2327  00083E                     __ptext5:
  2328                           	callstack 0
  2329  00083E                     _efgtoa:
  2330                           	callstack 19
  2331  00083E                     
  2332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2333  00083E  0E00               	movlw	0
  2334  000840  0100               	movlb	0	; () banked
  2335  000842  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  2336  000844  0E00               	movlw	0
  2337  000846  6F96               	movwf	efgtoa@sign& (0+255),b
  2338  000848                     
  2339                           ; BSR set to: 0
  2340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2341  000848  C072  F0A8         	movff	efgtoa@f,efgtoa@g
  2342  00084C  C073  F0A9         	movff	efgtoa@f+1,efgtoa@g+1
  2343  000850  C074  F0AA         	movff	efgtoa@f+2,efgtoa@g+2
  2344  000854  C075  F0AB         	movff	efgtoa@f+3,efgtoa@g+3
  2345  000858                     
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2348  000858  BFAB               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2349  00085A  EF33  F004         	goto	u5220
  2350  00085E  EF31  F004         	goto	u5221
  2351  000862                     u5221:
  2352  000862  EF49  F004         	goto	l4180
  2353  000866                     u5220:
  2354  000866                     
  2355                           ; BSR set to: 0
  2356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2357  000866  0E00               	movlw	0
  2358  000868  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  2359  00086A  0E01               	movlw	1
  2360  00086C  6F96               	movwf	efgtoa@sign& (0+255),b
  2361  00086E                     
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2364  00086E  C0A8  F016         	movff	efgtoa@g,___flneg@f1
  2365  000872  C0A9  F017         	movff	efgtoa@g+1,___flneg@f1+1
  2366  000876  C0AA  F018         	movff	efgtoa@g+2,___flneg@f1+2
  2367  00087A  C0AB  F019         	movff	efgtoa@g+3,___flneg@f1+3
  2368  00087E  EC5F  F01D         	call	___flneg	;wreg free
  2369  000882  C016  F0A8         	movff	?___flneg,efgtoa@g
  2370  000886  C017  F0A9         	movff	?___flneg+1,efgtoa@g+1
  2371  00088A  C018  F0AA         	movff	?___flneg+2,efgtoa@g+2
  2372  00088E  C019  F0AB         	movff	?___flneg+3,efgtoa@g+3
  2373  000892                     l4180:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2376  000892  0E00               	movlw	0
  2377  000894  0100               	movlb	0	; () banked
  2378  000896  6FAF               	movwf	(efgtoa@n+1)& (0+255),b
  2379  000898  0E00               	movlw	0
  2380  00089A  6FAE               	movwf	efgtoa@n& (0+255),b
  2381  00089C                     
  2382                           ; BSR set to: 0
  2383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2384  00089C  C043  F09A         	movff	_width,efgtoa@w
  2385  0008A0  C044  F09B         	movff	_width+1,efgtoa@w+1
  2386  0008A4                     
  2387                           ; BSR set to: 0
  2388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2389  0008A4  5196               	movf	efgtoa@sign& (0+255),w,b
  2390  0008A6  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2391  0008A8  A4D8               	btfss	status,2,c
  2392  0008AA  EF59  F004         	goto	u5231
  2393  0008AE  EF5B  F004         	goto	u5230
  2394  0008B2                     u5231:
  2395  0008B2  EF62  F004         	goto	l4188
  2396  0008B6                     u5230:
  2397  0008B6                     
  2398                           ; BSR set to: 0
  2399  0008B6  A447               	btfss	_flags^0,2,c
  2400  0008B8  EF60  F004         	goto	u5241
  2401  0008BC  EF62  F004         	goto	u5240
  2402  0008C0                     u5241:
  2403  0008C0  EF7C  F004         	goto	l4200
  2404  0008C4                     u5240:
  2405  0008C4                     l4188:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2409  0008C4  5196               	movf	efgtoa@sign& (0+255),w,b
  2410  0008C6  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2411  0008C8  A4D8               	btfss	status,2,c
  2412  0008CA  EF69  F004         	goto	u5251
  2413  0008CE  EF6B  F004         	goto	u5250
  2414  0008D2                     u5251:
  2415  0008D2  EF71  F004         	goto	l4192
  2416  0008D6                     u5250:
  2417  0008D6                     
  2418                           ; BSR set to: 0
  2419  0008D6  0E00               	movlw	0
  2420  0008D8  6F7D               	movwf	(_efgtoa$944+1)& (0+255),b
  2421  0008DA  0E2B               	movlw	43
  2422  0008DC  6F7C               	movwf	_efgtoa$944& (0+255),b
  2423  0008DE  EF75  F004         	goto	l4194
  2424  0008E2                     l4192:
  2425                           
  2426                           ; BSR set to: 0
  2427  0008E2  0E00               	movlw	0
  2428  0008E4  6F7D               	movwf	(_efgtoa$944+1)& (0+255),b
  2429  0008E6  0E2D               	movlw	45
  2430  0008E8  6F7C               	movwf	_efgtoa$944& (0+255),b
  2431  0008EA                     l4194:
  2432                           
  2433                           ; BSR set to: 0
  2434  0008EA  C07C  F100         	movff	_efgtoa$944,_dbuf
  2435  0008EE                     
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2438  0008EE  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  2439  0008F0  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  2440  0008F2                     
  2441                           ; BSR set to: 0
  2442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2443  0008F2  079A               	decf	efgtoa@w& (0+255),f,b
  2444  0008F4  A0D8               	btfss	status,0,c
  2445  0008F6  079B               	decf	(efgtoa@w+1)& (0+255),f,b
  2446  0008F8                     l4200:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2450  0008F8  C0A8  F016         	movff	efgtoa@g,___fpclassifyf@x
  2451  0008FC  C0A9  F017         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2452  000900  C0AA  F018         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2453  000904  C0AB  F019         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2454  000908  EC2D  F017         	call	___fpclassifyf	;wreg free
  2455  00090C  0416               	decf	?___fpclassifyf^0,w,c
  2456  00090E  1017               	iorwf	(?___fpclassifyf+1)^0,w,c
  2457  000910  A4D8               	btfss	status,2,c
  2458  000912  EF8D  F004         	goto	u5261
  2459  000916  EF8F  F004         	goto	u5260
  2460  00091A                     u5261:
  2461  00091A  EFE6  F004         	goto	l4218
  2462  00091E                     u5260:
  2463  00091E  0EBF               	movlw	191
  2464  000920  0100               	movlb	0	; () banked
  2465  000922  6F77               	movwf	??_efgtoa& (0+255),b
  2466  000924  0EFF               	movlw	255
  2467  000926  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2468  000928  5176               	movf	efgtoa@c& (0+255),w,b
  2469  00092A  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  2470  00092C  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  2471  00092E  5177               	movf	??_efgtoa& (0+255),w,b
  2472  000930  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2473  000932  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2474  000934  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2475  000936  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2476  000938  E10A               	bnz	u5270
  2477  00093A  0E1A               	movlw	26
  2478  00093C  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2479  00093E  A0D8               	btfss	status,0,c
  2480  000940  EFA4  F004         	goto	u5271
  2481  000944  EFA7  F004         	goto	u5270
  2482  000948                     u5271:
  2483  000948  0E01               	movlw	1
  2484  00094A  EFA8  F004         	goto	u5280
  2485  00094E                     u5270:
  2486  00094E  0E00               	movlw	0
  2487  000950                     u5280:
  2488  000950  6F7E               	movwf	_efgtoa$945& (0+255),b
  2489  000952  6B7F               	clrf	(_efgtoa$945+1)& (0+255),b
  2490  000954                     
  2491                           ; BSR set to: 0
  2492  000954  517E               	movf	_efgtoa$945& (0+255),w,b
  2493  000956  117F               	iorwf	(_efgtoa$945+1)& (0+255),w,b
  2494  000958  B4D8               	btfsc	status,2,c
  2495  00095A  EFB1  F004         	goto	u5291
  2496  00095E  EFB3  F004         	goto	u5290
  2497  000962                     u5291:
  2498  000962  EFC1  F004         	goto	l4210
  2499  000966                     u5290:
  2500  000966                     
  2501                           ; BSR set to: 0
  2502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2503  000966  0E00               	movlw	low _dbuf
  2504  000968  25AE               	addwf	efgtoa@n& (0+255),w,b
  2505  00096A  6E16               	movwf	strcpy@dest^0,c
  2506  00096C  0E01               	movlw	high _dbuf
  2507  00096E  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2508  000970  6E17               	movwf	(strcpy@dest+1)^0,c
  2509  000972  0E29               	movlw	low STR_5
  2510  000974  6E18               	movwf	strcpy@src^0,c
  2511  000976  0E08               	movlw	high STR_5
  2512  000978  6E19               	movwf	(strcpy@src+1)^0,c
  2513  00097A  EC07  F01C         	call	_strcpy	;wreg free
  2514                           
  2515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2516  00097E  EFCD  F004         	goto	l4212
  2517  000982                     l4210:
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2521  000982  0E00               	movlw	low _dbuf
  2522  000984  25AE               	addwf	efgtoa@n& (0+255),w,b
  2523  000986  6E16               	movwf	strcpy@dest^0,c
  2524  000988  0E01               	movlw	high _dbuf
  2525  00098A  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2526  00098C  6E17               	movwf	(strcpy@dest+1)^0,c
  2527  00098E  0E31               	movlw	low STR_6
  2528  000990  6E18               	movwf	strcpy@src^0,c
  2529  000992  0E08               	movlw	high STR_6
  2530  000994  6E19               	movwf	(strcpy@src+1)^0,c
  2531  000996  EC07  F01C         	call	_strcpy	;wreg free
  2532  00099A                     l4212:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2535  00099A  0100               	movlb	0	; () banked
  2536  00099C  0EFD               	movlw	253
  2537  00099E  279A               	addwf	efgtoa@w& (0+255),f,b
  2538  0009A0  0EFF               	movlw	255
  2539  0009A2  239B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2540  0009A4                     l4214:
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2543  0009A4  C070  F026         	movff	efgtoa@fp,pad@fp
  2544  0009A8  C071  F027         	movff	efgtoa@fp+1,pad@fp+1
  2545  0009AC  0E00               	movlw	low _dbuf
  2546  0009AE  6E28               	movwf	pad@buf^0,c
  2547  0009B0  0E01               	movlw	high _dbuf
  2548  0009B2  6E29               	movwf	(pad@buf+1)^0,c
  2549  0009B4  C09A  F02A         	movff	efgtoa@w,pad@p
  2550  0009B8  C09B  F02B         	movff	efgtoa@w+1,pad@p+1
  2551  0009BC  EC4D  F019         	call	_pad	;wreg free
  2552  0009C0  C026  F070         	movff	?_pad,?_efgtoa
  2553  0009C4  C027  F071         	movff	?_pad+1,?_efgtoa+1
  2554  0009C8  EF4B  F00A         	goto	l838
  2555  0009CC                     l4218:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2558  0009CC  C0A8  F016         	movff	efgtoa@g,___fpclassifyf@x
  2559  0009D0  C0A9  F017         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2560  0009D4  C0AA  F018         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2561  0009D8  C0AB  F019         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2562  0009DC  EC2D  F017         	call	___fpclassifyf	;wreg free
  2563  0009E0  5016               	movf	?___fpclassifyf^0,w,c
  2564  0009E2  1017               	iorwf	(?___fpclassifyf+1)^0,w,c
  2565  0009E4  A4D8               	btfss	status,2,c
  2566  0009E6  EFF7  F004         	goto	u5301
  2567  0009EA  EFF9  F004         	goto	u5300
  2568  0009EE                     u5301:
  2569  0009EE  EF39  F005         	goto	l4236
  2570  0009F2                     u5300:
  2571  0009F2  0EBF               	movlw	191
  2572  0009F4  0100               	movlb	0	; () banked
  2573  0009F6  6F77               	movwf	??_efgtoa& (0+255),b
  2574  0009F8  0EFF               	movlw	255
  2575  0009FA  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2576  0009FC  5176               	movf	efgtoa@c& (0+255),w,b
  2577  0009FE  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  2578  000A00  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  2579  000A02  5177               	movf	??_efgtoa& (0+255),w,b
  2580  000A04  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2581  000A06  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2582  000A08  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2583  000A0A  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2584  000A0C  E10A               	bnz	u5310
  2585  000A0E  0E1A               	movlw	26
  2586  000A10  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2587  000A12  A0D8               	btfss	status,0,c
  2588  000A14  EF0E  F005         	goto	u5311
  2589  000A18  EF11  F005         	goto	u5310
  2590  000A1C                     u5311:
  2591  000A1C  0E01               	movlw	1
  2592  000A1E  EF12  F005         	goto	u5320
  2593  000A22                     u5310:
  2594  000A22  0E00               	movlw	0
  2595  000A24                     u5320:
  2596  000A24  6F80               	movwf	_efgtoa$950& (0+255),b
  2597  000A26  6B81               	clrf	(_efgtoa$950+1)& (0+255),b
  2598  000A28                     
  2599                           ; BSR set to: 0
  2600  000A28  5180               	movf	_efgtoa$950& (0+255),w,b
  2601  000A2A  1181               	iorwf	(_efgtoa$950+1)& (0+255),w,b
  2602  000A2C  B4D8               	btfsc	status,2,c
  2603  000A2E  EF1B  F005         	goto	u5331
  2604  000A32  EF1D  F005         	goto	u5330
  2605  000A36                     u5331:
  2606  000A36  EF2B  F005         	goto	l4228
  2607  000A3A                     u5330:
  2608  000A3A                     
  2609                           ; BSR set to: 0
  2610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2611  000A3A  0E00               	movlw	low _dbuf
  2612  000A3C  25AE               	addwf	efgtoa@n& (0+255),w,b
  2613  000A3E  6E16               	movwf	strcpy@dest^0,c
  2614  000A40  0E01               	movlw	high _dbuf
  2615  000A42  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2616  000A44  6E17               	movwf	(strcpy@dest+1)^0,c
  2617  000A46  0E2D               	movlw	low STR_9
  2618  000A48  6E18               	movwf	strcpy@src^0,c
  2619  000A4A  0E08               	movlw	high STR_9
  2620  000A4C  6E19               	movwf	(strcpy@src+1)^0,c
  2621  000A4E  EC07  F01C         	call	_strcpy	;wreg free
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2624  000A52  EFCD  F004         	goto	l4212
  2625  000A56                     l4228:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2629  000A56  0E00               	movlw	low _dbuf
  2630  000A58  25AE               	addwf	efgtoa@n& (0+255),w,b
  2631  000A5A  6E16               	movwf	strcpy@dest^0,c
  2632  000A5C  0E01               	movlw	high _dbuf
  2633  000A5E  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2634  000A60  6E17               	movwf	(strcpy@dest+1)^0,c
  2635  000A62  0E35               	movlw	low STR_10
  2636  000A64  6E18               	movwf	strcpy@src^0,c
  2637  000A66  0E08               	movlw	high STR_10
  2638  000A68  6E19               	movwf	(strcpy@src+1)^0,c
  2639  000A6A  EC07  F01C         	call	_strcpy	;wreg free
  2640  000A6E  EFCD  F004         	goto	l4212
  2641  000A72                     l4236:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2644  000A72  0E00               	movlw	0
  2645  000A74  0100               	movlb	0	; () banked
  2646  000A76  6FB0               	movwf	efgtoa@u& (0+255),b
  2647  000A78  0E00               	movlw	0
  2648  000A7A  6FB1               	movwf	(efgtoa@u+1)& (0+255),b
  2649  000A7C  0E80               	movlw	128
  2650  000A7E  6FB2               	movwf	(efgtoa@u+2)& (0+255),b
  2651  000A80  0E3F               	movlw	63
  2652  000A82  6FB3               	movwf	(efgtoa@u+3)& (0+255),b
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2655  000A84  0E00               	movlw	0
  2656  000A86  6FAD               	movwf	(efgtoa@e+1)& (0+255),b
  2657  000A88  0E00               	movlw	0
  2658  000A8A  6FAC               	movwf	efgtoa@e& (0+255),b
  2659  000A8C                     
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2662  000A8C  C0A8  F016         	movff	efgtoa@g,___fleq@ff1
  2663  000A90  C0A9  F017         	movff	efgtoa@g+1,___fleq@ff1+1
  2664  000A94  C0AA  F018         	movff	efgtoa@g+2,___fleq@ff1+2
  2665  000A98  C0AB  F019         	movff	efgtoa@g+3,___fleq@ff1+3
  2666  000A9C  0E00               	movlw	0
  2667  000A9E  6E1A               	movwf	___fleq@ff2^0,c
  2668  000AA0  0E00               	movlw	0
  2669  000AA2  6E1B               	movwf	(___fleq@ff2+1)^0,c
  2670  000AA4  0E00               	movlw	0
  2671  000AA6  6E1C               	movwf	(___fleq@ff2+2)^0,c
  2672  000AA8  0E00               	movlw	0
  2673  000AAA  6E1D               	movwf	(___fleq@ff2+3)^0,c
  2674  000AAC  EC5F  F01A         	call	___fleq	;wreg free
  2675  000AB0  B0D8               	btfsc	status,0,c
  2676  000AB2  EF5D  F005         	goto	u5341
  2677  000AB6  EF5F  F005         	goto	u5340
  2678  000ABA                     u5341:
  2679  000ABA  EFE2  F005         	goto	l4254
  2680  000ABE                     u5340:
  2681  000ABE  EF7E  F005         	goto	l4246
  2682  000AC2                     l4242:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2685  000AC2  C0B0  F016         	movff	efgtoa@u,___flmul@b
  2686  000AC6  C0B1  F017         	movff	efgtoa@u+1,___flmul@b+1
  2687  000ACA  C0B2  F018         	movff	efgtoa@u+2,___flmul@b+2
  2688  000ACE  C0B3  F019         	movff	efgtoa@u+3,___flmul@b+3
  2689  000AD2  0E00               	movlw	0
  2690  000AD4  6E1A               	movwf	___flmul@a^0,c
  2691  000AD6  0E00               	movlw	0
  2692  000AD8  6E1B               	movwf	(___flmul@a+1)^0,c
  2693  000ADA  0E20               	movlw	32
  2694  000ADC  6E1C               	movwf	(___flmul@a+2)^0,c
  2695  000ADE  0E41               	movlw	65
  2696  000AE0  6E1D               	movwf	(___flmul@a+3)^0,c
  2697  000AE2  EC61  F00F         	call	___flmul	;wreg free
  2698  000AE6  C016  F0B0         	movff	?___flmul,efgtoa@u
  2699  000AEA  C017  F0B1         	movff	?___flmul+1,efgtoa@u+1
  2700  000AEE  C018  F0B2         	movff	?___flmul+2,efgtoa@u+2
  2701  000AF2  C019  F0B3         	movff	?___flmul+3,efgtoa@u+3
  2702  000AF6                     
  2703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2704  000AF6  0100               	movlb	0	; () banked
  2705  000AF8  4BAC               	infsnz	efgtoa@e& (0+255),f,b
  2706  000AFA  2BAD               	incf	(efgtoa@e+1)& (0+255),f,b
  2707  000AFC                     l4246:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2710  000AFC  C0A8  F02F         	movff	efgtoa@g,___flge@ff1
  2711  000B00  C0A9  F030         	movff	efgtoa@g+1,___flge@ff1+1
  2712  000B04  C0AA  F031         	movff	efgtoa@g+2,___flge@ff1+2
  2713  000B08  C0AB  F032         	movff	efgtoa@g+3,___flge@ff1+3
  2714  000B0C  0E00               	movlw	0
  2715  000B0E  6E1A               	movwf	___flmul@a^0,c
  2716  000B10  0E00               	movlw	0
  2717  000B12  6E1B               	movwf	(___flmul@a+1)^0,c
  2718  000B14  0E20               	movlw	32
  2719  000B16  6E1C               	movwf	(___flmul@a+2)^0,c
  2720  000B18  0E41               	movlw	65
  2721  000B1A  6E1D               	movwf	(___flmul@a+3)^0,c
  2722  000B1C  C0B0  F016         	movff	efgtoa@u,___flmul@b
  2723  000B20  C0B1  F017         	movff	efgtoa@u+1,___flmul@b+1
  2724  000B24  C0B2  F018         	movff	efgtoa@u+2,___flmul@b+2
  2725  000B28  C0B3  F019         	movff	efgtoa@u+3,___flmul@b+3
  2726  000B2C  EC61  F00F         	call	___flmul	;wreg free
  2727  000B30  C016  F033         	movff	?___flmul,___flge@ff2
  2728  000B34  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  2729  000B38  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  2730  000B3C  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  2731  000B40  EC28  F016         	call	___flge	;wreg free
  2732  000B44  B0D8               	btfsc	status,0,c
  2733  000B46  EFA7  F005         	goto	u5351
  2734  000B4A  EFA9  F005         	goto	u5350
  2735  000B4E                     u5351:
  2736  000B4E  EF61  F005         	goto	l4242
  2737  000B52                     u5350:
  2738  000B52  EFC9  F005         	goto	l4252
  2739  000B56                     l4248:
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2742  000B56  C0B0  F016         	movff	efgtoa@u,___fldiv@b
  2743  000B5A  C0B1  F017         	movff	efgtoa@u+1,___fldiv@b+1
  2744  000B5E  C0B2  F018         	movff	efgtoa@u+2,___fldiv@b+2
  2745  000B62  C0B3  F019         	movff	efgtoa@u+3,___fldiv@b+3
  2746  000B66  0E00               	movlw	0
  2747  000B68  6E1A               	movwf	___fldiv@a^0,c
  2748  000B6A  0E00               	movlw	0
  2749  000B6C  6E1B               	movwf	(___fldiv@a+1)^0,c
  2750  000B6E  0E20               	movlw	32
  2751  000B70  6E1C               	movwf	(___fldiv@a+2)^0,c
  2752  000B72  0E41               	movlw	65
  2753  000B74  6E1D               	movwf	(___fldiv@a+3)^0,c
  2754  000B76  EC76  F011         	call	___fldiv	;wreg free
  2755  000B7A  C016  F0B0         	movff	?___fldiv,efgtoa@u
  2756  000B7E  C017  F0B1         	movff	?___fldiv+1,efgtoa@u+1
  2757  000B82  C018  F0B2         	movff	?___fldiv+2,efgtoa@u+2
  2758  000B86  C019  F0B3         	movff	?___fldiv+3,efgtoa@u+3
  2759  000B8A                     
  2760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2761  000B8A  0100               	movlb	0	; () banked
  2762  000B8C  07AC               	decf	efgtoa@e& (0+255),f,b
  2763  000B8E  A0D8               	btfss	status,0,c
  2764  000B90  07AD               	decf	(efgtoa@e+1)& (0+255),f,b
  2765  000B92                     l4252:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2768  000B92  C0A8  F02F         	movff	efgtoa@g,___flge@ff1
  2769  000B96  C0A9  F030         	movff	efgtoa@g+1,___flge@ff1+1
  2770  000B9A  C0AA  F031         	movff	efgtoa@g+2,___flge@ff1+2
  2771  000B9E  C0AB  F032         	movff	efgtoa@g+3,___flge@ff1+3
  2772  000BA2  C0B0  F033         	movff	efgtoa@u,___flge@ff2
  2773  000BA6  C0B1  F034         	movff	efgtoa@u+1,___flge@ff2+1
  2774  000BAA  C0B2  F035         	movff	efgtoa@u+2,___flge@ff2+2
  2775  000BAE  C0B3  F036         	movff	efgtoa@u+3,___flge@ff2+3
  2776  000BB2  EC28  F016         	call	___flge	;wreg free
  2777  000BB6  A0D8               	btfss	status,0,c
  2778  000BB8  EFE0  F005         	goto	u5361
  2779  000BBC  EFE2  F005         	goto	u5360
  2780  000BC0                     u5361:
  2781  000BC0  EFAB  F005         	goto	l4248
  2782  000BC4                     u5360:
  2783  000BC4                     l4254:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2786  000BC4  C076  F01C         	movff	efgtoa@c,tolower@c
  2787  000BC8  6A1D               	clrf	(tolower@c+1)^0,c
  2788  000BCA  ECD7  F01B         	call	_tolower	;wreg free
  2789  000BCE  501C               	movf	?_tolower^0,w,c
  2790  000BD0  0100               	movlb	0	; () banked
  2791  000BD2  6F9D               	movwf	efgtoa@mode& (0+255),b
  2792  000BD4                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2795  000BD4  C09D  F09C         	movff	efgtoa@mode,efgtoa@nmode
  2796  000BD8                     
  2797                           ; BSR set to: 0
  2798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2799  000BD8  0E67               	movlw	103
  2800  000BDA  199D               	xorwf	efgtoa@mode& (0+255),w,b
  2801  000BDC  A4D8               	btfss	status,2,c
  2802  000BDE  EFF3  F005         	goto	u5371
  2803  000BE2  EFF5  F005         	goto	u5370
  2804  000BE6                     u5371:
  2805  000BE6  EF1B  F006         	goto	l4268
  2806  000BEA                     u5370:
  2807  000BEA                     
  2808                           ; BSR set to: 0
  2809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2810  000BEA  5045               	movf	_prec^0,w,c
  2811  000BEC  1046               	iorwf	(_prec+1)^0,w,c
  2812  000BEE  A4D8               	btfss	status,2,c
  2813  000BF0  EFFC  F005         	goto	u5381
  2814  000BF4  EFFE  F005         	goto	u5380
  2815  000BF8                     u5381:
  2816  000BF8  EF02  F006         	goto	l4264
  2817  000BFC                     u5380:
  2818  000BFC                     
  2819                           ; BSR set to: 0
  2820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2821  000BFC  0E00               	movlw	0
  2822  000BFE  6E46               	movwf	(_prec+1)^0,c
  2823  000C00  0E01               	movlw	1
  2824  000C02  6E45               	movwf	_prec^0,c
  2825  000C04                     l4264:
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2829  000C04  BE46               	btfsc	(_prec+1)^0,7,c
  2830  000C06  EF0F  F006         	goto	u5390
  2831  000C0A  5046               	movf	(_prec+1)^0,w,c
  2832  000C0C  E106               	bnz	u5391
  2833  000C0E  0445               	decf	_prec^0,w,c
  2834  000C10  B0D8               	btfsc	status,0,c
  2835  000C12  EF0D  F006         	goto	u5391
  2836  000C16  EF0F  F006         	goto	u5390
  2837  000C1A                     u5391:
  2838  000C1A  EF15  F006         	goto	l856
  2839  000C1E                     u5390:
  2840  000C1E                     l4266:
  2841                           
  2842                           ; BSR set to: 0
  2843  000C1E  0E00               	movlw	0
  2844  000C20  6F99               	movwf	(efgtoa@p+1)& (0+255),b
  2845  000C22  0E06               	movlw	6
  2846  000C24  6F98               	movwf	efgtoa@p& (0+255),b
  2847  000C26  EF24  F006         	goto	l4274
  2848  000C2A                     l856:
  2849                           
  2850                           ; BSR set to: 0
  2851  000C2A  C045  F098         	movff	_prec,efgtoa@p
  2852  000C2E  C046  F099         	movff	_prec+1,efgtoa@p+1
  2853  000C32  EF24  F006         	goto	l4274
  2854  000C36                     l4268:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2858  000C36  BE46               	btfsc	(_prec+1)^0,7,c
  2859  000C38  EF20  F006         	goto	u5401
  2860  000C3C  EF22  F006         	goto	u5400
  2861  000C40                     u5401:
  2862  000C40  EF0F  F006         	goto	l4266
  2863  000C44                     u5400:
  2864  000C44  EF15  F006         	goto	l856
  2865  000C48                     l4274:
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2869  000C48  0E67               	movlw	103
  2870  000C4A  199D               	xorwf	efgtoa@mode& (0+255),w,b
  2871  000C4C  A4D8               	btfss	status,2,c
  2872  000C4E  EF2B  F006         	goto	u5411
  2873  000C52  EF2D  F006         	goto	u5410
  2874  000C56                     u5411:
  2875  000C56  EF5C  F006         	goto	l4284
  2876  000C5A                     u5410:
  2877  000C5A                     
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2880  000C5A  AFAD               	btfss	(efgtoa@e+1)& (0+255),7,b
  2881  000C5C  EF3B  F006         	goto	u5420
  2882  000C60  0EFC               	movlw	252
  2883  000C62  5DAC               	subwf	efgtoa@e& (0+255),w,b
  2884  000C64  0EFF               	movlw	255
  2885  000C66  59AD               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2886  000C68  A0D8               	btfss	status,0,c
  2887  000C6A  EF39  F006         	goto	u5421
  2888  000C6E  EF3B  F006         	goto	u5420
  2889  000C72                     u5421:
  2890  000C72  EF5A  F006         	goto	l4282
  2891  000C76                     u5420:
  2892  000C76                     
  2893                           ; BSR set to: 0
  2894  000C76  0EFF               	movlw	255
  2895  000C78  6F77               	movwf	??_efgtoa& (0+255),b
  2896  000C7A  0EFF               	movlw	255
  2897  000C7C  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2898  000C7E  C098  F079         	movff	efgtoa@p,??_efgtoa+2
  2899  000C82  C099  F07A         	movff	efgtoa@p+1,??_efgtoa+3
  2900  000C86  5177               	movf	??_efgtoa& (0+255),w,b
  2901  000C88  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2902  000C8A  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2903  000C8C  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2904  000C8E  51AC               	movf	efgtoa@e& (0+255),w,b
  2905  000C90  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2906  000C92  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2907  000C94  0A80               	xorlw	128
  2908  000C96  6F7B               	movwf	(??_efgtoa+4)& (0+255),b
  2909  000C98  51AD               	movf	(efgtoa@e+1)& (0+255),w,b
  2910  000C9A  0A80               	xorlw	128
  2911  000C9C  597B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2912  000C9E  A0D8               	btfss	status,0,c
  2913  000CA0  EF54  F006         	goto	u5431
  2914  000CA4  EF56  F006         	goto	u5430
  2915  000CA8                     u5431:
  2916  000CA8  EF5A  F006         	goto	l4282
  2917  000CAC                     u5430:
  2918  000CAC                     
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2921  000CAC  0E66               	movlw	102
  2922  000CAE  6F9C               	movwf	efgtoa@nmode& (0+255),b
  2923                           
  2924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2925  000CB0  EF5C  F006         	goto	l4284
  2926  000CB4                     l4282:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2930  000CB4  0E65               	movlw	101
  2931  000CB6  6F9C               	movwf	efgtoa@nmode& (0+255),b
  2932  000CB8                     l4284:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2936  000CB8  C098  F08E         	movff	efgtoa@p,efgtoa@m
  2937  000CBC  C099  F08F         	movff	efgtoa@p+1,efgtoa@m+1
  2938  000CC0                     
  2939                           ; BSR set to: 0
  2940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2941  000CC0  0E67               	movlw	103
  2942  000CC2  199D               	xorwf	efgtoa@mode& (0+255),w,b
  2943  000CC4  A4D8               	btfss	status,2,c
  2944  000CC6  EF67  F006         	goto	u5441
  2945  000CCA  EF69  F006         	goto	u5440
  2946  000CCE                     u5441:
  2947  000CCE  EF79  F006         	goto	l4292
  2948  000CD2                     u5440:
  2949  000CD2                     
  2950                           ; BSR set to: 0
  2951  000CD2  0E66               	movlw	102
  2952  000CD4  199C               	xorwf	efgtoa@nmode& (0+255),w,b
  2953  000CD6  A4D8               	btfss	status,2,c
  2954  000CD8  EF70  F006         	goto	u5451
  2955  000CDC  EF72  F006         	goto	u5450
  2956  000CE0                     u5451:
  2957  000CE0  EF7B  F006         	goto	l4294
  2958  000CE4                     u5450:
  2959  000CE4                     
  2960                           ; BSR set to: 0
  2961  000CE4  BFAD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2962  000CE6  EF79  F006         	goto	u5460
  2963  000CEA  EF77  F006         	goto	u5461
  2964  000CEE                     u5461:
  2965  000CEE  EF7B  F006         	goto	l4294
  2966  000CF2                     u5460:
  2967  000CF2                     l4292:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2971  000CF2  4B8E               	infsnz	efgtoa@m& (0+255),f,b
  2972  000CF4  2B8F               	incf	(efgtoa@m+1)& (0+255),f,b
  2973  000CF6                     l4294:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2977  000CF6  0E66               	movlw	102
  2978  000CF8  199C               	xorwf	efgtoa@nmode& (0+255),w,b
  2979  000CFA  A4D8               	btfss	status,2,c
  2980  000CFC  EF82  F006         	goto	u5471
  2981  000D00  EF84  F006         	goto	u5470
  2982  000D04                     u5471:
  2983  000D04  EFA4  F006         	goto	l4304
  2984  000D08                     u5470:
  2985  000D08                     
  2986                           ; BSR set to: 0
  2987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2988  000D08  BFAD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2989  000D0A  EF8B  F006         	goto	u5480
  2990  000D0E  EF89  F006         	goto	u5481
  2991  000D12                     u5481:
  2992  000D12  EF97  F006         	goto	l4300
  2993  000D16                     u5480:
  2994  000D16                     
  2995                           ; BSR set to: 0
  2996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2997  000D16  0E00               	movlw	0
  2998  000D18  6FB0               	movwf	efgtoa@u& (0+255),b
  2999  000D1A  0E00               	movlw	0
  3000  000D1C  6FB1               	movwf	(efgtoa@u+1)& (0+255),b
  3001  000D1E  0E80               	movlw	128
  3002  000D20  6FB2               	movwf	(efgtoa@u+2)& (0+255),b
  3003  000D22  0E3F               	movlw	63
  3004  000D24  6FB3               	movwf	(efgtoa@u+3)& (0+255),b
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3007  000D26  0E00               	movlw	0
  3008  000D28  6FAD               	movwf	(efgtoa@e+1)& (0+255),b
  3009  000D2A  0E00               	movlw	0
  3010  000D2C  6FAC               	movwf	efgtoa@e& (0+255),b
  3011  000D2E                     l4300:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3015  000D2E  0E67               	movlw	103
  3016  000D30  199D               	xorwf	efgtoa@mode& (0+255),w,b
  3017  000D32  B4D8               	btfsc	status,2,c
  3018  000D34  EF9E  F006         	goto	u5491
  3019  000D38  EFA0  F006         	goto	u5490
  3020  000D3C                     u5491:
  3021  000D3C  EFA4  F006         	goto	l4304
  3022  000D40                     u5490:
  3023  000D40                     
  3024                           ; BSR set to: 0
  3025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3026  000D40  51AC               	movf	efgtoa@e& (0+255),w,b
  3027  000D42  278E               	addwf	efgtoa@m& (0+255),f,b
  3028  000D44  51AD               	movf	(efgtoa@e+1)& (0+255),w,b
  3029  000D46  238F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3030  000D48                     l4304:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3034  000D48  0E00               	movlw	0
  3035  000D4A  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  3036  000D4C  0E00               	movlw	0
  3037  000D4E  6FA6               	movwf	efgtoa@i& (0+255),b
  3038  000D50                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3041  000D50  C0A8  F09E         	movff	efgtoa@g,efgtoa@h
  3042  000D54  C0A9  F09F         	movff	efgtoa@g+1,efgtoa@h+1
  3043  000D58  C0AA  F0A0         	movff	efgtoa@g+2,efgtoa@h+2
  3044  000D5C  C0AB  F0A1         	movff	efgtoa@g+3,efgtoa@h+3
  3045  000D60                     
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3048  000D60  C0B0  F090         	movff	efgtoa@u,efgtoa@ou
  3049  000D64  C0B1  F091         	movff	efgtoa@u+1,efgtoa@ou+1
  3050  000D68  C0B2  F092         	movff	efgtoa@u+2,efgtoa@ou+2
  3051  000D6C  C0B3  F093         	movff	efgtoa@u+3,efgtoa@ou+3
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3054  000D70  EF35  F007         	goto	l4318
  3055  000D74                     l4310:
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3059  000D74  C09E  F016         	movff	efgtoa@h,___fldiv@b
  3060  000D78  C09F  F017         	movff	efgtoa@h+1,___fldiv@b+1
  3061  000D7C  C0A0  F018         	movff	efgtoa@h+2,___fldiv@b+2
  3062  000D80  C0A1  F019         	movff	efgtoa@h+3,___fldiv@b+3
  3063  000D84  C0B0  F01A         	movff	efgtoa@u,___fldiv@a
  3064  000D88  C0B1  F01B         	movff	efgtoa@u+1,___fldiv@a+1
  3065  000D8C  C0B2  F01C         	movff	efgtoa@u+2,___fldiv@a+2
  3066  000D90  C0B3  F01D         	movff	efgtoa@u+3,___fldiv@a+3
  3067  000D94  EC76  F011         	call	___fldiv	;wreg free
  3068  000D98  C016  F02F         	movff	?___fldiv,floorf@x
  3069  000D9C  C017  F030         	movff	?___fldiv+1,floorf@x+1
  3070  000DA0  C018  F031         	movff	?___fldiv+2,floorf@x+2
  3071  000DA4  C019  F032         	movff	?___fldiv+3,floorf@x+3
  3072  000DA8  EC43  F013         	call	_floorf	;wreg free
  3073  000DAC  C02F  F0A2         	movff	?_floorf,efgtoa@l
  3074  000DB0  C030  F0A3         	movff	?_floorf+1,efgtoa@l+1
  3075  000DB4  C031  F0A4         	movff	?_floorf+2,efgtoa@l+2
  3076  000DB8  C032  F0A5         	movff	?_floorf+3,efgtoa@l+3
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3079  000DBC  C0A2  F016         	movff	efgtoa@l,___fltol@f1
  3080  000DC0  C0A3  F017         	movff	efgtoa@l+1,___fltol@f1+1
  3081  000DC4  C0A4  F018         	movff	efgtoa@l+2,___fltol@f1+2
  3082  000DC8  C0A5  F019         	movff	efgtoa@l+3,___fltol@f1+3
  3083  000DCC  ECA5  F015         	call	___fltol	;wreg free
  3084  000DD0  C016  F094         	movff	?___fltol,efgtoa@d
  3085  000DD4  C017  F095         	movff	?___fltol+1,efgtoa@d+1
  3086  000DD8                     
  3087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3088  000DD8  C09E  F02F         	movff	efgtoa@h,___flsub@b
  3089  000DDC  C09F  F030         	movff	efgtoa@h+1,___flsub@b+1
  3090  000DE0  C0A0  F031         	movff	efgtoa@h+2,___flsub@b+2
  3091  000DE4  C0A1  F032         	movff	efgtoa@h+3,___flsub@b+3
  3092  000DE8  C0B0  F01A         	movff	efgtoa@u,___flmul@a
  3093  000DEC  C0B1  F01B         	movff	efgtoa@u+1,___flmul@a+1
  3094  000DF0  C0B2  F01C         	movff	efgtoa@u+2,___flmul@a+2
  3095  000DF4  C0B3  F01D         	movff	efgtoa@u+3,___flmul@a+3
  3096  000DF8  C0A2  F016         	movff	efgtoa@l,___flmul@b
  3097  000DFC  C0A3  F017         	movff	efgtoa@l+1,___flmul@b+1
  3098  000E00  C0A4  F018         	movff	efgtoa@l+2,___flmul@b+2
  3099  000E04  C0A5  F019         	movff	efgtoa@l+3,___flmul@b+3
  3100  000E08  EC61  F00F         	call	___flmul	;wreg free
  3101  000E0C  C016  F033         	movff	?___flmul,___flsub@a
  3102  000E10  C017  F034         	movff	?___flmul+1,___flsub@a+1
  3103  000E14  C018  F035         	movff	?___flmul+2,___flsub@a+2
  3104  000E18  C019  F036         	movff	?___flmul+3,___flsub@a+3
  3105  000E1C  ECFE  F01C         	call	___flsub	;wreg free
  3106  000E20  C02F  F09E         	movff	?___flsub,efgtoa@h
  3107  000E24  C030  F09F         	movff	?___flsub+1,efgtoa@h+1
  3108  000E28  C031  F0A0         	movff	?___flsub+2,efgtoa@h+2
  3109  000E2C  C032  F0A1         	movff	?___flsub+3,efgtoa@h+3
  3110  000E30                     
  3111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3112  000E30  C0B0  F016         	movff	efgtoa@u,___fldiv@b
  3113  000E34  C0B1  F017         	movff	efgtoa@u+1,___fldiv@b+1
  3114  000E38  C0B2  F018         	movff	efgtoa@u+2,___fldiv@b+2
  3115  000E3C  C0B3  F019         	movff	efgtoa@u+3,___fldiv@b+3
  3116  000E40  0E00               	movlw	0
  3117  000E42  6E1A               	movwf	___fldiv@a^0,c
  3118  000E44  0E00               	movlw	0
  3119  000E46  6E1B               	movwf	(___fldiv@a+1)^0,c
  3120  000E48  0E20               	movlw	32
  3121  000E4A  6E1C               	movwf	(___fldiv@a+2)^0,c
  3122  000E4C  0E41               	movlw	65
  3123  000E4E  6E1D               	movwf	(___fldiv@a+3)^0,c
  3124  000E50  EC76  F011         	call	___fldiv	;wreg free
  3125  000E54  C016  F0B0         	movff	?___fldiv,efgtoa@u
  3126  000E58  C017  F0B1         	movff	?___fldiv+1,efgtoa@u+1
  3127  000E5C  C018  F0B2         	movff	?___fldiv+2,efgtoa@u+2
  3128  000E60  C019  F0B3         	movff	?___fldiv+3,efgtoa@u+3
  3129  000E64                     
  3130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3131  000E64  0100               	movlb	0	; () banked
  3132  000E66  4BA6               	infsnz	efgtoa@i& (0+255),f,b
  3133  000E68  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
  3134  000E6A                     l4318:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3138  000E6A  518E               	movf	efgtoa@m& (0+255),w,b
  3139  000E6C  5DA6               	subwf	efgtoa@i& (0+255),w,b
  3140  000E6E  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  3141  000E70  0A80               	xorlw	128
  3142  000E72  6F77               	movwf	??_efgtoa& (0+255),b
  3143  000E74  518F               	movf	(efgtoa@m+1)& (0+255),w,b
  3144  000E76  0A80               	xorlw	128
  3145  000E78  5977               	subwfb	??_efgtoa& (0+255),w,b
  3146  000E7A  A0D8               	btfss	status,0,c
  3147  000E7C  EF42  F007         	goto	u5501
  3148  000E80  EF44  F007         	goto	u5500
  3149  000E84                     u5501:
  3150  000E84  EFBA  F006         	goto	l4310
  3151  000E88                     u5500:
  3152  000E88                     
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3155  000E88  C0B0  F016         	movff	efgtoa@u,___flmul@b
  3156  000E8C  C0B1  F017         	movff	efgtoa@u+1,___flmul@b+1
  3157  000E90  C0B2  F018         	movff	efgtoa@u+2,___flmul@b+2
  3158  000E94  C0B3  F019         	movff	efgtoa@u+3,___flmul@b+3
  3159  000E98  0E00               	movlw	0
  3160  000E9A  6E1A               	movwf	___flmul@a^0,c
  3161  000E9C  0E00               	movlw	0
  3162  000E9E  6E1B               	movwf	(___flmul@a+1)^0,c
  3163  000EA0  0EA0               	movlw	160
  3164  000EA2  6E1C               	movwf	(___flmul@a+2)^0,c
  3165  000EA4  0E40               	movlw	64
  3166  000EA6  6E1D               	movwf	(___flmul@a+3)^0,c
  3167  000EA8  EC61  F00F         	call	___flmul	;wreg free
  3168  000EAC  C016  F0A2         	movff	?___flmul,efgtoa@l
  3169  000EB0  C017  F0A3         	movff	?___flmul+1,efgtoa@l+1
  3170  000EB4  C018  F0A4         	movff	?___flmul+2,efgtoa@l+2
  3171  000EB8  C019  F0A5         	movff	?___flmul+3,efgtoa@l+3
  3172  000EBC                     
  3173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3174  000EBC  C09E  F02F         	movff	efgtoa@h,___flge@ff1
  3175  000EC0  C09F  F030         	movff	efgtoa@h+1,___flge@ff1+1
  3176  000EC4  C0A0  F031         	movff	efgtoa@h+2,___flge@ff1+2
  3177  000EC8  C0A1  F032         	movff	efgtoa@h+3,___flge@ff1+3
  3178  000ECC  C0A2  F033         	movff	efgtoa@l,___flge@ff2
  3179  000ED0  C0A3  F034         	movff	efgtoa@l+1,___flge@ff2+1
  3180  000ED4  C0A4  F035         	movff	efgtoa@l+2,___flge@ff2+2
  3181  000ED8  C0A5  F036         	movff	efgtoa@l+3,___flge@ff2+3
  3182  000EDC  EC28  F016         	call	___flge	;wreg free
  3183  000EE0  B0D8               	btfsc	status,0,c
  3184  000EE2  EF75  F007         	goto	u5511
  3185  000EE6  EF77  F007         	goto	u5510
  3186  000EEA                     u5511:
  3187  000EEA  EF82  F007         	goto	l4326
  3188  000EEE                     u5510:
  3189  000EEE                     
  3190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3191  000EEE  0E00               	movlw	0
  3192  000EF0  0100               	movlb	0	; () banked
  3193  000EF2  6FA2               	movwf	efgtoa@l& (0+255),b
  3194  000EF4  0E00               	movlw	0
  3195  000EF6  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  3196  000EF8  0E00               	movlw	0
  3197  000EFA  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  3198  000EFC  0E00               	movlw	0
  3199  000EFE  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3202  000F00  EFAB  F007         	goto	l4332
  3203  000F04                     l4326:
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3206  000F04  C09E  F016         	movff	efgtoa@h,___fleq@ff1
  3207  000F08  C09F  F017         	movff	efgtoa@h+1,___fleq@ff1+1
  3208  000F0C  C0A0  F018         	movff	efgtoa@h+2,___fleq@ff1+2
  3209  000F10  C0A1  F019         	movff	efgtoa@h+3,___fleq@ff1+3
  3210  000F14  C0A2  F01A         	movff	efgtoa@l,___fleq@ff2
  3211  000F18  C0A3  F01B         	movff	efgtoa@l+1,___fleq@ff2+1
  3212  000F1C  C0A4  F01C         	movff	efgtoa@l+2,___fleq@ff2+2
  3213  000F20  C0A5  F01D         	movff	efgtoa@l+3,___fleq@ff2+3
  3214  000F24  EC5F  F01A         	call	___fleq	;wreg free
  3215  000F28  A0D8               	btfss	status,0,c
  3216  000F2A  EF99  F007         	goto	u5521
  3217  000F2E  EF9B  F007         	goto	u5520
  3218  000F32                     u5521:
  3219  000F32  EFAB  F007         	goto	l4332
  3220  000F36                     u5520:
  3221  000F36  0100               	movlb	0	; () banked
  3222  000F38  B194               	btfsc	efgtoa@d& (0+255),0,b
  3223  000F3A  EFA1  F007         	goto	u5531
  3224  000F3E  EFA3  F007         	goto	u5530
  3225  000F42                     u5531:
  3226  000F42  EFAB  F007         	goto	l4332
  3227  000F46                     u5530:
  3228  000F46                     
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3231  000F46  0E00               	movlw	0
  3232  000F48  6FA2               	movwf	efgtoa@l& (0+255),b
  3233  000F4A  0E00               	movlw	0
  3234  000F4C  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  3235  000F4E  0E00               	movlw	0
  3236  000F50  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  3237  000F52  0E00               	movlw	0
  3238  000F54  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  3239  000F56                     l4332:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3242  000F56  C0A8  F016         	movff	efgtoa@g,___fladd@b
  3243  000F5A  C0A9  F017         	movff	efgtoa@g+1,___fladd@b+1
  3244  000F5E  C0AA  F018         	movff	efgtoa@g+2,___fladd@b+2
  3245  000F62  C0AB  F019         	movff	efgtoa@g+3,___fladd@b+3
  3246  000F66  C0A2  F01A         	movff	efgtoa@l,___fladd@a
  3247  000F6A  C0A3  F01B         	movff	efgtoa@l+1,___fladd@a+1
  3248  000F6E  C0A4  F01C         	movff	efgtoa@l+2,___fladd@a+2
  3249  000F72  C0A5  F01D         	movff	efgtoa@l+3,___fladd@a+3
  3250  000F76  EC01  F00D         	call	___fladd	;wreg free
  3251  000F7A  C016  F09E         	movff	?___fladd,efgtoa@h
  3252  000F7E  C017  F09F         	movff	?___fladd+1,efgtoa@h+1
  3253  000F82  C018  F0A0         	movff	?___fladd+2,efgtoa@h+2
  3254  000F86  C019  F0A1         	movff	?___fladd+3,efgtoa@h+3
  3255  000F8A                     
  3256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3257  000F8A  C09E  F02F         	movff	efgtoa@h,___flge@ff1
  3258  000F8E  C09F  F030         	movff	efgtoa@h+1,___flge@ff1+1
  3259  000F92  C0A0  F031         	movff	efgtoa@h+2,___flge@ff1+2
  3260  000F96  C0A1  F032         	movff	efgtoa@h+3,___flge@ff1+3
  3261  000F9A  0E00               	movlw	0
  3262  000F9C  6E1A               	movwf	___flmul@a^0,c
  3263  000F9E  0E00               	movlw	0
  3264  000FA0  6E1B               	movwf	(___flmul@a+1)^0,c
  3265  000FA2  0E20               	movlw	32
  3266  000FA4  6E1C               	movwf	(___flmul@a+2)^0,c
  3267  000FA6  0E41               	movlw	65
  3268  000FA8  6E1D               	movwf	(___flmul@a+3)^0,c
  3269  000FAA  C090  F016         	movff	efgtoa@ou,___flmul@b
  3270  000FAE  C091  F017         	movff	efgtoa@ou+1,___flmul@b+1
  3271  000FB2  C092  F018         	movff	efgtoa@ou+2,___flmul@b+2
  3272  000FB6  C093  F019         	movff	efgtoa@ou+3,___flmul@b+3
  3273  000FBA  EC61  F00F         	call	___flmul	;wreg free
  3274  000FBE  C016  F033         	movff	?___flmul,___flge@ff2
  3275  000FC2  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  3276  000FC6  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  3277  000FCA  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  3278  000FCE  EC28  F016         	call	___flge	;wreg free
  3279  000FD2  A0D8               	btfss	status,0,c
  3280  000FD4  EFEE  F007         	goto	u5541
  3281  000FD8  EFF0  F007         	goto	u5540
  3282  000FDC                     u5541:
  3283  000FDC  EF19  F008         	goto	l4344
  3284  000FE0                     u5540:
  3285  000FE0                     
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3287  000FE0  0100               	movlb	0	; () banked
  3288  000FE2  4BAC               	infsnz	efgtoa@e& (0+255),f,b
  3289  000FE4  2BAD               	incf	(efgtoa@e+1)& (0+255),f,b
  3290  000FE6                     
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3293  000FE6  C090  F016         	movff	efgtoa@ou,___flmul@b
  3294  000FEA  C091  F017         	movff	efgtoa@ou+1,___flmul@b+1
  3295  000FEE  C092  F018         	movff	efgtoa@ou+2,___flmul@b+2
  3296  000FF2  C093  F019         	movff	efgtoa@ou+3,___flmul@b+3
  3297  000FF6  0E00               	movlw	0
  3298  000FF8  6E1A               	movwf	___flmul@a^0,c
  3299  000FFA  0E00               	movlw	0
  3300  000FFC  6E1B               	movwf	(___flmul@a+1)^0,c
  3301  000FFE  0E20               	movlw	32
  3302  001000  6E1C               	movwf	(___flmul@a+2)^0,c
  3303  001002  0E41               	movlw	65
  3304  001004  6E1D               	movwf	(___flmul@a+3)^0,c
  3305  001006  EC61  F00F         	call	___flmul	;wreg free
  3306  00100A  C016  F090         	movff	?___flmul,efgtoa@ou
  3307  00100E  C017  F091         	movff	?___flmul+1,efgtoa@ou+1
  3308  001012  C018  F092         	movff	?___flmul+2,efgtoa@ou+2
  3309  001016  C019  F093         	movff	?___flmul+3,efgtoa@ou+3
  3310  00101A                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3312  00101A  0E66               	movlw	102
  3313  00101C  0100               	movlb	0	; () banked
  3314  00101E  199C               	xorwf	efgtoa@nmode& (0+255),w,b
  3315  001020  A4D8               	btfss	status,2,c
  3316  001022  EF15  F008         	goto	u5551
  3317  001026  EF17  F008         	goto	u5550
  3318  00102A                     u5551:
  3319  00102A  EF19  F008         	goto	l4344
  3320  00102E                     u5550:
  3321  00102E                     
  3322                           ; BSR set to: 0
  3323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3324  00102E  4B8E               	infsnz	efgtoa@m& (0+255),f,b
  3325  001030  2B8F               	incf	(efgtoa@m+1)& (0+255),f,b
  3326  001032                     l4344:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3329  001032  C090  F0B0         	movff	efgtoa@ou,efgtoa@u
  3330  001036  C091  F0B1         	movff	efgtoa@ou+1,efgtoa@u+1
  3331  00103A  C092  F0B2         	movff	efgtoa@ou+2,efgtoa@u+2
  3332  00103E  C093  F0B3         	movff	efgtoa@ou+3,efgtoa@u+3
  3333  001042                     
  3334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3335  001042  0E65               	movlw	101
  3336  001044  0100               	movlb	0	; () banked
  3337  001046  199C               	xorwf	efgtoa@nmode& (0+255),w,b
  3338  001048  B4D8               	btfsc	status,2,c
  3339  00104A  EF29  F008         	goto	u5561
  3340  00104E  EF2B  F008         	goto	u5560
  3341  001052                     u5561:
  3342  001052  EF31  F008         	goto	l4350
  3343  001056                     u5560:
  3344  001056                     
  3345                           ; BSR set to: 0
  3346  001056  C0AC  F08C         	movff	efgtoa@e,efgtoa@ne
  3347  00105A  C0AD  F08D         	movff	efgtoa@e+1,efgtoa@ne+1
  3348  00105E  EF35  F008         	goto	l884
  3349  001062                     l4350:
  3350                           
  3351                           ; BSR set to: 0
  3352  001062  0E00               	movlw	0
  3353  001064  6F8D               	movwf	(efgtoa@ne+1)& (0+255),b
  3354  001066  0E00               	movlw	0
  3355  001068  6F8C               	movwf	efgtoa@ne& (0+255),b
  3356  00106A                     l884:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3360  00106A  0E00               	movlw	0
  3361  00106C  6F8B               	movwf	(efgtoa@pp+1)& (0+255),b
  3362  00106E  0E00               	movlw	0
  3363  001070  6F8A               	movwf	efgtoa@pp& (0+255),b
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3366  001072  0E00               	movlw	0
  3367  001074  6F89               	movwf	(efgtoa@t+1)& (0+255),b
  3368  001076  0E00               	movlw	0
  3369  001078  6F88               	movwf	efgtoa@t& (0+255),b
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3372  00107A  0E00               	movlw	0
  3373  00107C  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  3374  00107E  0E00               	movlw	0
  3375  001080  6FA6               	movwf	efgtoa@i& (0+255),b
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3378  001082  EF31  F009         	goto	l4400
  3379  001086                     l4352:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3383  001086  C09E  F016         	movff	efgtoa@h,___fldiv@b
  3384  00108A  C09F  F017         	movff	efgtoa@h+1,___fldiv@b+1
  3385  00108E  C0A0  F018         	movff	efgtoa@h+2,___fldiv@b+2
  3386  001092  C0A1  F019         	movff	efgtoa@h+3,___fldiv@b+3
  3387  001096  C0B0  F01A         	movff	efgtoa@u,___fldiv@a
  3388  00109A  C0B1  F01B         	movff	efgtoa@u+1,___fldiv@a+1
  3389  00109E  C0B2  F01C         	movff	efgtoa@u+2,___fldiv@a+2
  3390  0010A2  C0B3  F01D         	movff	efgtoa@u+3,___fldiv@a+3
  3391  0010A6  EC76  F011         	call	___fldiv	;wreg free
  3392  0010AA  C016  F02F         	movff	?___fldiv,floorf@x
  3393  0010AE  C017  F030         	movff	?___fldiv+1,floorf@x+1
  3394  0010B2  C018  F031         	movff	?___fldiv+2,floorf@x+2
  3395  0010B6  C019  F032         	movff	?___fldiv+3,floorf@x+3
  3396  0010BA  EC43  F013         	call	_floorf	;wreg free
  3397  0010BE  C02F  F0A2         	movff	?_floorf,efgtoa@l
  3398  0010C2  C030  F0A3         	movff	?_floorf+1,efgtoa@l+1
  3399  0010C6  C031  F0A4         	movff	?_floorf+2,efgtoa@l+2
  3400  0010CA  C032  F0A5         	movff	?_floorf+3,efgtoa@l+3
  3401                           
  3402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3403  0010CE  C0A2  F016         	movff	efgtoa@l,___fltol@f1
  3404  0010D2  C0A3  F017         	movff	efgtoa@l+1,___fltol@f1+1
  3405  0010D6  C0A4  F018         	movff	efgtoa@l+2,___fltol@f1+2
  3406  0010DA  C0A5  F019         	movff	efgtoa@l+3,___fltol@f1+3
  3407  0010DE  ECA5  F015         	call	___fltol	;wreg free
  3408  0010E2  C016  F094         	movff	?___fltol,efgtoa@d
  3409  0010E6  C017  F095         	movff	?___fltol+1,efgtoa@d+1
  3410  0010EA                     
  3411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3412  0010EA  B847               	btfsc	_flags^0,4,c
  3413  0010EC  EF7A  F008         	goto	u5571
  3414  0010F0  EF7C  F008         	goto	u5570
  3415  0010F4                     u5571:
  3416  0010F4  EF9A  F008         	goto	l4364
  3417  0010F8                     u5570:
  3418  0010F8  0100               	movlb	0	; () banked
  3419  0010FA  5194               	movf	efgtoa@d& (0+255),w,b
  3420  0010FC  1195               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3421  0010FE  A4D8               	btfss	status,2,c
  3422  001100  EF84  F008         	goto	u5581
  3423  001104  EF86  F008         	goto	u5580
  3424  001108                     u5581:
  3425  001108  EF9A  F008         	goto	l4364
  3426  00110C                     u5580:
  3427  00110C                     
  3428                           ; BSR set to: 0
  3429  00110C  0E67               	movlw	103
  3430  00110E  199D               	xorwf	efgtoa@mode& (0+255),w,b
  3431  001110  A4D8               	btfss	status,2,c
  3432  001112  EF8D  F008         	goto	u5591
  3433  001116  EF8F  F008         	goto	u5590
  3434  00111A                     u5591:
  3435  00111A  EF9A  F008         	goto	l4364
  3436  00111E                     u5590:
  3437  00111E                     
  3438                           ; BSR set to: 0
  3439  00111E  BF8D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3440  001120  EF96  F008         	goto	u5600
  3441  001124  EF94  F008         	goto	u5601
  3442  001128                     u5601:
  3443  001128  EF9A  F008         	goto	l4364
  3444  00112C                     u5600:
  3445  00112C                     
  3446                           ; BSR set to: 0
  3447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3448  00112C  4B88               	infsnz	efgtoa@t& (0+255),f,b
  3449  00112E  2B89               	incf	(efgtoa@t+1)& (0+255),f,b
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3452  001130  EFE5  F008         	goto	l4392
  3453  001134                     l4364:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3456  001134  0100               	movlb	0	; () banked
  3457  001136  518A               	movf	efgtoa@pp& (0+255),w,b
  3458  001138  118B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3459  00113A  A4D8               	btfss	status,2,c
  3460  00113C  EFA2  F008         	goto	u5611
  3461  001140  EFA4  F008         	goto	u5610
  3462  001144                     u5611:
  3463  001144  EFCE  F008         	goto	l4384
  3464  001148                     u5610:
  3465  001148                     
  3466                           ; BSR set to: 0
  3467  001148  BF8D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3468  00114A  EFAB  F008         	goto	u5620
  3469  00114E  EFA9  F008         	goto	u5621
  3470  001152                     u5621:
  3471  001152  EFCE  F008         	goto	l4384
  3472  001156                     u5620:
  3473  001156                     
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3476  001156  0E00               	movlw	low _dbuf
  3477  001158  25AE               	addwf	efgtoa@n& (0+255),w,b
  3478  00115A  6ED9               	movwf	fsr2l,c
  3479  00115C  0E01               	movlw	high _dbuf
  3480  00115E  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3481  001160  6EDA               	movwf	fsr2h,c
  3482  001162  0E2E               	movlw	46
  3483  001164  6EDF               	movwf	indf2,c
  3484  001166                     
  3485                           ; BSR set to: 0
  3486  001166  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  3487  001168  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  3488  00116A                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3491  00116A  079A               	decf	efgtoa@w& (0+255),f,b
  3492  00116C  A0D8               	btfss	status,0,c
  3493  00116E  079B               	decf	(efgtoa@w+1)& (0+255),f,b
  3494  001170                     
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3497  001170  0E00               	movlw	0
  3498  001172  6F8B               	movwf	(efgtoa@pp+1)& (0+255),b
  3499  001174  0E01               	movlw	1
  3500  001176  6F8A               	movwf	efgtoa@pp& (0+255),b
  3501  001178  EFCE  F008         	goto	l4384
  3502  00117C                     l4376:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3506  00117C  0E00               	movlw	low _dbuf
  3507  00117E  25AE               	addwf	efgtoa@n& (0+255),w,b
  3508  001180  6ED9               	movwf	fsr2l,c
  3509  001182  0E01               	movlw	high _dbuf
  3510  001184  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3511  001186  6EDA               	movwf	fsr2h,c
  3512  001188  0E30               	movlw	48
  3513  00118A  6EDF               	movwf	indf2,c
  3514  00118C                     
  3515                           ; BSR set to: 0
  3516  00118C  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  3517  00118E  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  3518  001190                     
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3521  001190  079A               	decf	efgtoa@w& (0+255),f,b
  3522  001192  A0D8               	btfss	status,0,c
  3523  001194  079B               	decf	(efgtoa@w+1)& (0+255),f,b
  3524  001196                     
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3527  001196  0788               	decf	efgtoa@t& (0+255),f,b
  3528  001198  A0D8               	btfss	status,0,c
  3529  00119A  0789               	decf	(efgtoa@t+1)& (0+255),f,b
  3530  00119C                     l4384:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3534  00119C  5188               	movf	efgtoa@t& (0+255),w,b
  3535  00119E  1189               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3536  0011A0  A4D8               	btfss	status,2,c
  3537  0011A2  EFD5  F008         	goto	u5631
  3538  0011A6  EFD7  F008         	goto	u5630
  3539  0011AA                     u5631:
  3540  0011AA  EFBE  F008         	goto	l4376
  3541  0011AE                     u5630:
  3542  0011AE                     
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3545  0011AE  0E00               	movlw	low _dbuf
  3546  0011B0  25AE               	addwf	efgtoa@n& (0+255),w,b
  3547  0011B2  6ED9               	movwf	fsr2l,c
  3548  0011B4  0E01               	movlw	high _dbuf
  3549  0011B6  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3550  0011B8  6EDA               	movwf	fsr2h,c
  3551  0011BA  5194               	movf	efgtoa@d& (0+255),w,b
  3552  0011BC  0F30               	addlw	48
  3553  0011BE  6EDF               	movwf	indf2,c
  3554  0011C0                     
  3555                           ; BSR set to: 0
  3556  0011C0  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  3557  0011C2  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  3558  0011C4                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3561  0011C4  079A               	decf	efgtoa@w& (0+255),f,b
  3562  0011C6  A0D8               	btfss	status,0,c
  3563  0011C8  079B               	decf	(efgtoa@w+1)& (0+255),f,b
  3564  0011CA                     l4392:
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3568  0011CA  C09E  F02F         	movff	efgtoa@h,___flsub@b
  3569  0011CE  C09F  F030         	movff	efgtoa@h+1,___flsub@b+1
  3570  0011D2  C0A0  F031         	movff	efgtoa@h+2,___flsub@b+2
  3571  0011D6  C0A1  F032         	movff	efgtoa@h+3,___flsub@b+3
  3572  0011DA  C0B0  F01A         	movff	efgtoa@u,___flmul@a
  3573  0011DE  C0B1  F01B         	movff	efgtoa@u+1,___flmul@a+1
  3574  0011E2  C0B2  F01C         	movff	efgtoa@u+2,___flmul@a+2
  3575  0011E6  C0B3  F01D         	movff	efgtoa@u+3,___flmul@a+3
  3576  0011EA  C0A2  F016         	movff	efgtoa@l,___flmul@b
  3577  0011EE  C0A3  F017         	movff	efgtoa@l+1,___flmul@b+1
  3578  0011F2  C0A4  F018         	movff	efgtoa@l+2,___flmul@b+2
  3579  0011F6  C0A5  F019         	movff	efgtoa@l+3,___flmul@b+3
  3580  0011FA  EC61  F00F         	call	___flmul	;wreg free
  3581  0011FE  C016  F033         	movff	?___flmul,___flsub@a
  3582  001202  C017  F034         	movff	?___flmul+1,___flsub@a+1
  3583  001206  C018  F035         	movff	?___flmul+2,___flsub@a+2
  3584  00120A  C019  F036         	movff	?___flmul+3,___flsub@a+3
  3585  00120E  ECFE  F01C         	call	___flsub	;wreg free
  3586  001212  C02F  F09E         	movff	?___flsub,efgtoa@h
  3587  001216  C030  F09F         	movff	?___flsub+1,efgtoa@h+1
  3588  00121A  C031  F0A0         	movff	?___flsub+2,efgtoa@h+2
  3589  00121E  C032  F0A1         	movff	?___flsub+3,efgtoa@h+3
  3590  001222                     
  3591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3592  001222  C0B0  F016         	movff	efgtoa@u,___fldiv@b
  3593  001226  C0B1  F017         	movff	efgtoa@u+1,___fldiv@b+1
  3594  00122A  C0B2  F018         	movff	efgtoa@u+2,___fldiv@b+2
  3595  00122E  C0B3  F019         	movff	efgtoa@u+3,___fldiv@b+3
  3596  001232  0E00               	movlw	0
  3597  001234  6E1A               	movwf	___fldiv@a^0,c
  3598  001236  0E00               	movlw	0
  3599  001238  6E1B               	movwf	(___fldiv@a+1)^0,c
  3600  00123A  0E20               	movlw	32
  3601  00123C  6E1C               	movwf	(___fldiv@a+2)^0,c
  3602  00123E  0E41               	movlw	65
  3603  001240  6E1D               	movwf	(___fldiv@a+3)^0,c
  3604  001242  EC76  F011         	call	___fldiv	;wreg free
  3605  001246  C016  F0B0         	movff	?___fldiv,efgtoa@u
  3606  00124A  C017  F0B1         	movff	?___fldiv+1,efgtoa@u+1
  3607  00124E  C018  F0B2         	movff	?___fldiv+2,efgtoa@u+2
  3608  001252  C019  F0B3         	movff	?___fldiv+3,efgtoa@u+3
  3609  001256                     
  3610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3611  001256  0100               	movlb	0	; () banked
  3612  001258  078C               	decf	efgtoa@ne& (0+255),f,b
  3613  00125A  A0D8               	btfss	status,0,c
  3614  00125C  078D               	decf	(efgtoa@ne+1)& (0+255),f,b
  3615  00125E                     
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3618  00125E  4BA6               	infsnz	efgtoa@i& (0+255),f,b
  3619  001260  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
  3620  001262                     l4400:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3624  001262  518E               	movf	efgtoa@m& (0+255),w,b
  3625  001264  5DA6               	subwf	efgtoa@i& (0+255),w,b
  3626  001266  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  3627  001268  0A80               	xorlw	128
  3628  00126A  6F77               	movwf	??_efgtoa& (0+255),b
  3629  00126C  518F               	movf	(efgtoa@m+1)& (0+255),w,b
  3630  00126E  0A80               	xorlw	128
  3631  001270  5977               	subwfb	??_efgtoa& (0+255),w,b
  3632  001272  B0D8               	btfsc	status,0,c
  3633  001274  EF3E  F009         	goto	u5641
  3634  001278  EF40  F009         	goto	u5640
  3635  00127C                     u5641:
  3636  00127C  EF4E  F009         	goto	l4404
  3637  001280                     u5640:
  3638  001280                     
  3639                           ; BSR set to: 0
  3640  001280  BFAF               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3641  001282  EF4C  F009         	goto	u5651
  3642  001286  51AF               	movf	(efgtoa@n+1)& (0+255),w,b
  3643  001288  E109               	bnz	u5650
  3644  00128A  0E4B               	movlw	75
  3645  00128C  5DAE               	subwf	efgtoa@n& (0+255),w,b
  3646  00128E  A0D8               	btfss	status,0,c
  3647  001290  EF4C  F009         	goto	u5651
  3648  001294  EF4E  F009         	goto	u5650
  3649  001298                     u5651:
  3650  001298  EF43  F008         	goto	l4352
  3651  00129C                     u5650:
  3652  00129C                     l4404:
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3656  00129C  518A               	movf	efgtoa@pp& (0+255),w,b
  3657  00129E  118B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3658  0012A0  A4D8               	btfss	status,2,c
  3659  0012A2  EF55  F009         	goto	u5661
  3660  0012A6  EF57  F009         	goto	u5660
  3661  0012AA                     u5661:
  3662  0012AA  EF68  F009         	goto	l4412
  3663  0012AE                     u5660:
  3664  0012AE                     
  3665                           ; BSR set to: 0
  3666  0012AE  A847               	btfss	_flags^0,4,c
  3667  0012B0  EF5C  F009         	goto	u5671
  3668  0012B4  EF5E  F009         	goto	u5670
  3669  0012B8                     u5671:
  3670  0012B8  EF68  F009         	goto	l4412
  3671  0012BC                     u5670:
  3672  0012BC                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3675  0012BC  0E00               	movlw	low _dbuf
  3676  0012BE  25AE               	addwf	efgtoa@n& (0+255),w,b
  3677  0012C0  6ED9               	movwf	fsr2l,c
  3678  0012C2  0E01               	movlw	high _dbuf
  3679  0012C4  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3680  0012C6  6EDA               	movwf	fsr2h,c
  3681  0012C8  0E2E               	movlw	46
  3682  0012CA  6EDF               	movwf	indf2,c
  3683  0012CC                     
  3684                           ; BSR set to: 0
  3685  0012CC  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  3686  0012CE  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  3687  0012D0                     l4412:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3691  0012D0  0E00               	movlw	low _dbuf
  3692  0012D2  25AE               	addwf	efgtoa@n& (0+255),w,b
  3693  0012D4  6ED9               	movwf	fsr2l,c
  3694  0012D6  0E01               	movlw	high _dbuf
  3695  0012D8  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3696  0012DA  6EDA               	movwf	fsr2h,c
  3697  0012DC  0E00               	movlw	0
  3698  0012DE  6EDF               	movwf	indf2,c
  3699  0012E0                     
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3702  0012E0  0E65               	movlw	101
  3703  0012E2  199C               	xorwf	efgtoa@nmode& (0+255),w,b
  3704  0012E4  A4D8               	btfss	status,2,c
  3705  0012E6  EF77  F009         	goto	u5681
  3706  0012EA  EF79  F009         	goto	u5680
  3707  0012EE                     u5681:
  3708  0012EE  EFD2  F004         	goto	l4214
  3709  0012F2                     u5680:
  3710  0012F2                     
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3713  0012F2  0E00               	movlw	0
  3714  0012F4  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  3715  0012F6  0E4F               	movlw	79
  3716  0012F8  6FA6               	movwf	efgtoa@i& (0+255),b
  3717  0012FA                     
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3720  0012FA  0E00               	movlw	low _dbuf
  3721  0012FC  25A6               	addwf	efgtoa@i& (0+255),w,b
  3722  0012FE  6ED9               	movwf	fsr2l,c
  3723  001300  0E01               	movlw	high _dbuf
  3724  001302  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3725  001304  6EDA               	movwf	fsr2h,c
  3726  001306  0E00               	movlw	0
  3727  001308  6EDF               	movwf	indf2,c
  3728  00130A                     
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3731  00130A  0E00               	movlw	0
  3732  00130C  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  3733  00130E  0E00               	movlw	0
  3734  001310  6F96               	movwf	efgtoa@sign& (0+255),b
  3735  001312                     
  3736                           ; BSR set to: 0
  3737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3738  001312  BFAD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3739  001314  EF90  F009         	goto	u5690
  3740  001318  EF8E  F009         	goto	u5691
  3741  00131C                     u5691:
  3742  00131C  EF98  F009         	goto	l4428
  3743  001320                     u5690:
  3744  001320                     
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3747  001320  0E00               	movlw	0
  3748  001322  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  3749  001324  0E01               	movlw	1
  3750  001326  6F96               	movwf	efgtoa@sign& (0+255),b
  3751  001328                     
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3754  001328  6DAC               	negf	efgtoa@e& (0+255),b
  3755  00132A  1FAD               	comf	(efgtoa@e+1)& (0+255),f,b
  3756  00132C  B0D8               	btfsc	status,0,c
  3757  00132E  2BAD               	incf	(efgtoa@e+1)& (0+255),f,b
  3758  001330                     l4428:
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3762  001330  0E00               	movlw	0
  3763  001332  6F99               	movwf	(efgtoa@p+1)& (0+255),b
  3764  001334  0E02               	movlw	2
  3765  001336  6F98               	movwf	efgtoa@p& (0+255),b
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3768  001338  EFC9  F009         	goto	l4440
  3769  00133C                     l4430:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3773  00133C  07A6               	decf	efgtoa@i& (0+255),f,b
  3774  00133E  A0D8               	btfss	status,0,c
  3775  001340  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
  3776  001342                     
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3779  001342  0E00               	movlw	low _dbuf
  3780  001344  25A6               	addwf	efgtoa@i& (0+255),w,b
  3781  001346  6ED9               	movwf	fsr2l,c
  3782  001348  0E01               	movlw	high _dbuf
  3783  00134A  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3784  00134C  6EDA               	movwf	fsr2h,c
  3785  00134E  C0AC  F016         	movff	efgtoa@e,___awmod@dividend
  3786  001352  C0AD  F017         	movff	efgtoa@e+1,___awmod@dividend+1
  3787  001356  0E00               	movlw	0
  3788  001358  6E19               	movwf	(___awmod@divisor+1)^0,c
  3789  00135A  0E0A               	movlw	10
  3790  00135C  6E18               	movwf	___awmod@divisor^0,c
  3791  00135E  EC07  F01A         	call	___awmod	;wreg free
  3792  001362  5016               	movf	?___awmod^0,w,c
  3793  001364  0F30               	addlw	48
  3794  001366  6EDF               	movwf	indf2,c
  3795  001368                     
  3796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3797  001368  C0AC  F016         	movff	efgtoa@e,___awdiv@dividend
  3798  00136C  C0AD  F017         	movff	efgtoa@e+1,___awdiv@dividend+1
  3799  001370  0E00               	movlw	0
  3800  001372  6E19               	movwf	(___awdiv@divisor+1)^0,c
  3801  001374  0E0A               	movlw	10
  3802  001376  6E18               	movwf	___awdiv@divisor^0,c
  3803  001378  ECEB  F018         	call	___awdiv	;wreg free
  3804  00137C  C016  F0AC         	movff	?___awdiv,efgtoa@e
  3805  001380  C017  F0AD         	movff	?___awdiv+1,efgtoa@e+1
  3806  001384                     
  3807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3808  001384  0100               	movlb	0	; () banked
  3809  001386  0798               	decf	efgtoa@p& (0+255),f,b
  3810  001388  A0D8               	btfss	status,0,c
  3811  00138A  0799               	decf	(efgtoa@p+1)& (0+255),f,b
  3812  00138C                     
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3815  00138C  079A               	decf	efgtoa@w& (0+255),f,b
  3816  00138E  A0D8               	btfss	status,0,c
  3817  001390  079B               	decf	(efgtoa@w+1)& (0+255),f,b
  3818  001392                     l4440:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3822  001392  51AC               	movf	efgtoa@e& (0+255),w,b
  3823  001394  11AD               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3824  001396  A4D8               	btfss	status,2,c
  3825  001398  EFD0  F009         	goto	u5701
  3826  00139C  EFD2  F009         	goto	u5700
  3827  0013A0                     u5701:
  3828  0013A0  EF9E  F009         	goto	l4430
  3829  0013A4                     u5700:
  3830  0013A4                     
  3831                           ; BSR set to: 0
  3832  0013A4  BF99               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3833  0013A6  EFDF  F009         	goto	u5710
  3834  0013AA  5199               	movf	(efgtoa@p+1)& (0+255),w,b
  3835  0013AC  E106               	bnz	u5711
  3836  0013AE  0598               	decf	efgtoa@p& (0+255),w,b
  3837  0013B0  B0D8               	btfsc	status,0,c
  3838  0013B2  EFDD  F009         	goto	u5711
  3839  0013B6  EFDF  F009         	goto	u5710
  3840  0013BA                     u5711:
  3841  0013BA  EF9E  F009         	goto	l4430
  3842  0013BE                     u5710:
  3843  0013BE                     
  3844                           ; BSR set to: 0
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  3846  0013BE  07A6               	decf	efgtoa@i& (0+255),f,b
  3847  0013C0  A0D8               	btfss	status,0,c
  3848  0013C2  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
  3849  0013C4                     
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3852  0013C4  5196               	movf	efgtoa@sign& (0+255),w,b
  3853  0013C6  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3854  0013C8  A4D8               	btfss	status,2,c
  3855  0013CA  EFE9  F009         	goto	u5721
  3856  0013CE  EFEB  F009         	goto	u5720
  3857  0013D2                     u5721:
  3858  0013D2  EFF1  F009         	goto	l4450
  3859  0013D6                     u5720:
  3860  0013D6                     
  3861                           ; BSR set to: 0
  3862  0013D6  0E00               	movlw	0
  3863  0013D8  6F83               	movwf	(_efgtoa$954+1)& (0+255),b
  3864  0013DA  0E2B               	movlw	43
  3865  0013DC  6F82               	movwf	_efgtoa$954& (0+255),b
  3866  0013DE  EFF5  F009         	goto	l4452
  3867  0013E2                     l4450:
  3868                           
  3869                           ; BSR set to: 0
  3870  0013E2  0E00               	movlw	0
  3871  0013E4  6F83               	movwf	(_efgtoa$954+1)& (0+255),b
  3872  0013E6  0E2D               	movlw	45
  3873  0013E8  6F82               	movwf	_efgtoa$954& (0+255),b
  3874  0013EA                     l4452:
  3875                           
  3876                           ; BSR set to: 0
  3877  0013EA  0E00               	movlw	low _dbuf
  3878  0013EC  25A6               	addwf	efgtoa@i& (0+255),w,b
  3879  0013EE  6ED9               	movwf	fsr2l,c
  3880  0013F0  0E01               	movlw	high _dbuf
  3881  0013F2  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3882  0013F4  6EDA               	movwf	fsr2h,c
  3883  0013F6  C082  FFDF         	movff	_efgtoa$954,indf2
  3884  0013FA                     
  3885                           ; BSR set to: 0
  3886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  3887  0013FA  079A               	decf	efgtoa@w& (0+255),f,b
  3888  0013FC  A0D8               	btfss	status,0,c
  3889  0013FE  079B               	decf	(efgtoa@w+1)& (0+255),f,b
  3890  001400                     
  3891                           ; BSR set to: 0
  3892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3893  001400  07A6               	decf	efgtoa@i& (0+255),f,b
  3894  001402  A0D8               	btfss	status,0,c
  3895  001404  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
  3896  001406                     
  3897                           ; BSR set to: 0
  3898  001406  0EBF               	movlw	191
  3899  001408  6F77               	movwf	??_efgtoa& (0+255),b
  3900  00140A  0EFF               	movlw	255
  3901  00140C  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  3902  00140E  5176               	movf	efgtoa@c& (0+255),w,b
  3903  001410  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  3904  001412  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  3905  001414  5177               	movf	??_efgtoa& (0+255),w,b
  3906  001416  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  3907  001418  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  3908  00141A  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3909  00141C  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  3910  00141E  E10A               	bnz	u5730
  3911  001420  0E1A               	movlw	26
  3912  001422  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  3913  001424  A0D8               	btfss	status,0,c
  3914  001426  EF17  F00A         	goto	u5731
  3915  00142A  EF1A  F00A         	goto	u5730
  3916  00142E                     u5731:
  3917  00142E  0E01               	movlw	1
  3918  001430  EF1B  F00A         	goto	u5740
  3919  001434                     u5730:
  3920  001434  0E00               	movlw	0
  3921  001436                     u5740:
  3922  001436  6F86               	movwf	_efgtoa$956& (0+255),b
  3923  001438  6B87               	clrf	(_efgtoa$956+1)& (0+255),b
  3924  00143A                     
  3925                           ; BSR set to: 0
  3926  00143A  5186               	movf	_efgtoa$956& (0+255),w,b
  3927  00143C  1187               	iorwf	(_efgtoa$956+1)& (0+255),w,b
  3928  00143E  A4D8               	btfss	status,2,c
  3929  001440  EF24  F00A         	goto	u5751
  3930  001444  EF26  F00A         	goto	u5750
  3931  001448                     u5751:
  3932  001448  EF2C  F00A         	goto	l4466
  3933  00144C                     u5750:
  3934  00144C                     
  3935                           ; BSR set to: 0
  3936  00144C  0E00               	movlw	0
  3937  00144E  6F85               	movwf	(_efgtoa$955+1)& (0+255),b
  3938  001450  0E65               	movlw	101
  3939  001452  6F84               	movwf	_efgtoa$955& (0+255),b
  3940  001454  EF30  F00A         	goto	l4468
  3941  001458                     l4466:
  3942                           
  3943                           ; BSR set to: 0
  3944  001458  0E00               	movlw	0
  3945  00145A  6F85               	movwf	(_efgtoa$955+1)& (0+255),b
  3946  00145C  0E45               	movlw	69
  3947  00145E  6F84               	movwf	_efgtoa$955& (0+255),b
  3948  001460                     l4468:
  3949                           
  3950                           ; BSR set to: 0
  3951  001460  0E00               	movlw	low _dbuf
  3952  001462  25A6               	addwf	efgtoa@i& (0+255),w,b
  3953  001464  6ED9               	movwf	fsr2l,c
  3954  001466  0E01               	movlw	high _dbuf
  3955  001468  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3956  00146A  6EDA               	movwf	fsr2h,c
  3957  00146C  C084  FFDF         	movff	_efgtoa$955,indf2
  3958  001470                     
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  3961  001470  079A               	decf	efgtoa@w& (0+255),f,b
  3962  001472  A0D8               	btfss	status,0,c
  3963  001474  079B               	decf	(efgtoa@w+1)& (0+255),f,b
  3964  001476                     
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3967  001476  0E00               	movlw	low _dbuf
  3968  001478  25AE               	addwf	efgtoa@n& (0+255),w,b
  3969  00147A  6E16               	movwf	strcpy@dest^0,c
  3970  00147C  0E01               	movlw	high _dbuf
  3971  00147E  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3972  001480  6E17               	movwf	(strcpy@dest+1)^0,c
  3973  001482  0E00               	movlw	low _dbuf
  3974  001484  25A6               	addwf	efgtoa@i& (0+255),w,b
  3975  001486  6E18               	movwf	strcpy@src^0,c
  3976  001488  0E01               	movlw	high _dbuf
  3977  00148A  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3978  00148C  6E19               	movwf	(strcpy@src+1)^0,c
  3979  00148E  EC07  F01C         	call	_strcpy	;wreg free
  3980  001492  EFD2  F004         	goto	l4214
  3981  001496                     l838:
  3982  001496  0012               	return		;funcret
  3983  001498                     __end_of_efgtoa:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function _tolower *****************
  3987 ;; Defined at:
  3988 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  c               2   27[COMRAM] int 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  2   27[COMRAM] int 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4002 ;;      Params:         2       0       0       0       0       0       0       0       0
  4003 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4004 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4005 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4006 ;;Total ram usage:        8 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 5
  4009 ;; This function calls:
  4010 ;;		_isupper
  4011 ;; This function is called by:
  4012 ;;		_efgtoa
  4013 ;;		_vfpfcnvrt
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text6
  4018  0037AE                     __ptext6:
  4019                           	callstack 0
  4020  0037AE                     _tolower:
  4021                           	callstack 22
  4022  0037AE  0EBF               	movlw	191
  4023  0037B0  6E1E               	movwf	??_tolower^0,c
  4024  0037B2  0EFF               	movlw	255
  4025  0037B4  6E1F               	movwf	(??_tolower+1)^0,c
  4026  0037B6  C01C  F020         	movff	tolower@c,??_tolower+2
  4027  0037BA  C01D  F021         	movff	tolower@c+1,??_tolower+3
  4028  0037BE  501E               	movf	??_tolower^0,w,c
  4029  0037C0  2620               	addwf	(??_tolower+2)^0,f,c
  4030  0037C2  501F               	movf	(??_tolower+1)^0,w,c
  4031  0037C4  2221               	addwfc	(??_tolower+3)^0,f,c
  4032  0037C6  5021               	movf	(??_tolower+3)^0,w,c
  4033  0037C8  E10A               	bnz	u3850
  4034  0037CA  0E1A               	movlw	26
  4035  0037CC  5C20               	subwf	(??_tolower+2)^0,w,c
  4036  0037CE  A0D8               	btfss	status,0,c
  4037  0037D0  EFEC  F01B         	goto	u3851
  4038  0037D4  EFEF  F01B         	goto	u3850
  4039  0037D8                     u3851:
  4040  0037D8  0E01               	movlw	1
  4041  0037DA  EFF0  F01B         	goto	u3860
  4042  0037DE                     u3850:
  4043  0037DE  0E00               	movlw	0
  4044  0037E0                     u3860:
  4045  0037E0  6E22               	movwf	_tolower$1104^0,c
  4046  0037E2  6A23               	clrf	(_tolower$1104+1)^0,c
  4047  0037E4  5022               	movf	_tolower$1104^0,w,c
  4048  0037E6  1023               	iorwf	(_tolower$1104+1)^0,w,c
  4049  0037E8  B4D8               	btfsc	status,2,c
  4050  0037EA  EFF9  F01B         	goto	u3871
  4051  0037EE  EFFB  F01B         	goto	u3870
  4052  0037F2                     u3871:
  4053  0037F2  EF02  F01C         	goto	l1078
  4054  0037F6                     u3870:
  4055  0037F6  0E20               	movlw	32
  4056  0037F8  101C               	iorwf	tolower@c^0,w,c
  4057  0037FA  6E1C               	movwf	?_tolower^0,c
  4058  0037FC  501D               	movf	(tolower@c+1)^0,w,c
  4059  0037FE  6E1D               	movwf	(?_tolower+1)^0,c
  4060  003800  EF06  F01C         	goto	l1083
  4061  003804                     l1078:
  4062  003804  C01C  F01C         	movff	tolower@c,?_tolower
  4063  003808  C01D  F01D         	movff	tolower@c+1,?_tolower+1
  4064  00380C                     l1083:
  4065  00380C  0012               	return		;funcret
  4066  00380E                     __end_of_tolower:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _isupper *****************
  4070 ;; Defined at:
  4071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  c               2   21[COMRAM] int 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2   21[COMRAM] int 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4085 ;;      Params:         2       0       0       0       0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4087 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4088 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4089 ;;Total ram usage:        6 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 4
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_efgtoa
  4096 ;;		_vfpfcnvrt
  4097 ;;		_tolower
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text7
  4102  003A86                     __ptext7:
  4103                           	callstack 0
  4104  003A86                     _isupper:
  4105                           	callstack 22
  4106  003A86  0EBF               	movlw	191
  4107  003A88  6E18               	movwf	??_isupper^0,c
  4108  003A8A  0EFF               	movlw	255
  4109  003A8C  6E19               	movwf	(??_isupper+1)^0,c
  4110  003A8E  C016  F01A         	movff	isupper@c,??_isupper+2
  4111  003A92  C017  F01B         	movff	isupper@c+1,??_isupper+3
  4112  003A96  5018               	movf	??_isupper^0,w,c
  4113  003A98  261A               	addwf	(??_isupper+2)^0,f,c
  4114  003A9A  5019               	movf	(??_isupper+1)^0,w,c
  4115  003A9C  221B               	addwfc	(??_isupper+3)^0,f,c
  4116  003A9E  501B               	movf	(??_isupper+3)^0,w,c
  4117  003AA0  E10A               	bnz	u3000
  4118  003AA2  0E1A               	movlw	26
  4119  003AA4  5C1A               	subwf	(??_isupper+2)^0,w,c
  4120  003AA6  A0D8               	btfss	status,0,c
  4121  003AA8  EF58  F01D         	goto	u3001
  4122  003AAC  EF5B  F01D         	goto	u3000
  4123  003AB0                     u3001:
  4124  003AB0  0E01               	movlw	1
  4125  003AB2  EF5C  F01D         	goto	u3010
  4126  003AB6                     u3000:
  4127  003AB6  0E00               	movlw	0
  4128  003AB8                     u3010:
  4129  003AB8  6E16               	movwf	?_isupper^0,c
  4130  003ABA  6A17               	clrf	(?_isupper+1)^0,c
  4131  003ABC  0012               	return		;funcret
  4132  003ABE                     __end_of_isupper:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _strcpy *****************
  4136 ;; Defined at:
  4137 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  dest            2   21[COMRAM] PTR unsigned char 
  4140 ;;		 -> dbuf(80), 
  4141 ;;  src             2   23[COMRAM] PTR const unsigned char 
  4142 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4143 ;;		 -> dbuf(80), 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  d               2   29[COMRAM] PTR unsigned char 
  4146 ;;		 -> dbuf(80), 
  4147 ;;  s               2   27[COMRAM] PTR const unsigned char 
  4148 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4149 ;;		 -> dbuf(80), 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  2   21[COMRAM] PTR unsigned char 
  4152 ;; Registers used:
  4153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4159 ;;      Params:         4       0       0       0       0       0       0       0       0
  4160 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4161 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4162 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4163 ;;Total ram usage:       10 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 4
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_efgtoa
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text8
  4174  00380E                     __ptext8:
  4175                           	callstack 0
  4176  00380E                     _strcpy:
  4177                           	callstack 22
  4178  00380E  C018  F01C         	movff	strcpy@src,strcpy@s
  4179  003812  C019  F01D         	movff	strcpy@src+1,strcpy@s+1
  4180  003816  C016  F01E         	movff	strcpy@dest,strcpy@d
  4181  00381A  C017  F01F         	movff	strcpy@dest+1,strcpy@d+1
  4182  00381E                     l3338:
  4183  00381E  501C               	movf	strcpy@s^0,w,c
  4184  003820  6E1A               	movwf	??_strcpy^0,c
  4185  003822  501D               	movf	(strcpy@s+1)^0,w,c
  4186  003824  6E1B               	movwf	(??_strcpy+1)^0,c
  4187  003826  4A1C               	infsnz	strcpy@s^0,f,c
  4188  003828  2A1D               	incf	(strcpy@s+1)^0,f,c
  4189  00382A  C01A  FFF6         	movff	??_strcpy,tblptrl
  4190  00382E  C01B  FFF7         	movff	??_strcpy+1,tblptrh
  4191  003832  6AF8               	clrf	tblptru,c
  4192  003834  C01E  FFD9         	movff	strcpy@d,fsr2l
  4193  003838  C01F  FFDA         	movff	strcpy@d+1,fsr2h
  4194  00383C  4A1E               	infsnz	strcpy@d^0,f,c
  4195  00383E  2A1F               	incf	(strcpy@d+1)^0,f,c
  4196  003840  0E07               	movlw	(high __ramtop+-1)
  4197  003842  64F7               	cpfsgt	tblptrh,c
  4198  003844  D003               	bra	u3837
  4199  003846  0008               	tblrd		*
  4200  003848  50F5               	movf	tablat,w,c
  4201  00384A  D005               	bra	u3830
  4202  00384C                     u3837:
  4203  00384C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4204  003850  CFF7 FFE2          	movff	tblptrh,fsr1h
  4205  003854  50E7               	movf	indf1,w,c
  4206  003856                     u3830:
  4207  003856  6EDF               	movwf	indf2,c
  4208  003858  50DF               	movf	indf2,w,c
  4209  00385A  A4D8               	btfss	status,2,c
  4210  00385C  EF32  F01C         	goto	u3841
  4211  003860  EF34  F01C         	goto	u3840
  4212  003864                     u3841:
  4213  003864  EF0F  F01C         	goto	l3338
  4214  003868                     u3840:
  4215  003868  0012               	return		;funcret
  4216  00386A                     __end_of_strcpy:
  4217                           	callstack 0
  4218                           
  4219 ;; *************** function _pad *****************
  4220 ;; Defined at:
  4221 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  4224 ;;		 -> sprintf@f(6), 
  4225 ;;  buf             2   39[COMRAM] PTR unsigned char 
  4226 ;;		 -> dbuf(80), 
  4227 ;;  p               2   41[COMRAM] int 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  w               2   46[COMRAM] int 
  4230 ;;  i               2   44[COMRAM] int 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  2   37[COMRAM] int 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4240 ;;      Params:         6       0       0       0       0       0       0       0       0
  4241 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4242 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4243 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4244 ;;Total ram usage:       11 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 7
  4247 ;; This function calls:
  4248 ;;		_fputc
  4249 ;;		_fputs
  4250 ;;		_strlen
  4251 ;; This function is called by:
  4252 ;;		_efgtoa
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text9
  4257  00329A                     __ptext9:
  4258                           	callstack 0
  4259  00329A                     _pad:
  4260                           	callstack 19
  4261  00329A                     
  4262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4263  00329A  A047               	btfss	_flags^0,0,c
  4264  00329C  EF52  F019         	goto	u3721
  4265  0032A0  EF54  F019         	goto	u3720
  4266  0032A4                     u3721:
  4267  0032A4  EF5E  F019         	goto	l3296
  4268  0032A8                     u3720:
  4269  0032A8                     
  4270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4271  0032A8  C028  F01F         	movff	pad@buf,fputs@s
  4272  0032AC  C029  F020         	movff	pad@buf+1,fputs@s+1
  4273  0032B0  C026  F021         	movff	pad@fp,fputs@fp
  4274  0032B4  C027  F022         	movff	pad@fp+1,fputs@fp+1
  4275  0032B8  EC21  F01D         	call	_fputs	;wreg free
  4276  0032BC                     l3296:
  4277                           
  4278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4279  0032BC  BE2B               	btfsc	(pad@p+1)^0,7,c
  4280  0032BE  EF63  F019         	goto	u3731
  4281  0032C2  EF65  F019         	goto	u3730
  4282  0032C6                     u3731:
  4283  0032C6  EF6B  F019         	goto	l3300
  4284  0032CA                     u3730:
  4285  0032CA  C02A  F02F         	movff	pad@p,pad@w
  4286  0032CE  C02B  F030         	movff	pad@p+1,pad@w+1
  4287  0032D2  EF6F  F019         	goto	l815
  4288  0032D6                     l3300:
  4289  0032D6  0E00               	movlw	0
  4290  0032D8  6E30               	movwf	(pad@w+1)^0,c
  4291  0032DA  0E00               	movlw	0
  4292  0032DC  6E2F               	movwf	pad@w^0,c
  4293  0032DE                     l815:
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4296  0032DE  0E00               	movlw	0
  4297  0032E0  6E2E               	movwf	(pad@i+1)^0,c
  4298  0032E2  0E00               	movlw	0
  4299  0032E4  6E2D               	movwf	pad@i^0,c
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4302  0032E6  EF81  F019         	goto	l3306
  4303  0032EA                     l3302:
  4304                           
  4305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4306  0032EA  0E00               	movlw	0
  4307  0032EC  6E17               	movwf	(fputc@c+1)^0,c
  4308  0032EE  0E20               	movlw	32
  4309  0032F0  6E16               	movwf	fputc@c^0,c
  4310  0032F2  C026  F018         	movff	pad@fp,fputc@fp
  4311  0032F6  C027  F019         	movff	pad@fp+1,fputc@fp+1
  4312  0032FA  EC86  F018         	call	_fputc	;wreg free
  4313  0032FE                     
  4314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4315  0032FE  4A2D               	infsnz	pad@i^0,f,c
  4316  003300  2A2E               	incf	(pad@i+1)^0,f,c
  4317  003302                     l3306:
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4320  003302  502F               	movf	pad@w^0,w,c
  4321  003304  5C2D               	subwf	pad@i^0,w,c
  4322  003306  502E               	movf	(pad@i+1)^0,w,c
  4323  003308  0A80               	xorlw	128
  4324  00330A  6E2C               	movwf	??_pad^0,c
  4325  00330C  5030               	movf	(pad@w+1)^0,w,c
  4326  00330E  0A80               	xorlw	128
  4327  003310  582C               	subwfb	??_pad^0,w,c
  4328  003312  A0D8               	btfss	status,0,c
  4329  003314  EF8E  F019         	goto	u3741
  4330  003318  EF90  F019         	goto	u3740
  4331  00331C                     u3741:
  4332  00331C  EF75  F019         	goto	l3302
  4333  003320                     u3740:
  4334  003320                     
  4335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4336  003320  B047               	btfsc	_flags^0,0,c
  4337  003322  EF95  F019         	goto	u3751
  4338  003326  EF97  F019         	goto	u3750
  4339  00332A                     u3751:
  4340  00332A  EFA1  F019         	goto	l3310
  4341  00332E                     u3750:
  4342  00332E                     
  4343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4344  00332E  C028  F01F         	movff	pad@buf,fputs@s
  4345  003332  C029  F020         	movff	pad@buf+1,fputs@s+1
  4346  003336  C026  F021         	movff	pad@fp,fputs@fp
  4347  00333A  C027  F022         	movff	pad@fp+1,fputs@fp+1
  4348  00333E  EC21  F01D         	call	_fputs	;wreg free
  4349  003342                     l3310:
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4352  003342  C028  F016         	movff	pad@buf,strlen@s
  4353  003346  C029  F017         	movff	pad@buf+1,strlen@s+1
  4354  00334A  ECB0  F01C         	call	_strlen	;wreg free
  4355  00334E  502F               	movf	pad@w^0,w,c
  4356  003350  2416               	addwf	?_strlen^0,w,c
  4357  003352  6E26               	movwf	?_pad^0,c
  4358  003354  5030               	movf	(pad@w+1)^0,w,c
  4359  003356  2017               	addwfc	(?_strlen+1)^0,w,c
  4360  003358  6E27               	movwf	(?_pad+1)^0,c
  4361  00335A  0012               	return		;funcret
  4362  00335C                     __end_of_pad:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _fputs *****************
  4366 ;; Defined at:
  4367 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  s               2   30[COMRAM] PTR const unsigned char 
  4370 ;;		 -> dbuf(80), 
  4371 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  4372 ;;		 -> sprintf@f(6), 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  i               2   35[COMRAM] int 
  4375 ;;  c               1   34[COMRAM] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  2   30[COMRAM] int 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4385 ;;      Params:         4       0       0       0       0       0       0       0       0
  4386 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4388 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4389 ;;Total ram usage:        7 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 6
  4392 ;; This function calls:
  4393 ;;		_fputc
  4394 ;; This function is called by:
  4395 ;;		_pad
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text10
  4400  003A42                     __ptext10:
  4401                           	callstack 0
  4402  003A42                     _fputs:
  4403                           	callstack 19
  4404  003A42  0E00               	movlw	0
  4405  003A44  6E25               	movwf	(fputs@i+1)^0,c
  4406  003A46  0E00               	movlw	0
  4407  003A48  6E24               	movwf	fputs@i^0,c
  4408  003A4A  EF32  F01D         	goto	l2836
  4409  003A4E                     l2832:
  4410  003A4E  C023  F016         	movff	fputs@c,fputc@c
  4411  003A52  6A17               	clrf	(fputc@c+1)^0,c
  4412  003A54  C021  F018         	movff	fputs@fp,fputc@fp
  4413  003A58  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  4414  003A5C  EC86  F018         	call	_fputc	;wreg free
  4415  003A60  4A24               	infsnz	fputs@i^0,f,c
  4416  003A62  2A25               	incf	(fputs@i+1)^0,f,c
  4417  003A64                     l2836:
  4418  003A64  5024               	movf	fputs@i^0,w,c
  4419  003A66  241F               	addwf	fputs@s^0,w,c
  4420  003A68  6ED9               	movwf	fsr2l,c
  4421  003A6A  5025               	movf	(fputs@i+1)^0,w,c
  4422  003A6C  2020               	addwfc	(fputs@s+1)^0,w,c
  4423  003A6E  6EDA               	movwf	fsr2h,c
  4424  003A70  50DF               	movf	indf2,w,c
  4425  003A72  6E23               	movwf	fputs@c^0,c
  4426  003A74  5023               	movf	fputs@c^0,w,c
  4427  003A76  A4D8               	btfss	status,2,c
  4428  003A78  EF40  F01D         	goto	u2991
  4429  003A7C  EF42  F01D         	goto	u2990
  4430  003A80                     u2991:
  4431  003A80  EF27  F01D         	goto	l2832
  4432  003A84                     u2990:
  4433  003A84  0012               	return		;funcret
  4434  003A86                     __end_of_fputs:
  4435                           	callstack 0
  4436                           
  4437 ;; *************** function _fputc *****************
  4438 ;; Defined at:
  4439 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  c               2   21[COMRAM] int 
  4442 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  4443 ;;		 -> sprintf@f(6), 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  2   21[COMRAM] int 
  4448 ;; Registers used:
  4449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4455 ;;      Params:         4       0       0       0       0       0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4457 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4458 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4459 ;;Total ram usage:        9 bytes
  4460 ;; Hardware stack levels used: 1
  4461 ;; Hardware stack levels required when called: 5
  4462 ;; This function calls:
  4463 ;;		_putch
  4464 ;; This function is called by:
  4465 ;;		_pad
  4466 ;;		_vfpfcnvrt
  4467 ;;		_fputs
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text11
  4472  00310C                     __ptext11:
  4473                           	callstack 0
  4474  00310C                     _fputc:
  4475                           	callstack 22
  4476  00310C  5018               	movf	fputc@fp^0,w,c
  4477  00310E  1019               	iorwf	(fputc@fp+1)^0,w,c
  4478  003110  B4D8               	btfsc	status,2,c
  4479  003112  EF8D  F018         	goto	u2541
  4480  003116  EF8F  F018         	goto	u2540
  4481  00311A                     u2541:
  4482  00311A  EF98  F018         	goto	l2608
  4483  00311E                     u2540:
  4484  00311E  5018               	movf	fputc@fp^0,w,c
  4485  003120  1019               	iorwf	(fputc@fp+1)^0,w,c
  4486  003122  A4D8               	btfss	status,2,c
  4487  003124  EF96  F018         	goto	u2551
  4488  003128  EF98  F018         	goto	u2550
  4489  00312C                     u2551:
  4490  00312C  EF9D  F018         	goto	l2610
  4491  003130                     u2550:
  4492  003130                     l2608:
  4493  003130  5016               	movf	fputc@c^0,w,c
  4494  003132  ECF2  F01D         	call	_putch
  4495  003136  EFEA  F018         	goto	l1041
  4496  00313A                     l2610:
  4497  00313A  EE20 F004          	lfsr	2,4
  4498  00313E  5018               	movf	fputc@fp^0,w,c
  4499  003140  26D9               	addwf	fsr2l,f,c
  4500  003142  5019               	movf	(fputc@fp+1)^0,w,c
  4501  003144  22DA               	addwfc	fsr2h,f,c
  4502  003146  50DE               	movf	postinc2,w,c
  4503  003148  10DE               	iorwf	postinc2,w,c
  4504  00314A  B4D8               	btfsc	status,2,c
  4505  00314C  EFAA  F018         	goto	u2561
  4506  003150  EFAC  F018         	goto	u2560
  4507  003154                     u2561:
  4508  003154  EFC7  F018         	goto	l2614
  4509  003158                     u2560:
  4510  003158  EE20 F004          	lfsr	2,4
  4511  00315C  5018               	movf	fputc@fp^0,w,c
  4512  00315E  26D9               	addwf	fsr2l,f,c
  4513  003160  5019               	movf	(fputc@fp+1)^0,w,c
  4514  003162  22DA               	addwfc	fsr2h,f,c
  4515  003164  EE10 F002          	lfsr	1,2
  4516  003168  5018               	movf	fputc@fp^0,w,c
  4517  00316A  26E1               	addwf	fsr1l,f,c
  4518  00316C  5019               	movf	(fputc@fp+1)^0,w,c
  4519  00316E  22E2               	addwfc	fsr1h,f,c
  4520  003170  50DE               	movf	postinc2,w,c
  4521  003172  5CE6               	subwf	postinc1,w,c
  4522  003174  50E6               	movf	postinc1,w,c
  4523  003176  0A80               	xorlw	128
  4524  003178  6E1E               	movwf	(??_fputc+4)^0,c
  4525  00317A  50DE               	movf	postinc2,w,c
  4526  00317C  0A80               	xorlw	128
  4527  00317E  581E               	subwfb	(??_fputc+4)^0,w,c
  4528  003180  B0D8               	btfsc	status,0,c
  4529  003182  EFC5  F018         	goto	u2571
  4530  003186  EFC7  F018         	goto	u2570
  4531  00318A                     u2571:
  4532  00318A  EFEA  F018         	goto	l1041
  4533  00318E                     u2570:
  4534  00318E                     l2614:
  4535  00318E  EE20 F002          	lfsr	2,2
  4536  003192  5018               	movf	fputc@fp^0,w,c
  4537  003194  26D9               	addwf	fsr2l,f,c
  4538  003196  5019               	movf	(fputc@fp+1)^0,w,c
  4539  003198  22DA               	addwfc	fsr2h,f,c
  4540  00319A  CFDE F01A          	movff	postinc2,??_fputc
  4541  00319E  CFDD F01B          	movff	postdec2,??_fputc+1
  4542  0031A2  C018  FFD9         	movff	fputc@fp,fsr2l
  4543  0031A6  C019  FFDA         	movff	fputc@fp+1,fsr2h
  4544  0031AA  CFDE F01C          	movff	postinc2,??_fputc+2
  4545  0031AE  CFDD F01D          	movff	postdec2,??_fputc+3
  4546  0031B2  501A               	movf	??_fputc^0,w,c
  4547  0031B4  241C               	addwf	(??_fputc+2)^0,w,c
  4548  0031B6  6ED9               	movwf	fsr2l,c
  4549  0031B8  501B               	movf	(??_fputc+1)^0,w,c
  4550  0031BA  201D               	addwfc	(??_fputc+3)^0,w,c
  4551  0031BC  6EDA               	movwf	fsr2h,c
  4552  0031BE  C016  FFDF         	movff	fputc@c,indf2
  4553  0031C2  EE20 F002          	lfsr	2,2
  4554  0031C6  5018               	movf	fputc@fp^0,w,c
  4555  0031C8  26D9               	addwf	fsr2l,f,c
  4556  0031CA  5019               	movf	(fputc@fp+1)^0,w,c
  4557  0031CC  22DA               	addwfc	fsr2h,f,c
  4558  0031CE  2ADE               	incf	postinc2,f,c
  4559  0031D0  0E00               	movlw	0
  4560  0031D2  22DD               	addwfc	postdec2,f,c
  4561  0031D4                     l1041:
  4562  0031D4  0012               	return		;funcret
  4563  0031D6                     __end_of_fputc:
  4564                           	callstack 0
  4565                           
  4566 ;; *************** function _putch *****************
  4567 ;; Defined at:
  4568 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  c               1    wreg     unsigned char 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  c               1    0[COMRAM] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4585 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used: 1
  4588 ;; Hardware stack levels required when called: 4
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_fputc
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text12
  4597  003BE4                     __ptext12:
  4598                           	callstack 0
  4599  003BE4                     _putch:
  4600                           	callstack 22
  4601  003BE4  0012               	return		;funcret
  4602  003BE6                     __end_of_putch:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function _floorf *****************
  4606 ;; Defined at:
  4607 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  x               4   46[COMRAM] float 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  u               4   12[BANK0 ] struct .
  4612 ;;  m               4    6[BANK0 ] unsigned long 
  4613 ;;  e               2   10[BANK0 ] int 
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  4   46[COMRAM] float 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4623 ;;      Params:         4       0       0       0       0       0       0       0       0
  4624 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4625 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4626 ;;      Totals:         4      16       0       0       0       0       0       0       0
  4627 ;;Total ram usage:       20 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; Hardware stack levels required when called: 4
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_efgtoa
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text13
  4638  002686                     __ptext13:
  4639                           	callstack 0
  4640  002686                     _floorf:
  4641                           	callstack 22
  4642  002686  C0E6  F06C         	movff	floorf@F527,floorf@u
  4643  00268A  C0E7  F06D         	movff	floorf@F527+1,floorf@u+1
  4644  00268E  C0E8  F06E         	movff	floorf@F527+2,floorf@u+2
  4645  002692  C0E9  F06F         	movff	floorf@F527+3,floorf@u+3
  4646  002696  C02F  F06C         	movff	floorf@x,floorf@u
  4647  00269A  C030  F06D         	movff	floorf@x+1,floorf@u+1
  4648  00269E  C031  F06E         	movff	floorf@x+2,floorf@u+2
  4649  0026A2  C032  F06F         	movff	floorf@x+3,floorf@u+3
  4650  0026A6  0E81               	movlw	129
  4651  0026A8  0100               	movlb	0	; () banked
  4652  0026AA  6F60               	movwf	??_floorf& (0+255),b
  4653  0026AC  0EFF               	movlw	255
  4654  0026AE  6F61               	movwf	(??_floorf+1)& (0+255),b
  4655  0026B0  C06C  F062         	movff	floorf@u,??_floorf+2
  4656  0026B4  C06D  F063         	movff	floorf@u+1,??_floorf+3
  4657  0026B8  C06E  F064         	movff	floorf@u+2,??_floorf+4
  4658  0026BC  C06F  F065         	movff	floorf@u+3,??_floorf+5
  4659  0026C0  0E18               	movlw	24
  4660  0026C2  EF68  F013         	goto	u5120
  4661  0026C6                     u5125:
  4662  0026C6  90D8               	bcf	status,0,c
  4663  0026C8  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  4664  0026CA  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4665  0026CC  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4666  0026CE  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4667  0026D0                     u5120:
  4668  0026D0  2EE8               	decfsz	wreg,f,c
  4669  0026D2  EF63  F013         	goto	u5125
  4670  0026D6  5162               	movf	(??_floorf+2)& (0+255),w,b
  4671  0026D8  2560               	addwf	??_floorf& (0+255),w,b
  4672  0026DA  6F6A               	movwf	floorf@e& (0+255),b
  4673  0026DC  0E00               	movlw	0
  4674  0026DE  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  4675  0026E0  6F6B               	movwf	(floorf@e+1)& (0+255),b
  4676  0026E2  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4677  0026E4  EF7D  F013         	goto	u5131
  4678  0026E8  516B               	movf	(floorf@e+1)& (0+255),w,b
  4679  0026EA  E109               	bnz	u5130
  4680  0026EC  0E17               	movlw	23
  4681  0026EE  5D6A               	subwf	floorf@e& (0+255),w,b
  4682  0026F0  A0D8               	btfss	status,0,c
  4683  0026F2  EF7D  F013         	goto	u5131
  4684  0026F6  EF7F  F013         	goto	u5130
  4685  0026FA                     u5131:
  4686  0026FA  EF89  F013         	goto	l4148
  4687  0026FE                     u5130:
  4688  0026FE                     l4146:
  4689                           
  4690                           ; BSR set to: 0
  4691  0026FE  C02F  F02F         	movff	floorf@x,?_floorf
  4692  002702  C030  F030         	movff	floorf@x+1,?_floorf+1
  4693  002706  C031  F031         	movff	floorf@x+2,?_floorf+2
  4694  00270A  C032  F032         	movff	floorf@x+3,?_floorf+3
  4695  00270E  EF4D  F014         	goto	l1002
  4696  002712                     l4148:
  4697                           
  4698                           ; BSR set to: 0
  4699  002712  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4700  002714  EF8E  F013         	goto	u5141
  4701  002718  EF90  F013         	goto	u5140
  4702  00271C                     u5141:
  4703  00271C  EF01  F014         	goto	l4158
  4704  002720                     u5140:
  4705  002720                     
  4706                           ; BSR set to: 0
  4707  002720  C06A  F060         	movff	floorf@e,??_floorf
  4708  002724  0EFF               	movlw	255
  4709  002726  6F61               	movwf	(??_floorf+1)& (0+255),b
  4710  002728  0EFF               	movlw	255
  4711  00272A  6F62               	movwf	(??_floorf+2)& (0+255),b
  4712  00272C  0E7F               	movlw	127
  4713  00272E  6F63               	movwf	(??_floorf+3)& (0+255),b
  4714  002730  0E00               	movlw	0
  4715  002732  6F64               	movwf	(??_floorf+4)& (0+255),b
  4716  002734                     u5155:
  4717  002734  6760               	tstfsz	??_floorf& (0+255),b
  4718  002736  EF9F  F013         	goto	u5156
  4719  00273A  EFA7  F013         	goto	u5157
  4720  00273E                     u5156:
  4721  00273E  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  4722  002740  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4723  002742  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4724  002744  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4725  002746  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4726  002748  2F60               	decfsz	??_floorf& (0+255),f,b
  4727  00274A  EF9A  F013         	goto	u5155
  4728  00274E                     u5157:
  4729  00274E  C061  F066         	movff	??_floorf+1,floorf@m
  4730  002752  C062  F067         	movff	??_floorf+2,floorf@m+1
  4731  002756  C063  F068         	movff	??_floorf+3,floorf@m+2
  4732  00275A  C064  F069         	movff	??_floorf+4,floorf@m+3
  4733  00275E  0100               	movlb	0	; () banked
  4734  002760  5166               	movf	floorf@m& (0+255),w,b
  4735  002762  156C               	andwf	floorf@u& (0+255),w,b
  4736  002764  6F60               	movwf	??_floorf& (0+255),b
  4737  002766  5167               	movf	(floorf@m+1)& (0+255),w,b
  4738  002768  156D               	andwf	(floorf@u+1)& (0+255),w,b
  4739  00276A  6F61               	movwf	(??_floorf+1)& (0+255),b
  4740  00276C  5168               	movf	(floorf@m+2)& (0+255),w,b
  4741  00276E  156E               	andwf	(floorf@u+2)& (0+255),w,b
  4742  002770  6F62               	movwf	(??_floorf+2)& (0+255),b
  4743  002772  5169               	movf	(floorf@m+3)& (0+255),w,b
  4744  002774  156F               	andwf	(floorf@u+3)& (0+255),w,b
  4745  002776  6F63               	movwf	(??_floorf+3)& (0+255),b
  4746  002778  5160               	movf	??_floorf& (0+255),w,b
  4747  00277A  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4748  00277C  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4749  00277E  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4750  002780  A4D8               	btfss	status,2,c
  4751  002782  EFC5  F013         	goto	u5161
  4752  002786  EFC7  F013         	goto	u5160
  4753  00278A                     u5161:
  4754  00278A  EFC9  F013         	goto	l4154
  4755  00278E                     u5160:
  4756  00278E  EF7F  F013         	goto	l4146
  4757  002792                     l4154:
  4758                           
  4759                           ; BSR set to: 0
  4760  002792  C06C  F060         	movff	floorf@u,??_floorf
  4761  002796  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4762  00279A  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4763  00279E  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4764  0027A2  0E20               	movlw	32
  4765  0027A4  EFD9  F013         	goto	u5170
  4766  0027A8                     u5175:
  4767  0027A8  90D8               	bcf	status,0,c
  4768  0027AA  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4769  0027AC  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4770  0027AE  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4771  0027B0  3360               	rrcf	??_floorf& (0+255),f,b
  4772  0027B2                     u5170:
  4773  0027B2  2EE8               	decfsz	wreg,f,c
  4774  0027B4  EFD4  F013         	goto	u5175
  4775  0027B8  5160               	movf	??_floorf& (0+255),w,b
  4776  0027BA  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4777  0027BC  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4778  0027BE  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4779  0027C0  B4D8               	btfsc	status,2,c
  4780  0027C2  EFE5  F013         	goto	u5181
  4781  0027C6  EFE7  F013         	goto	u5180
  4782  0027CA                     u5181:
  4783  0027CA  EFEF  F013         	goto	l1005
  4784  0027CE                     u5180:
  4785  0027CE                     
  4786                           ; BSR set to: 0
  4787  0027CE  5166               	movf	floorf@m& (0+255),w,b
  4788  0027D0  276C               	addwf	floorf@u& (0+255),f,b
  4789  0027D2  5167               	movf	(floorf@m+1)& (0+255),w,b
  4790  0027D4  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  4791  0027D6  5168               	movf	(floorf@m+2)& (0+255),w,b
  4792  0027D8  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  4793  0027DA  5169               	movf	(floorf@m+3)& (0+255),w,b
  4794  0027DC  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  4795  0027DE                     l1005:
  4796                           
  4797                           ; BSR set to: 0
  4798  0027DE  1D66               	comf	floorf@m& (0+255),w,b
  4799  0027E0  6F60               	movwf	??_floorf& (0+255),b
  4800  0027E2  1D67               	comf	(floorf@m+1)& (0+255),w,b
  4801  0027E4  6F61               	movwf	(??_floorf+1)& (0+255),b
  4802  0027E6  1D68               	comf	(floorf@m+2)& (0+255),w,b
  4803  0027E8  6F62               	movwf	(??_floorf+2)& (0+255),b
  4804  0027EA  1D69               	comf	(floorf@m+3)& (0+255),w,b
  4805  0027EC  6F63               	movwf	(??_floorf+3)& (0+255),b
  4806  0027EE  5160               	movf	??_floorf& (0+255),w,b
  4807  0027F0  176C               	andwf	floorf@u& (0+255),f,b
  4808  0027F2  5161               	movf	(??_floorf+1)& (0+255),w,b
  4809  0027F4  176D               	andwf	(floorf@u+1)& (0+255),f,b
  4810  0027F6  5162               	movf	(??_floorf+2)& (0+255),w,b
  4811  0027F8  176E               	andwf	(floorf@u+2)& (0+255),f,b
  4812  0027FA  5163               	movf	(??_floorf+3)& (0+255),w,b
  4813  0027FC  176F               	andwf	(floorf@u+3)& (0+255),f,b
  4814  0027FE  EF45  F014         	goto	l4166
  4815  002802                     l4158:
  4816                           
  4817                           ; BSR set to: 0
  4818  002802  C06C  F060         	movff	floorf@u,??_floorf
  4819  002806  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4820  00280A  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4821  00280E  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4822  002812  0E20               	movlw	32
  4823  002814  EF11  F014         	goto	u5190
  4824  002818                     u5195:
  4825  002818  90D8               	bcf	status,0,c
  4826  00281A  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4827  00281C  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4828  00281E  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4829  002820  3360               	rrcf	??_floorf& (0+255),f,b
  4830  002822                     u5190:
  4831  002822  2EE8               	decfsz	wreg,f,c
  4832  002824  EF0C  F014         	goto	u5195
  4833  002828  5160               	movf	??_floorf& (0+255),w,b
  4834  00282A  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4835  00282C  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4836  00282E  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4837  002830  A4D8               	btfss	status,2,c
  4838  002832  EF1D  F014         	goto	u5201
  4839  002836  EF1F  F014         	goto	u5200
  4840  00283A                     u5201:
  4841  00283A  EF29  F014         	goto	l4162
  4842  00283E                     u5200:
  4843  00283E                     
  4844                           ; BSR set to: 0
  4845  00283E  0E00               	movlw	0
  4846  002840  6F6C               	movwf	floorf@u& (0+255),b
  4847  002842  0E00               	movlw	0
  4848  002844  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4849  002846  0E00               	movlw	0
  4850  002848  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4851  00284A  0E00               	movlw	0
  4852  00284C  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4853  00284E  EF45  F014         	goto	l4166
  4854  002852                     l4162:
  4855                           
  4856                           ; BSR set to: 0
  4857  002852  90D8               	bcf	status,0,c
  4858  002854  356C               	rlcf	floorf@u& (0+255),w,b
  4859  002856  6F60               	movwf	??_floorf& (0+255),b
  4860  002858  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  4861  00285A  6F61               	movwf	(??_floorf+1)& (0+255),b
  4862  00285C  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  4863  00285E  6F62               	movwf	(??_floorf+2)& (0+255),b
  4864  002860  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  4865  002862  6F63               	movwf	(??_floorf+3)& (0+255),b
  4866  002864  5160               	movf	??_floorf& (0+255),w,b
  4867  002866  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4868  002868  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4869  00286A  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4870  00286C  B4D8               	btfsc	status,2,c
  4871  00286E  EF3B  F014         	goto	u5211
  4872  002872  EF3D  F014         	goto	u5210
  4873  002876                     u5211:
  4874  002876  EF45  F014         	goto	l4166
  4875  00287A                     u5210:
  4876  00287A                     
  4877                           ; BSR set to: 0
  4878  00287A  0E00               	movlw	0
  4879  00287C  6F6C               	movwf	floorf@u& (0+255),b
  4880  00287E  0E00               	movlw	0
  4881  002880  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4882  002882  0E80               	movlw	128
  4883  002884  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4884  002886  0EBF               	movlw	191
  4885  002888  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4886  00288A                     l4166:
  4887                           
  4888                           ; BSR set to: 0
  4889  00288A  C06C  F02F         	movff	floorf@u,?_floorf
  4890  00288E  C06D  F030         	movff	floorf@u+1,?_floorf+1
  4891  002892  C06E  F031         	movff	floorf@u+2,?_floorf+2
  4892  002896  C06F  F032         	movff	floorf@u+3,?_floorf+3
  4893  00289A                     l1002:
  4894                           
  4895                           ; BSR set to: 0
  4896  00289A  0012               	return		;funcret
  4897  00289C                     __end_of_floorf:
  4898                           	callstack 0
  4899                           
  4900 ;; *************** function ___fpclassifyf *****************
  4901 ;; Defined at:
  4902 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  x               4   21[COMRAM] float 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  u               4   31[COMRAM] struct .
  4907 ;;  e               2   29[COMRAM] int 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  2   21[COMRAM] int 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4917 ;;      Params:         4       0       0       0       0       0       0       0       0
  4918 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4919 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4920 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4921 ;;Total ram usage:       14 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 4
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_efgtoa
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text14
  4932  002E5A                     __ptext14:
  4933                           	callstack 0
  4934  002E5A                     ___fpclassifyf:
  4935                           	callstack 22
  4936  002E5A  C0EA  F020         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4937  002E5E  C0EB  F021         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4938  002E62  C0EC  F022         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4939  002E66  C0ED  F023         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4940  002E6A  C016  F020         	movff	___fpclassifyf@x,___fpclassifyf@u
  4941  002E6E  C017  F021         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4942  002E72  C018  F022         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4943  002E76  C019  F023         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4944  002E7A  C020  F01A         	movff	___fpclassifyf@u,??___fpclassifyf
  4945  002E7E  C021  F01B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4946  002E82  C022  F01C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4947  002E86  C023  F01D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4948  002E8A  0E18               	movlw	24
  4949  002E8C  EF4D  F017         	goto	u3760
  4950  002E90                     u3765:
  4951  002E90  90D8               	bcf	status,0,c
  4952  002E92  321D               	rrcf	(??___fpclassifyf+3)^0,f,c
  4953  002E94  321C               	rrcf	(??___fpclassifyf+2)^0,f,c
  4954  002E96  321B               	rrcf	(??___fpclassifyf+1)^0,f,c
  4955  002E98  321A               	rrcf	??___fpclassifyf^0,f,c
  4956  002E9A                     u3760:
  4957  002E9A  2EE8               	decfsz	wreg,f,c
  4958  002E9C  EF48  F017         	goto	u3765
  4959  002EA0  501A               	movf	??___fpclassifyf^0,w,c
  4960  002EA2  6E1E               	movwf	___fpclassifyf@e^0,c
  4961  002EA4  6A1F               	clrf	(___fpclassifyf@e+1)^0,c
  4962  002EA6  501E               	movf	___fpclassifyf@e^0,w,c
  4963  002EA8  101F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4964  002EAA  A4D8               	btfss	status,2,c
  4965  002EAC  EF5A  F017         	goto	u3771
  4966  002EB0  EF5C  F017         	goto	u3770
  4967  002EB4                     u3771:
  4968  002EB4  EF7C  F017         	goto	l3326
  4969  002EB8                     u3770:
  4970  002EB8  90D8               	bcf	status,0,c
  4971  002EBA  3420               	rlcf	___fpclassifyf@u^0,w,c
  4972  002EBC  6E1A               	movwf	??___fpclassifyf^0,c
  4973  002EBE  3421               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4974  002EC0  6E1B               	movwf	(??___fpclassifyf+1)^0,c
  4975  002EC2  3422               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4976  002EC4  6E1C               	movwf	(??___fpclassifyf+2)^0,c
  4977  002EC6  3423               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4978  002EC8  6E1D               	movwf	(??___fpclassifyf+3)^0,c
  4979  002ECA  501A               	movf	??___fpclassifyf^0,w,c
  4980  002ECC  101B               	iorwf	(??___fpclassifyf+1)^0,w,c
  4981  002ECE  101C               	iorwf	(??___fpclassifyf+2)^0,w,c
  4982  002ED0  101D               	iorwf	(??___fpclassifyf+3)^0,w,c
  4983  002ED2  A4D8               	btfss	status,2,c
  4984  002ED4  EF6E  F017         	goto	u3781
  4985  002ED8  EF70  F017         	goto	u3780
  4986  002EDC                     u3781:
  4987  002EDC  EF76  F017         	goto	l3322
  4988  002EE0                     u3780:
  4989  002EE0  0E00               	movlw	0
  4990  002EE2  6E17               	movwf	(?___fpclassifyf+1)^0,c
  4991  002EE4  0E02               	movlw	2
  4992  002EE6  6E16               	movwf	?___fpclassifyf^0,c
  4993  002EE8  EFAB  F017         	goto	l964
  4994  002EEC                     l3322:
  4995  002EEC  0E00               	movlw	0
  4996  002EEE  6E17               	movwf	(?___fpclassifyf+1)^0,c
  4997  002EF0  0E03               	movlw	3
  4998  002EF2  6E16               	movwf	?___fpclassifyf^0,c
  4999  002EF4  EFAB  F017         	goto	l964
  5000  002EF8                     l3326:
  5001  002EF8  281E               	incf	___fpclassifyf@e^0,w,c
  5002  002EFA  101F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5003  002EFC  A4D8               	btfss	status,2,c
  5004  002EFE  EF83  F017         	goto	u3791
  5005  002F02  EF85  F017         	goto	u3790
  5006  002F06                     u3791:
  5007  002F06  EFA7  F017         	goto	l3332
  5008  002F0A                     u3790:
  5009  002F0A  C020  F01A         	movff	___fpclassifyf@u,??___fpclassifyf
  5010  002F0E  C021  F01B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5011  002F12  C022  F01C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5012  002F16  C023  F01D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5013  002F1A  0E09               	movlw	9
  5014  002F1C                     u3805:
  5015  002F1C  90D8               	bcf	status,0,c
  5016  002F1E  361A               	rlcf	??___fpclassifyf^0,f,c
  5017  002F20  361B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5018  002F22  361C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5019  002F24  361D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5020  002F26  2EE8               	decfsz	wreg,f,c
  5021  002F28  EF8E  F017         	goto	u3805
  5022  002F2C  501A               	movf	??___fpclassifyf^0,w,c
  5023  002F2E  101B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5024  002F30  101C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5025  002F32  101D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5026  002F34  B4D8               	btfsc	status,2,c
  5027  002F36  EF9F  F017         	goto	u3811
  5028  002F3A  EFA2  F017         	goto	u3810
  5029  002F3E                     u3811:
  5030  002F3E  0E01               	movlw	1
  5031  002F40  EFA3  F017         	goto	u3820
  5032  002F44                     u3810:
  5033  002F44  0E00               	movlw	0
  5034  002F46                     u3820:
  5035  002F46  6E16               	movwf	?___fpclassifyf^0,c
  5036  002F48  6A17               	clrf	(?___fpclassifyf+1)^0,c
  5037  002F4A  EFAB  F017         	goto	l964
  5038  002F4E                     l3332:
  5039  002F4E  0E00               	movlw	0
  5040  002F50  6E17               	movwf	(?___fpclassifyf+1)^0,c
  5041  002F52  0E04               	movlw	4
  5042  002F54  6E16               	movwf	?___fpclassifyf^0,c
  5043  002F56                     l964:
  5044  002F56  0012               	return		;funcret
  5045  002F58                     __end_of___fpclassifyf:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function ___fltol *****************
  5049 ;; Defined at:
  5050 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  f1              4   21[COMRAM] int 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  exp1            1   30[COMRAM] unsigned char 
  5055 ;;  sign1           1   29[COMRAM] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  4   21[COMRAM] long 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5065 ;;      Params:         4       0       0       0       0       0       0       0       0
  5066 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5067 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5068 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5069 ;;Total ram usage:       10 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; Hardware stack levels required when called: 4
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_efgtoa
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text15
  5080  002B4A                     __ptext15:
  5081                           	callstack 0
  5082  002B4A                     ___fltol:
  5083                           	callstack 22
  5084  002B4A  3418               	rlcf	(___fltol@f1+2)^0,w,c
  5085  002B4C  3419               	rlcf	(___fltol@f1+3)^0,w,c
  5086  002B4E  6E1F               	movwf	___fltol@exp1^0,c
  5087  002B50  501F               	movf	___fltol@exp1^0,w,c
  5088  002B52  A4D8               	btfss	status,2,c
  5089  002B54  EFAE  F015         	goto	u3651
  5090  002B58  EFB0  F015         	goto	u3650
  5091  002B5C                     u3651:
  5092  002B5C  EFBA  F015         	goto	l3254
  5093  002B60                     u3650:
  5094  002B60                     l3250:
  5095  002B60  0E00               	movlw	0
  5096  002B62  6E16               	movwf	?___fltol^0,c
  5097  002B64  0E00               	movlw	0
  5098  002B66  6E17               	movwf	(?___fltol+1)^0,c
  5099  002B68  0E00               	movlw	0
  5100  002B6A  6E18               	movwf	(?___fltol+2)^0,c
  5101  002B6C  0E00               	movlw	0
  5102  002B6E  6E19               	movwf	(?___fltol+3)^0,c
  5103  002B70  EF27  F016         	goto	l393
  5104  002B74                     l3254:
  5105  002B74  C016  F01A         	movff	___fltol@f1,??___fltol
  5106  002B78  C017  F01B         	movff	___fltol@f1+1,??___fltol+1
  5107  002B7C  C018  F01C         	movff	___fltol@f1+2,??___fltol+2
  5108  002B80  C019  F01D         	movff	___fltol@f1+3,??___fltol+3
  5109  002B84  0E20               	movlw	32
  5110  002B86  EFCA  F015         	goto	u3660
  5111  002B8A                     u3665:
  5112  002B8A  90D8               	bcf	status,0,c
  5113  002B8C  321D               	rrcf	(??___fltol+3)^0,f,c
  5114  002B8E  321C               	rrcf	(??___fltol+2)^0,f,c
  5115  002B90  321B               	rrcf	(??___fltol+1)^0,f,c
  5116  002B92  321A               	rrcf	??___fltol^0,f,c
  5117  002B94                     u3660:
  5118  002B94  2EE8               	decfsz	wreg,f,c
  5119  002B96  EFC5  F015         	goto	u3665
  5120  002B9A  501A               	movf	??___fltol^0,w,c
  5121  002B9C  6E1E               	movwf	___fltol@sign1^0,c
  5122  002B9E  8E18               	bsf	(___fltol@f1+2)^0,7,c
  5123  002BA0  0EFF               	movlw	255
  5124  002BA2  1616               	andwf	___fltol@f1^0,f,c
  5125  002BA4  0EFF               	movlw	255
  5126  002BA6  1617               	andwf	(___fltol@f1+1)^0,f,c
  5127  002BA8  0EFF               	movlw	255
  5128  002BAA  1618               	andwf	(___fltol@f1+2)^0,f,c
  5129  002BAC  0E00               	movlw	0
  5130  002BAE  1619               	andwf	(___fltol@f1+3)^0,f,c
  5131  002BB0  0E96               	movlw	150
  5132  002BB2  5E1F               	subwf	___fltol@exp1^0,f,c
  5133  002BB4  BE1F               	btfsc	___fltol@exp1^0,7,c
  5134  002BB6  EFE1  F015         	goto	u3670
  5135  002BBA  EFDF  F015         	goto	u3671
  5136  002BBE                     u3671:
  5137  002BBE  EFF7  F015         	goto	l3274
  5138  002BC2                     u3670:
  5139  002BC2  501F               	movf	___fltol@exp1^0,w,c
  5140  002BC4  0A80               	xorlw	128
  5141  002BC6  0F97               	addlw	151
  5142  002BC8  B0D8               	btfsc	status,0,c
  5143  002BCA  EFE9  F015         	goto	u3681
  5144  002BCE  EFEB  F015         	goto	u3680
  5145  002BD2                     u3681:
  5146  002BD2  EFED  F015         	goto	l3270
  5147  002BD6                     u3680:
  5148  002BD6  EFB0  F015         	goto	l3250
  5149  002BDA                     l3270:
  5150  002BDA  90D8               	bcf	status,0,c
  5151  002BDC  3219               	rrcf	(___fltol@f1+3)^0,f,c
  5152  002BDE  3218               	rrcf	(___fltol@f1+2)^0,f,c
  5153  002BE0  3217               	rrcf	(___fltol@f1+1)^0,f,c
  5154  002BE2  3216               	rrcf	___fltol@f1^0,f,c
  5155  002BE4  3E1F               	incfsz	___fltol@exp1^0,f,c
  5156  002BE6  EFED  F015         	goto	l3270
  5157  002BEA  EF0F  F016         	goto	l3284
  5158  002BEE                     l3274:
  5159  002BEE  0E1F               	movlw	31
  5160  002BF0  641F               	cpfsgt	___fltol@exp1^0,c
  5161  002BF2  EFFD  F015         	goto	u3691
  5162  002BF6  EFFF  F015         	goto	u3690
  5163  002BFA                     u3691:
  5164  002BFA  EF07  F016         	goto	l3282
  5165  002BFE                     u3690:
  5166  002BFE  EFB0  F015         	goto	l3250
  5167  002C02                     l3280:
  5168  002C02  90D8               	bcf	status,0,c
  5169  002C04  3616               	rlcf	___fltol@f1^0,f,c
  5170  002C06  3617               	rlcf	(___fltol@f1+1)^0,f,c
  5171  002C08  3618               	rlcf	(___fltol@f1+2)^0,f,c
  5172  002C0A  3619               	rlcf	(___fltol@f1+3)^0,f,c
  5173  002C0C  061F               	decf	___fltol@exp1^0,f,c
  5174  002C0E                     l3282:
  5175  002C0E  501F               	movf	___fltol@exp1^0,w,c
  5176  002C10  A4D8               	btfss	status,2,c
  5177  002C12  EF0D  F016         	goto	u3701
  5178  002C16  EF0F  F016         	goto	u3700
  5179  002C1A                     u3701:
  5180  002C1A  EF01  F016         	goto	l3280
  5181  002C1E                     u3700:
  5182  002C1E                     l3284:
  5183  002C1E  501E               	movf	___fltol@sign1^0,w,c
  5184  002C20  B4D8               	btfsc	status,2,c
  5185  002C22  EF15  F016         	goto	u3711
  5186  002C26  EF17  F016         	goto	u3710
  5187  002C2A                     u3711:
  5188  002C2A  EF1F  F016         	goto	l3288
  5189  002C2E                     u3710:
  5190  002C2E  1E19               	comf	(___fltol@f1+3)^0,f,c
  5191  002C30  1E18               	comf	(___fltol@f1+2)^0,f,c
  5192  002C32  1E17               	comf	(___fltol@f1+1)^0,f,c
  5193  002C34  6C16               	negf	___fltol@f1^0,c
  5194  002C36  0E00               	movlw	0
  5195  002C38  2217               	addwfc	(___fltol@f1+1)^0,f,c
  5196  002C3A  2218               	addwfc	(___fltol@f1+2)^0,f,c
  5197  002C3C  2219               	addwfc	(___fltol@f1+3)^0,f,c
  5198  002C3E                     l3288:
  5199  002C3E  C016  F016         	movff	___fltol@f1,?___fltol
  5200  002C42  C017  F017         	movff	___fltol@f1+1,?___fltol+1
  5201  002C46  C018  F018         	movff	___fltol@f1+2,?___fltol+2
  5202  002C4A  C019  F019         	movff	___fltol@f1+3,?___fltol+3
  5203  002C4E                     l393:
  5204  002C4E  0012               	return		;funcret
  5205  002C50                     __end_of___fltol:
  5206                           	callstack 0
  5207                           
  5208 ;; *************** function ___flsub *****************
  5209 ;; Defined at:
  5210 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  b               4   46[COMRAM] long 
  5213 ;;  a               4   50[COMRAM] long 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  4   46[COMRAM] long 
  5218 ;; Registers used:
  5219 ;;		wreg, status,2, status,0, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5225 ;;      Params:         8       0       0       0       0       0       0       0       0
  5226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5228 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5229 ;;Total ram usage:        8 bytes
  5230 ;; Hardware stack levels used: 1
  5231 ;; Hardware stack levels required when called: 5
  5232 ;; This function calls:
  5233 ;;		___fladd
  5234 ;; This function is called by:
  5235 ;;		_efgtoa
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text16
  5240  0039FC                     __ptext16:
  5241                           	callstack 0
  5242  0039FC                     ___flsub:
  5243                           	callstack 21
  5244  0039FC  0E00               	movlw	0
  5245  0039FE  1A33               	xorwf	___flsub@a^0,f,c
  5246  003A00  0E00               	movlw	0
  5247  003A02  1A34               	xorwf	(___flsub@a+1)^0,f,c
  5248  003A04  0E00               	movlw	0
  5249  003A06  1A35               	xorwf	(___flsub@a+2)^0,f,c
  5250  003A08  0E80               	movlw	128
  5251  003A0A  1A36               	xorwf	(___flsub@a+3)^0,f,c
  5252  003A0C  C02F  F016         	movff	___flsub@b,___fladd@b
  5253  003A10  C030  F017         	movff	___flsub@b+1,___fladd@b+1
  5254  003A14  C031  F018         	movff	___flsub@b+2,___fladd@b+2
  5255  003A18  C032  F019         	movff	___flsub@b+3,___fladd@b+3
  5256  003A1C  C033  F01A         	movff	___flsub@a,___fladd@a
  5257  003A20  C034  F01B         	movff	___flsub@a+1,___fladd@a+1
  5258  003A24  C035  F01C         	movff	___flsub@a+2,___fladd@a+2
  5259  003A28  C036  F01D         	movff	___flsub@a+3,___fladd@a+3
  5260  003A2C  EC01  F00D         	call	___fladd	;wreg free
  5261  003A30  C016  F02F         	movff	?___fladd,?___flsub
  5262  003A34  C017  F030         	movff	?___fladd+1,?___flsub+1
  5263  003A38  C018  F031         	movff	?___fladd+2,?___flsub+2
  5264  003A3C  C019  F032         	movff	?___fladd+3,?___flsub+3
  5265  003A40  0012               	return		;funcret
  5266  003A42                     __end_of___flsub:
  5267                           	callstack 0
  5268                           
  5269 ;; *************** function ___fladd *****************
  5270 ;; Defined at:
  5271 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  b               4   21[COMRAM] long 
  5274 ;;  a               4   25[COMRAM] long 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  grs             1   36[COMRAM] unsigned char 
  5277 ;;  bexp            1   35[COMRAM] unsigned char 
  5278 ;;  aexp            1   34[COMRAM] unsigned char 
  5279 ;;  signs           1   33[COMRAM] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  4   21[COMRAM] unsigned char 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5289 ;;      Params:         8       0       0       0       0       0       0       0       0
  5290 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5291 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5292 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5293 ;;Total ram usage:       16 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 4
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		___flsub
  5300 ;;		_efgtoa
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text17
  5305  001A02                     __ptext17:
  5306                           	callstack 0
  5307  001A02                     ___fladd:
  5308                           	callstack 21
  5309  001A02  5019               	movf	(___fladd@b+3)^0,w,c
  5310  001A04  0B80               	andlw	128
  5311  001A06  6E22               	movwf	___fladd@signs^0,c
  5312  001A08  5019               	movf	(___fladd@b+3)^0,w,c
  5313  001A0A  2419               	addwf	(___fladd@b+3)^0,w,c
  5314  001A0C  6E24               	movwf	___fladd@bexp^0,c
  5315  001A0E  AE18               	btfss	(___fladd@b+2)^0,7,c
  5316  001A10  EF0C  F00D         	goto	u2601
  5317  001A14  EF0E  F00D         	goto	u2600
  5318  001A18                     u2601:
  5319  001A18  EF0F  F00D         	goto	l2634
  5320  001A1C                     u2600:
  5321  001A1C  8024               	bsf	___fladd@bexp^0,0,c
  5322  001A1E                     l2634:
  5323  001A1E  5024               	movf	___fladd@bexp^0,w,c
  5324  001A20  B4D8               	btfsc	status,2,c
  5325  001A22  EF15  F00D         	goto	u2611
  5326  001A26  EF17  F00D         	goto	u2610
  5327  001A2A                     u2611:
  5328  001A2A  EF2C  F00D         	goto	l2644
  5329  001A2E                     u2610:
  5330  001A2E  2824               	incf	___fladd@bexp^0,w,c
  5331  001A30  A4D8               	btfss	status,2,c
  5332  001A32  EF1D  F00D         	goto	u2621
  5333  001A36  EF1F  F00D         	goto	u2620
  5334  001A3A                     u2621:
  5335  001A3A  EF27  F00D         	goto	l2640
  5336  001A3E                     u2620:
  5337  001A3E  0E00               	movlw	0
  5338  001A40  6E16               	movwf	___fladd@b^0,c
  5339  001A42  0E00               	movlw	0
  5340  001A44  6E17               	movwf	(___fladd@b+1)^0,c
  5341  001A46  0E00               	movlw	0
  5342  001A48  6E18               	movwf	(___fladd@b+2)^0,c
  5343  001A4A  0E00               	movlw	0
  5344  001A4C  6E19               	movwf	(___fladd@b+3)^0,c
  5345  001A4E                     l2640:
  5346  001A4E  8E18               	bsf	(___fladd@b+2)^0,7,c
  5347  001A50  0E00               	movlw	0
  5348  001A52  6E19               	movwf	(___fladd@b+3)^0,c
  5349  001A54  EF34  F00D         	goto	l2646
  5350  001A58                     l2644:
  5351  001A58  0E00               	movlw	0
  5352  001A5A  6E16               	movwf	___fladd@b^0,c
  5353  001A5C  0E00               	movlw	0
  5354  001A5E  6E17               	movwf	(___fladd@b+1)^0,c
  5355  001A60  0E00               	movlw	0
  5356  001A62  6E18               	movwf	(___fladd@b+2)^0,c
  5357  001A64  0E00               	movlw	0
  5358  001A66  6E19               	movwf	(___fladd@b+3)^0,c
  5359  001A68                     l2646:
  5360  001A68  501D               	movf	(___fladd@a+3)^0,w,c
  5361  001A6A  0B80               	andlw	128
  5362  001A6C  6E23               	movwf	___fladd@aexp^0,c
  5363  001A6E  5022               	movf	___fladd@signs^0,w,c
  5364  001A70  1823               	xorwf	___fladd@aexp^0,w,c
  5365  001A72  B4D8               	btfsc	status,2,c
  5366  001A74  EF3E  F00D         	goto	u2631
  5367  001A78  EF40  F00D         	goto	u2630
  5368  001A7C                     u2631:
  5369  001A7C  EF41  F00D         	goto	l2652
  5370  001A80                     u2630:
  5371  001A80  8C22               	bsf	___fladd@signs^0,6,c
  5372  001A82                     l2652:
  5373  001A82  501D               	movf	(___fladd@a+3)^0,w,c
  5374  001A84  241D               	addwf	(___fladd@a+3)^0,w,c
  5375  001A86  6E23               	movwf	___fladd@aexp^0,c
  5376  001A88  AE1C               	btfss	(___fladd@a+2)^0,7,c
  5377  001A8A  EF49  F00D         	goto	u2641
  5378  001A8E  EF4B  F00D         	goto	u2640
  5379  001A92                     u2641:
  5380  001A92  EF4C  F00D         	goto	l2658
  5381  001A96                     u2640:
  5382  001A96  8023               	bsf	___fladd@aexp^0,0,c
  5383  001A98                     l2658:
  5384  001A98  5023               	movf	___fladd@aexp^0,w,c
  5385  001A9A  B4D8               	btfsc	status,2,c
  5386  001A9C  EF52  F00D         	goto	u2651
  5387  001AA0  EF54  F00D         	goto	u2650
  5388  001AA4                     u2651:
  5389  001AA4  EF69  F00D         	goto	l2668
  5390  001AA8                     u2650:
  5391  001AA8  2823               	incf	___fladd@aexp^0,w,c
  5392  001AAA  A4D8               	btfss	status,2,c
  5393  001AAC  EF5A  F00D         	goto	u2661
  5394  001AB0  EF5C  F00D         	goto	u2660
  5395  001AB4                     u2661:
  5396  001AB4  EF64  F00D         	goto	l2664
  5397  001AB8                     u2660:
  5398  001AB8  0E00               	movlw	0
  5399  001ABA  6E1A               	movwf	___fladd@a^0,c
  5400  001ABC  0E00               	movlw	0
  5401  001ABE  6E1B               	movwf	(___fladd@a+1)^0,c
  5402  001AC0  0E00               	movlw	0
  5403  001AC2  6E1C               	movwf	(___fladd@a+2)^0,c
  5404  001AC4  0E00               	movlw	0
  5405  001AC6  6E1D               	movwf	(___fladd@a+3)^0,c
  5406  001AC8                     l2664:
  5407  001AC8  8E1C               	bsf	(___fladd@a+2)^0,7,c
  5408  001ACA  0E00               	movlw	0
  5409  001ACC  6E1D               	movwf	(___fladd@a+3)^0,c
  5410  001ACE  EF71  F00D         	goto	l2670
  5411  001AD2                     l2668:
  5412  001AD2  0E00               	movlw	0
  5413  001AD4  6E1A               	movwf	___fladd@a^0,c
  5414  001AD6  0E00               	movlw	0
  5415  001AD8  6E1B               	movwf	(___fladd@a+1)^0,c
  5416  001ADA  0E00               	movlw	0
  5417  001ADC  6E1C               	movwf	(___fladd@a+2)^0,c
  5418  001ADE  0E00               	movlw	0
  5419  001AE0  6E1D               	movwf	(___fladd@a+3)^0,c
  5420  001AE2                     l2670:
  5421  001AE2  5024               	movf	___fladd@bexp^0,w,c
  5422  001AE4  5C23               	subwf	___fladd@aexp^0,w,c
  5423  001AE6  B0D8               	btfsc	status,0,c
  5424  001AE8  EF78  F00D         	goto	u2671
  5425  001AEC  EF7A  F00D         	goto	u2670
  5426  001AF0                     u2671:
  5427  001AF0  EFA1  F00D         	goto	l2706
  5428  001AF4                     u2670:
  5429  001AF4  AC22               	btfss	___fladd@signs^0,6,c
  5430  001AF6  EF7F  F00D         	goto	u2681
  5431  001AFA  EF81  F00D         	goto	u2680
  5432  001AFE                     u2681:
  5433  001AFE  EF83  F00D         	goto	l2676
  5434  001B02                     u2680:
  5435  001B02  0E80               	movlw	128
  5436  001B04  1A22               	xorwf	___fladd@signs^0,f,c
  5437  001B06                     l2676:
  5438  001B06  C024  F025         	movff	___fladd@bexp,___fladd@grs
  5439  001B0A  C023  F024         	movff	___fladd@aexp,___fladd@bexp
  5440  001B0E  C025  F023         	movff	___fladd@grs,___fladd@aexp
  5441  001B12  C016  F025         	movff	___fladd@b,___fladd@grs
  5442  001B16  C01A  F016         	movff	___fladd@a,___fladd@b
  5443  001B1A  C025  F01A         	movff	___fladd@grs,___fladd@a
  5444  001B1E  C017  F025         	movff	___fladd@b+1,___fladd@grs
  5445  001B22  C01B  F017         	movff	___fladd@a+1,___fladd@b+1
  5446  001B26  C025  F01B         	movff	___fladd@grs,___fladd@a+1
  5447  001B2A  C018  F025         	movff	___fladd@b+2,___fladd@grs
  5448  001B2E  C01C  F018         	movff	___fladd@a+2,___fladd@b+2
  5449  001B32  C025  F01C         	movff	___fladd@grs,___fladd@a+2
  5450  001B36  C019  F025         	movff	___fladd@b+3,___fladd@grs
  5451  001B3A  C01D  F019         	movff	___fladd@a+3,___fladd@b+3
  5452  001B3E  C025  F01D         	movff	___fladd@grs,___fladd@a+3
  5453  001B42                     l2706:
  5454  001B42  0E00               	movlw	0
  5455  001B44  6E25               	movwf	___fladd@grs^0,c
  5456  001B46  5024               	movf	___fladd@bexp^0,w,c
  5457  001B48  C023  F01E         	movff	___fladd@aexp,??___fladd
  5458  001B4C  6A1F               	clrf	(??___fladd+1)^0,c
  5459  001B4E  5E1E               	subwf	??___fladd^0,f,c
  5460  001B50  0E00               	movlw	0
  5461  001B52  5A1F               	subwfb	(??___fladd+1)^0,f,c
  5462  001B54  BE1F               	btfsc	(??___fladd+1)^0,7,c
  5463  001B56  EFB6  F00D         	goto	u2691
  5464  001B5A  501F               	movf	(??___fladd+1)^0,w,c
  5465  001B5C  E109               	bnz	u2690
  5466  001B5E  0E1A               	movlw	26
  5467  001B60  5C1E               	subwf	??___fladd^0,w,c
  5468  001B62  A0D8               	btfss	status,0,c
  5469  001B64  EFB6  F00D         	goto	u2691
  5470  001B68  EFB8  F00D         	goto	u2690
  5471  001B6C                     u2691:
  5472  001B6C  EFEF  F00D         	goto	l625
  5473  001B70                     u2690:
  5474  001B70  5016               	movf	___fladd@b^0,w,c
  5475  001B72  1017               	iorwf	(___fladd@b+1)^0,w,c
  5476  001B74  1018               	iorwf	(___fladd@b+2)^0,w,c
  5477  001B76  1019               	iorwf	(___fladd@b+3)^0,w,c
  5478  001B78  A4D8               	btfss	status,2,c
  5479  001B7A  EFC1  F00D         	goto	u2701
  5480  001B7E  EFC4  F00D         	goto	u2700
  5481  001B82                     u2701:
  5482  001B82  0E01               	movlw	1
  5483  001B84  EFC5  F00D         	goto	u2710
  5484  001B88                     u2700:
  5485  001B88  0E00               	movlw	0
  5486  001B8A                     u2710:
  5487  001B8A  6E25               	movwf	___fladd@grs^0,c
  5488  001B8C  0E00               	movlw	0
  5489  001B8E  6E16               	movwf	___fladd@b^0,c
  5490  001B90  0E00               	movlw	0
  5491  001B92  6E17               	movwf	(___fladd@b+1)^0,c
  5492  001B94  0E00               	movlw	0
  5493  001B96  6E18               	movwf	(___fladd@b+2)^0,c
  5494  001B98  0E00               	movlw	0
  5495  001B9A  6E19               	movwf	(___fladd@b+3)^0,c
  5496  001B9C  C023  F024         	movff	___fladd@aexp,___fladd@bexp
  5497  001BA0  EFF8  F00D         	goto	l624
  5498  001BA4                     l626:
  5499  001BA4  A025               	btfss	___fladd@grs^0,0,c
  5500  001BA6  EFD7  F00D         	goto	u2721
  5501  001BAA  EFD9  F00D         	goto	u2720
  5502  001BAE                     u2721:
  5503  001BAE  EFDF  F00D         	goto	l2718
  5504  001BB2                     u2720:
  5505  001BB2  90D8               	bcf	status,0,c
  5506  001BB4  3025               	rrcf	___fladd@grs^0,w,c
  5507  001BB6  0901               	iorlw	1
  5508  001BB8  6E25               	movwf	___fladd@grs^0,c
  5509  001BBA  EFE1  F00D         	goto	l2720
  5510  001BBE                     l2718:
  5511  001BBE  90D8               	bcf	status,0,c
  5512  001BC0  3225               	rrcf	___fladd@grs^0,f,c
  5513  001BC2                     l2720:
  5514  001BC2  A016               	btfss	___fladd@b^0,0,c
  5515  001BC4  EFE6  F00D         	goto	u2731
  5516  001BC8  EFE8  F00D         	goto	u2730
  5517  001BCC                     u2731:
  5518  001BCC  EFE9  F00D         	goto	l2724
  5519  001BD0                     u2730:
  5520  001BD0  8E25               	bsf	___fladd@grs^0,7,c
  5521  001BD2                     l2724:
  5522  001BD2  3419               	rlcf	(___fladd@b+3)^0,w,c
  5523  001BD4  3219               	rrcf	(___fladd@b+3)^0,f,c
  5524  001BD6  3218               	rrcf	(___fladd@b+2)^0,f,c
  5525  001BD8  3217               	rrcf	(___fladd@b+1)^0,f,c
  5526  001BDA  3216               	rrcf	___fladd@b^0,f,c
  5527  001BDC  2A24               	incf	___fladd@bexp^0,f,c
  5528  001BDE                     l625:
  5529  001BDE  5023               	movf	___fladd@aexp^0,w,c
  5530  001BE0  5C24               	subwf	___fladd@bexp^0,w,c
  5531  001BE2  A0D8               	btfss	status,0,c
  5532  001BE4  EFF6  F00D         	goto	u2741
  5533  001BE8  EFF8  F00D         	goto	u2740
  5534  001BEC                     u2741:
  5535  001BEC  EFD2  F00D         	goto	l626
  5536  001BF0                     u2740:
  5537  001BF0                     l624:
  5538  001BF0  BC22               	btfsc	___fladd@signs^0,6,c
  5539  001BF2  EFFD  F00D         	goto	u2751
  5540  001BF6  EFFF  F00D         	goto	u2750
  5541  001BFA                     u2751:
  5542  001BFA  EF3F  F00E         	goto	l2752
  5543  001BFE                     u2750:
  5544  001BFE  5024               	movf	___fladd@bexp^0,w,c
  5545  001C00  A4D8               	btfss	status,2,c
  5546  001C02  EF05  F00E         	goto	u2761
  5547  001C06  EF07  F00E         	goto	u2760
  5548  001C0A                     u2761:
  5549  001C0A  EF11  F00E         	goto	l2734
  5550  001C0E                     u2760:
  5551  001C0E  0E00               	movlw	0
  5552  001C10  6E16               	movwf	?___fladd^0,c
  5553  001C12  0E00               	movlw	0
  5554  001C14  6E17               	movwf	(?___fladd+1)^0,c
  5555  001C16  0E00               	movlw	0
  5556  001C18  6E18               	movwf	(?___fladd+2)^0,c
  5557  001C1A  0E00               	movlw	0
  5558  001C1C  6E19               	movwf	(?___fladd+3)^0,c
  5559  001C1E  EF60  F00F         	goto	l633
  5560  001C22                     l2734:
  5561  001C22  501A               	movf	___fladd@a^0,w,c
  5562  001C24  2616               	addwf	___fladd@b^0,f,c
  5563  001C26  501B               	movf	(___fladd@a+1)^0,w,c
  5564  001C28  2217               	addwfc	(___fladd@b+1)^0,f,c
  5565  001C2A  501C               	movf	(___fladd@a+2)^0,w,c
  5566  001C2C  2218               	addwfc	(___fladd@b+2)^0,f,c
  5567  001C2E  501D               	movf	(___fladd@a+3)^0,w,c
  5568  001C30  2219               	addwfc	(___fladd@b+3)^0,f,c
  5569  001C32  A019               	btfss	(___fladd@b+3)^0,0,c
  5570  001C34  EF1E  F00E         	goto	u2771
  5571  001C38  EF20  F00E         	goto	u2770
  5572  001C3C                     u2771:
  5573  001C3C  EFCC  F00E         	goto	l2788
  5574  001C40                     u2770:
  5575  001C40  A025               	btfss	___fladd@grs^0,0,c
  5576  001C42  EF25  F00E         	goto	u2781
  5577  001C46  EF27  F00E         	goto	u2780
  5578  001C4A                     u2781:
  5579  001C4A  EF2D  F00E         	goto	l2742
  5580  001C4E                     u2780:
  5581  001C4E  90D8               	bcf	status,0,c
  5582  001C50  3025               	rrcf	___fladd@grs^0,w,c
  5583  001C52  0901               	iorlw	1
  5584  001C54  6E25               	movwf	___fladd@grs^0,c
  5585  001C56  EF2F  F00E         	goto	l2744
  5586  001C5A                     l2742:
  5587  001C5A  90D8               	bcf	status,0,c
  5588  001C5C  3225               	rrcf	___fladd@grs^0,f,c
  5589  001C5E                     l2744:
  5590  001C5E  A016               	btfss	___fladd@b^0,0,c
  5591  001C60  EF34  F00E         	goto	u2791
  5592  001C64  EF36  F00E         	goto	u2790
  5593  001C68                     u2791:
  5594  001C68  EF37  F00E         	goto	l2748
  5595  001C6C                     u2790:
  5596  001C6C  8E25               	bsf	___fladd@grs^0,7,c
  5597  001C6E                     l2748:
  5598  001C6E  3419               	rlcf	(___fladd@b+3)^0,w,c
  5599  001C70  3219               	rrcf	(___fladd@b+3)^0,f,c
  5600  001C72  3218               	rrcf	(___fladd@b+2)^0,f,c
  5601  001C74  3217               	rrcf	(___fladd@b+1)^0,f,c
  5602  001C76  3216               	rrcf	___fladd@b^0,f,c
  5603  001C78  2A24               	incf	___fladd@bexp^0,f,c
  5604  001C7A  EFCC  F00E         	goto	l2788
  5605  001C7E                     l2752:
  5606  001C7E  501A               	movf	___fladd@a^0,w,c
  5607  001C80  5C16               	subwf	___fladd@b^0,w,c
  5608  001C82  501B               	movf	(___fladd@a+1)^0,w,c
  5609  001C84  5817               	subwfb	(___fladd@b+1)^0,w,c
  5610  001C86  501C               	movf	(___fladd@a+2)^0,w,c
  5611  001C88  5818               	subwfb	(___fladd@b+2)^0,w,c
  5612  001C8A  5019               	movf	(___fladd@b+3)^0,w,c
  5613  001C8C  0A80               	xorlw	128
  5614  001C8E  6E1E               	movwf	??___fladd^0,c
  5615  001C90  501D               	movf	(___fladd@a+3)^0,w,c
  5616  001C92  0A80               	xorlw	128
  5617  001C94  581E               	subwfb	??___fladd^0,w,c
  5618  001C96  B0D8               	btfsc	status,0,c
  5619  001C98  EF50  F00E         	goto	u2801
  5620  001C9C  EF52  F00E         	goto	u2800
  5621  001CA0                     u2801:
  5622  001CA0  EF7D  F00E         	goto	l2762
  5623  001CA4                     u2800:
  5624  001CA4  5016               	movf	___fladd@b^0,w,c
  5625  001CA6  5C1A               	subwf	___fladd@a^0,w,c
  5626  001CA8  6E1E               	movwf	??___fladd^0,c
  5627  001CAA  5017               	movf	(___fladd@b+1)^0,w,c
  5628  001CAC  581B               	subwfb	(___fladd@a+1)^0,w,c
  5629  001CAE  6E1F               	movwf	(??___fladd+1)^0,c
  5630  001CB0  5018               	movf	(___fladd@b+2)^0,w,c
  5631  001CB2  581C               	subwfb	(___fladd@a+2)^0,w,c
  5632  001CB4  6E20               	movwf	(??___fladd+2)^0,c
  5633  001CB6  5019               	movf	(___fladd@b+3)^0,w,c
  5634  001CB8  581D               	subwfb	(___fladd@a+3)^0,w,c
  5635  001CBA  6E21               	movwf	(??___fladd+3)^0,c
  5636  001CBC  0EFF               	movlw	255
  5637  001CBE  241E               	addwf	??___fladd^0,w,c
  5638  001CC0  6E16               	movwf	___fladd@b^0,c
  5639  001CC2  0EFF               	movlw	255
  5640  001CC4  201F               	addwfc	(??___fladd+1)^0,w,c
  5641  001CC6  6E17               	movwf	(___fladd@b+1)^0,c
  5642  001CC8  0EFF               	movlw	255
  5643  001CCA  2020               	addwfc	(??___fladd+2)^0,w,c
  5644  001CCC  6E18               	movwf	(___fladd@b+2)^0,c
  5645  001CCE  0EFF               	movlw	255
  5646  001CD0  2021               	addwfc	(??___fladd+3)^0,w,c
  5647  001CD2  6E19               	movwf	(___fladd@b+3)^0,c
  5648  001CD4  0E80               	movlw	128
  5649  001CD6  1A22               	xorwf	___fladd@signs^0,f,c
  5650  001CD8  6C25               	negf	___fladd@grs^0,c
  5651  001CDA  5025               	movf	___fladd@grs^0,w,c
  5652  001CDC  A4D8               	btfss	status,2,c
  5653  001CDE  EF73  F00E         	goto	u2811
  5654  001CE2  EF75  F00E         	goto	u2810
  5655  001CE6                     u2811:
  5656  001CE6  EF85  F00E         	goto	l641
  5657  001CEA                     u2810:
  5658  001CEA  0E01               	movlw	1
  5659  001CEC  2616               	addwf	___fladd@b^0,f,c
  5660  001CEE  0E00               	movlw	0
  5661  001CF0  2217               	addwfc	(___fladd@b+1)^0,f,c
  5662  001CF2  2218               	addwfc	(___fladd@b+2)^0,f,c
  5663  001CF4  2219               	addwfc	(___fladd@b+3)^0,f,c
  5664  001CF6  EF85  F00E         	goto	l641
  5665  001CFA                     l2762:
  5666  001CFA  501A               	movf	___fladd@a^0,w,c
  5667  001CFC  5E16               	subwf	___fladd@b^0,f,c
  5668  001CFE  501B               	movf	(___fladd@a+1)^0,w,c
  5669  001D00  5A17               	subwfb	(___fladd@b+1)^0,f,c
  5670  001D02  501C               	movf	(___fladd@a+2)^0,w,c
  5671  001D04  5A18               	subwfb	(___fladd@b+2)^0,f,c
  5672  001D06  501D               	movf	(___fladd@a+3)^0,w,c
  5673  001D08  5A19               	subwfb	(___fladd@b+3)^0,f,c
  5674  001D0A                     l641:
  5675  001D0A  5016               	movf	___fladd@b^0,w,c
  5676  001D0C  1017               	iorwf	(___fladd@b+1)^0,w,c
  5677  001D0E  1018               	iorwf	(___fladd@b+2)^0,w,c
  5678  001D10  1019               	iorwf	(___fladd@b+3)^0,w,c
  5679  001D12  A4D8               	btfss	status,2,c
  5680  001D14  EF8E  F00E         	goto	u2821
  5681  001D18  EF90  F00E         	goto	u2820
  5682  001D1C                     u2821:
  5683  001D1C  EFC5  F00E         	goto	l2786
  5684  001D20                     u2820:
  5685  001D20  5025               	movf	___fladd@grs^0,w,c
  5686  001D22  A4D8               	btfss	status,2,c
  5687  001D24  EF96  F00E         	goto	u2831
  5688  001D28  EF98  F00E         	goto	u2830
  5689  001D2C                     u2831:
  5690  001D2C  EFC5  F00E         	goto	l2786
  5691  001D30                     u2830:
  5692  001D30  0E00               	movlw	0
  5693  001D32  6E16               	movwf	?___fladd^0,c
  5694  001D34  0E00               	movlw	0
  5695  001D36  6E17               	movwf	(?___fladd+1)^0,c
  5696  001D38  0E00               	movlw	0
  5697  001D3A  6E18               	movwf	(?___fladd+2)^0,c
  5698  001D3C  0E00               	movlw	0
  5699  001D3E  6E19               	movwf	(?___fladd+3)^0,c
  5700  001D40  EF60  F00F         	goto	l633
  5701  001D44                     l2770:
  5702  001D44  90D8               	bcf	status,0,c
  5703  001D46  3616               	rlcf	___fladd@b^0,f,c
  5704  001D48  3617               	rlcf	(___fladd@b+1)^0,f,c
  5705  001D4A  3618               	rlcf	(___fladd@b+2)^0,f,c
  5706  001D4C  3619               	rlcf	(___fladd@b+3)^0,f,c
  5707  001D4E  AE25               	btfss	___fladd@grs^0,7,c
  5708  001D50  EFAC  F00E         	goto	u2841
  5709  001D54  EFAE  F00E         	goto	u2840
  5710  001D58                     u2841:
  5711  001D58  EFAF  F00E         	goto	l2776
  5712  001D5C                     u2840:
  5713  001D5C  8016               	bsf	___fladd@b^0,0,c
  5714  001D5E                     l2776:
  5715  001D5E  A025               	btfss	___fladd@grs^0,0,c
  5716  001D60  EFB4  F00E         	goto	u2851
  5717  001D64  EFB6  F00E         	goto	u2850
  5718  001D68                     u2851:
  5719  001D68  EFBA  F00E         	goto	l2780
  5720  001D6C                     u2850:
  5721  001D6C  80D8               	bsf	status,0,c
  5722  001D6E  3625               	rlcf	___fladd@grs^0,f,c
  5723  001D70  EFBC  F00E         	goto	l2782
  5724  001D74                     l2780:
  5725  001D74  90D8               	bcf	status,0,c
  5726  001D76  3625               	rlcf	___fladd@grs^0,f,c
  5727  001D78                     l2782:
  5728  001D78  5024               	movf	___fladd@bexp^0,w,c
  5729  001D7A  B4D8               	btfsc	status,2,c
  5730  001D7C  EFC2  F00E         	goto	u2861
  5731  001D80  EFC4  F00E         	goto	u2860
  5732  001D84                     u2861:
  5733  001D84  EFC5  F00E         	goto	l2786
  5734  001D88                     u2860:
  5735  001D88  0624               	decf	___fladd@bexp^0,f,c
  5736  001D8A                     l2786:
  5737  001D8A  AE18               	btfss	(___fladd@b+2)^0,7,c
  5738  001D8C  EFCA  F00E         	goto	u2871
  5739  001D90  EFCC  F00E         	goto	u2870
  5740  001D94                     u2871:
  5741  001D94  EFA2  F00E         	goto	l2770
  5742  001D98                     u2870:
  5743  001D98                     l2788:
  5744  001D98  0E00               	movlw	0
  5745  001D9A  6E23               	movwf	___fladd@aexp^0,c
  5746  001D9C  AE25               	btfss	___fladd@grs^0,7,c
  5747  001D9E  EFD3  F00E         	goto	u2881
  5748  001DA2  EFD5  F00E         	goto	u2880
  5749  001DA6                     u2881:
  5750  001DA6  EFED  F00E         	goto	l650
  5751  001DAA                     u2880:
  5752  001DAA  C025  F01E         	movff	___fladd@grs,??___fladd
  5753  001DAE  0E7F               	movlw	127
  5754  001DB0  161E               	andwf	??___fladd^0,f,c
  5755  001DB2  B4D8               	btfsc	status,2,c
  5756  001DB4  EFDE  F00E         	goto	u2891
  5757  001DB8  EFE0  F00E         	goto	u2890
  5758  001DBC                     u2891:
  5759  001DBC  EFE4  F00E         	goto	l651
  5760  001DC0                     u2890:
  5761  001DC0                     l2794:
  5762  001DC0  0E01               	movlw	1
  5763  001DC2  6E23               	movwf	___fladd@aexp^0,c
  5764  001DC4  EFED  F00E         	goto	l650
  5765  001DC8                     l651:
  5766  001DC8  A016               	btfss	___fladd@b^0,0,c
  5767  001DCA  EFE9  F00E         	goto	u2901
  5768  001DCE  EFEB  F00E         	goto	u2900
  5769  001DD2                     u2901:
  5770  001DD2  EFED  F00E         	goto	l650
  5771  001DD6                     u2900:
  5772  001DD6  EFE0  F00E         	goto	l2794
  5773  001DDA                     l650:
  5774  001DDA  5023               	movf	___fladd@aexp^0,w,c
  5775  001DDC  B4D8               	btfsc	status,2,c
  5776  001DDE  EFF3  F00E         	goto	u2911
  5777  001DE2  EFF5  F00E         	goto	u2910
  5778  001DE6                     u2911:
  5779  001DE6  EF20  F00F         	goto	l2806
  5780  001DEA                     u2910:
  5781  001DEA  0E01               	movlw	1
  5782  001DEC  2616               	addwf	___fladd@b^0,f,c
  5783  001DEE  0E00               	movlw	0
  5784  001DF0  2217               	addwfc	(___fladd@b+1)^0,f,c
  5785  001DF2  2218               	addwfc	(___fladd@b+2)^0,f,c
  5786  001DF4  2219               	addwfc	(___fladd@b+3)^0,f,c
  5787  001DF6  A019               	btfss	(___fladd@b+3)^0,0,c
  5788  001DF8  EF00  F00F         	goto	u2921
  5789  001DFC  EF02  F00F         	goto	u2920
  5790  001E00                     u2921:
  5791  001E00  EF20  F00F         	goto	l2806
  5792  001E04                     u2920:
  5793  001E04  C016  F01E         	movff	___fladd@b,??___fladd
  5794  001E08  C017  F01F         	movff	___fladd@b+1,??___fladd+1
  5795  001E0C  C018  F020         	movff	___fladd@b+2,??___fladd+2
  5796  001E10  C019  F021         	movff	___fladd@b+3,??___fladd+3
  5797  001E14  3421               	rlcf	(??___fladd+3)^0,w,c
  5798  001E16  3221               	rrcf	(??___fladd+3)^0,f,c
  5799  001E18  3220               	rrcf	(??___fladd+2)^0,f,c
  5800  001E1A  321F               	rrcf	(??___fladd+1)^0,f,c
  5801  001E1C  321E               	rrcf	??___fladd^0,f,c
  5802  001E1E  C01E  F016         	movff	??___fladd,___fladd@b
  5803  001E22  C01F  F017         	movff	??___fladd+1,___fladd@b+1
  5804  001E26  C020  F018         	movff	??___fladd+2,___fladd@b+2
  5805  001E2A  C021  F019         	movff	??___fladd+3,___fladd@b+3
  5806  001E2E  2824               	incf	___fladd@bexp^0,w,c
  5807  001E30  B4D8               	btfsc	status,2,c
  5808  001E32  EF1D  F00F         	goto	u2931
  5809  001E36  EF1F  F00F         	goto	u2930
  5810  001E3A                     u2931:
  5811  001E3A  EF20  F00F         	goto	l2806
  5812  001E3E                     u2930:
  5813  001E3E  2A24               	incf	___fladd@bexp^0,f,c
  5814  001E40                     l2806:
  5815  001E40  2824               	incf	___fladd@bexp^0,w,c
  5816  001E42  B4D8               	btfsc	status,2,c
  5817  001E44  EF26  F00F         	goto	u2941
  5818  001E48  EF28  F00F         	goto	u2940
  5819  001E4C                     u2941:
  5820  001E4C  EF30  F00F         	goto	l2810
  5821  001E50                     u2940:
  5822  001E50  5024               	movf	___fladd@bexp^0,w,c
  5823  001E52  A4D8               	btfss	status,2,c
  5824  001E54  EF2E  F00F         	goto	u2951
  5825  001E58  EF30  F00F         	goto	u2950
  5826  001E5C                     u2951:
  5827  001E5C  EF42  F00F         	goto	l2814
  5828  001E60                     u2950:
  5829  001E60                     l2810:
  5830  001E60  0E00               	movlw	0
  5831  001E62  6E16               	movwf	___fladd@b^0,c
  5832  001E64  0E00               	movlw	0
  5833  001E66  6E17               	movwf	(___fladd@b+1)^0,c
  5834  001E68  0E00               	movlw	0
  5835  001E6A  6E18               	movwf	(___fladd@b+2)^0,c
  5836  001E6C  0E00               	movlw	0
  5837  001E6E  6E19               	movwf	(___fladd@b+3)^0,c
  5838  001E70  5024               	movf	___fladd@bexp^0,w,c
  5839  001E72  A4D8               	btfss	status,2,c
  5840  001E74  EF3E  F00F         	goto	u2961
  5841  001E78  EF40  F00F         	goto	u2960
  5842  001E7C                     u2961:
  5843  001E7C  EF42  F00F         	goto	l2814
  5844  001E80                     u2960:
  5845  001E80  0E00               	movlw	0
  5846  001E82  6E22               	movwf	___fladd@signs^0,c
  5847  001E84                     l2814:
  5848  001E84  A024               	btfss	___fladd@bexp^0,0,c
  5849  001E86  EF47  F00F         	goto	u2971
  5850  001E8A  EF49  F00F         	goto	u2970
  5851  001E8E                     u2971:
  5852  001E8E  EF4C  F00F         	goto	l2818
  5853  001E92                     u2970:
  5854  001E92  8E18               	bsf	(___fladd@b+2)^0,7,c
  5855  001E94  EF4D  F00F         	goto	l2820
  5856  001E98                     l2818:
  5857  001E98  9E18               	bcf	(___fladd@b+2)^0,7,c
  5858  001E9A                     l2820:
  5859  001E9A  90D8               	bcf	status,0,c
  5860  001E9C  3024               	rrcf	___fladd@bexp^0,w,c
  5861  001E9E  6E19               	movwf	(___fladd@b+3)^0,c
  5862  001EA0  AE22               	btfss	___fladd@signs^0,7,c
  5863  001EA2  EF55  F00F         	goto	u2981
  5864  001EA6  EF57  F00F         	goto	u2980
  5865  001EAA                     u2981:
  5866  001EAA  EF58  F00F         	goto	l2826
  5867  001EAE                     u2980:
  5868  001EAE  8E19               	bsf	(___fladd@b+3)^0,7,c
  5869  001EB0                     l2826:
  5870  001EB0  C016  F016         	movff	___fladd@b,?___fladd
  5871  001EB4  C017  F017         	movff	___fladd@b+1,?___fladd+1
  5872  001EB8  C018  F018         	movff	___fladd@b+2,?___fladd+2
  5873  001EBC  C019  F019         	movff	___fladd@b+3,?___fladd+3
  5874  001EC0                     l633:
  5875  001EC0  0012               	return		;funcret
  5876  001EC2                     __end_of___fladd:
  5877                           	callstack 0
  5878                           
  5879 ;; *************** function ___flneg *****************
  5880 ;; Defined at:
  5881 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  f1              4   21[COMRAM] unsigned char 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  4   21[COMRAM] unsigned char 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5895 ;;      Params:         4       0       0       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5898 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5899 ;;Total ram usage:        4 bytes
  5900 ;; Hardware stack levels used: 1
  5901 ;; Hardware stack levels required when called: 4
  5902 ;; This function calls:
  5903 ;;		Nothing
  5904 ;; This function is called by:
  5905 ;;		_efgtoa
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text18
  5910  003ABE                     __ptext18:
  5911                           	callstack 0
  5912  003ABE                     ___flneg:
  5913                           	callstack 22
  5914  003ABE  5016               	movf	___flneg@f1^0,w,c
  5915  003AC0  1017               	iorwf	(___flneg@f1+1)^0,w,c
  5916  003AC2  1018               	iorwf	(___flneg@f1+2)^0,w,c
  5917  003AC4  1019               	iorwf	(___flneg@f1+3)^0,w,c
  5918  003AC6  B4D8               	btfsc	status,2,c
  5919  003AC8  EF68  F01D         	goto	u3641
  5920  003ACC  EF6A  F01D         	goto	u3640
  5921  003AD0                     u3641:
  5922  003AD0  EF72  F01D         	goto	l3244
  5923  003AD4                     u3640:
  5924  003AD4  0E00               	movlw	0
  5925  003AD6  1A16               	xorwf	___flneg@f1^0,f,c
  5926  003AD8  0E00               	movlw	0
  5927  003ADA  1A17               	xorwf	(___flneg@f1+1)^0,f,c
  5928  003ADC  0E00               	movlw	0
  5929  003ADE  1A18               	xorwf	(___flneg@f1+2)^0,f,c
  5930  003AE0  0E80               	movlw	128
  5931  003AE2  1A19               	xorwf	(___flneg@f1+3)^0,f,c
  5932  003AE4                     l3244:
  5933  003AE4  C016  F016         	movff	___flneg@f1,?___flneg
  5934  003AE8  C017  F017         	movff	___flneg@f1+1,?___flneg+1
  5935  003AEC  C018  F018         	movff	___flneg@f1+2,?___flneg+2
  5936  003AF0  C019  F019         	movff	___flneg@f1+3,?___flneg+3
  5937  003AF4  0012               	return		;funcret
  5938  003AF6                     __end_of___flneg:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function ___flmul *****************
  5942 ;; Defined at:
  5943 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  b               4   21[COMRAM] unsigned char 
  5946 ;;  a               4   25[COMRAM] unsigned char 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  prod            4   40[COMRAM] struct .
  5949 ;;  grs             4   34[COMRAM] unsigned long 
  5950 ;;  temp            2   44[COMRAM] struct .
  5951 ;;  bexp            1   39[COMRAM] unsigned char 
  5952 ;;  aexp            1   38[COMRAM] unsigned char 
  5953 ;;  sign            1   33[COMRAM] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  4   21[COMRAM] unsigned char 
  5956 ;; Registers used:
  5957 ;;		wreg, status,2, status,0, prodl, prodh
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5963 ;;      Params:         8       0       0       0       0       0       0       0       0
  5964 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5965 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5966 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5967 ;;Total ram usage:       25 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; Hardware stack levels required when called: 4
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_efgtoa
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text19
  5978  001EC2                     __ptext19:
  5979                           	callstack 0
  5980  001EC2                     ___flmul:
  5981                           	callstack 22
  5982  001EC2  5019               	movf	(___flmul@b+3)^0,w,c
  5983  001EC4  0B80               	andlw	128
  5984  001EC6  6E22               	movwf	___flmul@sign^0,c
  5985  001EC8  5019               	movf	(___flmul@b+3)^0,w,c
  5986  001ECA  2419               	addwf	(___flmul@b+3)^0,w,c
  5987  001ECC  6E28               	movwf	___flmul@bexp^0,c
  5988  001ECE  AE18               	btfss	(___flmul@b+2)^0,7,c
  5989  001ED0  EF6C  F00F         	goto	u3251
  5990  001ED4  EF6E  F00F         	goto	u3250
  5991  001ED8                     u3251:
  5992  001ED8  EF6F  F00F         	goto	l2992
  5993  001EDC                     u3250:
  5994  001EDC  8028               	bsf	___flmul@bexp^0,0,c
  5995  001EDE                     l2992:
  5996  001EDE  5028               	movf	___flmul@bexp^0,w,c
  5997  001EE0  B4D8               	btfsc	status,2,c
  5998  001EE2  EF75  F00F         	goto	u3261
  5999  001EE6  EF77  F00F         	goto	u3260
  6000  001EEA                     u3261:
  6001  001EEA  EF8A  F00F         	goto	l3000
  6002  001EEE                     u3260:
  6003  001EEE  2828               	incf	___flmul@bexp^0,w,c
  6004  001EF0  A4D8               	btfss	status,2,c
  6005  001EF2  EF7D  F00F         	goto	u3271
  6006  001EF6  EF7F  F00F         	goto	u3270
  6007  001EFA                     u3271:
  6008  001EFA  EF87  F00F         	goto	l2998
  6009  001EFE                     u3270:
  6010  001EFE  0E00               	movlw	0
  6011  001F00  6E16               	movwf	___flmul@b^0,c
  6012  001F02  0E00               	movlw	0
  6013  001F04  6E17               	movwf	(___flmul@b+1)^0,c
  6014  001F06  0E00               	movlw	0
  6015  001F08  6E18               	movwf	(___flmul@b+2)^0,c
  6016  001F0A  0E00               	movlw	0
  6017  001F0C  6E19               	movwf	(___flmul@b+3)^0,c
  6018  001F0E                     l2998:
  6019  001F0E  8E18               	bsf	(___flmul@b+2)^0,7,c
  6020  001F10  EF92  F00F         	goto	l3002
  6021  001F14                     l3000:
  6022  001F14  0E00               	movlw	0
  6023  001F16  6E16               	movwf	___flmul@b^0,c
  6024  001F18  0E00               	movlw	0
  6025  001F1A  6E17               	movwf	(___flmul@b+1)^0,c
  6026  001F1C  0E00               	movlw	0
  6027  001F1E  6E18               	movwf	(___flmul@b+2)^0,c
  6028  001F20  0E00               	movlw	0
  6029  001F22  6E19               	movwf	(___flmul@b+3)^0,c
  6030  001F24                     l3002:
  6031  001F24  501D               	movf	(___flmul@a+3)^0,w,c
  6032  001F26  0B80               	andlw	128
  6033  001F28  1A22               	xorwf	___flmul@sign^0,f,c
  6034  001F2A  501D               	movf	(___flmul@a+3)^0,w,c
  6035  001F2C  241D               	addwf	(___flmul@a+3)^0,w,c
  6036  001F2E  6E27               	movwf	___flmul@aexp^0,c
  6037  001F30  AE1C               	btfss	(___flmul@a+2)^0,7,c
  6038  001F32  EF9D  F00F         	goto	u3281
  6039  001F36  EF9F  F00F         	goto	u3280
  6040  001F3A                     u3281:
  6041  001F3A  EFA0  F00F         	goto	l3010
  6042  001F3E                     u3280:
  6043  001F3E  8027               	bsf	___flmul@aexp^0,0,c
  6044  001F40                     l3010:
  6045  001F40  5027               	movf	___flmul@aexp^0,w,c
  6046  001F42  B4D8               	btfsc	status,2,c
  6047  001F44  EFA6  F00F         	goto	u3291
  6048  001F48  EFA8  F00F         	goto	u3290
  6049  001F4C                     u3291:
  6050  001F4C  EFBB  F00F         	goto	l3018
  6051  001F50                     u3290:
  6052  001F50  2827               	incf	___flmul@aexp^0,w,c
  6053  001F52  A4D8               	btfss	status,2,c
  6054  001F54  EFAE  F00F         	goto	u3301
  6055  001F58  EFB0  F00F         	goto	u3300
  6056  001F5C                     u3301:
  6057  001F5C  EFB8  F00F         	goto	l3016
  6058  001F60                     u3300:
  6059  001F60  0E00               	movlw	0
  6060  001F62  6E1A               	movwf	___flmul@a^0,c
  6061  001F64  0E00               	movlw	0
  6062  001F66  6E1B               	movwf	(___flmul@a+1)^0,c
  6063  001F68  0E00               	movlw	0
  6064  001F6A  6E1C               	movwf	(___flmul@a+2)^0,c
  6065  001F6C  0E00               	movlw	0
  6066  001F6E  6E1D               	movwf	(___flmul@a+3)^0,c
  6067  001F70                     l3016:
  6068  001F70  8E1C               	bsf	(___flmul@a+2)^0,7,c
  6069  001F72  EFC3  F00F         	goto	l710
  6070  001F76                     l3018:
  6071  001F76  0E00               	movlw	0
  6072  001F78  6E1A               	movwf	___flmul@a^0,c
  6073  001F7A  0E00               	movlw	0
  6074  001F7C  6E1B               	movwf	(___flmul@a+1)^0,c
  6075  001F7E  0E00               	movlw	0
  6076  001F80  6E1C               	movwf	(___flmul@a+2)^0,c
  6077  001F82  0E00               	movlw	0
  6078  001F84  6E1D               	movwf	(___flmul@a+3)^0,c
  6079  001F86                     l710:
  6080  001F86  5027               	movf	___flmul@aexp^0,w,c
  6081  001F88  B4D8               	btfsc	status,2,c
  6082  001F8A  EFC9  F00F         	goto	u3311
  6083  001F8E  EFCB  F00F         	goto	u3310
  6084  001F92                     u3311:
  6085  001F92  EFD3  F00F         	goto	l3022
  6086  001F96                     u3310:
  6087  001F96  5028               	movf	___flmul@bexp^0,w,c
  6088  001F98  A4D8               	btfss	status,2,c
  6089  001F9A  EFD1  F00F         	goto	u3321
  6090  001F9E  EFD3  F00F         	goto	u3320
  6091  001FA2                     u3321:
  6092  001FA2  EFDD  F00F         	goto	l3026
  6093  001FA6                     u3320:
  6094  001FA6                     l3022:
  6095  001FA6  0E00               	movlw	0
  6096  001FA8  6E16               	movwf	?___flmul^0,c
  6097  001FAA  0E00               	movlw	0
  6098  001FAC  6E17               	movwf	(?___flmul+1)^0,c
  6099  001FAE  0E00               	movlw	0
  6100  001FB0  6E18               	movwf	(?___flmul+2)^0,c
  6101  001FB2  0E00               	movlw	0
  6102  001FB4  6E19               	movwf	(?___flmul+3)^0,c
  6103  001FB6  EF75  F011         	goto	l714
  6104  001FBA                     l3026:
  6105  001FBA  501C               	movf	(___flmul@a+2)^0,w,c
  6106  001FBC  0216               	mulwf	___flmul@b^0,c
  6107  001FBE  CFF3 F02D          	movff	prodl,___flmul@temp
  6108  001FC2  CFF4 F02E          	movff	prodh,___flmul@temp+1
  6109  001FC6  502D               	movf	___flmul@temp^0,w,c
  6110  001FC8  6E23               	movwf	___flmul@grs^0,c
  6111  001FCA  6A24               	clrf	(___flmul@grs+1)^0,c
  6112  001FCC  6A25               	clrf	(___flmul@grs+2)^0,c
  6113  001FCE  6A26               	clrf	(___flmul@grs+3)^0,c
  6114  001FD0  502E               	movf	(___flmul@temp+1)^0,w,c
  6115  001FD2  6E29               	movwf	___flmul@prod^0,c
  6116  001FD4  6A2A               	clrf	(___flmul@prod+1)^0,c
  6117  001FD6  6A2B               	clrf	(___flmul@prod+2)^0,c
  6118  001FD8  6A2C               	clrf	(___flmul@prod+3)^0,c
  6119  001FDA  501B               	movf	(___flmul@a+1)^0,w,c
  6120  001FDC  0217               	mulwf	(___flmul@b+1)^0,c
  6121  001FDE  CFF3 F02D          	movff	prodl,___flmul@temp
  6122  001FE2  CFF4 F02E          	movff	prodh,___flmul@temp+1
  6123  001FE6  502D               	movf	___flmul@temp^0,w,c
  6124  001FE8  2623               	addwf	___flmul@grs^0,f,c
  6125  001FEA  0E00               	movlw	0
  6126  001FEC  2224               	addwfc	(___flmul@grs+1)^0,f,c
  6127  001FEE  2225               	addwfc	(___flmul@grs+2)^0,f,c
  6128  001FF0  2226               	addwfc	(___flmul@grs+3)^0,f,c
  6129  001FF2  502E               	movf	(___flmul@temp+1)^0,w,c
  6130  001FF4  2629               	addwf	___flmul@prod^0,f,c
  6131  001FF6  0E00               	movlw	0
  6132  001FF8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  6133  001FFA  222B               	addwfc	(___flmul@prod+2)^0,f,c
  6134  001FFC  222C               	addwfc	(___flmul@prod+3)^0,f,c
  6135  001FFE  501A               	movf	___flmul@a^0,w,c
  6136  002000  0218               	mulwf	(___flmul@b+2)^0,c
  6137  002002  CFF3 F02D          	movff	prodl,___flmul@temp
  6138  002006  CFF4 F02E          	movff	prodh,___flmul@temp+1
  6139  00200A  502D               	movf	___flmul@temp^0,w,c
  6140  00200C  2623               	addwf	___flmul@grs^0,f,c
  6141  00200E  0E00               	movlw	0
  6142  002010  2224               	addwfc	(___flmul@grs+1)^0,f,c
  6143  002012  2225               	addwfc	(___flmul@grs+2)^0,f,c
  6144  002014  2226               	addwfc	(___flmul@grs+3)^0,f,c
  6145  002016  502E               	movf	(___flmul@temp+1)^0,w,c
  6146  002018  2629               	addwf	___flmul@prod^0,f,c
  6147  00201A  0E00               	movlw	0
  6148  00201C  222A               	addwfc	(___flmul@prod+1)^0,f,c
  6149  00201E  222B               	addwfc	(___flmul@prod+2)^0,f,c
  6150  002020  222C               	addwfc	(___flmul@prod+3)^0,f,c
  6151  002022  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  6152  002026  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  6153  00202A  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  6154  00202E  6A23               	clrf	___flmul@grs^0,c
  6155  002030  501A               	movf	___flmul@a^0,w,c
  6156  002032  0217               	mulwf	(___flmul@b+1)^0,c
  6157  002034  CFF3 F02D          	movff	prodl,___flmul@temp
  6158  002038  CFF4 F02E          	movff	prodh,___flmul@temp+1
  6159  00203C  502D               	movf	___flmul@temp^0,w,c
  6160  00203E  2623               	addwf	___flmul@grs^0,f,c
  6161  002040  502E               	movf	(___flmul@temp+1)^0,w,c
  6162  002042  2224               	addwfc	(___flmul@grs+1)^0,f,c
  6163  002044  0E00               	movlw	0
  6164  002046  2225               	addwfc	(___flmul@grs+2)^0,f,c
  6165  002048  0E00               	movlw	0
  6166  00204A  2226               	addwfc	(___flmul@grs+3)^0,f,c
  6167  00204C  501B               	movf	(___flmul@a+1)^0,w,c
  6168  00204E  0216               	mulwf	___flmul@b^0,c
  6169  002050  CFF3 F02D          	movff	prodl,___flmul@temp
  6170  002054  CFF4 F02E          	movff	prodh,___flmul@temp+1
  6171  002058  502D               	movf	___flmul@temp^0,w,c
  6172  00205A  2623               	addwf	___flmul@grs^0,f,c
  6173  00205C  502E               	movf	(___flmul@temp+1)^0,w,c
  6174  00205E  2224               	addwfc	(___flmul@grs+1)^0,f,c
  6175  002060  0E00               	movlw	0
  6176  002062  2225               	addwfc	(___flmul@grs+2)^0,f,c
  6177  002064  0E00               	movlw	0
  6178  002066  2226               	addwfc	(___flmul@grs+3)^0,f,c
  6179  002068  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  6180  00206C  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  6181  002070  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  6182  002074  6A23               	clrf	___flmul@grs^0,c
  6183  002076  501A               	movf	___flmul@a^0,w,c
  6184  002078  0216               	mulwf	___flmul@b^0,c
  6185  00207A  CFF3 F02D          	movff	prodl,___flmul@temp
  6186  00207E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  6187  002082  502D               	movf	___flmul@temp^0,w,c
  6188  002084  2623               	addwf	___flmul@grs^0,f,c
  6189  002086  502E               	movf	(___flmul@temp+1)^0,w,c
  6190  002088  2224               	addwfc	(___flmul@grs+1)^0,f,c
  6191  00208A  0E00               	movlw	0
  6192  00208C  2225               	addwfc	(___flmul@grs+2)^0,f,c
  6193  00208E  0E00               	movlw	0
  6194  002090  2226               	addwfc	(___flmul@grs+3)^0,f,c
  6195  002092  501C               	movf	(___flmul@a+2)^0,w,c
  6196  002094  0217               	mulwf	(___flmul@b+1)^0,c
  6197  002096  CFF3 F02D          	movff	prodl,___flmul@temp
  6198  00209A  CFF4 F02E          	movff	prodh,___flmul@temp+1
  6199  00209E  502D               	movf	___flmul@temp^0,w,c
  6200  0020A0  2629               	addwf	___flmul@prod^0,f,c
  6201  0020A2  502E               	movf	(___flmul@temp+1)^0,w,c
  6202  0020A4  222A               	addwfc	(___flmul@prod+1)^0,f,c
  6203  0020A6  0E00               	movlw	0
  6204  0020A8  222B               	addwfc	(___flmul@prod+2)^0,f,c
  6205  0020AA  0E00               	movlw	0
  6206  0020AC  222C               	addwfc	(___flmul@prod+3)^0,f,c
  6207  0020AE  501B               	movf	(___flmul@a+1)^0,w,c
  6208  0020B0  0218               	mulwf	(___flmul@b+2)^0,c
  6209  0020B2  CFF3 F02D          	movff	prodl,___flmul@temp
  6210  0020B6  CFF4 F02E          	movff	prodh,___flmul@temp+1
  6211  0020BA  502D               	movf	___flmul@temp^0,w,c
  6212  0020BC  2629               	addwf	___flmul@prod^0,f,c
  6213  0020BE  502E               	movf	(___flmul@temp+1)^0,w,c
  6214  0020C0  222A               	addwfc	(___flmul@prod+1)^0,f,c
  6215  0020C2  0E00               	movlw	0
  6216  0020C4  222B               	addwfc	(___flmul@prod+2)^0,f,c
  6217  0020C6  0E00               	movlw	0
  6218  0020C8  222C               	addwfc	(___flmul@prod+3)^0,f,c
  6219  0020CA  501C               	movf	(___flmul@a+2)^0,w,c
  6220  0020CC  0218               	mulwf	(___flmul@b+2)^0,c
  6221  0020CE  CFF3 F02D          	movff	prodl,___flmul@temp
  6222  0020D2  CFF4 F02E          	movff	prodh,___flmul@temp+1
  6223  0020D6  502D               	movf	___flmul@temp^0,w,c
  6224  0020D8  6E1E               	movwf	??___flmul^0,c
  6225  0020DA  502E               	movf	(___flmul@temp+1)^0,w,c
  6226  0020DC  6E1F               	movwf	(??___flmul+1)^0,c
  6227  0020DE  6A20               	clrf	(??___flmul+2)^0,c
  6228  0020E0  6A21               	clrf	(??___flmul+3)^0,c
  6229  0020E2  C020  F021         	movff	??___flmul+2,??___flmul+3
  6230  0020E6  C01F  F020         	movff	??___flmul+1,??___flmul+2
  6231  0020EA  C01E  F01F         	movff	??___flmul,??___flmul+1
  6232  0020EE  6A1E               	clrf	??___flmul^0,c
  6233  0020F0  501E               	movf	??___flmul^0,w,c
  6234  0020F2  2629               	addwf	___flmul@prod^0,f,c
  6235  0020F4  501F               	movf	(??___flmul+1)^0,w,c
  6236  0020F6  222A               	addwfc	(___flmul@prod+1)^0,f,c
  6237  0020F8  5020               	movf	(??___flmul+2)^0,w,c
  6238  0020FA  222B               	addwfc	(___flmul@prod+2)^0,f,c
  6239  0020FC  5021               	movf	(??___flmul+3)^0,w,c
  6240  0020FE  222C               	addwfc	(___flmul@prod+3)^0,f,c
  6241  002100  C023  F01E         	movff	___flmul@grs,??___flmul
  6242  002104  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  6243  002108  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  6244  00210C  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  6245  002110  0E19               	movlw	25
  6246  002112  EF90  F010         	goto	u3330
  6247  002116                     u3335:
  6248  002116  90D8               	bcf	status,0,c
  6249  002118  3221               	rrcf	(??___flmul+3)^0,f,c
  6250  00211A  3220               	rrcf	(??___flmul+2)^0,f,c
  6251  00211C  321F               	rrcf	(??___flmul+1)^0,f,c
  6252  00211E  321E               	rrcf	??___flmul^0,f,c
  6253  002120                     u3330:
  6254  002120  2EE8               	decfsz	wreg,f,c
  6255  002122  EF8B  F010         	goto	u3335
  6256  002126  501E               	movf	??___flmul^0,w,c
  6257  002128  2629               	addwf	___flmul@prod^0,f,c
  6258  00212A  501F               	movf	(??___flmul+1)^0,w,c
  6259  00212C  222A               	addwfc	(___flmul@prod+1)^0,f,c
  6260  00212E  5020               	movf	(??___flmul+2)^0,w,c
  6261  002130  222B               	addwfc	(___flmul@prod+2)^0,f,c
  6262  002132  5021               	movf	(??___flmul+3)^0,w,c
  6263  002134  222C               	addwfc	(___flmul@prod+3)^0,f,c
  6264  002136  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  6265  00213A  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  6266  00213E  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  6267  002142  6A23               	clrf	___flmul@grs^0,c
  6268  002144  5027               	movf	___flmul@aexp^0,w,c
  6269  002146  C028  F01E         	movff	___flmul@bexp,??___flmul
  6270  00214A  6A1F               	clrf	(??___flmul+1)^0,c
  6271  00214C  261E               	addwf	??___flmul^0,f,c
  6272  00214E  0E00               	movlw	0
  6273  002150  221F               	addwfc	(??___flmul+1)^0,f,c
  6274  002152  0E82               	movlw	130
  6275  002154  241E               	addwf	??___flmul^0,w,c
  6276  002156  6E2D               	movwf	___flmul@temp^0,c
  6277  002158  0EFF               	movlw	255
  6278  00215A  201F               	addwfc	(??___flmul+1)^0,w,c
  6279  00215C  6E2E               	movwf	(___flmul@temp+1)^0,c
  6280  00215E  EFC6  F010         	goto	l3074
  6281  002162                     l3068:
  6282  002162  90D8               	bcf	status,0,c
  6283  002164  3629               	rlcf	___flmul@prod^0,f,c
  6284  002166  362A               	rlcf	(___flmul@prod+1)^0,f,c
  6285  002168  362B               	rlcf	(___flmul@prod+2)^0,f,c
  6286  00216A  362C               	rlcf	(___flmul@prod+3)^0,f,c
  6287  00216C  AE26               	btfss	(___flmul@grs+3)^0,7,c
  6288  00216E  EFBB  F010         	goto	u3341
  6289  002172  EFBD  F010         	goto	u3340
  6290  002176                     u3341:
  6291  002176  EFBE  F010         	goto	l717
  6292  00217A                     u3340:
  6293  00217A  8029               	bsf	___flmul@prod^0,0,c
  6294  00217C                     l717:
  6295  00217C  90D8               	bcf	status,0,c
  6296  00217E  3623               	rlcf	___flmul@grs^0,f,c
  6297  002180  3624               	rlcf	(___flmul@grs+1)^0,f,c
  6298  002182  3625               	rlcf	(___flmul@grs+2)^0,f,c
  6299  002184  3626               	rlcf	(___flmul@grs+3)^0,f,c
  6300  002186  062D               	decf	___flmul@temp^0,f,c
  6301  002188  A0D8               	btfss	status,0,c
  6302  00218A  062E               	decf	(___flmul@temp+1)^0,f,c
  6303  00218C                     l3074:
  6304  00218C  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  6305  00218E  EFCB  F010         	goto	u3351
  6306  002192  EFCD  F010         	goto	u3350
  6307  002196                     u3351:
  6308  002196  EFB1  F010         	goto	l3068
  6309  00219A                     u3350:
  6310  00219A  0E00               	movlw	0
  6311  00219C  6E27               	movwf	___flmul@aexp^0,c
  6312  00219E  AE26               	btfss	(___flmul@grs+3)^0,7,c
  6313  0021A0  EFD4  F010         	goto	u3361
  6314  0021A4  EFD6  F010         	goto	u3360
  6315  0021A8                     u3361:
  6316  0021A8  EFFA  F010         	goto	l719
  6317  0021AC                     u3360:
  6318  0021AC  0EFF               	movlw	255
  6319  0021AE  1423               	andwf	___flmul@grs^0,w,c
  6320  0021B0  6E1E               	movwf	??___flmul^0,c
  6321  0021B2  0EFF               	movlw	255
  6322  0021B4  1424               	andwf	(___flmul@grs+1)^0,w,c
  6323  0021B6  6E1F               	movwf	(??___flmul+1)^0,c
  6324  0021B8  0EFF               	movlw	255
  6325  0021BA  1425               	andwf	(___flmul@grs+2)^0,w,c
  6326  0021BC  6E20               	movwf	(??___flmul+2)^0,c
  6327  0021BE  0E7F               	movlw	127
  6328  0021C0  1426               	andwf	(___flmul@grs+3)^0,w,c
  6329  0021C2  6E21               	movwf	(??___flmul+3)^0,c
  6330  0021C4  501E               	movf	??___flmul^0,w,c
  6331  0021C6  101F               	iorwf	(??___flmul+1)^0,w,c
  6332  0021C8  1020               	iorwf	(??___flmul+2)^0,w,c
  6333  0021CA  1021               	iorwf	(??___flmul+3)^0,w,c
  6334  0021CC  B4D8               	btfsc	status,2,c
  6335  0021CE  EFEB  F010         	goto	u3371
  6336  0021D2  EFED  F010         	goto	u3370
  6337  0021D6                     u3371:
  6338  0021D6  EFF1  F010         	goto	l720
  6339  0021DA                     u3370:
  6340  0021DA                     l3082:
  6341  0021DA  0E01               	movlw	1
  6342  0021DC  6E27               	movwf	___flmul@aexp^0,c
  6343  0021DE  EFFA  F010         	goto	l719
  6344  0021E2                     l720:
  6345  0021E2  A029               	btfss	___flmul@prod^0,0,c
  6346  0021E4  EFF6  F010         	goto	u3381
  6347  0021E8  EFF8  F010         	goto	u3380
  6348  0021EC                     u3381:
  6349  0021EC  EFFA  F010         	goto	l719
  6350  0021F0                     u3380:
  6351  0021F0  EFED  F010         	goto	l3082
  6352  0021F4                     l719:
  6353  0021F4  5027               	movf	___flmul@aexp^0,w,c
  6354  0021F6  B4D8               	btfsc	status,2,c
  6355  0021F8  EF00  F011         	goto	u3391
  6356  0021FC  EF02  F011         	goto	u3390
  6357  002200                     u3391:
  6358  002200  EF26  F011         	goto	l3094
  6359  002204                     u3390:
  6360  002204  0E01               	movlw	1
  6361  002206  2629               	addwf	___flmul@prod^0,f,c
  6362  002208  0E00               	movlw	0
  6363  00220A  222A               	addwfc	(___flmul@prod+1)^0,f,c
  6364  00220C  222B               	addwfc	(___flmul@prod+2)^0,f,c
  6365  00220E  222C               	addwfc	(___flmul@prod+3)^0,f,c
  6366  002210  A02C               	btfss	(___flmul@prod+3)^0,0,c
  6367  002212  EF0D  F011         	goto	u3401
  6368  002216  EF0F  F011         	goto	u3400
  6369  00221A                     u3401:
  6370  00221A  EF26  F011         	goto	l3094
  6371  00221E                     u3400:
  6372  00221E  C029  F01E         	movff	___flmul@prod,??___flmul
  6373  002222  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  6374  002226  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  6375  00222A  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  6376  00222E  3421               	rlcf	(??___flmul+3)^0,w,c
  6377  002230  3221               	rrcf	(??___flmul+3)^0,f,c
  6378  002232  3220               	rrcf	(??___flmul+2)^0,f,c
  6379  002234  321F               	rrcf	(??___flmul+1)^0,f,c
  6380  002236  321E               	rrcf	??___flmul^0,f,c
  6381  002238  C01E  F029         	movff	??___flmul,___flmul@prod
  6382  00223C  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  6383  002240  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  6384  002244  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  6385  002248  4A2D               	infsnz	___flmul@temp^0,f,c
  6386  00224A  2A2E               	incf	(___flmul@temp+1)^0,f,c
  6387  00224C                     l3094:
  6388  00224C  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  6389  00224E  EF31  F011         	goto	u3411
  6390  002252  502E               	movf	(___flmul@temp+1)^0,w,c
  6391  002254  E108               	bnz	u3410
  6392  002256  282D               	incf	___flmul@temp^0,w,c
  6393  002258  A0D8               	btfss	status,0,c
  6394  00225A  EF31  F011         	goto	u3411
  6395  00225E  EF33  F011         	goto	u3410
  6396  002262                     u3411:
  6397  002262  EF3D  F011         	goto	l3098
  6398  002266                     u3410:
  6399  002266  0E00               	movlw	0
  6400  002268  6E29               	movwf	___flmul@prod^0,c
  6401  00226A  0E00               	movlw	0
  6402  00226C  6E2A               	movwf	(___flmul@prod+1)^0,c
  6403  00226E  0E80               	movlw	128
  6404  002270  6E2B               	movwf	(___flmul@prod+2)^0,c
  6405  002272  0E7F               	movlw	127
  6406  002274  6E2C               	movwf	(___flmul@prod+3)^0,c
  6407  002276  EF6B  F011         	goto	l3110
  6408  00227A                     l3098:
  6409  00227A  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  6410  00227C  EF4A  F011         	goto	u3420
  6411  002280  502E               	movf	(___flmul@temp+1)^0,w,c
  6412  002282  E106               	bnz	u3421
  6413  002284  042D               	decf	___flmul@temp^0,w,c
  6414  002286  B0D8               	btfsc	status,0,c
  6415  002288  EF48  F011         	goto	u3421
  6416  00228C  EF4A  F011         	goto	u3420
  6417  002290                     u3421:
  6418  002290  EF56  F011         	goto	l727
  6419  002294                     u3420:
  6420  002294  0E00               	movlw	0
  6421  002296  6E29               	movwf	___flmul@prod^0,c
  6422  002298  0E00               	movlw	0
  6423  00229A  6E2A               	movwf	(___flmul@prod+1)^0,c
  6424  00229C  0E00               	movlw	0
  6425  00229E  6E2B               	movwf	(___flmul@prod+2)^0,c
  6426  0022A0  0E00               	movlw	0
  6427  0022A2  6E2C               	movwf	(___flmul@prod+3)^0,c
  6428  0022A4  0E00               	movlw	0
  6429  0022A6  6E22               	movwf	___flmul@sign^0,c
  6430  0022A8  EF6B  F011         	goto	l3110
  6431  0022AC                     l727:
  6432  0022AC  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  6433  0022B0  0EFF               	movlw	255
  6434  0022B2  1629               	andwf	___flmul@prod^0,f,c
  6435  0022B4  0EFF               	movlw	255
  6436  0022B6  162A               	andwf	(___flmul@prod+1)^0,f,c
  6437  0022B8  0E7F               	movlw	127
  6438  0022BA  162B               	andwf	(___flmul@prod+2)^0,f,c
  6439  0022BC  0E00               	movlw	0
  6440  0022BE  162C               	andwf	(___flmul@prod+3)^0,f,c
  6441  0022C0  A028               	btfss	___flmul@bexp^0,0,c
  6442  0022C2  EF65  F011         	goto	u3431
  6443  0022C6  EF67  F011         	goto	u3430
  6444  0022CA                     u3431:
  6445  0022CA  EF68  F011         	goto	l3108
  6446  0022CE                     u3430:
  6447  0022CE  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  6448  0022D0                     l3108:
  6449  0022D0  90D8               	bcf	status,0,c
  6450  0022D2  3028               	rrcf	___flmul@bexp^0,w,c
  6451  0022D4  6E2C               	movwf	(___flmul@prod+3)^0,c
  6452  0022D6                     l3110:
  6453  0022D6  5022               	movf	___flmul@sign^0,w,c
  6454  0022D8  122C               	iorwf	(___flmul@prod+3)^0,f,c
  6455  0022DA  C029  F016         	movff	___flmul@prod,?___flmul
  6456  0022DE  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  6457  0022E2  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  6458  0022E6  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  6459  0022EA                     l714:
  6460  0022EA  0012               	return		;funcret
  6461  0022EC                     __end_of___flmul:
  6462                           	callstack 0
  6463                           
  6464 ;; *************** function ___flge *****************
  6465 ;; Defined at:
  6466 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  ff1             4   46[COMRAM] unsigned char 
  6469 ;;  ff2             4   50[COMRAM] unsigned char 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;		None
  6472 ;; Return value:  Size  Location     Type
  6473 ;;		None               void
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6481 ;;      Params:         8       0       0       0       0       0       0       0       0
  6482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6483 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6484 ;;      Totals:         8       4       0       0       0       0       0       0       0
  6485 ;;Total ram usage:       12 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; Hardware stack levels required when called: 4
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_efgtoa
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text20
  6496  002C50                     __ptext20:
  6497                           	callstack 0
  6498  002C50                     ___flge:
  6499                           	callstack 22
  6500  002C50  0E00               	movlw	0
  6501  002C52  142F               	andwf	___flge@ff1^0,w,c
  6502  002C54  0100               	movlb	0	; () banked
  6503  002C56  6F60               	movwf	??___flge& (0+255),b
  6504  002C58  0E00               	movlw	0
  6505  002C5A  1430               	andwf	(___flge@ff1+1)^0,w,c
  6506  002C5C  6F61               	movwf	(??___flge+1)& (0+255),b
  6507  002C5E  0E80               	movlw	128
  6508  002C60  1431               	andwf	(___flge@ff1+2)^0,w,c
  6509  002C62  6F62               	movwf	(??___flge+2)& (0+255),b
  6510  002C64  0E7F               	movlw	127
  6511  002C66  1432               	andwf	(___flge@ff1+3)^0,w,c
  6512  002C68  6F63               	movwf	(??___flge+3)& (0+255),b
  6513  002C6A  5160               	movf	??___flge& (0+255),w,b
  6514  002C6C  1161               	iorwf	(??___flge+1)& (0+255),w,b
  6515  002C6E  1162               	iorwf	(??___flge+2)& (0+255),w,b
  6516  002C70  1163               	iorwf	(??___flge+3)& (0+255),w,b
  6517  002C72  A4D8               	btfss	status,2,c
  6518  002C74  EF3E  F016         	goto	u5071
  6519  002C78  EF40  F016         	goto	u5070
  6520  002C7C                     u5071:
  6521  002C7C  EF48  F016         	goto	l4124
  6522  002C80                     u5070:
  6523  002C80                     
  6524                           ; BSR set to: 0
  6525  002C80  0E00               	movlw	0
  6526  002C82  6E2F               	movwf	___flge@ff1^0,c
  6527  002C84  0E00               	movlw	0
  6528  002C86  6E30               	movwf	(___flge@ff1+1)^0,c
  6529  002C88  0E00               	movlw	0
  6530  002C8A  6E31               	movwf	(___flge@ff1+2)^0,c
  6531  002C8C  0E00               	movlw	0
  6532  002C8E  6E32               	movwf	(___flge@ff1+3)^0,c
  6533  002C90                     l4124:
  6534                           
  6535                           ; BSR set to: 0
  6536  002C90  0E00               	movlw	0
  6537  002C92  1433               	andwf	___flge@ff2^0,w,c
  6538  002C94  6F60               	movwf	??___flge& (0+255),b
  6539  002C96  0E00               	movlw	0
  6540  002C98  1434               	andwf	(___flge@ff2+1)^0,w,c
  6541  002C9A  6F61               	movwf	(??___flge+1)& (0+255),b
  6542  002C9C  0E80               	movlw	128
  6543  002C9E  1435               	andwf	(___flge@ff2+2)^0,w,c
  6544  002CA0  6F62               	movwf	(??___flge+2)& (0+255),b
  6545  002CA2  0E7F               	movlw	127
  6546  002CA4  1436               	andwf	(___flge@ff2+3)^0,w,c
  6547  002CA6  6F63               	movwf	(??___flge+3)& (0+255),b
  6548  002CA8  5160               	movf	??___flge& (0+255),w,b
  6549  002CAA  1161               	iorwf	(??___flge+1)& (0+255),w,b
  6550  002CAC  1162               	iorwf	(??___flge+2)& (0+255),w,b
  6551  002CAE  1163               	iorwf	(??___flge+3)& (0+255),w,b
  6552  002CB0  A4D8               	btfss	status,2,c
  6553  002CB2  EF5D  F016         	goto	u5081
  6554  002CB6  EF5F  F016         	goto	u5080
  6555  002CBA                     u5081:
  6556  002CBA  EF67  F016         	goto	l4128
  6557  002CBE                     u5080:
  6558  002CBE                     
  6559                           ; BSR set to: 0
  6560  002CBE  0E00               	movlw	0
  6561  002CC0  6E33               	movwf	___flge@ff2^0,c
  6562  002CC2  0E00               	movlw	0
  6563  002CC4  6E34               	movwf	(___flge@ff2+1)^0,c
  6564  002CC6  0E00               	movlw	0
  6565  002CC8  6E35               	movwf	(___flge@ff2+2)^0,c
  6566  002CCA  0E00               	movlw	0
  6567  002CCC  6E36               	movwf	(___flge@ff2+3)^0,c
  6568  002CCE                     l4128:
  6569                           
  6570                           ; BSR set to: 0
  6571  002CCE  AE32               	btfss	(___flge@ff1+3)^0,7,c
  6572  002CD0  EF6C  F016         	goto	u5091
  6573  002CD4  EF6E  F016         	goto	u5090
  6574  002CD8                     u5091:
  6575  002CD8  EF77  F016         	goto	l4132
  6576  002CDC                     u5090:
  6577  002CDC                     
  6578                           ; BSR set to: 0
  6579  002CDC  6C2F               	negf	___flge@ff1^0,c
  6580  002CDE  1E30               	comf	(___flge@ff1+1)^0,f,c
  6581  002CE0  B0D8               	btfsc	status,0,c
  6582  002CE2  2A30               	incf	(___flge@ff1+1)^0,f,c
  6583  002CE4  1E31               	comf	(___flge@ff1+2)^0,f,c
  6584  002CE6  B0D8               	btfsc	status,0,c
  6585  002CE8  2A31               	incf	(___flge@ff1+2)^0,f,c
  6586  002CEA  0E80               	movlw	128
  6587  002CEC  5632               	subfwb	(___flge@ff1+3)^0,f,c
  6588  002CEE                     l4132:
  6589                           
  6590                           ; BSR set to: 0
  6591  002CEE  AE36               	btfss	(___flge@ff2+3)^0,7,c
  6592  002CF0  EF7C  F016         	goto	u5101
  6593  002CF4  EF7E  F016         	goto	u5100
  6594  002CF8                     u5101:
  6595  002CF8  EF87  F016         	goto	l361
  6596  002CFC                     u5100:
  6597  002CFC                     
  6598                           ; BSR set to: 0
  6599  002CFC  6C33               	negf	___flge@ff2^0,c
  6600  002CFE  1E34               	comf	(___flge@ff2+1)^0,f,c
  6601  002D00  B0D8               	btfsc	status,0,c
  6602  002D02  2A34               	incf	(___flge@ff2+1)^0,f,c
  6603  002D04  1E35               	comf	(___flge@ff2+2)^0,f,c
  6604  002D06  B0D8               	btfsc	status,0,c
  6605  002D08  2A35               	incf	(___flge@ff2+2)^0,f,c
  6606  002D0A  0E80               	movlw	128
  6607  002D0C  5636               	subfwb	(___flge@ff2+3)^0,f,c
  6608  002D0E                     l361:
  6609                           
  6610                           ; BSR set to: 0
  6611  002D0E  0E00               	movlw	0
  6612  002D10  1A2F               	xorwf	___flge@ff1^0,f,c
  6613  002D12  0E00               	movlw	0
  6614  002D14  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  6615  002D16  0E00               	movlw	0
  6616  002D18  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  6617  002D1A  0E80               	movlw	128
  6618  002D1C  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  6619  002D1E  0E00               	movlw	0
  6620  002D20  1A33               	xorwf	___flge@ff2^0,f,c
  6621  002D22  0E00               	movlw	0
  6622  002D24  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  6623  002D26  0E00               	movlw	0
  6624  002D28  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  6625  002D2A  0E80               	movlw	128
  6626  002D2C  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  6627  002D2E  5033               	movf	___flge@ff2^0,w,c
  6628  002D30  5C2F               	subwf	___flge@ff1^0,w,c
  6629  002D32  5034               	movf	(___flge@ff2+1)^0,w,c
  6630  002D34  5830               	subwfb	(___flge@ff1+1)^0,w,c
  6631  002D36  5035               	movf	(___flge@ff2+2)^0,w,c
  6632  002D38  5831               	subwfb	(___flge@ff1+2)^0,w,c
  6633  002D3A  5036               	movf	(___flge@ff2+3)^0,w,c
  6634  002D3C  5832               	subwfb	(___flge@ff1+3)^0,w,c
  6635  002D3E  B0D8               	btfsc	status,0,c
  6636  002D40  EFA4  F016         	goto	u5111
  6637  002D44  EFA6  F016         	goto	u5110
  6638  002D48                     u5111:
  6639  002D48  EFA9  F016         	goto	l4138
  6640  002D4C                     u5110:
  6641  002D4C                     
  6642                           ; BSR set to: 0
  6643  002D4C  90D8               	bcf	status,0,c
  6644  002D4E  EFAA  F016         	goto	l366
  6645  002D52                     l4138:
  6646                           
  6647                           ; BSR set to: 0
  6648  002D52  80D8               	bsf	status,0,c
  6649  002D54                     l366:
  6650                           
  6651                           ; BSR set to: 0
  6652  002D54  0012               	return		;funcret
  6653  002D56                     __end_of___flge:
  6654                           	callstack 0
  6655                           
  6656 ;; *************** function ___fleq *****************
  6657 ;; Defined at:
  6658 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  ff1             4   21[COMRAM] unsigned char 
  6661 ;;  ff2             4   25[COMRAM] unsigned char 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;		None               void
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6673 ;;      Params:         8       0       0       0       0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6675 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6676 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6677 ;;Total ram usage:       12 bytes
  6678 ;; Hardware stack levels used: 1
  6679 ;; Hardware stack levels required when called: 4
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_efgtoa
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text21
  6688  0034BE                     __ptext21:
  6689                           	callstack 0
  6690  0034BE                     ___fleq:
  6691                           	callstack 22
  6692  0034BE  0E00               	movlw	0
  6693  0034C0  1416               	andwf	___fleq@ff1^0,w,c
  6694  0034C2  6E1E               	movwf	??___fleq^0,c
  6695  0034C4  0E00               	movlw	0
  6696  0034C6  1417               	andwf	(___fleq@ff1+1)^0,w,c
  6697  0034C8  6E1F               	movwf	(??___fleq+1)^0,c
  6698  0034CA  0E80               	movlw	128
  6699  0034CC  1418               	andwf	(___fleq@ff1+2)^0,w,c
  6700  0034CE  6E20               	movwf	(??___fleq+2)^0,c
  6701  0034D0  0E7F               	movlw	127
  6702  0034D2  1419               	andwf	(___fleq@ff1+3)^0,w,c
  6703  0034D4  6E21               	movwf	(??___fleq+3)^0,c
  6704  0034D6  501E               	movf	??___fleq^0,w,c
  6705  0034D8  101F               	iorwf	(??___fleq+1)^0,w,c
  6706  0034DA  1020               	iorwf	(??___fleq+2)^0,w,c
  6707  0034DC  1021               	iorwf	(??___fleq+3)^0,w,c
  6708  0034DE  A4D8               	btfss	status,2,c
  6709  0034E0  EF74  F01A         	goto	u3561
  6710  0034E4  EF76  F01A         	goto	u3560
  6711  0034E8                     u3561:
  6712  0034E8  EF7E  F01A         	goto	l3206
  6713  0034EC                     u3560:
  6714  0034EC  0E00               	movlw	0
  6715  0034EE  6E16               	movwf	___fleq@ff1^0,c
  6716  0034F0  0E00               	movlw	0
  6717  0034F2  6E17               	movwf	(___fleq@ff1+1)^0,c
  6718  0034F4  0E00               	movlw	0
  6719  0034F6  6E18               	movwf	(___fleq@ff1+2)^0,c
  6720  0034F8  0E00               	movlw	0
  6721  0034FA  6E19               	movwf	(___fleq@ff1+3)^0,c
  6722  0034FC                     l3206:
  6723  0034FC  0E00               	movlw	0
  6724  0034FE  141A               	andwf	___fleq@ff2^0,w,c
  6725  003500  6E1E               	movwf	??___fleq^0,c
  6726  003502  0E00               	movlw	0
  6727  003504  141B               	andwf	(___fleq@ff2+1)^0,w,c
  6728  003506  6E1F               	movwf	(??___fleq+1)^0,c
  6729  003508  0E80               	movlw	128
  6730  00350A  141C               	andwf	(___fleq@ff2+2)^0,w,c
  6731  00350C  6E20               	movwf	(??___fleq+2)^0,c
  6732  00350E  0E7F               	movlw	127
  6733  003510  141D               	andwf	(___fleq@ff2+3)^0,w,c
  6734  003512  6E21               	movwf	(??___fleq+3)^0,c
  6735  003514  501E               	movf	??___fleq^0,w,c
  6736  003516  101F               	iorwf	(??___fleq+1)^0,w,c
  6737  003518  1020               	iorwf	(??___fleq+2)^0,w,c
  6738  00351A  1021               	iorwf	(??___fleq+3)^0,w,c
  6739  00351C  A4D8               	btfss	status,2,c
  6740  00351E  EF93  F01A         	goto	u3571
  6741  003522  EF95  F01A         	goto	u3570
  6742  003526                     u3571:
  6743  003526  EF9D  F01A         	goto	l3210
  6744  00352A                     u3570:
  6745  00352A  0E00               	movlw	0
  6746  00352C  6E1A               	movwf	___fleq@ff2^0,c
  6747  00352E  0E00               	movlw	0
  6748  003530  6E1B               	movwf	(___fleq@ff2+1)^0,c
  6749  003532  0E00               	movlw	0
  6750  003534  6E1C               	movwf	(___fleq@ff2+2)^0,c
  6751  003536  0E00               	movlw	0
  6752  003538  6E1D               	movwf	(___fleq@ff2+3)^0,c
  6753  00353A                     l3210:
  6754  00353A  501A               	movf	___fleq@ff2^0,w,c
  6755  00353C  1816               	xorwf	___fleq@ff1^0,w,c
  6756  00353E  E10F               	bnz	u3580
  6757  003540  501B               	movf	(___fleq@ff2+1)^0,w,c
  6758  003542  1817               	xorwf	(___fleq@ff1+1)^0,w,c
  6759  003544  E10C               	bnz	u3580
  6760  003546  501C               	movf	(___fleq@ff2+2)^0,w,c
  6761  003548  1818               	xorwf	(___fleq@ff1+2)^0,w,c
  6762  00354A  E109               	bnz	u3580
  6763  00354C  501D               	movf	(___fleq@ff2+3)^0,w,c
  6764  00354E  1819               	xorwf	(___fleq@ff1+3)^0,w,c
  6765  003550  B4D8               	btfsc	status,2,c
  6766  003552  EFAD  F01A         	goto	u3581
  6767  003556  EFAF  F01A         	goto	u3580
  6768  00355A                     u3581:
  6769  00355A  EFB2  F01A         	goto	l3214
  6770  00355E                     u3580:
  6771  00355E  90D8               	bcf	status,0,c
  6772  003560  EFB3  F01A         	goto	l355
  6773  003564                     l3214:
  6774  003564  80D8               	bsf	status,0,c
  6775  003566                     l355:
  6776  003566  0012               	return		;funcret
  6777  003568                     __end_of___fleq:
  6778                           	callstack 0
  6779                           
  6780 ;; *************** function ___fldiv *****************
  6781 ;; Defined at:
  6782 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  b               4   21[COMRAM] unsigned char 
  6785 ;;  a               4   25[COMRAM] unsigned char 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  grs             4   40[COMRAM] unsigned long 
  6788 ;;  rem             4   33[COMRAM] unsigned long 
  6789 ;;  new_exp         2   38[COMRAM] short 
  6790 ;;  aexp            1   45[COMRAM] unsigned char 
  6791 ;;  bexp            1   44[COMRAM] unsigned char 
  6792 ;;  sign            1   37[COMRAM] unsigned char 
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  4   21[COMRAM] unsigned char 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6802 ;;      Params:         8       0       0       0       0       0       0       0       0
  6803 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6804 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6805 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6806 ;;Total ram usage:       25 bytes
  6807 ;; Hardware stack levels used: 1
  6808 ;; Hardware stack levels required when called: 4
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		_efgtoa
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text22
  6817  0022EC                     __ptext22:
  6818                           	callstack 0
  6819  0022EC                     ___fldiv:
  6820                           	callstack 22
  6821  0022EC  5019               	movf	(___fldiv@b+3)^0,w,c
  6822  0022EE  0B80               	andlw	128
  6823  0022F0  6E26               	movwf	___fldiv@sign^0,c
  6824  0022F2  5019               	movf	(___fldiv@b+3)^0,w,c
  6825  0022F4  2419               	addwf	(___fldiv@b+3)^0,w,c
  6826  0022F6  6E2D               	movwf	___fldiv@bexp^0,c
  6827  0022F8  AE18               	btfss	(___fldiv@b+2)^0,7,c
  6828  0022FA  EF81  F011         	goto	u3021
  6829  0022FE  EF83  F011         	goto	u3020
  6830  002302                     u3021:
  6831  002302  EF84  F011         	goto	l2854
  6832  002306                     u3020:
  6833  002306  802D               	bsf	___fldiv@bexp^0,0,c
  6834  002308                     l2854:
  6835  002308  502D               	movf	___fldiv@bexp^0,w,c
  6836  00230A  B4D8               	btfsc	status,2,c
  6837  00230C  EF8A  F011         	goto	u3031
  6838  002310  EF8C  F011         	goto	u3030
  6839  002314                     u3031:
  6840  002314  EFA1  F011         	goto	l2864
  6841  002318                     u3030:
  6842  002318  282D               	incf	___fldiv@bexp^0,w,c
  6843  00231A  A4D8               	btfss	status,2,c
  6844  00231C  EF92  F011         	goto	u3041
  6845  002320  EF94  F011         	goto	u3040
  6846  002324                     u3041:
  6847  002324  EF9C  F011         	goto	l2860
  6848  002328                     u3040:
  6849  002328  0E00               	movlw	0
  6850  00232A  6E16               	movwf	___fldiv@b^0,c
  6851  00232C  0E00               	movlw	0
  6852  00232E  6E17               	movwf	(___fldiv@b+1)^0,c
  6853  002330  0E00               	movlw	0
  6854  002332  6E18               	movwf	(___fldiv@b+2)^0,c
  6855  002334  0E00               	movlw	0
  6856  002336  6E19               	movwf	(___fldiv@b+3)^0,c
  6857  002338                     l2860:
  6858  002338  8E18               	bsf	(___fldiv@b+2)^0,7,c
  6859  00233A  0E00               	movlw	0
  6860  00233C  6E19               	movwf	(___fldiv@b+3)^0,c
  6861  00233E  EFA9  F011         	goto	l2866
  6862  002342                     l2864:
  6863  002342  0E00               	movlw	0
  6864  002344  6E16               	movwf	___fldiv@b^0,c
  6865  002346  0E00               	movlw	0
  6866  002348  6E17               	movwf	(___fldiv@b+1)^0,c
  6867  00234A  0E00               	movlw	0
  6868  00234C  6E18               	movwf	(___fldiv@b+2)^0,c
  6869  00234E  0E00               	movlw	0
  6870  002350  6E19               	movwf	(___fldiv@b+3)^0,c
  6871  002352                     l2866:
  6872  002352  501D               	movf	(___fldiv@a+3)^0,w,c
  6873  002354  0B80               	andlw	128
  6874  002356  1A26               	xorwf	___fldiv@sign^0,f,c
  6875  002358  501D               	movf	(___fldiv@a+3)^0,w,c
  6876  00235A  241D               	addwf	(___fldiv@a+3)^0,w,c
  6877  00235C  6E2E               	movwf	___fldiv@aexp^0,c
  6878  00235E  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  6879  002360  EFB4  F011         	goto	u3051
  6880  002364  EFB6  F011         	goto	u3050
  6881  002368                     u3051:
  6882  002368  EFB7  F011         	goto	l2874
  6883  00236C                     u3050:
  6884  00236C  802E               	bsf	___fldiv@aexp^0,0,c
  6885  00236E                     l2874:
  6886  00236E  502E               	movf	___fldiv@aexp^0,w,c
  6887  002370  B4D8               	btfsc	status,2,c
  6888  002372  EFBD  F011         	goto	u3061
  6889  002376  EFBF  F011         	goto	u3060
  6890  00237A                     u3061:
  6891  00237A  EFD4  F011         	goto	l2884
  6892  00237E                     u3060:
  6893  00237E  282E               	incf	___fldiv@aexp^0,w,c
  6894  002380  A4D8               	btfss	status,2,c
  6895  002382  EFC5  F011         	goto	u3071
  6896  002386  EFC7  F011         	goto	u3070
  6897  00238A                     u3071:
  6898  00238A  EFCF  F011         	goto	l2880
  6899  00238E                     u3070:
  6900  00238E  0E00               	movlw	0
  6901  002390  6E1A               	movwf	___fldiv@a^0,c
  6902  002392  0E00               	movlw	0
  6903  002394  6E1B               	movwf	(___fldiv@a+1)^0,c
  6904  002396  0E00               	movlw	0
  6905  002398  6E1C               	movwf	(___fldiv@a+2)^0,c
  6906  00239A  0E00               	movlw	0
  6907  00239C  6E1D               	movwf	(___fldiv@a+3)^0,c
  6908  00239E                     l2880:
  6909  00239E  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  6910  0023A0  0E00               	movlw	0
  6911  0023A2  6E1D               	movwf	(___fldiv@a+3)^0,c
  6912  0023A4  EFDC  F011         	goto	l2886
  6913  0023A8                     l2884:
  6914  0023A8  0E00               	movlw	0
  6915  0023AA  6E1A               	movwf	___fldiv@a^0,c
  6916  0023AC  0E00               	movlw	0
  6917  0023AE  6E1B               	movwf	(___fldiv@a+1)^0,c
  6918  0023B0  0E00               	movlw	0
  6919  0023B2  6E1C               	movwf	(___fldiv@a+2)^0,c
  6920  0023B4  0E00               	movlw	0
  6921  0023B6  6E1D               	movwf	(___fldiv@a+3)^0,c
  6922  0023B8                     l2886:
  6923  0023B8  501A               	movf	___fldiv@a^0,w,c
  6924  0023BA  101B               	iorwf	(___fldiv@a+1)^0,w,c
  6925  0023BC  101C               	iorwf	(___fldiv@a+2)^0,w,c
  6926  0023BE  101D               	iorwf	(___fldiv@a+3)^0,w,c
  6927  0023C0  A4D8               	btfss	status,2,c
  6928  0023C2  EFE5  F011         	goto	u3081
  6929  0023C6  EFE7  F011         	goto	u3080
  6930  0023CA                     u3081:
  6931  0023CA  EFFF  F011         	goto	l2898
  6932  0023CE                     u3080:
  6933  0023CE  0E00               	movlw	0
  6934  0023D0  6E16               	movwf	___fldiv@b^0,c
  6935  0023D2  0E00               	movlw	0
  6936  0023D4  6E17               	movwf	(___fldiv@b+1)^0,c
  6937  0023D6  0E00               	movlw	0
  6938  0023D8  6E18               	movwf	(___fldiv@b+2)^0,c
  6939  0023DA  0E00               	movlw	0
  6940  0023DC  6E19               	movwf	(___fldiv@b+3)^0,c
  6941  0023DE  0E80               	movlw	128
  6942  0023E0  1218               	iorwf	(___fldiv@b+2)^0,f,c
  6943  0023E2  0E7F               	movlw	127
  6944  0023E4  1219               	iorwf	(___fldiv@b+3)^0,f,c
  6945  0023E6                     l2892:
  6946  0023E6  5026               	movf	___fldiv@sign^0,w,c
  6947  0023E8  1219               	iorwf	(___fldiv@b+3)^0,f,c
  6948  0023EA  C016  F016         	movff	___fldiv@b,?___fldiv
  6949  0023EE  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  6950  0023F2  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  6951  0023F6  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  6952  0023FA  EF42  F013         	goto	l678
  6953  0023FE                     l2898:
  6954  0023FE  502D               	movf	___fldiv@bexp^0,w,c
  6955  002400  A4D8               	btfss	status,2,c
  6956  002402  EF05  F012         	goto	u3091
  6957  002406  EF07  F012         	goto	u3090
  6958  00240A                     u3091:
  6959  00240A  EF11  F012         	goto	l2906
  6960  00240E                     u3090:
  6961  00240E  0E00               	movlw	0
  6962  002410  6E16               	movwf	?___fldiv^0,c
  6963  002412  0E00               	movlw	0
  6964  002414  6E17               	movwf	(?___fldiv+1)^0,c
  6965  002416  0E00               	movlw	0
  6966  002418  6E18               	movwf	(?___fldiv+2)^0,c
  6967  00241A  0E00               	movlw	0
  6968  00241C  6E19               	movwf	(?___fldiv+3)^0,c
  6969  00241E  EF42  F013         	goto	l678
  6970  002422                     l2906:
  6971  002422  502E               	movf	___fldiv@aexp^0,w,c
  6972  002424  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  6973  002428  6A1F               	clrf	(??___fldiv+1)^0,c
  6974  00242A  5E1E               	subwf	??___fldiv^0,f,c
  6975  00242C  0E00               	movlw	0
  6976  00242E  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  6977  002430  0E7F               	movlw	127
  6978  002432  241E               	addwf	??___fldiv^0,w,c
  6979  002434  6E27               	movwf	___fldiv@new_exp^0,c
  6980  002436  0E00               	movlw	0
  6981  002438  201F               	addwfc	(??___fldiv+1)^0,w,c
  6982  00243A  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  6983  00243C  C016  F022         	movff	___fldiv@b,___fldiv@rem
  6984  002440  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  6985  002444  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  6986  002448  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  6987  00244C  0E00               	movlw	0
  6988  00244E  6E16               	movwf	___fldiv@b^0,c
  6989  002450  0E00               	movlw	0
  6990  002452  6E17               	movwf	(___fldiv@b+1)^0,c
  6991  002454  0E00               	movlw	0
  6992  002456  6E18               	movwf	(___fldiv@b+2)^0,c
  6993  002458  0E00               	movlw	0
  6994  00245A  6E19               	movwf	(___fldiv@b+3)^0,c
  6995  00245C  0E00               	movlw	0
  6996  00245E  6E29               	movwf	___fldiv@grs^0,c
  6997  002460  0E00               	movlw	0
  6998  002462  6E2A               	movwf	(___fldiv@grs+1)^0,c
  6999  002464  0E00               	movlw	0
  7000  002466  6E2B               	movwf	(___fldiv@grs+2)^0,c
  7001  002468  0E00               	movlw	0
  7002  00246A  6E2C               	movwf	(___fldiv@grs+3)^0,c
  7003  00246C  0E00               	movlw	0
  7004  00246E  6E2E               	movwf	___fldiv@aexp^0,c
  7005  002470  EF72  F012         	goto	l680
  7006  002474                     l2916:
  7007  002474  502E               	movf	___fldiv@aexp^0,w,c
  7008  002476  B4D8               	btfsc	status,2,c
  7009  002478  EF40  F012         	goto	u3101
  7010  00247C  EF42  F012         	goto	u3100
  7011  002480                     u3101:
  7012  002480  EF59  F012         	goto	l2924
  7013  002484                     u3100:
  7014  002484  90D8               	bcf	status,0,c
  7015  002486  3622               	rlcf	___fldiv@rem^0,f,c
  7016  002488  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  7017  00248A  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  7018  00248C  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  7019  00248E  90D8               	bcf	status,0,c
  7020  002490  3616               	rlcf	___fldiv@b^0,f,c
  7021  002492  3617               	rlcf	(___fldiv@b+1)^0,f,c
  7022  002494  3618               	rlcf	(___fldiv@b+2)^0,f,c
  7023  002496  3619               	rlcf	(___fldiv@b+3)^0,f,c
  7024  002498  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7025  00249A  EF51  F012         	goto	u3111
  7026  00249E  EF53  F012         	goto	u3110
  7027  0024A2                     u3111:
  7028  0024A2  EF54  F012         	goto	l683
  7029  0024A6                     u3110:
  7030  0024A6  8016               	bsf	___fldiv@b^0,0,c
  7031  0024A8                     l683:
  7032  0024A8  90D8               	bcf	status,0,c
  7033  0024AA  3629               	rlcf	___fldiv@grs^0,f,c
  7034  0024AC  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  7035  0024AE  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  7036  0024B0  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  7037  0024B2                     l2924:
  7038  0024B2  501A               	movf	___fldiv@a^0,w,c
  7039  0024B4  5C22               	subwf	___fldiv@rem^0,w,c
  7040  0024B6  501B               	movf	(___fldiv@a+1)^0,w,c
  7041  0024B8  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  7042  0024BA  501C               	movf	(___fldiv@a+2)^0,w,c
  7043  0024BC  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  7044  0024BE  501D               	movf	(___fldiv@a+3)^0,w,c
  7045  0024C0  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  7046  0024C2  A0D8               	btfss	status,0,c
  7047  0024C4  EF66  F012         	goto	u3121
  7048  0024C8  EF68  F012         	goto	u3120
  7049  0024CC                     u3121:
  7050  0024CC  EF71  F012         	goto	l2930
  7051  0024D0                     u3120:
  7052  0024D0  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  7053  0024D2  501A               	movf	___fldiv@a^0,w,c
  7054  0024D4  5E22               	subwf	___fldiv@rem^0,f,c
  7055  0024D6  501B               	movf	(___fldiv@a+1)^0,w,c
  7056  0024D8  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  7057  0024DA  501C               	movf	(___fldiv@a+2)^0,w,c
  7058  0024DC  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  7059  0024DE  501D               	movf	(___fldiv@a+3)^0,w,c
  7060  0024E0  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  7061  0024E2                     l2930:
  7062  0024E2  2A2E               	incf	___fldiv@aexp^0,f,c
  7063  0024E4                     l680:
  7064  0024E4  0E19               	movlw	25
  7065  0024E6  642E               	cpfsgt	___fldiv@aexp^0,c
  7066  0024E8  EF78  F012         	goto	u3131
  7067  0024EC  EF7A  F012         	goto	u3130
  7068  0024F0                     u3131:
  7069  0024F0  EF3A  F012         	goto	l2916
  7070  0024F4                     u3130:
  7071  0024F4  5022               	movf	___fldiv@rem^0,w,c
  7072  0024F6  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  7073  0024F8  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  7074  0024FA  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  7075  0024FC  B4D8               	btfsc	status,2,c
  7076  0024FE  EF83  F012         	goto	u3141
  7077  002502  EF85  F012         	goto	u3140
  7078  002506                     u3141:
  7079  002506  EF9D  F012         	goto	l2942
  7080  00250A                     u3140:
  7081  00250A  8029               	bsf	___fldiv@grs^0,0,c
  7082  00250C  EF9D  F012         	goto	l2942
  7083  002510                     l2936:
  7084  002510  90D8               	bcf	status,0,c
  7085  002512  3616               	rlcf	___fldiv@b^0,f,c
  7086  002514  3617               	rlcf	(___fldiv@b+1)^0,f,c
  7087  002516  3618               	rlcf	(___fldiv@b+2)^0,f,c
  7088  002518  3619               	rlcf	(___fldiv@b+3)^0,f,c
  7089  00251A  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7090  00251C  EF92  F012         	goto	u3151
  7091  002520  EF94  F012         	goto	u3150
  7092  002524                     u3151:
  7093  002524  EF95  F012         	goto	l689
  7094  002528                     u3150:
  7095  002528  8016               	bsf	___fldiv@b^0,0,c
  7096  00252A                     l689:
  7097  00252A  90D8               	bcf	status,0,c
  7098  00252C  3629               	rlcf	___fldiv@grs^0,f,c
  7099  00252E  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  7100  002530  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  7101  002532  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  7102  002534  0627               	decf	___fldiv@new_exp^0,f,c
  7103  002536  A0D8               	btfss	status,0,c
  7104  002538  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  7105  00253A                     l2942:
  7106  00253A  AE18               	btfss	(___fldiv@b+2)^0,7,c
  7107  00253C  EFA2  F012         	goto	u3161
  7108  002540  EFA4  F012         	goto	u3160
  7109  002544                     u3161:
  7110  002544  EF88  F012         	goto	l2936
  7111  002548                     u3160:
  7112  002548  0E00               	movlw	0
  7113  00254A  6E2E               	movwf	___fldiv@aexp^0,c
  7114  00254C  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7115  00254E  EFAB  F012         	goto	u3171
  7116  002552  EFAD  F012         	goto	u3170
  7117  002556                     u3171:
  7118  002556  EFD1  F012         	goto	l691
  7119  00255A                     u3170:
  7120  00255A  0EFF               	movlw	255
  7121  00255C  1429               	andwf	___fldiv@grs^0,w,c
  7122  00255E  6E1E               	movwf	??___fldiv^0,c
  7123  002560  0EFF               	movlw	255
  7124  002562  142A               	andwf	(___fldiv@grs+1)^0,w,c
  7125  002564  6E1F               	movwf	(??___fldiv+1)^0,c
  7126  002566  0EFF               	movlw	255
  7127  002568  142B               	andwf	(___fldiv@grs+2)^0,w,c
  7128  00256A  6E20               	movwf	(??___fldiv+2)^0,c
  7129  00256C  0E7F               	movlw	127
  7130  00256E  142C               	andwf	(___fldiv@grs+3)^0,w,c
  7131  002570  6E21               	movwf	(??___fldiv+3)^0,c
  7132  002572  501E               	movf	??___fldiv^0,w,c
  7133  002574  101F               	iorwf	(??___fldiv+1)^0,w,c
  7134  002576  1020               	iorwf	(??___fldiv+2)^0,w,c
  7135  002578  1021               	iorwf	(??___fldiv+3)^0,w,c
  7136  00257A  B4D8               	btfsc	status,2,c
  7137  00257C  EFC2  F012         	goto	u3181
  7138  002580  EFC4  F012         	goto	u3180
  7139  002584                     u3181:
  7140  002584  EFC8  F012         	goto	l692
  7141  002588                     u3180:
  7142  002588                     l2950:
  7143  002588  0E01               	movlw	1
  7144  00258A  6E2E               	movwf	___fldiv@aexp^0,c
  7145  00258C  EFD1  F012         	goto	l691
  7146  002590                     l692:
  7147  002590  A016               	btfss	___fldiv@b^0,0,c
  7148  002592  EFCD  F012         	goto	u3191
  7149  002596  EFCF  F012         	goto	u3190
  7150  00259A                     u3191:
  7151  00259A  EFD1  F012         	goto	l691
  7152  00259E                     u3190:
  7153  00259E  EFC4  F012         	goto	l2950
  7154  0025A2                     l691:
  7155  0025A2  502E               	movf	___fldiv@aexp^0,w,c
  7156  0025A4  B4D8               	btfsc	status,2,c
  7157  0025A6  EFD7  F012         	goto	u3201
  7158  0025AA  EFD9  F012         	goto	u3200
  7159  0025AE                     u3201:
  7160  0025AE  EFFD  F012         	goto	l2962
  7161  0025B2                     u3200:
  7162  0025B2  0E01               	movlw	1
  7163  0025B4  2616               	addwf	___fldiv@b^0,f,c
  7164  0025B6  0E00               	movlw	0
  7165  0025B8  2217               	addwfc	(___fldiv@b+1)^0,f,c
  7166  0025BA  2218               	addwfc	(___fldiv@b+2)^0,f,c
  7167  0025BC  2219               	addwfc	(___fldiv@b+3)^0,f,c
  7168  0025BE  A019               	btfss	(___fldiv@b+3)^0,0,c
  7169  0025C0  EFE4  F012         	goto	u3211
  7170  0025C4  EFE6  F012         	goto	u3210
  7171  0025C8                     u3211:
  7172  0025C8  EFFD  F012         	goto	l2962
  7173  0025CC                     u3210:
  7174  0025CC  C016  F01E         	movff	___fldiv@b,??___fldiv
  7175  0025D0  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  7176  0025D4  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  7177  0025D8  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  7178  0025DC  3421               	rlcf	(??___fldiv+3)^0,w,c
  7179  0025DE  3221               	rrcf	(??___fldiv+3)^0,f,c
  7180  0025E0  3220               	rrcf	(??___fldiv+2)^0,f,c
  7181  0025E2  321F               	rrcf	(??___fldiv+1)^0,f,c
  7182  0025E4  321E               	rrcf	??___fldiv^0,f,c
  7183  0025E6  C01E  F016         	movff	??___fldiv,___fldiv@b
  7184  0025EA  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  7185  0025EE  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  7186  0025F2  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  7187  0025F6  4A27               	infsnz	___fldiv@new_exp^0,f,c
  7188  0025F8  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  7189  0025FA                     l2962:
  7190  0025FA  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7191  0025FC  EF08  F013         	goto	u3221
  7192  002600  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  7193  002602  E108               	bnz	u3220
  7194  002604  2827               	incf	___fldiv@new_exp^0,w,c
  7195  002606  A0D8               	btfss	status,0,c
  7196  002608  EF08  F013         	goto	u3221
  7197  00260C  EF0A  F013         	goto	u3220
  7198  002610                     u3221:
  7199  002610  EF15  F013         	goto	l2966
  7200  002614                     u3220:
  7201  002614  0E00               	movlw	0
  7202  002616  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7203  002618  6827               	setf	___fldiv@new_exp^0,c
  7204  00261A  0E00               	movlw	0
  7205  00261C  6E16               	movwf	___fldiv@b^0,c
  7206  00261E  0E00               	movlw	0
  7207  002620  6E17               	movwf	(___fldiv@b+1)^0,c
  7208  002622  0E00               	movlw	0
  7209  002624  6E18               	movwf	(___fldiv@b+2)^0,c
  7210  002626  0E00               	movlw	0
  7211  002628  6E19               	movwf	(___fldiv@b+3)^0,c
  7212  00262A                     l2966:
  7213  00262A  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7214  00262C  EF22  F013         	goto	u3230
  7215  002630  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  7216  002632  E106               	bnz	u3231
  7217  002634  0427               	decf	___fldiv@new_exp^0,w,c
  7218  002636  B0D8               	btfsc	status,0,c
  7219  002638  EF20  F013         	goto	u3231
  7220  00263C  EF22  F013         	goto	u3230
  7221  002640                     u3231:
  7222  002640  EF30  F013         	goto	l2970
  7223  002644                     u3230:
  7224  002644  0E00               	movlw	0
  7225  002646  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7226  002648  0E00               	movlw	0
  7227  00264A  6E27               	movwf	___fldiv@new_exp^0,c
  7228  00264C  0E00               	movlw	0
  7229  00264E  6E16               	movwf	___fldiv@b^0,c
  7230  002650  0E00               	movlw	0
  7231  002652  6E17               	movwf	(___fldiv@b+1)^0,c
  7232  002654  0E00               	movlw	0
  7233  002656  6E18               	movwf	(___fldiv@b+2)^0,c
  7234  002658  0E00               	movlw	0
  7235  00265A  6E19               	movwf	(___fldiv@b+3)^0,c
  7236  00265C  0E00               	movlw	0
  7237  00265E  6E26               	movwf	___fldiv@sign^0,c
  7238  002660                     l2970:
  7239  002660  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  7240  002664  A02D               	btfss	___fldiv@bexp^0,0,c
  7241  002666  EF37  F013         	goto	u3241
  7242  00266A  EF39  F013         	goto	u3240
  7243  00266E                     u3241:
  7244  00266E  EF3C  F013         	goto	l2976
  7245  002672                     u3240:
  7246  002672  8E18               	bsf	(___fldiv@b+2)^0,7,c
  7247  002674  EF3D  F013         	goto	l2978
  7248  002678                     l2976:
  7249  002678  9E18               	bcf	(___fldiv@b+2)^0,7,c
  7250  00267A                     l2978:
  7251  00267A  90D8               	bcf	status,0,c
  7252  00267C  302D               	rrcf	___fldiv@bexp^0,w,c
  7253  00267E  6E19               	movwf	(___fldiv@b+3)^0,c
  7254  002680  EFF3  F011         	goto	l2892
  7255  002684                     l678:
  7256  002684  0012               	return		;funcret
  7257  002686                     __end_of___fldiv:
  7258                           	callstack 0
  7259                           
  7260 ;; *************** function ___awmod *****************
  7261 ;; Defined at:
  7262 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  dividend        2   21[COMRAM] int 
  7265 ;;  divisor         2   23[COMRAM] int 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;  sign            1   26[COMRAM] unsigned char 
  7268 ;;  counter         1   25[COMRAM] unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  2   21[COMRAM] int 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7278 ;;      Params:         4       0       0       0       0       0       0       0       0
  7279 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7281 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7282 ;;Total ram usage:        6 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; Hardware stack levels required when called: 4
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_efgtoa
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text23
  7293  00340E                     __ptext23:
  7294                           	callstack 0
  7295  00340E                     ___awmod:
  7296                           	callstack 22
  7297  00340E  0E00               	movlw	0
  7298  003410  6E1B               	movwf	___awmod@sign^0,c
  7299  003412  BE17               	btfsc	(___awmod@dividend+1)^0,7,c
  7300  003414  EF10  F01A         	goto	u3500
  7301  003418  EF0E  F01A         	goto	u3501
  7302  00341C                     u3501:
  7303  00341C  EF16  F01A         	goto	l3174
  7304  003420                     u3500:
  7305  003420  6C16               	negf	___awmod@dividend^0,c
  7306  003422  1E17               	comf	(___awmod@dividend+1)^0,f,c
  7307  003424  B0D8               	btfsc	status,0,c
  7308  003426  2A17               	incf	(___awmod@dividend+1)^0,f,c
  7309  003428  0E01               	movlw	1
  7310  00342A  6E1B               	movwf	___awmod@sign^0,c
  7311  00342C                     l3174:
  7312  00342C  BE19               	btfsc	(___awmod@divisor+1)^0,7,c
  7313  00342E  EF1D  F01A         	goto	u3510
  7314  003432  EF1B  F01A         	goto	u3511
  7315  003436                     u3511:
  7316  003436  EF21  F01A         	goto	l3178
  7317  00343A                     u3510:
  7318  00343A  6C18               	negf	___awmod@divisor^0,c
  7319  00343C  1E19               	comf	(___awmod@divisor+1)^0,f,c
  7320  00343E  B0D8               	btfsc	status,0,c
  7321  003440  2A19               	incf	(___awmod@divisor+1)^0,f,c
  7322  003442                     l3178:
  7323  003442  5018               	movf	___awmod@divisor^0,w,c
  7324  003444  1019               	iorwf	(___awmod@divisor+1)^0,w,c
  7325  003446  B4D8               	btfsc	status,2,c
  7326  003448  EF28  F01A         	goto	u3521
  7327  00344C  EF2A  F01A         	goto	u3520
  7328  003450                     u3521:
  7329  003450  EF4E  F01A         	goto	l3194
  7330  003454                     u3520:
  7331  003454  0E01               	movlw	1
  7332  003456  6E1A               	movwf	___awmod@counter^0,c
  7333  003458  EF32  F01A         	goto	l3184
  7334  00345C                     l3182:
  7335  00345C  90D8               	bcf	status,0,c
  7336  00345E  3618               	rlcf	___awmod@divisor^0,f,c
  7337  003460  3619               	rlcf	(___awmod@divisor+1)^0,f,c
  7338  003462  2A1A               	incf	___awmod@counter^0,f,c
  7339  003464                     l3184:
  7340  003464  AE19               	btfss	(___awmod@divisor+1)^0,7,c
  7341  003466  EF37  F01A         	goto	u3531
  7342  00346A  EF39  F01A         	goto	u3530
  7343  00346E                     u3531:
  7344  00346E  EF2E  F01A         	goto	l3182
  7345  003472                     u3530:
  7346  003472                     l3186:
  7347  003472  5018               	movf	___awmod@divisor^0,w,c
  7348  003474  5C16               	subwf	___awmod@dividend^0,w,c
  7349  003476  5019               	movf	(___awmod@divisor+1)^0,w,c
  7350  003478  5817               	subwfb	(___awmod@dividend+1)^0,w,c
  7351  00347A  A0D8               	btfss	status,0,c
  7352  00347C  EF42  F01A         	goto	u3541
  7353  003480  EF44  F01A         	goto	u3540
  7354  003484                     u3541:
  7355  003484  EF48  F01A         	goto	l3190
  7356  003488                     u3540:
  7357  003488  5018               	movf	___awmod@divisor^0,w,c
  7358  00348A  5E16               	subwf	___awmod@dividend^0,f,c
  7359  00348C  5019               	movf	(___awmod@divisor+1)^0,w,c
  7360  00348E  5A17               	subwfb	(___awmod@dividend+1)^0,f,c
  7361  003490                     l3190:
  7362  003490  90D8               	bcf	status,0,c
  7363  003492  3219               	rrcf	(___awmod@divisor+1)^0,f,c
  7364  003494  3218               	rrcf	___awmod@divisor^0,f,c
  7365  003496  2E1A               	decfsz	___awmod@counter^0,f,c
  7366  003498  EF39  F01A         	goto	l3186
  7367  00349C                     l3194:
  7368  00349C  501B               	movf	___awmod@sign^0,w,c
  7369  00349E  B4D8               	btfsc	status,2,c
  7370  0034A0  EF54  F01A         	goto	u3551
  7371  0034A4  EF56  F01A         	goto	u3550
  7372  0034A8                     u3551:
  7373  0034A8  EF5A  F01A         	goto	l3198
  7374  0034AC                     u3550:
  7375  0034AC  6C16               	negf	___awmod@dividend^0,c
  7376  0034AE  1E17               	comf	(___awmod@dividend+1)^0,f,c
  7377  0034B0  B0D8               	btfsc	status,0,c
  7378  0034B2  2A17               	incf	(___awmod@dividend+1)^0,f,c
  7379  0034B4                     l3198:
  7380  0034B4  C016  F016         	movff	___awmod@dividend,?___awmod
  7381  0034B8  C017  F017         	movff	___awmod@dividend+1,?___awmod+1
  7382  0034BC  0012               	return		;funcret
  7383  0034BE                     __end_of___awmod:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function ___awdiv *****************
  7387 ;; Defined at:
  7388 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  dividend        2   21[COMRAM] int 
  7391 ;;  divisor         2   23[COMRAM] int 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  quotient        2   27[COMRAM] int 
  7394 ;;  sign            1   26[COMRAM] unsigned char 
  7395 ;;  counter         1   25[COMRAM] unsigned char 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  2   21[COMRAM] int 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7405 ;;      Params:         4       0       0       0       0       0       0       0       0
  7406 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7408 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7409 ;;Total ram usage:        8 bytes
  7410 ;; Hardware stack levels used: 1
  7411 ;; Hardware stack levels required when called: 4
  7412 ;; This function calls:
  7413 ;;		Nothing
  7414 ;; This function is called by:
  7415 ;;		_efgtoa
  7416 ;; This function uses a non-reentrant model
  7417 ;;
  7418                           
  7419                           	psect	text24
  7420  0031D6                     __ptext24:
  7421                           	callstack 0
  7422  0031D6                     ___awdiv:
  7423                           	callstack 22
  7424  0031D6  0E00               	movlw	0
  7425  0031D8  6E1B               	movwf	___awdiv@sign^0,c
  7426  0031DA  BE19               	btfsc	(___awdiv@divisor+1)^0,7,c
  7427  0031DC  EFF4  F018         	goto	u3440
  7428  0031E0  EFF2  F018         	goto	u3441
  7429  0031E4                     u3441:
  7430  0031E4  EFFA  F018         	goto	l3130
  7431  0031E8                     u3440:
  7432  0031E8  6C18               	negf	___awdiv@divisor^0,c
  7433  0031EA  1E19               	comf	(___awdiv@divisor+1)^0,f,c
  7434  0031EC  B0D8               	btfsc	status,0,c
  7435  0031EE  2A19               	incf	(___awdiv@divisor+1)^0,f,c
  7436  0031F0  0E01               	movlw	1
  7437  0031F2  6E1B               	movwf	___awdiv@sign^0,c
  7438  0031F4                     l3130:
  7439  0031F4  BE17               	btfsc	(___awdiv@dividend+1)^0,7,c
  7440  0031F6  EF01  F019         	goto	u3450
  7441  0031FA  EFFF  F018         	goto	u3451
  7442  0031FE                     u3451:
  7443  0031FE  EF07  F019         	goto	l3136
  7444  003202                     u3450:
  7445  003202  6C16               	negf	___awdiv@dividend^0,c
  7446  003204  1E17               	comf	(___awdiv@dividend+1)^0,f,c
  7447  003206  B0D8               	btfsc	status,0,c
  7448  003208  2A17               	incf	(___awdiv@dividend+1)^0,f,c
  7449  00320A  0E01               	movlw	1
  7450  00320C  1A1B               	xorwf	___awdiv@sign^0,f,c
  7451  00320E                     l3136:
  7452  00320E  0E00               	movlw	0
  7453  003210  6E1D               	movwf	(___awdiv@quotient+1)^0,c
  7454  003212  0E00               	movlw	0
  7455  003214  6E1C               	movwf	___awdiv@quotient^0,c
  7456  003216  5018               	movf	___awdiv@divisor^0,w,c
  7457  003218  1019               	iorwf	(___awdiv@divisor+1)^0,w,c
  7458  00321A  B4D8               	btfsc	status,2,c
  7459  00321C  EF12  F019         	goto	u3461
  7460  003220  EF14  F019         	goto	u3460
  7461  003224                     u3461:
  7462  003224  EF3C  F019         	goto	l3158
  7463  003228                     u3460:
  7464  003228  0E01               	movlw	1
  7465  00322A  6E1A               	movwf	___awdiv@counter^0,c
  7466  00322C  EF1C  F019         	goto	l3144
  7467  003230                     l3142:
  7468  003230  90D8               	bcf	status,0,c
  7469  003232  3618               	rlcf	___awdiv@divisor^0,f,c
  7470  003234  3619               	rlcf	(___awdiv@divisor+1)^0,f,c
  7471  003236  2A1A               	incf	___awdiv@counter^0,f,c
  7472  003238                     l3144:
  7473  003238  AE19               	btfss	(___awdiv@divisor+1)^0,7,c
  7474  00323A  EF21  F019         	goto	u3471
  7475  00323E  EF23  F019         	goto	u3470
  7476  003242                     u3471:
  7477  003242  EF18  F019         	goto	l3142
  7478  003246                     u3470:
  7479  003246                     l3146:
  7480  003246  90D8               	bcf	status,0,c
  7481  003248  361C               	rlcf	___awdiv@quotient^0,f,c
  7482  00324A  361D               	rlcf	(___awdiv@quotient+1)^0,f,c
  7483  00324C  5018               	movf	___awdiv@divisor^0,w,c
  7484  00324E  5C16               	subwf	___awdiv@dividend^0,w,c
  7485  003250  5019               	movf	(___awdiv@divisor+1)^0,w,c
  7486  003252  5817               	subwfb	(___awdiv@dividend+1)^0,w,c
  7487  003254  A0D8               	btfss	status,0,c
  7488  003256  EF2F  F019         	goto	u3481
  7489  00325A  EF31  F019         	goto	u3480
  7490  00325E                     u3481:
  7491  00325E  EF36  F019         	goto	l3154
  7492  003262                     u3480:
  7493  003262  5018               	movf	___awdiv@divisor^0,w,c
  7494  003264  5E16               	subwf	___awdiv@dividend^0,f,c
  7495  003266  5019               	movf	(___awdiv@divisor+1)^0,w,c
  7496  003268  5A17               	subwfb	(___awdiv@dividend+1)^0,f,c
  7497  00326A  801C               	bsf	___awdiv@quotient^0,0,c
  7498  00326C                     l3154:
  7499  00326C  90D8               	bcf	status,0,c
  7500  00326E  3219               	rrcf	(___awdiv@divisor+1)^0,f,c
  7501  003270  3218               	rrcf	___awdiv@divisor^0,f,c
  7502  003272  2E1A               	decfsz	___awdiv@counter^0,f,c
  7503  003274  EF23  F019         	goto	l3146
  7504  003278                     l3158:
  7505  003278  501B               	movf	___awdiv@sign^0,w,c
  7506  00327A  B4D8               	btfsc	status,2,c
  7507  00327C  EF42  F019         	goto	u3491
  7508  003280  EF44  F019         	goto	u3490
  7509  003284                     u3491:
  7510  003284  EF48  F019         	goto	l3162
  7511  003288                     u3490:
  7512  003288  6C1C               	negf	___awdiv@quotient^0,c
  7513  00328A  1E1D               	comf	(___awdiv@quotient+1)^0,f,c
  7514  00328C  B0D8               	btfsc	status,0,c
  7515  00328E  2A1D               	incf	(___awdiv@quotient+1)^0,f,c
  7516  003290                     l3162:
  7517  003290  C01C  F016         	movff	___awdiv@quotient,?___awdiv
  7518  003294  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
  7519  003298  0012               	return		;funcret
  7520  00329A                     __end_of___awdiv:
  7521                           	callstack 0
  7522                           
  7523 ;; *************** function _atoi *****************
  7524 ;; Defined at:
  7525 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  s               2   28[COMRAM] PTR const unsigned char 
  7528 ;;		 -> STR_4(6), 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  n               2   41[COMRAM] int 
  7531 ;;  neg             2   34[COMRAM] int 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  2   28[COMRAM] int 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7541 ;;      Params:         2       0       0       0       0       0       0       0       0
  7542 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7543 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7544 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7545 ;;Total ram usage:       15 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; Hardware stack levels required when called: 5
  7548 ;; This function calls:
  7549 ;;		___wmul
  7550 ;;		_isdigit
  7551 ;;		_isspace
  7552 ;; This function is called by:
  7553 ;;		_vfpfcnvrt
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text25
  7558  00289C                     __ptext25:
  7559                           	callstack 0
  7560  00289C                     _atoi:
  7561                           	callstack 22
  7562  00289C  0E00               	movlw	0
  7563  00289E  6E2B               	movwf	(atoi@n+1)^0,c
  7564  0028A0  0E00               	movlw	0
  7565  0028A2  6E2A               	movwf	atoi@n^0,c
  7566  0028A4  0E00               	movlw	0
  7567  0028A6  6E24               	movwf	(atoi@neg+1)^0,c
  7568  0028A8  0E00               	movlw	0
  7569  0028AA  6E23               	movwf	atoi@neg^0,c
  7570  0028AC  EF5A  F014         	goto	l3706
  7571  0028B0                     l3704:
  7572  0028B0  4A1D               	infsnz	atoi@s^0,f,c
  7573  0028B2  2A1E               	incf	(atoi@s+1)^0,f,c
  7574  0028B4                     l3706:
  7575  0028B4  0E01               	movlw	1
  7576  0028B6  6E29               	movwf	_atoi$1010^0,c
  7577  0028B8  C01D  FFF6         	movff	atoi@s,tblptrl
  7578  0028BC  C01E  FFF7         	movff	atoi@s+1,tblptrh
  7579  0028C0                     	if	0	;tblptru may be non-zero
  7580  0028C0                     	endif
  7581  0028C0                     	if	0	;tblptru may be non-zero
  7582  0028C0                     	endif
  7583  0028C0  0008               	tblrd		*
  7584  0028C2  50F5               	movf	tablat,w,c
  7585  0028C4  0A20               	xorlw	32
  7586  0028C6  B4D8               	btfsc	status,2,c
  7587  0028C8  EF68  F014         	goto	u4561
  7588  0028CC  EF6A  F014         	goto	u4560
  7589  0028D0                     u4561:
  7590  0028D0  EF87  F014         	goto	l3714
  7591  0028D4                     u4560:
  7592  0028D4  0EF7               	movlw	247
  7593  0028D6  6E1F               	movwf	??_atoi^0,c
  7594  0028D8  0EFF               	movlw	255
  7595  0028DA  6E20               	movwf	(??_atoi+1)^0,c
  7596  0028DC  C01D  FFF6         	movff	atoi@s,tblptrl
  7597  0028E0  C01E  FFF7         	movff	atoi@s+1,tblptrh
  7598  0028E4                     	if	0	;tblptru may be non-zero
  7599  0028E4                     	endif
  7600  0028E4                     	if	0	;tblptru may be non-zero
  7601  0028E4                     	endif
  7602  0028E4  0008               	tblrd		*
  7603  0028E6  50F5               	movf	tablat,w,c
  7604  0028E8  6E21               	movwf	(??_atoi+2)^0,c
  7605  0028EA  6A22               	clrf	(??_atoi+3)^0,c
  7606  0028EC  501F               	movf	??_atoi^0,w,c
  7607  0028EE  2621               	addwf	(??_atoi+2)^0,f,c
  7608  0028F0  5020               	movf	(??_atoi+1)^0,w,c
  7609  0028F2  2222               	addwfc	(??_atoi+3)^0,f,c
  7610  0028F4  5022               	movf	(??_atoi+3)^0,w,c
  7611  0028F6  E109               	bnz	u4570
  7612  0028F8  0E05               	movlw	5
  7613  0028FA  5C21               	subwf	(??_atoi+2)^0,w,c
  7614  0028FC  A0D8               	btfss	status,0,c
  7615  0028FE  EF83  F014         	goto	u4571
  7616  002902  EF85  F014         	goto	u4570
  7617  002906                     u4571:
  7618  002906  EF87  F014         	goto	l3714
  7619  00290A                     u4570:
  7620  00290A  0E00               	movlw	0
  7621  00290C  6E29               	movwf	_atoi$1010^0,c
  7622  00290E                     l3714:
  7623  00290E  C029  F025         	movff	_atoi$1010,_atoi$1009
  7624  002912  6A26               	clrf	(_atoi$1009+1)^0,c
  7625  002914  5025               	movf	_atoi$1009^0,w,c
  7626  002916  1026               	iorwf	(_atoi$1009+1)^0,w,c
  7627  002918  A4D8               	btfss	status,2,c
  7628  00291A  EF91  F014         	goto	u4581
  7629  00291E  EF93  F014         	goto	u4580
  7630  002922                     u4581:
  7631  002922  EF58  F014         	goto	l3704
  7632  002926                     u4580:
  7633  002926  EF9D  F014         	goto	l3724
  7634  00292A                     l3720:
  7635  00292A  0E00               	movlw	0
  7636  00292C  6E24               	movwf	(atoi@neg+1)^0,c
  7637  00292E  0E01               	movlw	1
  7638  002930  6E23               	movwf	atoi@neg^0,c
  7639  002932                     l3722:
  7640  002932  4A1D               	infsnz	atoi@s^0,f,c
  7641  002934  2A1E               	incf	(atoi@s+1)^0,f,c
  7642  002936  EFD2  F014         	goto	l3730
  7643  00293A                     l3724:
  7644  00293A  C01D  FFF6         	movff	atoi@s,tblptrl
  7645  00293E  C01E  FFF7         	movff	atoi@s+1,tblptrh
  7646  002942                     	if	0	;tblptru may be non-zero
  7647  002942                     	endif
  7648  002942                     	if	0	;tblptru may be non-zero
  7649  002942                     	endif
  7650  002942  0008               	tblrd		*
  7651  002944  50F5               	movf	tablat,w,c
  7652  002946  6E1F               	movwf	??_atoi^0,c
  7653  002948  6A20               	clrf	(??_atoi+1)^0,c
  7654                           
  7655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7656                           ; Switch size 1, requested type "simple"
  7657                           ; Number of cases is 1, Range of values is 0 to 0
  7658                           ; switch strategies available:
  7659                           ; Name         Instructions Cycles
  7660                           ; simple_byte            4     3 (average)
  7661                           ;	Chosen strategy is simple_byte
  7662  00294A  5020               	movf	(??_atoi+1)^0,w,c
  7663  00294C  0A00               	xorlw	0	; case 0
  7664  00294E  B4D8               	btfsc	status,2,c
  7665  002950  EFAC  F014         	goto	l4690
  7666  002954  EFD2  F014         	goto	l3730
  7667  002958                     l4690:
  7668                           
  7669                           ; Switch size 1, requested type "simple"
  7670                           ; Number of cases is 2, Range of values is 43 to 45
  7671                           ; switch strategies available:
  7672                           ; Name         Instructions Cycles
  7673                           ; simple_byte            7     4 (average)
  7674                           ;	Chosen strategy is simple_byte
  7675  002958  501F               	movf	??_atoi^0,w,c
  7676  00295A  0A2B               	xorlw	43	; case 43
  7677  00295C  B4D8               	btfsc	status,2,c
  7678  00295E  EF99  F014         	goto	l3722
  7679  002962  0A06               	xorlw	6	; case 45
  7680  002964  B4D8               	btfsc	status,2,c
  7681  002966  EF95  F014         	goto	l3720
  7682  00296A  EFD2  F014         	goto	l3730
  7683  00296E                     l3726:
  7684  00296E  C02A  F016         	movff	atoi@n,___wmul@multiplier
  7685  002972  C02B  F017         	movff	atoi@n+1,___wmul@multiplier+1
  7686  002976  0E00               	movlw	0
  7687  002978  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  7688  00297A  0E0A               	movlw	10
  7689  00297C  6E18               	movwf	___wmul@multiplicand^0,c
  7690  00297E  EC97  F01D         	call	___wmul	;wreg free
  7691  002982  C01D  FFF6         	movff	atoi@s,tblptrl
  7692  002986  C01E  FFF7         	movff	atoi@s+1,tblptrh
  7693  00298A                     	if	0	;tblptru may be non-zero
  7694  00298A                     	endif
  7695  00298A                     	if	0	;tblptru may be non-zero
  7696  00298A                     	endif
  7697  00298A  0008               	tblrd		*
  7698  00298C  50F5               	movf	tablat,w,c
  7699  00298E  5E16               	subwf	?___wmul^0,f,c
  7700  002990  0E00               	movlw	0
  7701  002992  5A17               	subwfb	(?___wmul+1)^0,f,c
  7702  002994  0E30               	movlw	48
  7703  002996  2416               	addwf	?___wmul^0,w,c
  7704  002998  6E2A               	movwf	atoi@n^0,c
  7705  00299A  0E00               	movlw	0
  7706  00299C  2017               	addwfc	(?___wmul+1)^0,w,c
  7707  00299E  6E2B               	movwf	(atoi@n+1)^0,c
  7708  0029A0  EF99  F014         	goto	l3722
  7709  0029A4                     l3730:
  7710  0029A4  0ED0               	movlw	208
  7711  0029A6  6E1F               	movwf	??_atoi^0,c
  7712  0029A8  0EFF               	movlw	255
  7713  0029AA  6E20               	movwf	(??_atoi+1)^0,c
  7714  0029AC  C01D  FFF6         	movff	atoi@s,tblptrl
  7715  0029B0  C01E  FFF7         	movff	atoi@s+1,tblptrh
  7716  0029B4                     	if	0	;tblptru may be non-zero
  7717  0029B4                     	endif
  7718  0029B4                     	if	0	;tblptru may be non-zero
  7719  0029B4                     	endif
  7720  0029B4  0008               	tblrd		*
  7721  0029B6  50F5               	movf	tablat,w,c
  7722  0029B8  6E21               	movwf	(??_atoi+2)^0,c
  7723  0029BA  6A22               	clrf	(??_atoi+3)^0,c
  7724  0029BC  501F               	movf	??_atoi^0,w,c
  7725  0029BE  2621               	addwf	(??_atoi+2)^0,f,c
  7726  0029C0  5020               	movf	(??_atoi+1)^0,w,c
  7727  0029C2  2222               	addwfc	(??_atoi+3)^0,f,c
  7728  0029C4  5022               	movf	(??_atoi+3)^0,w,c
  7729  0029C6  E10A               	bnz	u4590
  7730  0029C8  0E0A               	movlw	10
  7731  0029CA  5C21               	subwf	(??_atoi+2)^0,w,c
  7732  0029CC  A0D8               	btfss	status,0,c
  7733  0029CE  EFEB  F014         	goto	u4591
  7734  0029D2  EFEE  F014         	goto	u4590
  7735  0029D6                     u4591:
  7736  0029D6  0E01               	movlw	1
  7737  0029D8  EFEF  F014         	goto	u4600
  7738  0029DC                     u4590:
  7739  0029DC  0E00               	movlw	0
  7740  0029DE                     u4600:
  7741  0029DE  6E27               	movwf	_atoi$1011^0,c
  7742  0029E0  6A28               	clrf	(_atoi$1011+1)^0,c
  7743  0029E2  5027               	movf	_atoi$1011^0,w,c
  7744  0029E4  1028               	iorwf	(_atoi$1011+1)^0,w,c
  7745  0029E6  A4D8               	btfss	status,2,c
  7746  0029E8  EFF8  F014         	goto	u4611
  7747  0029EC  EFFA  F014         	goto	u4610
  7748  0029F0                     u4611:
  7749  0029F0  EFB7  F014         	goto	l3726
  7750  0029F4                     u4610:
  7751  0029F4  5023               	movf	atoi@neg^0,w,c
  7752  0029F6  1024               	iorwf	(atoi@neg+1)^0,w,c
  7753  0029F8  A4D8               	btfss	status,2,c
  7754  0029FA  EF01  F015         	goto	u4621
  7755  0029FE  EF03  F015         	goto	u4620
  7756  002A02                     u4621:
  7757  002A02  EF11  F015         	goto	l993
  7758  002A06                     u4620:
  7759  002A06  C02A  F01F         	movff	atoi@n,??_atoi
  7760  002A0A  C02B  F020         	movff	atoi@n+1,??_atoi+1
  7761  002A0E  1E1F               	comf	??_atoi^0,f,c
  7762  002A10  1E20               	comf	(??_atoi+1)^0,f,c
  7763  002A12  4A1F               	infsnz	??_atoi^0,f,c
  7764  002A14  2A20               	incf	(??_atoi+1)^0,f,c
  7765  002A16  C01F  F01D         	movff	??_atoi,?_atoi
  7766  002A1A  C020  F01E         	movff	??_atoi+1,?_atoi+1
  7767  002A1E  EF15  F015         	goto	l996
  7768  002A22                     l993:
  7769  002A22  C02A  F01D         	movff	atoi@n,?_atoi
  7770  002A26  C02B  F01E         	movff	atoi@n+1,?_atoi+1
  7771  002A2A                     l996:
  7772  002A2A  0012               	return		;funcret
  7773  002A2C                     __end_of_atoi:
  7774                           	callstack 0
  7775                           
  7776 ;; *************** function _isspace *****************
  7777 ;; Defined at:
  7778 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  c               2   21[COMRAM] int 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;		None
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  2   21[COMRAM] int 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7792 ;;      Params:         2       0       0       0       0       0       0       0       0
  7793 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7794 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7795 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7796 ;;Total ram usage:        7 bytes
  7797 ;; Hardware stack levels used: 1
  7798 ;; Hardware stack levels required when called: 4
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_atoi
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text26
  7807  00390E                     __ptext26:
  7808                           	callstack 0
  7809  00390E                     _isspace:
  7810                           	callstack 22
  7811  00390E  0E01               	movlw	1
  7812  003910  6E1C               	movwf	_isspace$1040^0,c
  7813  003912  0E20               	movlw	32
  7814  003914  1816               	xorwf	isspace@c^0,w,c
  7815  003916  1017               	iorwf	(isspace@c+1)^0,w,c
  7816  003918  B4D8               	btfsc	status,2,c
  7817  00391A  EF91  F01C         	goto	u4001
  7818  00391E  EF93  F01C         	goto	u4000
  7819  003922                     u4001:
  7820  003922  EFAC  F01C         	goto	l3390
  7821  003926                     u4000:
  7822  003926  0EF7               	movlw	247
  7823  003928  6E18               	movwf	??_isspace^0,c
  7824  00392A  0EFF               	movlw	255
  7825  00392C  6E19               	movwf	(??_isspace+1)^0,c
  7826  00392E  C016  F01A         	movff	isspace@c,??_isspace+2
  7827  003932  C017  F01B         	movff	isspace@c+1,??_isspace+3
  7828  003936  5018               	movf	??_isspace^0,w,c
  7829  003938  261A               	addwf	(??_isspace+2)^0,f,c
  7830  00393A  5019               	movf	(??_isspace+1)^0,w,c
  7831  00393C  221B               	addwfc	(??_isspace+3)^0,f,c
  7832  00393E  501B               	movf	(??_isspace+3)^0,w,c
  7833  003940  E109               	bnz	u4010
  7834  003942  0E05               	movlw	5
  7835  003944  5C1A               	subwf	(??_isspace+2)^0,w,c
  7836  003946  A0D8               	btfss	status,0,c
  7837  003948  EFA8  F01C         	goto	u4011
  7838  00394C  EFAA  F01C         	goto	u4010
  7839  003950                     u4011:
  7840  003950  EFAC  F01C         	goto	l3390
  7841  003954                     u4010:
  7842  003954  0E00               	movlw	0
  7843  003956  6E1C               	movwf	_isspace$1040^0,c
  7844  003958                     l3390:
  7845  003958  C01C  F016         	movff	_isspace$1040,?_isspace
  7846  00395C  6A17               	clrf	(?_isspace+1)^0,c
  7847  00395E  0012               	return		;funcret
  7848  003960                     __end_of_isspace:
  7849                           	callstack 0
  7850                           
  7851 ;; *************** function _isdigit *****************
  7852 ;; Defined at:
  7853 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  c               2   21[COMRAM] int 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;		None
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  2   21[COMRAM] int 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7867 ;;      Params:         2       0       0       0       0       0       0       0       0
  7868 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7869 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7870 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7871 ;;Total ram usage:        6 bytes
  7872 ;; Hardware stack levels used: 1
  7873 ;; Hardware stack levels required when called: 4
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_vfpfcnvrt
  7878 ;;		_atoi
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text27
  7883  003AF6                     __ptext27:
  7884                           	callstack 0
  7885  003AF6                     _isdigit:
  7886                           	callstack 23
  7887  003AF6  0ED0               	movlw	208
  7888  003AF8  6E18               	movwf	??_isdigit^0,c
  7889  003AFA  0EFF               	movlw	255
  7890  003AFC  6E19               	movwf	(??_isdigit+1)^0,c
  7891  003AFE  C016  F01A         	movff	isdigit@c,??_isdigit+2
  7892  003B02  C017  F01B         	movff	isdigit@c+1,??_isdigit+3
  7893  003B06  5018               	movf	??_isdigit^0,w,c
  7894  003B08  261A               	addwf	(??_isdigit+2)^0,f,c
  7895  003B0A  5019               	movf	(??_isdigit+1)^0,w,c
  7896  003B0C  221B               	addwfc	(??_isdigit+3)^0,f,c
  7897  003B0E  501B               	movf	(??_isdigit+3)^0,w,c
  7898  003B10  E10A               	bnz	u3980
  7899  003B12  0E0A               	movlw	10
  7900  003B14  5C1A               	subwf	(??_isdigit+2)^0,w,c
  7901  003B16  A0D8               	btfss	status,0,c
  7902  003B18  EF90  F01D         	goto	u3981
  7903  003B1C  EF93  F01D         	goto	u3980
  7904  003B20                     u3981:
  7905  003B20  0E01               	movlw	1
  7906  003B22  EF94  F01D         	goto	u3990
  7907  003B26                     u3980:
  7908  003B26  0E00               	movlw	0
  7909  003B28                     u3990:
  7910  003B28  6E16               	movwf	?_isdigit^0,c
  7911  003B2A  6A17               	clrf	(?_isdigit+1)^0,c
  7912  003B2C  0012               	return		;funcret
  7913  003B2E                     __end_of_isdigit:
  7914                           	callstack 0
  7915                           
  7916 ;; *************** function ___wmul *****************
  7917 ;; Defined at:
  7918 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;  multiplier      2   21[COMRAM] unsigned int 
  7921 ;;  multiplicand    2   23[COMRAM] unsigned int 
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;  product         2   25[COMRAM] unsigned int 
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  2   21[COMRAM] unsigned int 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0, prodl, prodh
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7933 ;;      Params:         4       0       0       0       0       0       0       0       0
  7934 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7936 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7937 ;;Total ram usage:        6 bytes
  7938 ;; Hardware stack levels used: 1
  7939 ;; Hardware stack levels required when called: 4
  7940 ;; This function calls:
  7941 ;;		Nothing
  7942 ;; This function is called by:
  7943 ;;		_atoi
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text28
  7948  003B2E                     __ptext28:
  7949                           	callstack 0
  7950  003B2E                     ___wmul:
  7951                           	callstack 22
  7952  003B2E  5016               	movf	___wmul@multiplier^0,w,c
  7953  003B30  0218               	mulwf	___wmul@multiplicand^0,c
  7954  003B32  CFF3 F01A          	movff	prodl,___wmul@product
  7955  003B36  CFF4 F01B          	movff	prodh,___wmul@product+1
  7956  003B3A  5016               	movf	___wmul@multiplier^0,w,c
  7957  003B3C  0219               	mulwf	(___wmul@multiplicand+1)^0,c
  7958  003B3E  50F3               	movf	243,w,c
  7959  003B40  261B               	addwf	(___wmul@product+1)^0,f,c
  7960  003B42  5017               	movf	(___wmul@multiplier+1)^0,w,c
  7961  003B44  0218               	mulwf	___wmul@multiplicand^0,c
  7962  003B46  50F3               	movf	243,w,c
  7963  003B48  261B               	addwf	(___wmul@product+1)^0,f,c
  7964  003B4A  C01A  F016         	movff	___wmul@product,?___wmul
  7965  003B4E  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  7966  003B52  0012               	return		;funcret
  7967  003B54                     __end_of___wmul:
  7968                           	callstack 0
  7969                           
  7970 ;; *************** function _limpa_lcd *****************
  7971 ;; Defined at:
  7972 ;;		line 26 in file "./lcd.intermed.h"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;		None
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1    wreg      void 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, cstack
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7986 ;;      Params:         0       0       0       0       0       0       0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7989 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7990 ;;Total ram usage:        0 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; Hardware stack levels required when called: 5
  7993 ;; This function calls:
  7994 ;;		_comando_lcd
  7995 ;; This function is called by:
  7996 ;;		_main
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text29
  8001  003BBC                     __ptext29:
  8002                           	callstack 0
  8003  003BBC                     _limpa_lcd:
  8004                           	callstack 25
  8005  003BBC                     
  8006                           ;./lcd.intermed.h: 28:     comando_lcd(1);
  8007  003BBC  0E00               	movlw	0
  8008  003BBE  6E17               	movwf	(comando_lcd@comando+1)^0,c
  8009  003BC0  0E01               	movlw	1
  8010  003BC2  6E16               	movwf	comando_lcd@comando^0,c
  8011  003BC4  ECAA  F01D         	call	_comando_lcd	;wreg free
  8012  003BC8  0012               	return		;funcret
  8013  003BCA                     __end_of_limpa_lcd:
  8014                           	callstack 0
  8015                           
  8016 ;; *************** function _comando_lcd *****************
  8017 ;; Defined at:
  8018 ;;		line 7 in file "./lcd.intermed.h"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;  comando         2   21[COMRAM] unsigned int 
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		wreg
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8032 ;;      Params:         2       0       0       0       0       0       0       0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8034 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8035 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8036 ;;Total ram usage:        3 bytes
  8037 ;; Hardware stack levels used: 1
  8038 ;; Hardware stack levels required when called: 4
  8039 ;; This function calls:
  8040 ;;		Nothing
  8041 ;; This function is called by:
  8042 ;;		_limpa_lcd
  8043 ;;		_main
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           	psect	text30
  8048  003B54                     __ptext30:
  8049                           	callstack 0
  8050  003B54                     _comando_lcd:
  8051                           	callstack 25
  8052  003B54                     
  8053                           ;./lcd.intermed.h: 7: void comando_lcd(unsigned int comando);./lcd.intermed.h: 8: {;./lc
      +                          d.intermed.h: 9:     PORTEbits.RE2 = 0;
  8054  003B54  9484               	bcf	132,2,c	;volatile
  8055                           
  8056                           ;./lcd.intermed.h: 10:     PORTEbits.RE1 = 1;
  8057  003B56  8284               	bsf	132,1,c	;volatile
  8058                           
  8059                           ;./lcd.intermed.h: 11:     PORTD = comando;
  8060  003B58  C016  FF83         	movff	comando_lcd@comando,3971	;volatile
  8061  003B5C                     
  8062                           ;./lcd.intermed.h: 12:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8063  003B5C  0E03               	movlw	3
  8064  003B5E  6E18               	movwf	??_comando_lcd^0,c
  8065  003B60  0E98               	movlw	152
  8066  003B62                     u5997:
  8067  003B62  2EE8               	decfsz	wreg,f,c
  8068  003B64  D7FE               	bra	u5997
  8069  003B66  2E18               	decfsz	??_comando_lcd^0,f,c
  8070  003B68  D7FC               	bra	u5997
  8071  003B6A                     
  8072                           ;./lcd.intermed.h: 13:     PORTEbits.RE1 = 0;
  8073  003B6A  9284               	bcf	132,1,c	;volatile
  8074  003B6C  0012               	return		;funcret
  8075  003B6E                     __end_of_comando_lcd:
  8076                           	callstack 0
  8077                           
  8078 ;; *************** function _imprime_lcd *****************
  8079 ;; Defined at:
  8080 ;;		line 31 in file "./lcd.intermed.h"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  frase           2   25[COMRAM] PTR unsigned char 
  8083 ;;		 -> temperature(8), STR_3(12), STR_2(17), STR_1(17), 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  indice          2   32[COMRAM] int 
  8086 ;;  tamanho         2   30[COMRAM] int 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8096 ;;      Params:         2       0       0       0       0       0       0       0       0
  8097 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8098 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8099 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8100 ;;Total ram usage:        9 bytes
  8101 ;; Hardware stack levels used: 1
  8102 ;; Hardware stack levels required when called: 5
  8103 ;; This function calls:
  8104 ;;		_dado_lcd
  8105 ;;		_strlen
  8106 ;; This function is called by:
  8107 ;;		_main
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text31
  8112  003568                     __ptext31:
  8113                           	callstack 0
  8114  003568                     _imprime_lcd:
  8115                           	callstack 25
  8116  003568                     
  8117                           ;./lcd.intermed.h: 31: void imprime_lcd(char frase[]);./lcd.intermed.h: 32: {;./lcd.inte
      +                          rmed.h: 33: int indice = 0;
  8118  003568  0E00               	movlw	0
  8119  00356A  6E22               	movwf	(imprime_lcd@indice+1)^0,c
  8120  00356C  0E00               	movlw	0
  8121  00356E  6E21               	movwf	imprime_lcd@indice^0,c
  8122  003570                     
  8123                           ;./lcd.intermed.h: 34: int tamanho = strlen(frase);
  8124  003570  C01A  F016         	movff	imprime_lcd@frase,strlen@s
  8125  003574  C01B  F017         	movff	imprime_lcd@frase+1,strlen@s+1
  8126  003578  ECB0  F01C         	call	_strlen	;wreg free
  8127  00357C  C016  F01F         	movff	?_strlen,imprime_lcd@tamanho
  8128  003580  C017  F020         	movff	?_strlen+1,imprime_lcd@tamanho+1
  8129                           
  8130                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  8131  003584  EFE2  F01A         	goto	l3958
  8132  003588                     l3954:
  8133                           
  8134                           ;./lcd.intermed.h: 36:     {;./lcd.intermed.h: 37: dado_lcd(frase[indice]);
  8135  003588  5021               	movf	imprime_lcd@indice^0,w,c
  8136  00358A  241A               	addwf	imprime_lcd@frase^0,w,c
  8137  00358C  6E1C               	movwf	??_imprime_lcd^0,c
  8138  00358E  5022               	movf	(imprime_lcd@indice+1)^0,w,c
  8139  003590  201B               	addwfc	(imprime_lcd@frase+1)^0,w,c
  8140  003592  6E1D               	movwf	(??_imprime_lcd+1)^0,c
  8141  003594  C01C  FFF6         	movff	??_imprime_lcd,tblptrl
  8142  003598  C01D  FFF7         	movff	??_imprime_lcd+1,tblptrh
  8143  00359C  6AF8               	clrf	tblptru,c
  8144  00359E  0E07               	movlw	(high __ramtop+-1)
  8145  0035A0  64F7               	cpfsgt	tblptrh,c
  8146  0035A2  D003               	bra	u4977
  8147  0035A4  0008               	tblrd		*
  8148  0035A6  50F5               	movf	tablat,w,c
  8149  0035A8  D005               	bra	u4970
  8150  0035AA                     u4977:
  8151  0035AA  CFF6 FFE1          	movff	tblptrl,fsr1l
  8152  0035AE  CFF7 FFE2          	movff	tblptrh,fsr1h
  8153  0035B2  50E7               	movf	indf1,w,c
  8154  0035B4                     u4970:
  8155  0035B4  6E1E               	movwf	(??_imprime_lcd+2)^0,c
  8156  0035B6  501E               	movf	(??_imprime_lcd+2)^0,w,c
  8157  0035B8  6E16               	movwf	dado_lcd@dado^0,c
  8158  0035BA  6A17               	clrf	(dado_lcd@dado+1)^0,c
  8159  0035BC  ECB7  F01D         	call	_dado_lcd	;wreg free
  8160  0035C0                     
  8161                           ;./lcd.intermed.h: 38: indice++;
  8162  0035C0  4A21               	infsnz	imprime_lcd@indice^0,f,c
  8163  0035C2  2A22               	incf	(imprime_lcd@indice+1)^0,f,c
  8164  0035C4                     l3958:
  8165                           
  8166                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  8167  0035C4  501F               	movf	imprime_lcd@tamanho^0,w,c
  8168  0035C6  5C21               	subwf	imprime_lcd@indice^0,w,c
  8169  0035C8  5022               	movf	(imprime_lcd@indice+1)^0,w,c
  8170  0035CA  0A80               	xorlw	128
  8171  0035CC  6E1C               	movwf	??_imprime_lcd^0,c
  8172  0035CE  5020               	movf	(imprime_lcd@tamanho+1)^0,w,c
  8173  0035D0  0A80               	xorlw	128
  8174  0035D2  581C               	subwfb	??_imprime_lcd^0,w,c
  8175  0035D4  A0D8               	btfss	status,0,c
  8176  0035D6  EFEF  F01A         	goto	u4981
  8177  0035DA  EFF1  F01A         	goto	u4980
  8178  0035DE                     u4981:
  8179  0035DE  EFC4  F01A         	goto	l3954
  8180  0035E2                     u4980:
  8181  0035E2  0012               	return		;funcret
  8182  0035E4                     __end_of_imprime_lcd:
  8183                           	callstack 0
  8184                           
  8185 ;; *************** function _strlen *****************
  8186 ;; Defined at:
  8187 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  s               2   21[COMRAM] PTR const unsigned char 
  8190 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
  8191 ;;		 -> STR_1(17), 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;  a               2   23[COMRAM] PTR const unsigned char 
  8194 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
  8195 ;;		 -> STR_1(17), 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  2   21[COMRAM] unsigned int 
  8198 ;; Registers used:
  8199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8205 ;;      Params:         2       0       0       0       0       0       0       0       0
  8206 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8208 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8209 ;;Total ram usage:        4 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; Hardware stack levels required when called: 4
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_imprime_lcd
  8216 ;;		_pad
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text32
  8221  003960                     __ptext32:
  8222                           	callstack 0
  8223  003960                     _strlen:
  8224                           	callstack 21
  8225  003960  C016  F018         	movff	strlen@s,strlen@a
  8226  003964  C017  F019         	movff	strlen@s+1,strlen@a+1
  8227  003968  EFB8  F01C         	goto	l2622
  8228  00396C                     l2620:
  8229  00396C  4A16               	infsnz	strlen@s^0,f,c
  8230  00396E  2A17               	incf	(strlen@s+1)^0,f,c
  8231  003970                     l2622:
  8232  003970  C016  FFF6         	movff	strlen@s,tblptrl
  8233  003974  C017  FFF7         	movff	strlen@s+1,tblptrh
  8234  003978  6AF8               	clrf	tblptru,c
  8235  00397A  0E07               	movlw	(high __ramtop+-1)
  8236  00397C  64F7               	cpfsgt	tblptrh,c
  8237  00397E  D003               	bra	u2587
  8238  003980  0008               	tblrd		*
  8239  003982  50F5               	movf	tablat,w,c
  8240  003984  D005               	bra	u2580
  8241  003986                     u2587:
  8242  003986  CFF6 FFE1          	movff	tblptrl,fsr1l
  8243  00398A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8244  00398E  50E7               	movf	indf1,w,c
  8245  003990                     u2580:
  8246  003990  0900               	iorlw	0
  8247  003992  A4D8               	btfss	status,2,c
  8248  003994  EFCE  F01C         	goto	u2591
  8249  003998  EFD0  F01C         	goto	u2590
  8250  00399C                     u2591:
  8251  00399C  EFB6  F01C         	goto	l2620
  8252  0039A0                     u2590:
  8253  0039A0  5018               	movf	strlen@a^0,w,c
  8254  0039A2  5C16               	subwf	strlen@s^0,w,c
  8255  0039A4  6E16               	movwf	?_strlen^0,c
  8256  0039A6  5019               	movf	(strlen@a+1)^0,w,c
  8257  0039A8  5817               	subwfb	(strlen@s+1)^0,w,c
  8258  0039AA  6E17               	movwf	(?_strlen+1)^0,c
  8259  0039AC  0012               	return		;funcret
  8260  0039AE                     __end_of_strlen:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function _dado_lcd *****************
  8264 ;; Defined at:
  8265 ;;		line 16 in file "./lcd.intermed.h"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  dado            2   21[COMRAM] unsigned int 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8279 ;;      Params:         2       0       0       0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8281 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8282 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8283 ;;Total ram usage:        3 bytes
  8284 ;; Hardware stack levels used: 1
  8285 ;; Hardware stack levels required when called: 4
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_imprime_lcd
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text33
  8294  003B6E                     __ptext33:
  8295                           	callstack 0
  8296  003B6E                     _dado_lcd:
  8297                           	callstack 25
  8298  003B6E                     
  8299                           ;./lcd.intermed.h: 16: void dado_lcd(unsigned int dado);./lcd.intermed.h: 17: {;./lcd.in
      +                          termed.h: 18:     PORTEbits.RE2 = 1;
  8300  003B6E  8484               	bsf	132,2,c	;volatile
  8301                           
  8302                           ;./lcd.intermed.h: 19:     PORTEbits.RE1 = 1;
  8303  003B70  8284               	bsf	132,1,c	;volatile
  8304                           
  8305                           ;./lcd.intermed.h: 20:     PORTD = dado;
  8306  003B72  C016  FF83         	movff	dado_lcd@dado,3971	;volatile
  8307  003B76                     
  8308                           ;./lcd.intermed.h: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8309  003B76  0E03               	movlw	3
  8310  003B78  6E18               	movwf	??_dado_lcd^0,c
  8311  003B7A  0E98               	movlw	152
  8312  003B7C                     u6007:
  8313  003B7C  2EE8               	decfsz	wreg,f,c
  8314  003B7E  D7FE               	bra	u6007
  8315  003B80  2E18               	decfsz	??_dado_lcd^0,f,c
  8316  003B82  D7FC               	bra	u6007
  8317  003B84                     
  8318                           ;./lcd.intermed.h: 22:     PORTEbits.RE1 = 0;
  8319  003B84  9284               	bcf	132,1,c	;volatile
  8320  003B86  0012               	return		;funcret
  8321  003B88                     __end_of_dado_lcd:
  8322                           	callstack 0
  8323                           
  8324 ;; *************** function _isr *****************
  8325 ;; Defined at:
  8326 ;;		line 64 in file "lcd.frase.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;		None
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;		None
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      void 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8340 ;;      Params:         0       0       0       0       0       0       0       0       0
  8341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8342 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8343 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8344 ;;Total ram usage:        6 bytes
  8345 ;; Hardware stack levels used: 1
  8346 ;; Hardware stack levels required when called: 3
  8347 ;; This function calls:
  8348 ;;		_alerta
  8349 ;;		_geraTensao
  8350 ;;		_verificaOValor
  8351 ;; This function is called by:
  8352 ;;		Interrupt level 2
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	intcode
  8357  000008                     __pintcode:
  8358                           	callstack 0
  8359  000008                     _isr:
  8360                           	callstack 19
  8361                           
  8362                           ;incstack = 0
  8363  000008  8249               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8364  00000A  EDF2  F01A         	call	int_func,f	;refresh shadow registers
  8365                           
  8366                           	psect	intcode_body
  8367  0035E4                     __pintcode_body:
  8368                           	callstack 19
  8369  0035E4                     int_func:
  8370                           	callstack 19
  8371  0035E4  0006               	pop		; remove dummy address from shadow register refresh
  8372  0035E6  CFE1 F010          	movff	fsr1l,??_isr
  8373  0035EA  CFE2 F011          	movff	fsr1h,??_isr+1
  8374  0035EE  CFF6 F012          	movff	tblptrl,??_isr+2
  8375  0035F2  CFF7 F013          	movff	tblptrh,??_isr+3
  8376  0035F6  CFF8 F014          	movff	tblptru,??_isr+4
  8377  0035FA  CFF5 F015          	movff	tablat,??_isr+5
  8378  0035FE                     
  8379                           ;lcd.frase.c: 66:     if(INTCON3bits.INT1IF == 1) {
  8380  0035FE  A0F0               	btfss	240,0,c	;volatile
  8381  003600  EF04  F01B         	goto	i2u503_41
  8382  003604  EF06  F01B         	goto	i2u503_40
  8383  003608                     i2u503_41:
  8384  003608  EF0B  F01B         	goto	i2l4022
  8385  00360C                     i2u503_40:
  8386  00360C                     
  8387                           ;lcd.frase.c: 68:         INTCON3bits.INT1IF = 0;
  8388  00360C  90F0               	bcf	240,0,c	;volatile
  8389  00360E                     
  8390                           ;lcd.frase.c: 70:        tensao--;
  8391  00360E  0100               	movlb	0	; () banked
  8392  003610  07F0               	decf	_tensao& (0+255),f,b
  8393  003612  A0D8               	btfss	status,0,c
  8394  003614  07F1               	decf	(_tensao+1)& (0+255),f,b
  8395  003616                     i2l4022:
  8396                           
  8397                           ;lcd.frase.c: 73:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  8398  003616  AAF2               	btfss	242,5,c	;volatile
  8399  003618  EF10  F01B         	goto	i2u504_41
  8400  00361C  EF12  F01B         	goto	i2u504_40
  8401  003620                     i2u504_41:
  8402  003620  EF22  F01B         	goto	i2l84
  8403  003624                     i2u504_40:
  8404  003624  A4F2               	btfss	242,2,c	;volatile
  8405  003626  EF17  F01B         	goto	i2u505_41
  8406  00362A  EF19  F01B         	goto	i2u505_40
  8407  00362E                     i2u505_41:
  8408  00362E  EF22  F01B         	goto	i2l84
  8409  003632                     i2u505_40:
  8410  003632                     
  8411                           ;lcd.frase.c: 78:         alerta();
  8412  003632  ECAE  F019         	call	_alerta	;wreg free
  8413  003636                     
  8414                           ;lcd.frase.c: 79:         verificaOValor();
  8415  003636  EC6E  F01B         	call	_verificaOValor	;wreg free
  8416  00363A                     
  8417                           ;lcd.frase.c: 80:         geraTensao();
  8418  00363A  ECAC  F017         	call	_geraTensao	;wreg free
  8419  00363E                     
  8420                           ;lcd.frase.c: 82:   TMR0L = 5;
  8421  00363E  0E05               	movlw	5
  8422  003640  6ED6               	movwf	214,c	;volatile
  8423  003642                     
  8424                           ;lcd.frase.c: 84:         INTCONbits.TMR0IF = 0;
  8425  003642  94F2               	bcf	242,2,c	;volatile
  8426  003644                     i2l84:
  8427  003644  C015  FFF5         	movff	??_isr+5,tablat
  8428  003648  C014  FFF8         	movff	??_isr+4,tblptru
  8429  00364C  C013  FFF7         	movff	??_isr+3,tblptrh
  8430  003650  C012  FFF6         	movff	??_isr+2,tblptrl
  8431  003654  C011  FFE2         	movff	??_isr+1,fsr1h
  8432  003658  C010  FFE1         	movff	??_isr,fsr1l
  8433  00365C  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8434  00365E  0011               	retfie		f
  8435  003660                     __end_of_isr:
  8436                           	callstack 0
  8437                           
  8438 ;; *************** function _verificaOValor *****************
  8439 ;; Defined at:
  8440 ;;		line 58 in file "lcd.frase.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;		None
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;		None
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		wreg, status,2, status,0, cstack
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8454 ;;      Params:         0       0       0       0       0       0       0       0       0
  8455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8457 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8458 ;;Total ram usage:        0 bytes
  8459 ;; Hardware stack levels used: 1
  8460 ;; Hardware stack levels required when called: 1
  8461 ;; This function calls:
  8462 ;;		i2___flge
  8463 ;; This function is called by:
  8464 ;;		_isr
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text35
  8469  0036DC                     __ptext35:
  8470                           	callstack 0
  8471  0036DC                     _verificaOValor:
  8472                           	callstack 20
  8473  0036DC                     
  8474                           ;lcd.frase.c: 59:     if(temperatura >= temperaturaMaxima || temperatura <= temperaturaM
      +                          inima){
  8475  0036DC  C03F  F001         	movff	_temperatura,i2___flge@ff1
  8476  0036E0  C040  F002         	movff	_temperatura+1,i2___flge@ff1+1
  8477  0036E4  C041  F003         	movff	_temperatura+2,i2___flge@ff1+2
  8478  0036E8  C042  F004         	movff	_temperatura+3,i2___flge@ff1+3
  8479  0036EC  C03B  F005         	movff	_temperaturaMaxima,i2___flge@ff2
  8480  0036F0  C03C  F006         	movff	_temperaturaMaxima+1,i2___flge@ff2+1
  8481  0036F4  C03D  F007         	movff	_temperaturaMaxima+2,i2___flge@ff2+2
  8482  0036F8  C03E  F008         	movff	_temperaturaMaxima+3,i2___flge@ff2+3
  8483  0036FC  ECAB  F016         	call	i2___flge	;wreg free
  8484  003700  B0D8               	btfsc	status,0,c
  8485  003702  EF85  F01B         	goto	i2u501_41
  8486  003706  EF87  F01B         	goto	i2u501_40
  8487  00370A                     i2u501_41:
  8488  00370A  EFA0  F01B         	goto	i2l4002
  8489  00370E                     i2u501_40:
  8490  00370E  C037  F001         	movff	_temperaturaMinima,i2___flge@ff1
  8491  003712  C038  F002         	movff	_temperaturaMinima+1,i2___flge@ff1+1
  8492  003716  C039  F003         	movff	_temperaturaMinima+2,i2___flge@ff1+2
  8493  00371A  C03A  F004         	movff	_temperaturaMinima+3,i2___flge@ff1+3
  8494  00371E  C03F  F005         	movff	_temperatura,i2___flge@ff2
  8495  003722  C040  F006         	movff	_temperatura+1,i2___flge@ff2+1
  8496  003726  C041  F007         	movff	_temperatura+2,i2___flge@ff2+2
  8497  00372A  C042  F008         	movff	_temperatura+3,i2___flge@ff2+3
  8498  00372E  ECAB  F016         	call	i2___flge	;wreg free
  8499  003732  A0D8               	btfss	status,0,c
  8500  003734  EF9E  F01B         	goto	i2u502_41
  8501  003738  EFA0  F01B         	goto	i2u502_40
  8502  00373C                     i2u502_41:
  8503  00373C  EFA5  F01B         	goto	i2l77
  8504  003740                     i2u502_40:
  8505  003740                     i2l4002:
  8506                           
  8507                           ;lcd.frase.c: 60:         tensao = 2;
  8508  003740  0E00               	movlw	0
  8509  003742  0100               	movlb	0	; () banked
  8510  003744  6FF1               	movwf	(_tensao+1)& (0+255),b
  8511  003746  0E02               	movlw	2
  8512  003748  6FF0               	movwf	_tensao& (0+255),b
  8513  00374A                     i2l77:
  8514  00374A  0012               	return		;funcret
  8515  00374C                     __end_of_verificaOValor:
  8516                           	callstack 0
  8517                           
  8518 ;; *************** function _geraTensao *****************
  8519 ;; Defined at:
  8520 ;;		line 22 in file "lcd.frase.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;		None
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8534 ;;      Params:         0       0       0       0       0       0       0       0       0
  8535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8536 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8537 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8538 ;;Total ram usage:        2 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_isr
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           	psect	text36
  8548  002F58                     __ptext36:
  8549                           	callstack 0
  8550  002F58                     _geraTensao:
  8551                           	callstack 21
  8552  002F58                     
  8553                           ;lcd.frase.c: 23:     switch(tensao){
  8554  002F58  EFF4  F017         	goto	i2l3976
  8555  002F5C                     i2l3962:
  8556                           
  8557                           ;lcd.frase.c: 25:             temperatura = 0;
  8558  002F5C  0E00               	movlw	0
  8559  002F5E  6E3F               	movwf	_temperatura^0,c
  8560  002F60  0E00               	movlw	0
  8561  002F62  6E40               	movwf	(_temperatura+1)^0,c
  8562  002F64  0E00               	movlw	0
  8563  002F66  6E41               	movwf	(_temperatura+2)^0,c
  8564  002F68  0E00               	movlw	0
  8565  002F6A  6E42               	movwf	(_temperatura+3)^0,c
  8566                           
  8567                           ;lcd.frase.c: 26:             break;
  8568  002F6C  EF1A  F018         	goto	i2l65
  8569  002F70                     i2l3964:
  8570                           
  8571                           ;lcd.frase.c: 28:             temperatura = 20;
  8572  002F70  0E00               	movlw	0
  8573  002F72  6E3F               	movwf	_temperatura^0,c
  8574  002F74  0E00               	movlw	0
  8575  002F76  6E40               	movwf	(_temperatura+1)^0,c
  8576  002F78  0EA0               	movlw	160
  8577  002F7A  6E41               	movwf	(_temperatura+2)^0,c
  8578  002F7C  0E41               	movlw	65
  8579  002F7E  6E42               	movwf	(_temperatura+3)^0,c
  8580                           
  8581                           ;lcd.frase.c: 29:             break;
  8582  002F80  EF1A  F018         	goto	i2l65
  8583  002F84                     i2l3966:
  8584                           
  8585                           ;lcd.frase.c: 31:             temperatura = 40;
  8586  002F84  0E00               	movlw	0
  8587  002F86  6E3F               	movwf	_temperatura^0,c
  8588  002F88  0E00               	movlw	0
  8589  002F8A  6E40               	movwf	(_temperatura+1)^0,c
  8590  002F8C  0E20               	movlw	32
  8591  002F8E  6E41               	movwf	(_temperatura+2)^0,c
  8592  002F90  0E42               	movlw	66
  8593  002F92  6E42               	movwf	(_temperatura+3)^0,c
  8594                           
  8595                           ;lcd.frase.c: 32:             break;
  8596  002F94  EF1A  F018         	goto	i2l65
  8597  002F98                     i2l3968:
  8598                           
  8599                           ;lcd.frase.c: 34:             temperatura = 60;
  8600  002F98  0E00               	movlw	0
  8601  002F9A  6E3F               	movwf	_temperatura^0,c
  8602  002F9C  0E00               	movlw	0
  8603  002F9E  6E40               	movwf	(_temperatura+1)^0,c
  8604  002FA0  0E70               	movlw	112
  8605  002FA2  6E41               	movwf	(_temperatura+2)^0,c
  8606  002FA4  0E42               	movlw	66
  8607  002FA6  6E42               	movwf	(_temperatura+3)^0,c
  8608                           
  8609                           ;lcd.frase.c: 35:             break;
  8610  002FA8  EF1A  F018         	goto	i2l65
  8611  002FAC                     i2l3970:
  8612                           
  8613                           ;lcd.frase.c: 37:             temperatura = 80;
  8614  002FAC  0E00               	movlw	0
  8615  002FAE  6E3F               	movwf	_temperatura^0,c
  8616  002FB0  0E00               	movlw	0
  8617  002FB2  6E40               	movwf	(_temperatura+1)^0,c
  8618  002FB4  0EA0               	movlw	160
  8619  002FB6  6E41               	movwf	(_temperatura+2)^0,c
  8620  002FB8  0E42               	movlw	66
  8621  002FBA  6E42               	movwf	(_temperatura+3)^0,c
  8622                           
  8623                           ;lcd.frase.c: 38:             break;
  8624  002FBC  EF1A  F018         	goto	i2l65
  8625  002FC0                     i2l3972:
  8626                           
  8627                           ;lcd.frase.c: 40:             temperatura = 100;
  8628  002FC0  0E00               	movlw	0
  8629  002FC2  6E3F               	movwf	_temperatura^0,c
  8630  002FC4  0E00               	movlw	0
  8631  002FC6  6E40               	movwf	(_temperatura+1)^0,c
  8632  002FC8  0EC8               	movlw	200
  8633  002FCA  6E41               	movwf	(_temperatura+2)^0,c
  8634  002FCC  0E42               	movlw	66
  8635  002FCE  6E42               	movwf	(_temperatura+3)^0,c
  8636                           
  8637                           ;lcd.frase.c: 41:             break;
  8638  002FD0  EF1A  F018         	goto	i2l65
  8639  002FD4                     i2l3974:
  8640                           
  8641                           ;lcd.frase.c: 43:             temperatura = 10;
  8642  002FD4  0E00               	movlw	0
  8643  002FD6  6E3F               	movwf	_temperatura^0,c
  8644  002FD8  0E00               	movlw	0
  8645  002FDA  6E40               	movwf	(_temperatura+1)^0,c
  8646  002FDC  0E20               	movlw	32
  8647  002FDE  6E41               	movwf	(_temperatura+2)^0,c
  8648  002FE0  0E41               	movlw	65
  8649  002FE2  6E42               	movwf	(_temperatura+3)^0,c
  8650                           
  8651                           ;lcd.frase.c: 44:     }
  8652  002FE4  EF1A  F018         	goto	i2l65
  8653  002FE8                     i2l3976:
  8654  002FE8  C0F0  F001         	movff	_tensao,??_geraTensao
  8655  002FEC  C0F1  F002         	movff	_tensao+1,??_geraTensao+1
  8656                           
  8657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8658                           ; Switch size 1, requested type "simple"
  8659                           ; Number of cases is 1, Range of values is 0 to 0
  8660                           ; switch strategies available:
  8661                           ; Name         Instructions Cycles
  8662                           ; simple_byte            4     3 (average)
  8663                           ;	Chosen strategy is simple_byte
  8664  002FF0  5002               	movf	(??_geraTensao+1)^0,w,c
  8665  002FF2  0A00               	xorlw	0	; case 0
  8666  002FF4  B4D8               	btfsc	status,2,c
  8667  002FF6  EFFF  F017         	goto	i2l4692
  8668  002FFA  EFEA  F017         	goto	i2l3974
  8669  002FFE                     i2l4692:
  8670                           
  8671                           ; Switch size 1, requested type "simple"
  8672                           ; Number of cases is 6, Range of values is 0 to 5
  8673                           ; switch strategies available:
  8674                           ; Name         Instructions Cycles
  8675                           ; simple_byte           19    10 (average)
  8676                           ;	Chosen strategy is simple_byte
  8677  002FFE  5001               	movf	??_geraTensao^0,w,c
  8678  003000  0A00               	xorlw	0	; case 0
  8679  003002  B4D8               	btfsc	status,2,c
  8680  003004  EFAE  F017         	goto	i2l3962
  8681  003008  0A01               	xorlw	1	; case 1
  8682  00300A  B4D8               	btfsc	status,2,c
  8683  00300C  EFB8  F017         	goto	i2l3964
  8684  003010  0A03               	xorlw	3	; case 2
  8685  003012  B4D8               	btfsc	status,2,c
  8686  003014  EFC2  F017         	goto	i2l3966
  8687  003018  0A01               	xorlw	1	; case 3
  8688  00301A  B4D8               	btfsc	status,2,c
  8689  00301C  EFCC  F017         	goto	i2l3968
  8690  003020  0A07               	xorlw	7	; case 4
  8691  003022  B4D8               	btfsc	status,2,c
  8692  003024  EFD6  F017         	goto	i2l3970
  8693  003028  0A01               	xorlw	1	; case 5
  8694  00302A  B4D8               	btfsc	status,2,c
  8695  00302C  EFE0  F017         	goto	i2l3972
  8696  003030  EFEA  F017         	goto	i2l3974
  8697  003034                     i2l65:
  8698  003034  0012               	return		;funcret
  8699  003036                     __end_of_geraTensao:
  8700                           	callstack 0
  8701                           
  8702 ;; *************** function _alerta *****************
  8703 ;; Defined at:
  8704 ;;		line 47 in file "lcd.frase.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;		None
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;		None
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  1    wreg      void 
  8711 ;; Registers used:
  8712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8718 ;;      Params:         0       0       0       0       0       0       0       0       0
  8719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8720 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8721 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8722 ;;Total ram usage:        2 bytes
  8723 ;; Hardware stack levels used: 1
  8724 ;; Hardware stack levels required when called: 2
  8725 ;; This function calls:
  8726 ;;		i2___flge
  8727 ;;		i2_comando_lcd
  8728 ;;		i2_imprime_lcd
  8729 ;;		i2_limpa_lcd
  8730 ;; This function is called by:
  8731 ;;		_isr
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text37
  8736  00335C                     __ptext37:
  8737                           	callstack 0
  8738  00335C                     _alerta:
  8739                           	callstack 19
  8740  00335C                     
  8741                           ;lcd.frase.c: 48:     if(temperatura > temperaturaMaxima || temperatura < temperaturaMin
      +                          ima){
  8742  00335C  C03B  F001         	movff	_temperaturaMaxima,i2___flge@ff1
  8743  003360  C03C  F002         	movff	_temperaturaMaxima+1,i2___flge@ff1+1
  8744  003364  C03D  F003         	movff	_temperaturaMaxima+2,i2___flge@ff1+2
  8745  003368  C03E  F004         	movff	_temperaturaMaxima+3,i2___flge@ff1+3
  8746  00336C  C03F  F005         	movff	_temperatura,i2___flge@ff2
  8747  003370  C040  F006         	movff	_temperatura+1,i2___flge@ff2+1
  8748  003374  C041  F007         	movff	_temperatura+2,i2___flge@ff2+2
  8749  003378  C042  F008         	movff	_temperatura+3,i2___flge@ff2+3
  8750  00337C  ECAB  F016         	call	i2___flge	;wreg free
  8751  003380  A0D8               	btfss	status,0,c
  8752  003382  EFC5  F019         	goto	i2u499_41
  8753  003386  EFC7  F019         	goto	i2u499_40
  8754  00338A                     i2u499_41:
  8755  00338A  EFE0  F019         	goto	i2l3986
  8756  00338E                     i2u499_40:
  8757  00338E  C03F  F001         	movff	_temperatura,i2___flge@ff1
  8758  003392  C040  F002         	movff	_temperatura+1,i2___flge@ff1+1
  8759  003396  C041  F003         	movff	_temperatura+2,i2___flge@ff1+2
  8760  00339A  C042  F004         	movff	_temperatura+3,i2___flge@ff1+3
  8761  00339E  C037  F005         	movff	_temperaturaMinima,i2___flge@ff2
  8762  0033A2  C038  F006         	movff	_temperaturaMinima+1,i2___flge@ff2+1
  8763  0033A6  C039  F007         	movff	_temperaturaMinima+2,i2___flge@ff2+2
  8764  0033AA  C03A  F008         	movff	_temperaturaMinima+3,i2___flge@ff2+3
  8765  0033AE  ECAB  F016         	call	i2___flge	;wreg free
  8766  0033B2  B0D8               	btfsc	status,0,c
  8767  0033B4  EFDE  F019         	goto	i2u500_41
  8768  0033B8  EFE0  F019         	goto	i2u500_40
  8769  0033BC                     i2u500_41:
  8770  0033BC  EF06  F01A         	goto	i2l71
  8771  0033C0                     i2u500_40:
  8772  0033C0                     i2l3986:
  8773                           
  8774                           ;lcd.frase.c: 49:             limpa_lcd( );
  8775  0033C0  ECE5  F01D         	call	i2_limpa_lcd	;wreg free
  8776  0033C4                     
  8777                           ;lcd.frase.c: 50:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  8778  0033C4  0E06               	movlw	6
  8779  0033C6  6E0F               	movwf	(??_alerta+1)^0,c
  8780  0033C8  0E13               	movlw	19
  8781  0033CA  6E0E               	movwf	??_alerta^0,c
  8782  0033CC  0EAE               	movlw	174
  8783  0033CE                     i2u601_47:
  8784  0033CE  2EE8               	decfsz	wreg,f,c
  8785  0033D0  D7FE               	bra	i2u601_47
  8786  0033D2  2E0E               	decfsz	??_alerta^0,f,c
  8787  0033D4  D7FC               	bra	i2u601_47
  8788  0033D6  2E0F               	decfsz	(??_alerta+1)^0,f,c
  8789  0033D8  D7FA               	bra	i2u601_47
  8790  0033DA                     
  8791                           ;lcd.frase.c: 51:             comando_lcd(128);
  8792  0033DA  0E00               	movlw	0
  8793  0033DC  6E02               	movwf	(i2comando_lcd@comando+1)^0,c
  8794  0033DE  0E80               	movlw	128
  8795  0033E0  6E01               	movwf	i2comando_lcd@comando^0,c
  8796  0033E2  ECC4  F01D         	call	i2_comando_lcd	;wreg free
  8797  0033E6                     
  8798                           ;lcd.frase.c: 52:             imprime_lcd("ERRO Temperatura");
  8799  0033E6  0E12               	movlw	low STR_1
  8800  0033E8  6E05               	movwf	i2imprime_lcd@frase^0,c
  8801  0033EA  0E08               	movlw	high STR_1
  8802  0033EC  6E06               	movwf	(i2imprime_lcd@frase+1)^0,c
  8803  0033EE  EC30  F01B         	call	i2_imprime_lcd	;wreg free
  8804  0033F2                     
  8805                           ;lcd.frase.c: 53:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  8806  0033F2  0E06               	movlw	6
  8807  0033F4  6E0F               	movwf	(??_alerta+1)^0,c
  8808  0033F6  0E13               	movlw	19
  8809  0033F8  6E0E               	movwf	??_alerta^0,c
  8810  0033FA  0EAE               	movlw	174
  8811  0033FC                     i2u602_47:
  8812  0033FC  2EE8               	decfsz	wreg,f,c
  8813  0033FE  D7FE               	bra	i2u602_47
  8814  003400  2E0E               	decfsz	??_alerta^0,f,c
  8815  003402  D7FC               	bra	i2u602_47
  8816  003404  2E0F               	decfsz	(??_alerta+1)^0,f,c
  8817  003406  D7FA               	bra	i2u602_47
  8818  003408                     
  8819                           ;lcd.frase.c: 54:             limpa_lcd( );
  8820  003408  ECE5  F01D         	call	i2_limpa_lcd	;wreg free
  8821  00340C                     i2l71:
  8822  00340C  0012               	return		;funcret
  8823  00340E                     __end_of_alerta:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function i2_limpa_lcd *****************
  8827 ;; Defined at:
  8828 ;;		line 26 in file "./lcd.intermed.h"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;		None
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;		None
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      void 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8842 ;;      Params:         0       0       0       0       0       0       0       0       0
  8843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8845 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8846 ;;Total ram usage:        0 bytes
  8847 ;; Hardware stack levels used: 1
  8848 ;; Hardware stack levels required when called: 1
  8849 ;; This function calls:
  8850 ;;		i2_comando_lcd
  8851 ;; This function is called by:
  8852 ;;		_alerta
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text38
  8857  003BCA                     __ptext38:
  8858                           	callstack 0
  8859  003BCA                     i2_limpa_lcd:
  8860                           	callstack 19
  8861  003BCA                     
  8862                           ;./lcd.intermed.h: 28:     comando_lcd(1);
  8863  003BCA  0E00               	movlw	0
  8864  003BCC  6E02               	movwf	(i2comando_lcd@comando+1)^0,c
  8865  003BCE  0E01               	movlw	1
  8866  003BD0  6E01               	movwf	i2comando_lcd@comando^0,c
  8867  003BD2  ECC4  F01D         	call	i2_comando_lcd	;wreg free
  8868  003BD6  0012               	return		;funcret
  8869  003BD8                     __end_ofi2_limpa_lcd:
  8870                           	callstack 0
  8871                           
  8872 ;; *************** function i2_comando_lcd *****************
  8873 ;; Defined at:
  8874 ;;		line 7 in file "./lcd.intermed.h"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  comando         2    0[COMRAM] unsigned int 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;		None
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		wreg
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8888 ;;      Params:         2       0       0       0       0       0       0       0       0
  8889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8890 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8891 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8892 ;;Total ram usage:        3 bytes
  8893 ;; Hardware stack levels used: 1
  8894 ;; This function calls:
  8895 ;;		Nothing
  8896 ;; This function is called by:
  8897 ;;		_alerta
  8898 ;;		i2_limpa_lcd
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text39
  8903  003B88                     __ptext39:
  8904                           	callstack 0
  8905  003B88                     i2_comando_lcd:
  8906                           	callstack 19
  8907  003B88                     
  8908                           ;./lcd.intermed.h: 7: void comando_lcd(unsigned int comando);./lcd.intermed.h: 8: {;./lc
      +                          d.intermed.h: 9:     PORTEbits.RE2 = 0;
  8909  003B88  9484               	bcf	132,2,c	;volatile
  8910                           
  8911                           ;./lcd.intermed.h: 10:     PORTEbits.RE1 = 1;
  8912  003B8A  8284               	bsf	132,1,c	;volatile
  8913                           
  8914                           ;./lcd.intermed.h: 11:     PORTD = comando;
  8915  003B8C  C001  FF83         	movff	i2comando_lcd@comando,3971	;volatile
  8916  003B90                     
  8917                           ;./lcd.intermed.h: 12:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8918  003B90  0E03               	movlw	3
  8919  003B92  6E03               	movwf	??i2_comando_lcd^0,c
  8920  003B94  0E98               	movlw	152
  8921  003B96                     i2u603_47:
  8922  003B96  2EE8               	decfsz	wreg,f,c
  8923  003B98  D7FE               	bra	i2u603_47
  8924  003B9A  2E03               	decfsz	??i2_comando_lcd^0,f,c
  8925  003B9C  D7FC               	bra	i2u603_47
  8926  003B9E                     
  8927                           ;./lcd.intermed.h: 13:     PORTEbits.RE1 = 0;
  8928  003B9E  9284               	bcf	132,1,c	;volatile
  8929  003BA0  0012               	return		;funcret
  8930  003BA2                     __end_ofi2_comando_lcd:
  8931                           	callstack 0
  8932                           
  8933 ;; *************** function i2_imprime_lcd *****************
  8934 ;; Defined at:
  8935 ;;		line 31 in file "./lcd.intermed.h"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  frase           2    4[COMRAM] PTR unsigned char 
  8938 ;;		 -> temperature(8), STR_3(12), STR_2(17), STR_1(17), 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;  indice          2   11[COMRAM] int 
  8941 ;;  tamanho         2    9[COMRAM] int 
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  1    wreg      void 
  8944 ;; Registers used:
  8945 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8951 ;;      Params:         2       0       0       0       0       0       0       0       0
  8952 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8953 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8954 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8955 ;;Total ram usage:        9 bytes
  8956 ;; Hardware stack levels used: 1
  8957 ;; Hardware stack levels required when called: 1
  8958 ;; This function calls:
  8959 ;;		i2_dado_lcd
  8960 ;;		i2_strlen
  8961 ;; This function is called by:
  8962 ;;		_alerta
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text40
  8967  003660                     __ptext40:
  8968                           	callstack 0
  8969  003660                     i2_imprime_lcd:
  8970                           	callstack 19
  8971  003660                     
  8972                           ;./lcd.intermed.h: 31: void imprime_lcd(char frase[]);./lcd.intermed.h: 32: {;./lcd.inte
      +                          rmed.h: 33: int indice = 0;
  8973  003660  0E00               	movlw	0
  8974  003662  6E0D               	movwf	(i2imprime_lcd@indice+1)^0,c
  8975  003664  0E00               	movlw	0
  8976  003666  6E0C               	movwf	i2imprime_lcd@indice^0,c
  8977  003668                     
  8978                           ;./lcd.intermed.h: 34: int tamanho = strlen(frase);
  8979  003668  C005  F001         	movff	i2imprime_lcd@frase,i2strlen@s
  8980  00366C  C006  F002         	movff	i2imprime_lcd@frase+1,i2strlen@s+1
  8981  003670  ECD7  F01C         	call	i2_strlen	;wreg free
  8982  003674  C001  F00A         	movff	?i2_strlen,i2imprime_lcd@tamanho
  8983  003678  C002  F00B         	movff	?i2_strlen+1,i2imprime_lcd@tamanho+1
  8984                           
  8985                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  8986  00367C  EF5E  F01B         	goto	i2l3924
  8987  003680                     i2l3920:
  8988                           
  8989                           ;./lcd.intermed.h: 36:     {;./lcd.intermed.h: 37: dado_lcd(frase[indice]);
  8990  003680  500C               	movf	i2imprime_lcd@indice^0,w,c
  8991  003682  2405               	addwf	i2imprime_lcd@frase^0,w,c
  8992  003684  6E07               	movwf	??i2_imprime_lcd^0,c
  8993  003686  500D               	movf	(i2imprime_lcd@indice+1)^0,w,c
  8994  003688  2006               	addwfc	(i2imprime_lcd@frase+1)^0,w,c
  8995  00368A  6E08               	movwf	(??i2_imprime_lcd+1)^0,c
  8996  00368C  C007  FFF6         	movff	??i2_imprime_lcd,tblptrl
  8997  003690  C008  FFF7         	movff	??i2_imprime_lcd+1,tblptrh
  8998  003694  6AF8               	clrf	tblptru,c
  8999  003696  0E07               	movlw	(high __ramtop+-1)
  9000  003698  64F7               	cpfsgt	tblptrh,c
  9001  00369A  D003               	bra	i2u490_47
  9002  00369C  0008               	tblrd		*
  9003  00369E  50F5               	movf	tablat,w,c
  9004  0036A0  D005               	bra	i2u490_40
  9005  0036A2                     i2u490_47:
  9006  0036A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  9007  0036A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  9008  0036AA  50E7               	movf	indf1,w,c
  9009  0036AC                     i2u490_40:
  9010  0036AC  6E09               	movwf	(??i2_imprime_lcd+2)^0,c
  9011  0036AE  5009               	movf	(??i2_imprime_lcd+2)^0,w,c
  9012  0036B0  6E01               	movwf	i2dado_lcd@dado^0,c
  9013  0036B2  6A02               	clrf	(i2dado_lcd@dado+1)^0,c
  9014  0036B4  ECD1  F01D         	call	i2_dado_lcd	;wreg free
  9015  0036B8                     
  9016                           ;./lcd.intermed.h: 38: indice++;
  9017  0036B8  4A0C               	infsnz	i2imprime_lcd@indice^0,f,c
  9018  0036BA  2A0D               	incf	(i2imprime_lcd@indice+1)^0,f,c
  9019  0036BC                     i2l3924:
  9020                           
  9021                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  9022  0036BC  500A               	movf	i2imprime_lcd@tamanho^0,w,c
  9023  0036BE  5C0C               	subwf	i2imprime_lcd@indice^0,w,c
  9024  0036C0  500D               	movf	(i2imprime_lcd@indice+1)^0,w,c
  9025  0036C2  0A80               	xorlw	128
  9026  0036C4  6E07               	movwf	??i2_imprime_lcd^0,c
  9027  0036C6  500B               	movf	(i2imprime_lcd@tamanho+1)^0,w,c
  9028  0036C8  0A80               	xorlw	128
  9029  0036CA  5807               	subwfb	??i2_imprime_lcd^0,w,c
  9030  0036CC  A0D8               	btfss	status,0,c
  9031  0036CE  EF6B  F01B         	goto	i2u491_41
  9032  0036D2  EF6D  F01B         	goto	i2u491_40
  9033  0036D6                     i2u491_41:
  9034  0036D6  EF40  F01B         	goto	i2l3920
  9035  0036DA                     i2u491_40:
  9036  0036DA  0012               	return		;funcret
  9037  0036DC                     __end_ofi2_imprime_lcd:
  9038                           	callstack 0
  9039                           
  9040 ;; *************** function i2_strlen *****************
  9041 ;; Defined at:
  9042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9045 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
  9046 ;;		 -> STR_1(17), 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9049 ;;		 -> dbuf(80), temperature(8), STR_3(12), STR_2(17), 
  9050 ;;		 -> STR_1(17), 
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  2    0[COMRAM] unsigned int 
  9053 ;; Registers used:
  9054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9060 ;;      Params:         2       0       0       0       0       0       0       0       0
  9061 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9063 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9064 ;;Total ram usage:        4 bytes
  9065 ;; Hardware stack levels used: 1
  9066 ;; This function calls:
  9067 ;;		Nothing
  9068 ;; This function is called by:
  9069 ;;		i2_imprime_lcd
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text41
  9074  0039AE                     __ptext41:
  9075                           	callstack 0
  9076  0039AE                     i2_strlen:
  9077                           	callstack 19
  9078  0039AE  C001  F003         	movff	i2strlen@s,i2strlen@a
  9079  0039B2  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  9080  0039B6  EFDF  F01C         	goto	i2l3888
  9081  0039BA                     i2l3886:
  9082  0039BA  4A01               	infsnz	i2strlen@s^0,f,c
  9083  0039BC  2A02               	incf	(i2strlen@s+1)^0,f,c
  9084  0039BE                     i2l3888:
  9085  0039BE  C001  FFF6         	movff	i2strlen@s,tblptrl
  9086  0039C2  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  9087  0039C6  6AF8               	clrf	tblptru,c
  9088  0039C8  0E07               	movlw	(high __ramtop+-1)
  9089  0039CA  64F7               	cpfsgt	tblptrh,c
  9090  0039CC  D003               	bra	i2u487_47
  9091  0039CE  0008               	tblrd		*
  9092  0039D0  50F5               	movf	tablat,w,c
  9093  0039D2  D005               	bra	i2u487_40
  9094  0039D4                     i2u487_47:
  9095  0039D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  9096  0039D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  9097  0039DC  50E7               	movf	indf1,w,c
  9098  0039DE                     i2u487_40:
  9099  0039DE  0900               	iorlw	0
  9100  0039E0  A4D8               	btfss	status,2,c
  9101  0039E2  EFF5  F01C         	goto	i2u488_41
  9102  0039E6  EFF7  F01C         	goto	i2u488_40
  9103  0039EA                     i2u488_41:
  9104  0039EA  EFDD  F01C         	goto	i2l3886
  9105  0039EE                     i2u488_40:
  9106  0039EE  5003               	movf	i2strlen@a^0,w,c
  9107  0039F0  5C01               	subwf	i2strlen@s^0,w,c
  9108  0039F2  6E01               	movwf	?i2_strlen^0,c
  9109  0039F4  5004               	movf	(i2strlen@a+1)^0,w,c
  9110  0039F6  5802               	subwfb	(i2strlen@s+1)^0,w,c
  9111  0039F8  6E02               	movwf	(?i2_strlen+1)^0,c
  9112  0039FA  0012               	return		;funcret
  9113  0039FC                     __end_ofi2_strlen:
  9114                           	callstack 0
  9115                           
  9116 ;; *************** function i2_dado_lcd *****************
  9117 ;; Defined at:
  9118 ;;		line 16 in file "./lcd.intermed.h"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;  dado            2    0[COMRAM] unsigned int 
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;		None
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  1    wreg      void 
  9125 ;; Registers used:
  9126 ;;		wreg
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9132 ;;      Params:         2       0       0       0       0       0       0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9134 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9135 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9136 ;;Total ram usage:        3 bytes
  9137 ;; Hardware stack levels used: 1
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		i2_imprime_lcd
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	text42
  9146  003BA2                     __ptext42:
  9147                           	callstack 0
  9148  003BA2                     i2_dado_lcd:
  9149                           	callstack 19
  9150  003BA2                     
  9151                           ;./lcd.intermed.h: 16: void dado_lcd(unsigned int dado);./lcd.intermed.h: 17: {;./lcd.in
      +                          termed.h: 18:     PORTEbits.RE2 = 1;
  9152  003BA2  8484               	bsf	132,2,c	;volatile
  9153                           
  9154                           ;./lcd.intermed.h: 19:     PORTEbits.RE1 = 1;
  9155  003BA4  8284               	bsf	132,1,c	;volatile
  9156                           
  9157                           ;./lcd.intermed.h: 20:     PORTD = dado;
  9158  003BA6  C001  FF83         	movff	i2dado_lcd@dado,3971	;volatile
  9159  003BAA                     
  9160                           ;./lcd.intermed.h: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  9161  003BAA  0E03               	movlw	3
  9162  003BAC  6E03               	movwf	??i2_dado_lcd^0,c
  9163  003BAE  0E98               	movlw	152
  9164  003BB0                     i2u604_47:
  9165  003BB0  2EE8               	decfsz	wreg,f,c
  9166  003BB2  D7FE               	bra	i2u604_47
  9167  003BB4  2E03               	decfsz	??i2_dado_lcd^0,f,c
  9168  003BB6  D7FC               	bra	i2u604_47
  9169  003BB8                     
  9170                           ;./lcd.intermed.h: 22:     PORTEbits.RE1 = 0;
  9171  003BB8  9284               	bcf	132,1,c	;volatile
  9172  003BBA  0012               	return		;funcret
  9173  003BBC                     __end_ofi2_dado_lcd:
  9174                           	callstack 0
  9175                           
  9176 ;; *************** function i2___flge *****************
  9177 ;; Defined at:
  9178 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;  ff1             4    0[COMRAM] void 
  9181 ;;  ff2             4    4[COMRAM] void 
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;		None               void
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9193 ;;      Params:         8       0       0       0       0       0       0       0       0
  9194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9195 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9196 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9197 ;;Total ram usage:       12 bytes
  9198 ;; Hardware stack levels used: 1
  9199 ;; This function calls:
  9200 ;;		Nothing
  9201 ;; This function is called by:
  9202 ;;		_alerta
  9203 ;;		_verificaOValor
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text43
  9208  002D56                     __ptext43:
  9209                           	callstack 0
  9210  002D56                     i2___flge:
  9211                           	callstack 20
  9212  002D56  0E00               	movlw	0
  9213  002D58  1401               	andwf	i2___flge@ff1^0,w,c
  9214  002D5A  6E09               	movwf	??i2___flge^0,c
  9215  002D5C  0E00               	movlw	0
  9216  002D5E  1402               	andwf	(i2___flge@ff1+1)^0,w,c
  9217  002D60  6E0A               	movwf	(??i2___flge+1)^0,c
  9218  002D62  0E80               	movlw	128
  9219  002D64  1403               	andwf	(i2___flge@ff1+2)^0,w,c
  9220  002D66  6E0B               	movwf	(??i2___flge+2)^0,c
  9221  002D68  0E7F               	movlw	127
  9222  002D6A  1404               	andwf	(i2___flge@ff1+3)^0,w,c
  9223  002D6C  6E0C               	movwf	(??i2___flge+3)^0,c
  9224  002D6E  5009               	movf	??i2___flge^0,w,c
  9225  002D70  100A               	iorwf	(??i2___flge+1)^0,w,c
  9226  002D72  100B               	iorwf	(??i2___flge+2)^0,w,c
  9227  002D74  100C               	iorwf	(??i2___flge+3)^0,w,c
  9228  002D76  A4D8               	btfss	status,2,c
  9229  002D78  EFC0  F016         	goto	i2u492_41
  9230  002D7C  EFC2  F016         	goto	i2u492_40
  9231  002D80                     i2u492_41:
  9232  002D80  EFCA  F016         	goto	i2l3930
  9233  002D84                     i2u492_40:
  9234  002D84  0E00               	movlw	0
  9235  002D86  6E01               	movwf	i2___flge@ff1^0,c
  9236  002D88  0E00               	movlw	0
  9237  002D8A  6E02               	movwf	(i2___flge@ff1+1)^0,c
  9238  002D8C  0E00               	movlw	0
  9239  002D8E  6E03               	movwf	(i2___flge@ff1+2)^0,c
  9240  002D90  0E00               	movlw	0
  9241  002D92  6E04               	movwf	(i2___flge@ff1+3)^0,c
  9242  002D94                     i2l3930:
  9243  002D94  0E00               	movlw	0
  9244  002D96  1405               	andwf	i2___flge@ff2^0,w,c
  9245  002D98  6E09               	movwf	??i2___flge^0,c
  9246  002D9A  0E00               	movlw	0
  9247  002D9C  1406               	andwf	(i2___flge@ff2+1)^0,w,c
  9248  002D9E  6E0A               	movwf	(??i2___flge+1)^0,c
  9249  002DA0  0E80               	movlw	128
  9250  002DA2  1407               	andwf	(i2___flge@ff2+2)^0,w,c
  9251  002DA4  6E0B               	movwf	(??i2___flge+2)^0,c
  9252  002DA6  0E7F               	movlw	127
  9253  002DA8  1408               	andwf	(i2___flge@ff2+3)^0,w,c
  9254  002DAA  6E0C               	movwf	(??i2___flge+3)^0,c
  9255  002DAC  5009               	movf	??i2___flge^0,w,c
  9256  002DAE  100A               	iorwf	(??i2___flge+1)^0,w,c
  9257  002DB0  100B               	iorwf	(??i2___flge+2)^0,w,c
  9258  002DB2  100C               	iorwf	(??i2___flge+3)^0,w,c
  9259  002DB4  A4D8               	btfss	status,2,c
  9260  002DB6  EFDF  F016         	goto	i2u493_41
  9261  002DBA  EFE1  F016         	goto	i2u493_40
  9262  002DBE                     i2u493_41:
  9263  002DBE  EFE9  F016         	goto	i2l3934
  9264  002DC2                     i2u493_40:
  9265  002DC2  0E00               	movlw	0
  9266  002DC4  6E05               	movwf	i2___flge@ff2^0,c
  9267  002DC6  0E00               	movlw	0
  9268  002DC8  6E06               	movwf	(i2___flge@ff2+1)^0,c
  9269  002DCA  0E00               	movlw	0
  9270  002DCC  6E07               	movwf	(i2___flge@ff2+2)^0,c
  9271  002DCE  0E00               	movlw	0
  9272  002DD0  6E08               	movwf	(i2___flge@ff2+3)^0,c
  9273  002DD2                     i2l3934:
  9274  002DD2  AE04               	btfss	(i2___flge@ff1+3)^0,7,c
  9275  002DD4  EFEE  F016         	goto	i2u494_41
  9276  002DD8  EFF0  F016         	goto	i2u494_40
  9277  002DDC                     i2u494_41:
  9278  002DDC  EFF9  F016         	goto	i2l3938
  9279  002DE0                     i2u494_40:
  9280  002DE0  6C01               	negf	i2___flge@ff1^0,c
  9281  002DE2  1E02               	comf	(i2___flge@ff1+1)^0,f,c
  9282  002DE4  B0D8               	btfsc	status,0,c
  9283  002DE6  2A02               	incf	(i2___flge@ff1+1)^0,f,c
  9284  002DE8  1E03               	comf	(i2___flge@ff1+2)^0,f,c
  9285  002DEA  B0D8               	btfsc	status,0,c
  9286  002DEC  2A03               	incf	(i2___flge@ff1+2)^0,f,c
  9287  002DEE  0E80               	movlw	128
  9288  002DF0  5604               	subfwb	(i2___flge@ff1+3)^0,f,c
  9289  002DF2                     i2l3938:
  9290  002DF2  AE08               	btfss	(i2___flge@ff2+3)^0,7,c
  9291  002DF4  EFFE  F016         	goto	i2u495_41
  9292  002DF8  EF00  F017         	goto	i2u495_40
  9293  002DFC                     i2u495_41:
  9294  002DFC  EF09  F017         	goto	i2l361
  9295  002E00                     i2u495_40:
  9296  002E00  6C05               	negf	i2___flge@ff2^0,c
  9297  002E02  1E06               	comf	(i2___flge@ff2+1)^0,f,c
  9298  002E04  B0D8               	btfsc	status,0,c
  9299  002E06  2A06               	incf	(i2___flge@ff2+1)^0,f,c
  9300  002E08  1E07               	comf	(i2___flge@ff2+2)^0,f,c
  9301  002E0A  B0D8               	btfsc	status,0,c
  9302  002E0C  2A07               	incf	(i2___flge@ff2+2)^0,f,c
  9303  002E0E  0E80               	movlw	128
  9304  002E10  5608               	subfwb	(i2___flge@ff2+3)^0,f,c
  9305  002E12                     i2l361:
  9306  002E12  0E00               	movlw	0
  9307  002E14  1A01               	xorwf	i2___flge@ff1^0,f,c
  9308  002E16  0E00               	movlw	0
  9309  002E18  1A02               	xorwf	(i2___flge@ff1+1)^0,f,c
  9310  002E1A  0E00               	movlw	0
  9311  002E1C  1A03               	xorwf	(i2___flge@ff1+2)^0,f,c
  9312  002E1E  0E80               	movlw	128
  9313  002E20  1A04               	xorwf	(i2___flge@ff1+3)^0,f,c
  9314  002E22  0E00               	movlw	0
  9315  002E24  1A05               	xorwf	i2___flge@ff2^0,f,c
  9316  002E26  0E00               	movlw	0
  9317  002E28  1A06               	xorwf	(i2___flge@ff2+1)^0,f,c
  9318  002E2A  0E00               	movlw	0
  9319  002E2C  1A07               	xorwf	(i2___flge@ff2+2)^0,f,c
  9320  002E2E  0E80               	movlw	128
  9321  002E30  1A08               	xorwf	(i2___flge@ff2+3)^0,f,c
  9322  002E32  5005               	movf	i2___flge@ff2^0,w,c
  9323  002E34  5C01               	subwf	i2___flge@ff1^0,w,c
  9324  002E36  5006               	movf	(i2___flge@ff2+1)^0,w,c
  9325  002E38  5802               	subwfb	(i2___flge@ff1+1)^0,w,c
  9326  002E3A  5007               	movf	(i2___flge@ff2+2)^0,w,c
  9327  002E3C  5803               	subwfb	(i2___flge@ff1+2)^0,w,c
  9328  002E3E  5008               	movf	(i2___flge@ff2+3)^0,w,c
  9329  002E40  5804               	subwfb	(i2___flge@ff1+3)^0,w,c
  9330  002E42  B0D8               	btfsc	status,0,c
  9331  002E44  EF26  F017         	goto	i2u496_41
  9332  002E48  EF28  F017         	goto	i2u496_40
  9333  002E4C                     i2u496_41:
  9334  002E4C  EF2B  F017         	goto	i2l3944
  9335  002E50                     i2u496_40:
  9336  002E50  90D8               	bcf	status,0,c
  9337  002E52  EF2C  F017         	goto	i2l366
  9338  002E56                     i2l3944:
  9339  002E56  80D8               	bsf	status,0,c
  9340  002E58                     i2l366:
  9341  002E58  0012               	return		;funcret
  9342  002E5A                     __end_ofi2___flge:
  9343                           	callstack 0
  9344                           
  9345                           	psect	rparam
  9346  0000                     
  9347                           	psect	temp
  9348  000049                     btemp:
  9349                           	callstack 0
  9350  000049                     	ds	1
  9351  0000                     int$flags	set	btemp
  9352  0000                     wtemp8	set	btemp+1
  9353  0000                     ttemp5	set	btemp+1
  9354  0000                     ttemp6	set	btemp+4
  9355  0000                     ttemp7	set	btemp+8
  9356                           
  9357                           	psect	idloc
  9358                           
  9359                           ;Config register IDLOC0 @ 0x200000
  9360                           ;	unspecified, using default values
  9361  200000                     	org	2097152
  9362  200000  FF                 	db	255
  9363                           
  9364                           ;Config register IDLOC1 @ 0x200001
  9365                           ;	unspecified, using default values
  9366  200001                     	org	2097153
  9367  200001  FF                 	db	255
  9368                           
  9369                           ;Config register IDLOC2 @ 0x200002
  9370                           ;	unspecified, using default values
  9371  200002                     	org	2097154
  9372  200002  FF                 	db	255
  9373                           
  9374                           ;Config register IDLOC3 @ 0x200003
  9375                           ;	unspecified, using default values
  9376  200003                     	org	2097155
  9377  200003  FF                 	db	255
  9378                           
  9379                           ;Config register IDLOC4 @ 0x200004
  9380                           ;	unspecified, using default values
  9381  200004                     	org	2097156
  9382  200004  FF                 	db	255
  9383                           
  9384                           ;Config register IDLOC5 @ 0x200005
  9385                           ;	unspecified, using default values
  9386  200005                     	org	2097157
  9387  200005  FF                 	db	255
  9388                           
  9389                           ;Config register IDLOC6 @ 0x200006
  9390                           ;	unspecified, using default values
  9391  200006                     	org	2097158
  9392  200006  FF                 	db	255
  9393                           
  9394                           ;Config register IDLOC7 @ 0x200007
  9395                           ;	unspecified, using default values
  9396  200007                     	org	2097159
  9397  200007  FF                 	db	255
  9398                           
  9399                           	psect	config
  9400                           
  9401                           ;Config register CONFIG1L @ 0x300000
  9402                           ;	unspecified, using default values
  9403                           ;	PLL Prescaler Selection bits
  9404                           ;	PLLDIV = 0x0, unprogrammed default
  9405                           ;	System Clock Postscaler Selection bits
  9406                           ;	CPUDIV = 0x0, unprogrammed default
  9407                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9408                           ;	USBDIV = 0x0, unprogrammed default
  9409  300000                     	org	3145728
  9410  300000  00                 	db	0
  9411                           
  9412                           ;Config register CONFIG1H @ 0x300001
  9413                           ;	Oscillator Selection bits
  9414                           ;	FOSC = HS, HS oscillator (HS)
  9415                           ;	Fail-Safe Clock Monitor Enable bit
  9416                           ;	FCMEN = 0x0, unprogrammed default
  9417                           ;	Internal/External Oscillator Switchover bit
  9418                           ;	IESO = 0x0, unprogrammed default
  9419  300001                     	org	3145729
  9420  300001  0C                 	db	12
  9421                           
  9422                           ;Config register CONFIG2L @ 0x300002
  9423                           ;	unspecified, using default values
  9424                           ;	Power-up Timer Enable bit
  9425                           ;	PWRT = 0x1, unprogrammed default
  9426                           ;	Brown-out Reset Enable bits
  9427                           ;	BOR = 0x3, unprogrammed default
  9428                           ;	Brown-out Reset Voltage bits
  9429                           ;	BORV = 0x3, unprogrammed default
  9430                           ;	USB Voltage Regulator Enable bit
  9431                           ;	VREGEN = 0x0, unprogrammed default
  9432  300002                     	org	3145730
  9433  300002  1F                 	db	31
  9434                           
  9435                           ;Config register CONFIG2H @ 0x300003
  9436                           ;	Watchdog Timer Enable bit
  9437                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9438                           ;	Watchdog Timer Postscale Select bits
  9439                           ;	WDTPS = 0xF, unprogrammed default
  9440  300003                     	org	3145731
  9441  300003  1E                 	db	30
  9442                           
  9443                           ; Padding undefined space
  9444  300004                     	org	3145732
  9445  300004  FF                 	db	255
  9446                           
  9447                           ;Config register CONFIG3H @ 0x300005
  9448                           ;	CCP2 MUX bit
  9449                           ;	CCP2MX = 0x1, unprogrammed default
  9450                           ;	PORTB A/D Enable bit
  9451                           ;	PBADEN = 0x1, unprogrammed default
  9452                           ;	Low-Power Timer 1 Oscillator Enable bit
  9453                           ;	LPT1OSC = 0x0, unprogrammed default
  9454                           ;	MCLR Pin Enable bit
  9455                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9456  300005                     	org	3145733
  9457  300005  83                 	db	131
  9458                           
  9459                           ;Config register CONFIG4L @ 0x300006
  9460                           ;	unspecified, using default values
  9461                           ;	Stack Full/Underflow Reset Enable bit
  9462                           ;	STVREN = 0x1, unprogrammed default
  9463                           ;	Single-Supply ICSP Enable bit
  9464                           ;	LVP = 0x1, unprogrammed default
  9465                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9466                           ;	ICPRT = 0x0, unprogrammed default
  9467                           ;	Extended Instruction Set Enable bit
  9468                           ;	XINST = 0x0, unprogrammed default
  9469                           ;	Background Debugger Enable bit
  9470                           ;	DEBUG = 0x1, unprogrammed default
  9471  300006                     	org	3145734
  9472  300006  85                 	db	133
  9473                           
  9474                           ; Padding undefined space
  9475  300007                     	org	3145735
  9476  300007  FF                 	db	255
  9477                           
  9478                           ;Config register CONFIG5L @ 0x300008
  9479                           ;	unspecified, using default values
  9480                           ;	Code Protection bit
  9481                           ;	CP0 = 0x1, unprogrammed default
  9482                           ;	Code Protection bit
  9483                           ;	CP1 = 0x1, unprogrammed default
  9484                           ;	Code Protection bit
  9485                           ;	CP2 = 0x1, unprogrammed default
  9486                           ;	Code Protection bit
  9487                           ;	CP3 = 0x1, unprogrammed default
  9488  300008                     	org	3145736
  9489  300008  0F                 	db	15
  9490                           
  9491                           ;Config register CONFIG5H @ 0x300009
  9492                           ;	unspecified, using default values
  9493                           ;	Boot Block Code Protection bit
  9494                           ;	CPB = 0x1, unprogrammed default
  9495                           ;	Data EEPROM Code Protection bit
  9496                           ;	CPD = 0x1, unprogrammed default
  9497  300009                     	org	3145737
  9498  300009  C0                 	db	192
  9499                           
  9500                           ;Config register CONFIG6L @ 0x30000A
  9501                           ;	unspecified, using default values
  9502                           ;	Write Protection bit
  9503                           ;	WRT0 = 0x1, unprogrammed default
  9504                           ;	Write Protection bit
  9505                           ;	WRT1 = 0x1, unprogrammed default
  9506                           ;	Write Protection bit
  9507                           ;	WRT2 = 0x1, unprogrammed default
  9508                           ;	Write Protection bit
  9509                           ;	WRT3 = 0x1, unprogrammed default
  9510  30000A                     	org	3145738
  9511  30000A  0F                 	db	15
  9512                           
  9513                           ;Config register CONFIG6H @ 0x30000B
  9514                           ;	unspecified, using default values
  9515                           ;	Configuration Register Write Protection bit
  9516                           ;	WRTC = 0x1, unprogrammed default
  9517                           ;	Boot Block Write Protection bit
  9518                           ;	WRTB = 0x1, unprogrammed default
  9519                           ;	Data EEPROM Write Protection bit
  9520                           ;	WRTD = 0x1, unprogrammed default
  9521  30000B                     	org	3145739
  9522  30000B  E0                 	db	224
  9523                           
  9524                           ;Config register CONFIG7L @ 0x30000C
  9525                           ;	unspecified, using default values
  9526                           ;	Table Read Protection bit
  9527                           ;	EBTR0 = 0x1, unprogrammed default
  9528                           ;	Table Read Protection bit
  9529                           ;	EBTR1 = 0x1, unprogrammed default
  9530                           ;	Table Read Protection bit
  9531                           ;	EBTR2 = 0x1, unprogrammed default
  9532                           ;	Table Read Protection bit
  9533                           ;	EBTR3 = 0x1, unprogrammed default
  9534  30000C                     	org	3145740
  9535  30000C  0F                 	db	15
  9536                           
  9537                           ;Config register CONFIG7H @ 0x30000D
  9538                           ;	unspecified, using default values
  9539                           ;	Boot Block Table Read Protection bit
  9540                           ;	EBTRB = 0x1, unprogrammed default
  9541  30000D                     	org	3145741
  9542  30000D  40                 	db	64
  9543                           tosu	equ	0xFFF
  9544                           tosh	equ	0xFFE
  9545                           tosl	equ	0xFFD
  9546                           stkptr	equ	0xFFC
  9547                           pclatu	equ	0xFFB
  9548                           pclath	equ	0xFFA
  9549                           pcl	equ	0xFF9
  9550                           tblptru	equ	0xFF8
  9551                           tblptrh	equ	0xFF7
  9552                           tblptrl	equ	0xFF6
  9553                           tablat	equ	0xFF5
  9554                           prodh	equ	0xFF4
  9555                           prodl	equ	0xFF3
  9556                           indf0	equ	0xFEF
  9557                           postinc0	equ	0xFEE
  9558                           postdec0	equ	0xFED
  9559                           preinc0	equ	0xFEC
  9560                           plusw0	equ	0xFEB
  9561                           fsr0h	equ	0xFEA
  9562                           fsr0l	equ	0xFE9
  9563                           wreg	equ	0xFE8
  9564                           indf1	equ	0xFE7
  9565                           postinc1	equ	0xFE6
  9566                           postdec1	equ	0xFE5
  9567                           preinc1	equ	0xFE4
  9568                           plusw1	equ	0xFE3
  9569                           fsr1h	equ	0xFE2
  9570                           fsr1l	equ	0xFE1
  9571                           bsr	equ	0xFE0
  9572                           indf2	equ	0xFDF
  9573                           postinc2	equ	0xFDE
  9574                           postdec2	equ	0xFDD
  9575                           preinc2	equ	0xFDC
  9576                           plusw2	equ	0xFDB
  9577                           fsr2h	equ	0xFDA
  9578                           fsr2l	equ	0xFD9
  9579                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        12
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      72
    BANK0           160    134     154
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), temperature(BANK0[8]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), temperature(BANK0[8]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S823_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    imprime_lcd@frase	PTR unsigned char  size(2) Largest target is 17
		 -> temperature(BANK0[8]), STR_3(CODE[12]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _efgtoa->___flge
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _limpa_lcd->_comando_lcd
    _imprime_lcd->_strlen

Critical Paths under _isr in COMRAM

    _isr->_alerta
    _verificaOValor->i2___flge
    _alerta->i2_imprime_lcd
    i2_limpa_lcd->i2_comando_lcd
    i2_imprime_lcd->i2_strlen

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   33383
                                            132 BANK0      2     2      0
                        _comando_lcd
                        _imprime_lcd
                          _limpa_lcd
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   31596
                                            116 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   31086
                                            108 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   30535
                                             84 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                             21 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   24280
                                             16 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                             27 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                             21 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3241
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             46 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                             21 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                             21 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                             21 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             21 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1426
                                             46 COMRAM     8     0      8
                                              0 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                             21 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                             21 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1304
                                             28 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                             21 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _limpa_lcd                                            0     0      0     528
                        _comando_lcd
 ---------------------------------------------------------------------------------
 (2) _comando_lcd                                          3     1      2     528
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _imprime_lcd                                          9     7      2     731
                                             25 COMRAM     9     7      2
                           _dado_lcd
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     242
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _dado_lcd                                             3     1      2      98
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  6     6      0    1231
                                             15 COMRAM     6     6      0
                             _alerta
                         _geraTensao
                     _verificaOValor
 ---------------------------------------------------------------------------------
 (10) _verificaOValor                                      0     0      0     390
                           i2___flge
 ---------------------------------------------------------------------------------
 (10) _geraTensao                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _alerta                                              2     2      0     841
                                             13 COMRAM     2     2      0
                           i2___flge
                      i2_comando_lcd
                      i2_imprime_lcd
                        i2_limpa_lcd
 ---------------------------------------------------------------------------------
 (11) i2_limpa_lcd                                         0     0      0      74
                      i2_comando_lcd
 ---------------------------------------------------------------------------------
 (12) i2_comando_lcd                                       3     1      2      74
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (11) i2_imprime_lcd                                       9     7      2     303
                                              4 COMRAM     9     7      2
                         i2_dado_lcd
                           i2_strlen
 ---------------------------------------------------------------------------------
 (12) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_dado_lcd                                          3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (11) i2___flge                                           12     4      8     390
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _comando_lcd
   _imprime_lcd
     _dado_lcd
     _strlen
   _limpa_lcd
     _comando_lcd
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _isr (ROOT)
   _alerta
     i2___flge
     i2_comando_lcd
     i2_imprime_lcd
       i2_dado_lcd
       i2_strlen
     i2_limpa_lcd
       i2_comando_lcd
   _geraTensao
   _verificaOValor
     i2___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      48       1       76.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132      20        0.0%
DATA                 0      0     132       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 07 08:05:49 2021

           ___fldiv@aexp 002E             ___fldiv@bexp 002D             ___fldiv@sign 0026  
                     l31 3B6C                       l34 3B86                       l43 35E2  
                     l37 3BC8                       l96 3B52             ___awdiv@sign 001B  
    ___wmul@multiplicand 0018                      l340 34BC                      l327 3298  
                    l361 2D0E                      l370 3AF4                      l355 3566  
                    l366 2D54                      l710 1F86                      l720 21E2  
                    l624 1BF0                      l641 1D0A                      l633 1EC0  
                    l625 1BDE                      l393 2C4E                      l714 22EA  
                    l650 1DDA                      l626 1BA4                      l651 1DC8  
                    l820 335A                      l717 217C                      l727 22AC  
                    l719 21F4                      l815 32DE                      l680 24E4  
                    l666 3A40                      l818 3320                      l691 25A2  
                    l683 24A8                      l692 2590                      l940 1A00  
                    l678 2684                      l838 1496                      l774 390C  
                    l856 0C2A                      l689 252A                      l953 37A4  
                    l954 37AC                      l947 1946                      l964 2F56  
                    l884 106A                      l993 2A22                      l996 2A2A  
        ?_verificaOValor 0001               i2_dado_lcd 3BA2                      _pad 329A  
                    _isr 0008             ___awmod@sign 001B                      wreg 000FE8  
           ___flmul@aexp 0027             ___flmul@bexp 0028             ___flmul@sign 0022  
           ___flmul@temp 002D             ___flmul@prod 0029             ___fltol@exp1 001F  
                   l1002 289A                     l1012 3B2C                     l1020 395E  
                   l1005 27DE                     l1041 31D4                     l1026 3ABC  
                   l1052 3BE4                     l1064 39AC                     l3000 1F14  
                   l1049 3A84                     l3010 1F40                     l3002 1F24  
                   l1058 3868                     l1083 380C                     l3100 2294  
                   l3020 1F96                     l3012 1F50                     l3004 1F2A  
                   l1068 310A                     l3102 22B0                     l3110 22D6  
                   l3030 1FD0                     l3022 1FA6                     l3014 1F60  
                   l3006 1F30                     l1078 3804                     l3112 22DA  
                   l3104 22C0                     l3040 2022                     l3032 1FE6  
                   l3016 1F70                     l3008 1F3E                     l3130 31F4  
                   l3122 31D6                     l3210 353A                     l3202 34BE  
                   l3106 22CE                     l3050 2068                     l3042 2030  
                   l3034 1FF2                     l3026 1FBA                     l3018 1F76  
                   l3140 3228                     l3132 3202                     l3124 31DA  
                   l3212 355E                     l3204 34EC                     l3108 22D0  
                   l3060 20D6                     l3052 2082                     l3044 203C  
                   l3036 200A                     l3028 1FC6                     l3116 39FC  
                   l3300 32D6                     l3150 3262                     l3142 3230  
                   l3134 320A                     l3126 31E8                     l3214 3564  
                   l3206 34FC                     l3070 216C                     l3062 2100  
                   l3054 2092                     l3046 204C                     l3038 2016  
                   l3118 3A0C                     l3310 3342                     l3302 32EA  
                   l3160 3288                     l3152 326A                     l3144 3238  
                   l3136 320E                     l3128 31F0                     l3208 352A  
                   l4120 2C50                     l3080 21AC                     l3072 217A  
                   l3064 2136                     l3056 20AE                     l3048 2058  
                   l3240 3ABE                     l3320 2EE0                     l3304 32FE  
                   l4200 08F8                     l3162 3290                     l3154 326C  
                   l3146 3246                     l3138 3216                     l3170 3420  
                   l4130 2CDC                     l4122 2C80                     l3090 221E  
                   l3082 21DA                     l3074 218C                     l3066 2144  
                   l3058 20BA                     l3242 3AD4                     l3250 2B60  
                   l3322 2EEC                     l3314 2E5A                     l2610 313A  
                   l3306 3302                     l4210 0982                     l4202 091E  
                   l2620 396C                     l3156 3272                     l3148 324C  
                   l3180 3454                     l3172 3428                     l4132 2CEE  
                   l4124 2C90                     l3092 2248                     l3076 219A  
                   l3068 2162                     l3244 3AE4                     l2700 1B36  
                   l3260 2BB0                     l3332 2F4E                     l3316 2E7A  
                   l2612 3158                     l2604 310C                     l3308 332E  
                   l3340 37AE                     l4300 0D2E                     l4220 09F2  
                   l4212 099A                     l2622 3970                     l3158 3278  
                   l3190 3490                     l3182 345C                     l3174 342C  
                   l3166 340E                     l4134 2CFC                     l4126 2CBE  
                   l3086 2204                     l3094 224C                     l3078 219E  
                   l2710 1B70                     l2702 1B3A                     l2630 1A0E  
                   l3270 2BDA                     l3262 2BB4                     l3254 2B74  
                   l3318 2EB8                     l3326 2EF8                     l4150 2720  
                   l4142 2686                     l2614 318E                     l2606 311E  
                   l4310 0D74                     l4302 0D40                     l4214 09A4  
                   l4206 0954                     l2624 39A0                     l3192 3496  
                   l3184 3464                     l3176 343A                     l3168 3412  
                   l4136 2D4C                     l4128 2CCE                     l3096 2266  
                   l3088 2210                     l2800 1DF6                     l2720 1BC2  
                   l2712 1B8C                     l2704 1B3E                     l2640 1A4E  
                   l2632 1A1C                     l3280 2C02                     l3272 2BE4  
                   l3264 2BC2                     l3256 2B9E                     l3248 2B4A  
                   l3328 2F0A                     l4160 283E                     l4144 26A6  
                   l2608 3130                     l3336 380E                     l3344 37E4  
                   l4400 1262                     l4320 0E88                     l4312 0DD8  
                   l4304 0D48                     l4224 0A28                     l4208 0966  
                   l2618 3960                     l3186 3472                     l3194 349C  
                   l3178 3442                     l4138 2D52                     l3098 227A  
                   l2810 1E60                     l2802 1E04                     l2730 1C0E  
                   l2722 1BD0                     l2714 1B9C                     l2706 1B42  
                   l2650 1A80                     l2642 1A50                     l2634 1A1E  
                   l3282 2C0E                     l3274 2BEE                     l3258 2BA0  
                   l4162 2852                     l4154 2792                     l4146 26FE  
                   l3338 381E                     l3346 37F6                     l4410 12CC  
                   l4402 1280                     l4330 0F46                     l4322 0EBC  
                   l4314 0E30                     l4306 0D50                     l4250 0B8A  
                   l4242 0AC2                     l4226 0A3A                     l4218 09CC  
                   l4170 083E                     l3196 34AC                     l3188 3488  
                   l2900 240E                     l2820 1E9A                     l2812 1E80  
                   l2804 1E3E                     l2740 1C4E                     l2724 1BD2  
                   l2716 1BB2                     l2708 1B46                     l2660 1AA8  
                   l2652 1A82                     l2636 1A2E                     l2644 1A58  
                   l2628 1A02                     l3284 2C1E                     l4164 287A  
                   l4156 27CE                     l4148 2712                     l3292 329A  
                   l4420 130A                     l4412 12D0                     l4404 129C  
                   l4340 101A                     l4332 0F56                     l4324 0EEE  
                   l4316 0E64                     l4308 0D60                     l4260 0BEA  
                   l4252 0B92                     l4244 0AF6                     l4228 0A56  
                   l4236 0A72                     l4180 0892                     l4172 0848  
                   l3390 3958                     l3382 390E                     l3710 28D4  
                   l3702 289C                     l3198 34B4                     l2910 244C  
                   l2902 240E                     l2822 1EA0                     l2814 1E84  
                   l2806 1E40                     l2750 1C78                     l2742 1C5A  
                   l2734 1C22                     l2726 1BDC                     l2718 1BBE  
                   l2670 1AE2                     l2662 1AB8                     l2654 1A88  
                   l2646 1A68                     l2638 1A3E                     l3286 2C2E  
                   l4166 288A                     l4158 2802                     l2830 3A42  
                   l3294 32A8                     l4430 133C                     l4422 1312  
                   l4414 12E0                     l4406 12AE                     l4350 1062  
                   l4342 102E                     l4334 0F8A                     l4326 0F04  
                   l4318 0E6A                     l4262 0BFC                     l4246 0AFC  
                   l4254 0BC4                     l4238 0A8C                     l4190 08D6  
                   l4182 089C                     l4174 0858                     l4510 1616  
                   l4502 15CA                     l3384 3912                     l3720 292A  
                   l3712 290A                     l3704 28B0                     l2920 2498  
                   l2912 245C                     l2824 1EAE                     l2816 1E92  
                   l2808 1E50                     l2760 1CEA                     l2744 1C5E  
                   l2736 1C32                     l2728 1BFE                     l2752 1C7E  
                   l2680 1B0E                     l2672 1AF4                     l2664 1AC8  
                   l2656 1A96                     l2648 1A6E                     l3288 2C3E  
                   l2832 3A4E                     l3296 32BC                     l4432 1342  
                   l4440 1392                     l4424 1320                     l4416 12F2  
                   l4408 12BC                     l4360 111E                     l4352 1086  
                   l4336 0FE0                     l4344 1032                     l4328 0F36  
                   l4280 0CAC                     l4264 0C04                     l4256 0BD4  
                   l4248 0B56                     l4192 08E2                     l4184 08A4  
                   l4176 0866                     l4512 163A                     l4504 15DC  
                   l4600 38DE                     l2842 3B2E                     l3378 3AF6  
                   l3386 3926                     l3730 29A4                     l3722 2932  
                   l3714 290E                     l3706 28B4                     l2930 24E2  
                   l2922 24A6                     l2914 246C                     l2906 2422  
                   l2850 22F8                     l2826 1EB0                     l2818 1E98  
                   l2770 1D44                     l2754 1CA4                     l2762 1CFA  
                   l2746 1C6C                     l2738 1C40                     l2690 1B22  
                   l2682 1B12                     l2674 1B02                     l2666 1ACA  
                   l2658 1A98                     l2834 3A60                     l3298 32CA  
                   l4450 13E2                     l4442 13A4                     l4434 1368  
                   l4426 1328                     l4418 12FA                     l4370 1166  
                   l4362 112C                     l4354 10EA                     l4346 1042  
                   l4338 0FE6                     l4290 0CE4                     l4282 0CB4  
                   l4274 0C48                     l4266 0C1E                     l4258 0BD8  
                   l4194 08EA                     l4186 08B6                     l4178 086E  
                   l4530 1760                     l4522 16EA                     l4514 1674  
                   l4506 1600                     l4602 38FA                     l4610 2A46  
                   l3900 3B6E                     l2844 3B4A                     l3388 3954  
                   l3724 293A                     l3708 28B8                     l2940 2528  
                   l2932 24F4                     l2924 24B2                     l2916 2474  
                   l2908 243C                     l2860 2338                     l2852 2306  
                   l2780 1D74                     l2772 1D4E                     l2764 1D20  
                   l2756 1CD8                     l2748 1C6E                     l2692 1B26  
                   l2684 1B16                     l2676 1B06                     l2668 1AD2  
                   l2836 3A64                     l4452 13EA                     l4444 13BE  
                   l4436 1384                     l4428 1330                     l4380 1190  
                   l4372 116A                     l4356 10F8                     l4364 1134  
                   l4348 1056                     l4292 0CF2                     l4276 0C5A  
                   l4284 0CB8                     l4268 0C36                     l4196 08EE  
                   l4188 08C4                     l4540 17D8                     l4532 1770  
                   l4516 1694                     l4508 1608                     l4524 16FC  
                   l4620 2A64                     l4612 2A48                     l3902 3B76  
                   l3734 29E2                     l3726 296E                     l3718 2914  
                   l2950 2588                     l2934 250A                     l2942 253A  
                   l2926 24D0                     l2918 2484                     l2870 235E  
                   l2862 233A                     l2854 2308                     l2790 1D9C  
                   l2782 1D78                     l2774 1D5C                     l2766 1D30  
                   l2758 1CDA                     l2694 1B2A                     l2686 1B1A  
                   l2678 1B0A                     l2838 3A86                     l4470 1470  
                   l4462 143A                     l4454 13FA                     l4446 13C4  
                   l4438 138C                     l4390 11C4                     l4382 1196  
                   l4374 1170                     l4366 1148                     l4358 110C  
                   l4294 0CF6                     l4286 0CC0                     l4278 0C76  
                   l4198 08F2                     l3750 306C                     l4542 1808  
                   l4534 17A2                     l4526 171E                     l4518 16A2  
                   l4630 2A8E                     l4622 2A68                     l4614 2A4A  
                   l4606 2A2C                     ?_pad 0026                     l3904 3B84  
                   l3736 29F4                     l2960 25F6                     l2944 2548  
                   l2936 2510                     l2928 24D2                     l2880 239E  
                   l2872 236C                     l2856 2318                     l2864 2342  
                   l2848 22EC                     l2792 1DAA                     l2784 1D88  
                   l2776 1D5E                     l2696 1B2E                     l2688 1B1E  
                   l4472 1476                     l4464 144C                     l4456 1400  
                   l4448 13D6                     l4376 117C                     l4368 1156  
                   l4384 119C                     l4392 11CA                     l4296 0D08  
                   l4288 0CD2                     l3760 30E8                     l3752 307A  
                   l3744 3036                     l4552 18D0                     l4536 17B4  
                   l4528 172E                     l4480 14BC                     l4640 2AF2  
                   l4632 2AA8                     l4624 2A74                     l4616 2A4C  
                   l4608 2A32                     l3738 2A06                     l2970 2660  
                   l2954 25B2                     l2962 25FA                     l2946 254C  
                   l2938 251A                     l2890 23DE                     l2882 23A0  
                   l2874 236E                     l2866 2352                     l2858 2328  
                   l2794 1DC0                     l2778 1D6C                     l2786 1D8A  
                   l2698 1B32                     l4466 1458                     l4458 1406  
                   l4394 1222                     l4386 11AE                     l4378 118C  
                   l4298 0D16                     l3754 3092                     l3746 3060  
                   l4554 18E2                     l4562 195A                     l4538 17CA  
                   l4546 1834                     l4490 1538                     l4482 14CA  
                   l4642 2AFE                     l4634 2AB4                     l4626 2A80  
                   l4618 2A58                     l2972 2664                     l2964 2614  
                   l2956 25BE                     l2948 255A                     l2892 23E6  
                   l2876 237E                     l2884 23A8                     l2868 2358  
                   l2788 1D98                     l4468 1460                     l4396 1256  
                   l4388 11C0                     l3756 30AE                     l4580 19EE  
                   l4564 197E                     l4572 19AE                     l4556 1916  
                   l4548 1862                     l4492 1546                     l4484 14DA  
                   l4644 2B18                     l4636 2AC0                     l4628 2A8A  
                   l3950 3568                     l2974 2672                     l2966 262A  
                   l2958 25CC                     l2894 23EA                     l2886 23B8  
                   l2878 238E                     l2990 1EDC                     l2798 1DEA  
                   l4398 125E                     l3758 30C0                     l4574 19BC  
                   l4566 198C                     l4494 1554                     l4486 14DE  
                   l4478 1498                     l4590 3762                     l4646 2B1E  
                   l4638 2ACC                     l3952 3570                     l2976 2678  
                   l2968 2644                     l2888 23CE                     l2992 1EDE  
                   l4568 19A0                     l4496 1574                     l4488 1502  
                   l4592 3788                     l4648 2B3A                     l3954 3588  
                   l4690 2958                     l2978 267A                     l2898 23FE  
                   l2994 1EEE                     l2986 1EC2                     l4498 1582  
                   l4578 19CA                     l4586 374C                     l4594 38BC  
                   l3956 35C0                     l3948 3BBC                     l2996 1EFE  
                   l2988 1ECE                     l4588 3754                     l4596 38CE  
                   l3958 35C4                     l3894 3B54                     l2998 1F0E  
                   l4598 38D6                     l3896 3B5C                     l3898 3B6A  
                   ?_isr 0001                     STR_1 0812                     STR_2 0801  
                   STR_3 0806                     STR_4 0823                     STR_5 0829  
                   STR_6 0831                     STR_9 082D                     u3000 3AB6  
                   u3001 3AB0                     u3010 3AB8                     u3100 2484  
                   u3020 2306                     u3101 2480                     u3021 2302  
                   u3110 24A6                     u3030 2318                     u3111 24A2  
                   u3031 2314                     u4000 3926                     u3200 25B2  
                   u3120 24D0                     u3040 2328                     u4001 3922  
                   u3201 25AE                     u3121 24CC                     u3041 2324  
                   u4010 3954                     u3210 25CC                     u3130 24F4  
                   u3050 236C                     u4011 3950                     u3211 25C8  
                   u3131 24F0                     u3051 2368                     u3220 2614  
                   u3140 250A                     u3060 237E                     u3300 1F60  
                   u3221 2610                     u3141 2506                     u3061 237A  
                   u3301 1F5C                     u3230 2644                     u3150 2528  
                   u3070 238E                     u3310 1F96                     u3231 2640  
                   u3151 2524                     u3071 238A                     u3311 1F92  
                   u3240 2672                     u3160 2548                     u3080 23CE  
                   u3400 221E                     u3320 1FA6                     u2600 1A1C  
                   u3241 266E                     u3161 2544                     u3081 23CA  
                   u3401 221A                     u3321 1FA2                     u2601 1A18  
                   u3170 255A                     u3090 240E                     u3410 2266  
                   u3330 2120                     u3250 1EDC                     u2610 1A2E  
                   u3171 2556                     u3091 240A                     u3411 2262  
                   u3251 1ED8                     u2611 1A2A                     u3500 3420  
                   u3180 2588                     u5100 2CFC                     u3420 2294  
                   u3340 217A                     u3260 1EEE                     u2700 1B88  
                   u2620 1A3E                     u2540 311E                     u3501 341C  
                   u3181 2584                     u5101 2CF8                     u3421 2290  
                   u3341 2176                     u3261 1EEA                     u2701 1B82  
                   u2621 1A3A                     u2541 311A                     u3510 343A  
                   u3190 259E                     u5110 2D4C                     u3430 22CE  
                   u3350 219A                     u3270 1EFE                     u2710 1B8A  
                   u2630 1A80                     u2550 3130                     u3511 3436  
                   u3191 259A                     u5111 2D48                     u3431 22CA  
                   u3351 2196                     u3335 2116                     u3271 1EFA  
                   u2631 1A7C                     u2551 312C                     u3440 31E8  
                   u3520 3454                     u3360 21AC                     u3280 1F3E  
                   u2800 1CA4                     u2720 1BB2                     u2640 1A96  
                   u5200 283E                     u5120 26D0                     u2560 3158  
                   u3441 31E4                     u3521 3450                     u3361 21A8  
                   u3281 1F3A                     u2801 1CA0                     u2721 1BAE  
                   u2641 1A92                     u5201 283A                     u2561 3154  
                   u3450 3202                     u3530 3472                     u3370 21DA  
                   u3290 1F50                     u2810 1CEA                     u2730 1BD0  
                   u2650 1AA8                     u5210 287A                     u5130 26FE  
                   u2570 318E                     u3451 31FE                     u3531 346E  
                   u3371 21D6                     u3291 1F4C                     u2811 1CE6  
                   u2731 1BCC                     u2651 1AA4                     u5211 2876  
                   u5131 26FA                     u2571 318A                     u2580 3990  
                   u3460 3228                     u3540 3488                     u3380 21F0  
                   u2900 1DD6                     u2820 1D20                     u2740 1BF0  
                   u2660 1AB8                     u3700 2C1E                     u5140 2720  
                   u5300 09F2                     u5220 0866                     u3461 3224  
                   u3541 3484                     u3381 21EC                     u2901 1DD2  
                   u2821 1D1C                     u2741 1BEC                     u2661 1AB4  
                   u3701 2C1A                     u5141 271C                     u5125 26C6  
                   u5301 09EE                     u5221 0862                     u2590 39A0  
                   u3470 3246                     u3550 34AC                     u5070 2C80  
                   u3390 2204                     u2910 1DEA                     u2830 1D30  
                   u2750 1BFE                     u2670 1AF4                     u3710 2C2E  
                   u5310 0A22                     u5230 08B6                     u6007 3B7C  
                   u2591 399C                     u3471 3242                     u3551 34A8  
                   u5071 2C7C                     u3391 2200                     u2911 1DE6  
                   u2831 1D2C                     u2751 1BFA                     u2671 1AF0  
                   u3711 2C2A                     u5311 0A1C                     u5231 08B2  
                   u4600 29DE                     u3480 3262                     u3560 34EC  
                   u5080 2CBE                     u3640 3AD4                     u2920 1E04  
                   u2840 1D5C                     u2760 1C0E                     u2680 1B02  
                   u5160 278E                     u3720 32A8                     u5400 0C44  
                   u5320 0A24                     u5240 08C4                     u3481 325E  
                   u3561 34E8                     u5081 2CBA                     u3641 3AD0  
                   u2921 1E00                     u2841 1D58                     u2761 1C0A  
                   u2681 1AFE                     u5161 278A                     u3721 32A4  
                   u5401 0C40                     u5241 08C0                     u4610 29F4  
                   u3490 3288                     u3570 352A                     u5090 2CDC  
                   u2930 1E3E                     u2850 1D6C                     u2770 1C40  
                   u2690 1B70                     u3650 2B60                     u3810 2F44  
                   u5170 27B2                     u3730 32CA                     u5410 0C5A  
                   u5330 0A3A                     u5250 08D6                     u2587 3986  
                   u4611 29F0                     u3491 3284                     u3571 3526  
                   u5091 2CD8                     u2931 1E3A                     u2851 1D68  
                   u2771 1C3C                     u2691 1B6C                     u3651 2B5C  
                   u3811 2F3E                     u5155 2734                     u3731 32C6  
                   u5411 0C56                     u5331 0A36                     u5251 08D2  
                   u4620 2A06                     u3580 355E                     u2940 1E50  
                   u2860 1D88                     u2780 1C4E                     u3660 2B94  
                   u3820 2F46                     u5180 27CE                     u5156 273E  
                   u3740 3320                     u5500 0E88                     u5420 0C76  
                   u5340 0ABE                     u5260 091E                     u4621 2A02  
                   u3581 355A                     u2941 1E4C                     u2861 1D84  
                   u2781 1C4A                     u3805 2F1C                     u5181 27CA  
                   u5157 274E                     u3741 331C                     u5501 0E84  
                   u5421 0C72                     u5341 0ABA                     u5261 091A  
                   u2950 1E60                     u2870 1D98                     u2790 1C6C  
                   u3670 2BC2                     u5190 2822                     u3750 332E  
                   u3830 3856                     u5510 0EEE                     u5430 0CAC  
                   u5350 0B52                     u5270 094E                     u4630 3060  
                   u2951 1E5C                     u2871 1D94                     u2791 1C68  
                   u3671 2BBE                     u5175 27A8                     u3751 332A  
                   u5511 0EEA                     u5431 0CA8                     u5351 0B4E  
                   u5271 0948                     u4631 305C                     u4560 28D4  
                   u2960 1E80                     u2880 1DAA                     u3680 2BD6  
                   u3760 2E9A                     u3840 3868                     u5600 112C  
                   u5520 0F36                     u5440 0CD2                     u5360 0BC4  
                   u5280 0950                     u4640 3092                     u4561 28D0  
                   u2961 1E7C                     u2881 1DA6                     u3681 2BD2  
                   u3665 2B8A                     u3841 3864                     u5601 1128  
                   u5521 0F32                     u5441 0CCE                     u5361 0BC0  
                   u4641 308E                     u4570 290A                     u2970 1E92  
                   u2890 1DC0                     u3690 2BFE                     u3770 2EB8  
                   u3850 37DE                     u5610 1148                     u5530 0F46  
                   u5450 0CE4                     u5370 0BEA                     u5290 0966  
                   u4650 30AE                     u4571 2906                     u2971 1E8E  
                   u2891 1DBC                     u3691 2BFA                     u3771 2EB4  
                   u5195 2818                     u3851 37D8                     u5611 1144  
                   u5531 0F42                     u5451 0CE0                     u5371 0BE6  
                   u5291 0962                     u4651 30AA                     u4580 2926  
                   u2980 1EAE                     u3780 2EE0                     u3860 37E0  
                   u5700 13A4                     u5620 1156                     u5540 0FE0  
                   u5460 0CF2                     u5380 0BFC                     u4660 30C0  
                   u4581 2922                     u2981 1EAA                     u3781 2EDC  
                   u3765 2E90                     u3837 384C                     u5701 13A0  
                   u5621 1152                     u5541 0FDC                     u5461 0CEE  
                   u5381 0BF8                     u4661 30BC                     u4590 29DC  
                   u3790 2F0A                     u2990 3A84                     u3870 37F6  
                   u5710 13BE                     u5630 11AE                     u5550 102E  
                   u5470 0D08                     u5390 0C1E                     u4670 30E8  
                   i2l31 3BA0                     u4591 29D6                     u3791 2F06  
                   u2991 3A80                     u3871 37F2                     u5711 13BA  
                   u5631 11AA                     u5551 102A                     u5471 0D04  
                   u5391 0C1A                     u4671 30E4                     u5720 13D6  
                   u5640 1280                     u5560 1056                     u5480 0D16  
                   u5800 15C6                     u5721 13D2                     u5641 127C  
                   u5561 1052                     u5481 0D12                     i2l34 3BBA  
                   u5730 1434                     u5650 129C                     u5570 10F8  
                   u5490 0D40                     u5810 15DC                     i2l43 36DA  
                   u5731 142E                     u5651 1298                     u5571 10F4  
                   u5491 0D3C                     u5811 15D8                     u3980 3B26  
                   u5740 1436                     u5660 12AE                     u5580 110C  
                   u5900 1862                     u5820 1600                     i2l37 3BD6  
                   u3981 3B20                     u5661 12AA                     u5581 1108  
                   u5901 185E                     u5821 15FC                     u3990 3B28  
                   u5750 144C                     u5670 12BC                     u5590 111E  
                   u5910 18CA                     u5830 163A                     i2l71 340C  
                   u5751 1448                     u5671 12B8                     u5591 111A  
                   u5911 18C4                     u5831 1636                     u5680 12F2  
                   u5920 18CC                     u5840 16E4                     u5760 14BC  
                   i2l65 3034                     u5681 12EE                     u5841 16DE  
                   u5761 14B8                     u4970 35B4                     u5690 1320  
                   u5930 18E2                     u5850 16E6                     u5770 1502  
                   u5691 131C                     u5931 18DE                     u5771 14FE  
                   i2l84 3644                     u4980 35E2                     u5940 197E  
                   u5860 16FC                     u5780 1546                     i2l77 374A  
                   u4981 35DE                     u5941 197A                     u5861 16F8  
                   u5781 1542                     u5870 172E                     u5790 15C4  
                   u5950 37A4                     u5871 172A                     u5791 15BE  
                   u5951 37A0                     u5880 1770                     u5960 2B3A  
                   u4977 35AA                     u5881 176C                     u5961 2B36  
                   u5890 17B4                     u5891 17B0                     u5977 2A9A  
                   u5987 2B0A                     u5997 3B62             i2___flge@ff1 0001  
           i2___flge@ff2 0005                     _dbuf 0100                     _atoi 289C  
                   _main 2A2C                     _prec 0045                     _nout 00EE  
                   pad@i 002D                     pad@p 002A                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 002F                     fsr2l 000FD9  
                   btemp 0049            ___fpclassifyf 2E5A                     prodh 000FF4  
                   prodl 000FF3     i2comando_lcd@comando 0001                     start 000E  
        ___fldiv@new_exp 0027             _tolower$1104 0022             ___param_bank 000000  
                  ??_pad 002C                    ??_isr 0010            ___fltol@sign1 001E  
                  ?_atoi 001D          __end_of___fladd 1EC2                    ?_main 0001  
        __end_of___fldiv 2686          __end_of___awdiv 329A          __end_of___flneg 3AF6  
                  STR_10 0835                    STR_13 0839                    STR_15 0839  
        __end_of___awmod 34BE          __end_of___flmul 22EC          __end_of___flsub 3A42  
        __end_of___fltol 2C50                    _T0CON 000FD5          ___awdiv@divisor 0018  
                  i2l361 2E12                    i2l366 2E58          ___awdiv@counter 001A  
           vfpfcnvrt@fmt 00B6                    _TMR0L 000FD6                    _PORTD 000F83  
                  _TRISD 000F95                    _TRISE 000F96       i2imprime_lcd@frase 0005  
                  _flags 0047                    _fputc 310C                    _fputs 3A42  
        __end_of_isdigit 3B2E                    atoi@n 002A                    pad@fp 0026  
                  atoi@s 001D                    _width 0043                    _putch 3BE4  
            i2_limpa_lcd 3BCA          __end_of_isspace 3960          __end_of_isupper 3ABE  
       __end_ofi2___flge 2E5A                    tablat 000FF5                    ttemp5 004A  
                  ttemp6 004D                    ttemp7 0051             ?_imprime_lcd 001A  
                  status 000FD8                    wtemp8 004A          __end_of_sprintf 390E  
         ?___fpclassifyf 0016          __end_of_tolower 380E          __end_of_strncmp 310C  
       __end_ofi2_strlen 39FC          __initialization 386A             __end_of_atoi 2A2C  
           __end_of_main 2B4A                   ??_atoi 001F                   ??_main 00E4  
          __activetblptr 000002              ?i2_dado_lcd 0001        _temperaturaMaxima 003B  
      _temperaturaMinima 0037                   _ADCON1 000FC1                   ?_fputc 0016  
                 ?_fputs 001F         ___awdiv@dividend 0016                   ?_putch 0001  
                 i2l1064 39FA                   i2l4000 370E                   i2l4002 3740  
                 i2l4020 360E                   i2l4030 363A                   i2l4022 3616  
                 i2l4032 363E                   i2l4024 3624                   i2l4016 35FE  
                 i2l4034 3642                   i2l4026 3632                   i2l4018 360C  
                 i2l4028 3636                   i2l3920 3680                   i2l3930 2D94  
                 i2l3922 36B8                   i2l3914 3BCA                   i2l3940 2E00  
                 i2l3932 2DC2                   i2l3924 36BC                   i2l3916 3660  
                 i2l3942 2E50                   i2l3934 2DD2                   i2l3926 2D56  
                 i2l3918 3668                   i2l3944 2E56                   i2l3936 2DE0  
                 i2l3928 2D84                   i2l3880 3BAA                   i2l3872 3B88  
                 i2l3960 2F58                   i2l3938 2DF2                   i2l3882 3BB8  
                 i2l3890 39EE                   i2l3874 3B90                   i2l3970 2FAC  
                 i2l3962 2F5C                   i2l3884 39AE                   i2l3876 3B9E  
                 i2l4692 2FFE                   i2l3972 2FC0                   i2l3964 2F70  
                 i2l3878 3BA2                   i2l3886 39BA                   i2l3990 33DA  
                 i2l3982 335C                   i2l3974 2FD4                   i2l3966 2F84  
                 i2l3888 39BE                   i2l3992 33E6                   i2l3984 338E  
                 i2l3968 2F98                   i2l3976 2FE8                   i2l3994 33F2  
                 i2l3986 33C0                   i2l3996 3408                   i2l3988 33C4  
                 i2l3998 36DC         __end_of_dado_lcd 3B88      i2imprime_lcd@indice 000C  
   __size_of_comando_lcd 001A             vfprintf@cfmt 00D2                   ___flge 2C50  
                 ___fleq 34BE                ??___fladd 001E                   ___wmul 3B2E  
              ??___fldiv 001E                ??___awdiv 001A                ??___flneg 001A  
              ??___awmod 001A                ??___flmul 001E                ??___flsub 0037  
              ??___fltol 001A                   _alerta 335C                   _efgtoa 083E  
                 _floorf 2686                   clear_0 3890                   clear_1 389C  
       ___awdiv@quotient 001C          ___awmod@divisor 0018                   isa$std 000001  
                 _tensao 00F0          ___awmod@counter 001A                   pad@buf 0028  
                 _strcpy 380E                   _strlen 3960                   fputc@c 0016  
                 fputs@c 0023                   fputs@i 0024             __pdataCOMRAM 0037  
                 fputs@s 001F                ??_isdigit 0018   __size_ofi2_comando_lcd 001A  
        ___fpclassifyf@e 001E          ___fpclassifyf@u 0020          ___fpclassifyf@x 0016  
           __mediumconst 0000                ??_isspace 0018                   tblptrh 000FF7  
              ??_isupper 0018                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 37AE                ??_sprintf 0037  
              ??_tolower 001E                ??_strncmp 001C               ___flge@ff1 002F  
             ___flge@ff2 0033          ??___fpclassifyf 001A               ___fleq@ff1 0016  
             ___fleq@ff2 001A               __accesstop 0060  __end_of__initialization 38AE  
             ___flneg@f1 0016            ___rparam_used 000001               ___fltol@f1 0016  
    __size_ofi2_dado_lcd 001A           __pcstackCOMRAM 0001         ??_verificaOValor 000D  
          __end_of_fputc 31D6            __end_of_fputs 3A86            __end_of_putch 3BE6  
              ?i2___flge 0001                ?i2_strlen 0001                  ??_fputc 001A  
                ??_fputs 0023                  ??_putch 0016               __pbssBANK0 00E6  
             __pbssBANK1 0100            i2_comando_lcd 3B88     __size_of_imprime_lcd 007C  
     __size_of_limpa_lcd 000E               _efgtoa$950 0080               _efgtoa$944 007C  
             _efgtoa$945 007E               _efgtoa$954 0082               _efgtoa$955 0084  
             _efgtoa$956 0086                  ?___flge 002F                  ?___fleq 0016  
                ?___wmul 0016                  ?_alerta 0001                  ?_efgtoa 0070  
                ?_floorf 002F               _geraTensao 2F58               ??i2___flge 0009  
                ?_strcpy 0016                  ?_strlen 0016                ?_dado_lcd 0016  
 __size_ofi2_imprime_lcd 007C       __size_of_vfpfcnvrt 056A               ??i2_strlen 0003  
           ?i2_limpa_lcd 0001     i2imprime_lcd@tamanho 000A           ?i2_comando_lcd 0001  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 0106  
        __size_of___fleq 00AA                  ___fladd 1A02                  ___fldiv 22EC  
                ___awdiv 31D6                  ___flneg 3ABE                  ___awmod 340E  
                ___flmul 1EC2                  ___flsub 39FC                  ___fltol 2B4A  
        __size_of___wmul 0026                ?_vfprintf 00CC          __size_of_alerta 00B2  
           __psmallconst 0800          __size_of_efgtoa 0C5A          __size_of_floorf 0216  
                __pcinit 386A                  __ramtop 0800                  __ptext0 2A2C  
                __ptext1 38BC                  __ptext2 374C                  __ptext3 1498  
                __ptext4 3036                  __ptext5 083E                  __ptext6 37AE  
                __ptext7 3A86                  __ptext8 380E                  __ptext9 329A  
        __size_of_strcpy 005C          __size_of_strlen 004E             ??i2_dado_lcd 0003  
             ??_dado_lcd 0018             __size_of_pad 00C2                  _isdigit 3AF6  
           __size_of_isr 3658         ___awmod@dividend 0016        __end_of_limpa_lcd 3BCA  
                _isspace 390E                  _isupper 3A86                  efgtoa@c 0076  
                efgtoa@d 0094                  efgtoa@e 00AC                  efgtoa@f 0072  
                efgtoa@g 00A8                  efgtoa@h 009E                  efgtoa@i 00A6  
                efgtoa@l 00A2                  efgtoa@m 008E                  efgtoa@n 00AE  
                efgtoa@p 0098                  efgtoa@t 0088                  efgtoa@u 00B0  
                efgtoa@w 009A                  atoi@neg 0023                  _sprintf 38BC  
                _tolower 37AE                  _strncmp 3036           __pintcode_body 35E4  
   end_of_initialization 38AE                  floorf@e 006A                  floorf@m 0066  
                floorf@u 006C                  floorf@x 002F                  fputc@fp 0018  
          __Lmediumconst 0000                  int_func 35E4                  fputs@fp 0021  
          i2_imprime_lcd 3660       __end_ofi2_dado_lcd 3BBC        __end_of_vfpfcnvrt 1A02  
             efgtoa@mode 009D               efgtoa@sign 0096                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0037                  strcpy@d 001E  
                strlen@a 0018                  strcpy@s 001C                  strlen@s 0016  
            ?_geraTensao 0001                _PORTAbits 000F80                _PORTEbits 000F84  
      imprime_lcd@indice 0021              ___fladd@grs 0025              ___fldiv@grs 0029  
            ___fldiv@rem 0022          ??i2_comando_lcd 0003              ___flmul@grs 0023  
           dado_lcd@dado 0016            ??_comando_lcd 0018           ?i2_imprime_lcd 0005  
         __end_of___flge 2D56           __end_of___fleq 3568              vfpfcnvrt@ap 00B8  
            vfpfcnvrt@ct 00C4              vfpfcnvrt@fp 00B4           __end_of___wmul 3B54  
         __end_of_alerta 340E            __pidataCOMRAM 3BD8           __end_of_efgtoa 1498  
         __end_of_floorf 289C               floorf@F527 00E6           __end_of_strcpy 386A  
         __end_of_strlen 39AE        __size_ofi2___flge 0104      start_initialization 386A  
            __end_of_pad 335C              __end_of_isr 3660        __size_ofi2_strlen 004E  
              i2strlen@a 0003                i2strlen@s 0001     __size_ofi2_limpa_lcd 000E  
  __end_of___fpclassifyf 2F58      __size_of_geraTensao 00DE              vfprintf@fmt 00CE  
               ??___flge 0060                 ??___fleq 001E      __end_of_comando_lcd 3B6E  
               ??___wmul 001A                 ??_alerta 000E                 ??_efgtoa 0077  
               ??_floorf 0060                 ??_strcpy 001A                 ??_strlen 0018  
              ___fladd@a 001A                ___fladd@b 0016                ___fldiv@a 001A  
              ___fldiv@b 0016                ___flmul@a 001A                ___flmul@b 0016  
            __pbssCOMRAM 0043                ___flsub@a 0033                ___flsub@b 002F  
          __pcstackBANK0 0060        __size_of_dado_lcd 001A          ??i2_imprime_lcd 0007  
          ??_imprime_lcd 001C                _atoi$1010 0029                _atoi$1011 0027  
              _atoi$1009 0025       comando_lcd@comando 0016                __pintcode 0008  
               ?___fladd 0016                 ?___fldiv 0016                 ?___awdiv 0016  
               ?___flneg 0016                 ?___awmod 0016                 ?___flmul 0016  
               ?___flsub 002F                 ?___fltol 0016        __size_of_vfprintf 0062  
            __smallconst 0800                 ?_isdigit 0016                 ?_isspace 0016  
__size_of_verificaOValor 0070                 ?_isupper 0016                 ?_sprintf 00D4  
               ?_tolower 001C           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_strncmp 0016                _limpa_lcd 3BBC           __size_of_putch 0002  
         ___wmul@product 001A              _comando_lcd 3B54           i2dado_lcd@dado 0001  
               i2u500_40 33C0                 i2u500_41 33BC                 i2u501_40 370E  
               i2u501_41 370A                 i2u502_40 3740                 i2u502_41 373C  
               i2u503_40 360C                 i2u503_41 3608                 i2u504_40 3624  
               i2u504_41 3620                 i2u505_40 3632                 i2u505_41 362E  
               i2u601_47 33CE                 i2u602_47 33FC                 i2u603_47 3B96  
               i2u604_47 3BB0                 i2u490_40 36AC                 i2u490_47 36A2  
               i2u491_40 36DA                 i2u491_41 36D6                 i2u492_40 2D84  
               i2u492_41 2D80                 i2u493_40 2DC2                 i2u493_41 2DBE  
               i2u494_40 2DE0                 i2u494_41 2DDC                 i2u495_40 2E00  
               i2u487_40 39DE                 i2u495_41 2DFC                 i2u487_47 39D4  
               i2u496_40 2E50                 i2u488_40 39EE                 i2u496_41 2E4C  
               i2u488_41 39EA                 i2u499_40 338E                 i2u499_41 338A  
    __end_of_imprime_lcd 35E4         imprime_lcd@frase 001A                _vfpfcnvrt 1498  
           ??_geraTensao 0001                 i2___flge 2D56        ___wmul@multiplier 0016  
           _isspace$1040 001C                 i2_strlen 39AE               vfpfcnvrt@c 00CB  
             vfpfcnvrt@f 00C7              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
              copy_data0 387E               ?_limpa_lcd 0001       __end_of_geraTensao 3036  
               __Hrparam 0000               vfprintf@ap 00D0                 __Lrparam 0000  
             vfprintf@fp 00CC         __size_of___fladd 04C0         __size_of___fldiv 039A  
       __size_of___awdiv 00C4         __size_of___flneg 0038         __size_of___awmod 00B0  
       __size_of___flmul 042A         __size_of___flsub 0046         __size_of___fltol 0106  
             ?_vfpfcnvrt 00B4       ___fpclassifyf@F465 00EA                 _dado_lcd 3B6E  
             sprintf@fmt 00D6         __size_of_isdigit 0038         __size_of_isspace 0052  
               __ptext10 3A42                 __ptext11 310C                 __ptext20 2C50  
               __ptext12 3BE4                 __ptext21 34BE                 __ptext13 2686  
               __ptext30 3B54                 __ptext22 22EC                 __ptext14 2E5A  
               __ptext31 3568                 __ptext23 340E                 __ptext15 2B4A  
               __ptext40 3660                 __ptext32 3960                 __ptext24 31D6  
               __ptext16 39FC                 __ptext41 39AE                 __ptext33 3B6E  
               __ptext25 289C                 __ptext17 1A02                 __ptext42 3BA2  
               __ptext26 390E                 __ptext18 3ABE                 __ptext43 2D56  
               __ptext35 36DC                 __ptext27 3AF6                 __ptext19 1EC2  
               __ptext36 2F58                 __ptext28 3B2E                 __ptext37 335C  
               __ptext29 3BBC                 __ptext38 3BCA                 __ptext39 3B88  
       __size_of_isupper 0038         __size_of_sprintf 0052         __size_of_tolower 0060  
             strcpy@dest 0016         __size_of_strncmp 00D6              _imprime_lcd 3568  
          __size_of_atoi 0190            __size_of_main 011E    __end_ofi2_comando_lcd 3BA2  
               efgtoa@fp 0070                 efgtoa@ne 008C                 efgtoa@pp 008A  
               efgtoa@ou 0090                 isa$xinst 000000                 int$flags 0049  
               _vfprintf 374C               _INTCONbits 000FF2           _verificaOValor 36DC  
               isdigit@c 0016            ??i2_limpa_lcd 0004              ??_limpa_lcd 0019  
               intlevel2 0000                sprintf@ap 00DC                 isspace@c 0016  
              strcpy@src 0018                 isupper@c 0016                strncmp@_l 0016  
              strncmp@_r 0018              efgtoa@nmode 009C              ??_vfpfcnvrt 00BA  
          _vfpfcnvrt$970 00BE            _vfpfcnvrt$971 00C0            _vfpfcnvrt$975 00C2  
 __end_of_verificaOValor 374C              _temperatura 003F              _temperature 00F2  
               sprintf@f 00DE                 tolower@c 001C                 sprintf@s 00D4  
 __size_of___fpclassifyf 00FE                 strncmp@l 001D                 strncmp@n 001A  
               strncmp@r 001F            ___fladd@signs 0022       imprime_lcd@tamanho 001F  
           ___fladd@aexp 0023             ___fladd@bexp 0024    __end_ofi2_imprime_lcd 36DC  
           ?_comando_lcd 0016      __end_ofi2_limpa_lcd 3BD8  
